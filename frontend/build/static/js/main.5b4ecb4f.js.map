{"version":3,"file":"static/js/main.5b4ecb4f.js","mappings":"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","sources":["../node_modules/google-protobuf/google-protobuf.js","../node_modules/object-assign/index.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react-dom/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../node_modules/shallowequal/index.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/nonce","../node_modules/quais/src/utils/properties.ts","../node_modules/quais/src/utils/errors.ts","../node_modules/quais/src/utils/data.ts","../node_modules/quais/src/utils/maths.ts","../node_modules/quais/src/abi/coders/abstract-coder.ts","../node_modules/@noble/hashes/src/_assert.ts","../node_modules/@noble/hashes/src/_u64.ts","../node_modules/@noble/hashes/src/crypto.ts","../node_modules/@noble/hashes/src/utils.ts","../node_modules/@noble/hashes/src/sha3.ts","../node_modules/quais/src/crypto/keccak.ts","../node_modules/@noble/hashes/src/_sha2.ts","../node_modules/@noble/hashes/src/sha256.ts","../node_modules/@noble/curves/src/abstract/utils.ts","../node_modules/@noble/curves/src/abstract/modular.ts","../node_modules/@noble/hashes/src/hmac.ts","../node_modules/@noble/curves/src/abstract/curve.ts","../node_modules/@noble/curves/src/abstract/weierstrass.ts","../node_modules/@noble/curves/src/_shortw_utils.ts","../node_modules/@noble/curves/src/secp256k1.ts","../node_modules/quais/src/constants/hashes.ts","../node_modules/quais/src/crypto/signature.ts","../node_modules/quais/src/crypto/signing-key.ts","../node_modules/quais/src/address/address.ts","../node_modules/quais/src/abi/typed.ts","../node_modules/quais/src/abi/coders/address.ts","../node_modules/quais/src/abi/coders/anonymous.ts","../node_modules/quais/src/abi/coders/array.ts","../node_modules/quais/src/abi/coders/boolean.ts","../node_modules/quais/src/abi/coders/bytes.ts","../node_modules/quais/src/abi/coders/fixed-bytes.ts","../node_modules/quais/src/abi/coders/null.ts","../node_modules/quais/src/abi/coders/number.ts","../node_modules/quais/src/encoding/utf8.ts","../node_modules/quais/src/abi/coders/string.ts","../node_modules/quais/src/abi/coders/tuple.ts","../node_modules/quais/src/hash/id.ts","../node_modules/quais/src/abi/fragments.ts","../node_modules/quais/src/abi/abi-coder.ts","../node_modules/quais/src/address/checks.ts","../node_modules/quais/src/transaction/accesslist.ts","../node_modules/quais/src/utils/geturl-browser.ts","../node_modules/quais/src/utils/fetch.ts","../node_modules/quais/src/encoding/base64-browser.ts","../node_modules/quais/src/constants/zones.ts","../node_modules/quais/src/constants/shards.ts","../node_modules/quais/src/utils/events.ts","../node_modules/quais/src/encoding/protoc/proto_common.ts","../node_modules/quais/src/encoding/protoc/proto_block.ts","../node_modules/quais/src/encoding/proto-decode.ts","../node_modules/quais/src/providers/format.ts","../node_modules/quais/src/providers/network.ts","../node_modules/quais/src/utils/shards.ts","../node_modules/quais/src/providers/provider.ts","../node_modules/quais/src/encoding/proto-encode.ts","../node_modules/quais/src/transaction/abstract-transaction.ts","../node_modules/quais/src/transaction/qi-transaction.ts","../node_modules/quais/src/transaction/quai-transaction.ts","../node_modules/quais/src/providers/subscriber-polling.ts","../node_modules/quais/src/providers/abstract-provider.ts","../node_modules/quais/src/providers/subscriber-filterid.ts","../node_modules/quais/src/hash/typed-data.ts","../node_modules/quais/src/signers/abstract-signer.ts","../node_modules/quais/src/providers/provider-jsonrpc.ts","../node_modules/quais/src/providers/provider-browser.ts","../node_modules/quais/src/abi/interface.ts","../node_modules/quais/src/contract/wrappers.ts","../node_modules/quais/src/contract/contract.ts","../node_modules/styled-components/node_modules/tslib/tslib.es6.mjs","../node_modules/stylis/src/Enum.js","../node_modules/stylis/src/Utility.js","../node_modules/stylis/src/Tokenizer.js","../node_modules/stylis/src/Serializer.js","../node_modules/stylis/src/Prefixer.js","../node_modules/stylis/src/Middleware.js","../node_modules/stylis/src/Parser.js","../node_modules/@emotion/unitless/dist/emotion-unitless.esm.js","../node_modules/styled-components/src/constants.ts","../node_modules/styled-components/src/utils/empties.ts","../node_modules/styled-components/src/utils/checkDynamicCreation.ts","../node_modules/styled-components/src/utils/determineTheme.ts","../node_modules/styled-components/src/utils/domElements.ts","../node_modules/styled-components/src/utils/escape.ts","../node_modules/styled-components/src/utils/generateAlphabeticName.ts","../node_modules/styled-components/src/utils/hash.ts","../node_modules/styled-components/src/utils/generateComponentId.ts","../node_modules/styled-components/src/utils/getComponentName.ts","../node_modules/styled-components/src/utils/isTag.ts","../node_modules/styled-components/src/utils/hoist.ts","../node_modules/styled-components/src/utils/isFunction.ts","../node_modules/styled-components/src/utils/isStyledComponent.ts","../node_modules/styled-components/src/utils/joinStrings.ts","../node_modules/styled-components/src/utils/isPlainObject.ts","../node_modules/styled-components/src/utils/mixinDeep.ts","../node_modules/styled-components/src/utils/setToString.ts","../node_modules/styled-components/src/utils/error.ts","../node_modules/styled-components/src/sheet/GroupedTag.ts","../node_modules/styled-components/src/sheet/GroupIDAllocator.ts","../node_modules/styled-components/src/sheet/Rehydration.ts","../node_modules/styled-components/src/utils/nonce.ts","../node_modules/styled-components/src/sheet/dom.ts","../node_modules/styled-components/src/sheet/Tag.ts","../node_modules/styled-components/src/sheet/Sheet.ts","../node_modules/styled-components/src/utils/stylis.ts","../node_modules/styled-components/src/models/StyleSheetManager.tsx","../node_modules/styled-components/src/models/Keyframes.ts","../node_modules/styled-components/src/utils/hyphenateStyleName.ts","../node_modules/styled-components/src/utils/flatten.ts","../node_modules/styled-components/src/utils/addUnitIfNeeded.ts","../node_modules/styled-components/src/utils/isStatelessFunction.ts","../node_modules/styled-components/src/utils/isStaticRules.ts","../node_modules/styled-components/src/models/ComponentStyle.ts","../node_modules/styled-components/src/models/ThemeProvider.tsx","../node_modules/styled-components/src/models/StyledComponent.ts","../node_modules/styled-components/src/utils/generateDisplayName.ts","../node_modules/styled-components/src/utils/interleave.ts","../node_modules/styled-components/src/constructors/css.ts","../node_modules/styled-components/src/constructors/constructWithOptions.ts","../node_modules/styled-components/src/constructors/styled.tsx","../node_modules/styled-components/src/models/GlobalStyle.ts","../node_modules/styled-components/src/models/ServerStyleSheet.tsx","../node_modules/styled-components/src/base.ts","components/ScrollList.js","../node_modules/quais/src/utils/fixednumber.ts","../node_modules/quais/src/utils/units.ts","helpers/getBets.js","helpers/getBetAmount.js","App.js","index.js"],"sourcesContent":["/*\n\n Copyright The Closure Library Authors.\n SPDX-License-Identifier: Apache-2.0\n*/\nvar aa=\"function\"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){a!=Array.prototype&&a!=Object.prototype&&(a[b]=c.value)},e=\"undefined\"!=typeof window&&window===this?this:\"undefined\"!=typeof global&&null!=global?global:this;function ba(a,b){if(b){var c=e;a=a.split(\".\");for(var d=0;d<a.length-1;d++){var f=a[d];f in c||(c[f]={});c=c[f]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&aa(c,a,{configurable:!0,writable:!0,value:b})}}\nfunction ca(a){var b=0;return function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}}}function da(){da=function(){};e.Symbol||(e.Symbol=ea)}function fa(a,b){this.a=a;aa(this,\"description\",{configurable:!0,writable:!0,value:b})}fa.prototype.toString=function(){return this.a};var ea=function(){function a(c){if(this instanceof a)throw new TypeError(\"Symbol is not a constructor\");return new fa(\"jscomp_symbol_\"+(c||\"\")+\"_\"+b++,c)}var b=0;return a}();\nfunction ha(){da();var a=e.Symbol.iterator;a||(a=e.Symbol.iterator=e.Symbol(\"Symbol.iterator\"));\"function\"!=typeof Array.prototype[a]&&aa(Array.prototype,a,{configurable:!0,writable:!0,value:function(){return ia(ca(this))}});ha=function(){}}function ia(a){ha();a={next:a};a[e.Symbol.iterator]=function(){return this};return a}\nfunction ja(a,b){ha();a instanceof String&&(a+=\"\");var c=0,d={next:function(){if(c<a.length){var f=c++;return{value:b(f,a[f]),done:!1}}d.next=function(){return{done:!0,value:void 0}};return d.next()}};d[Symbol.iterator]=function(){return d};return d}ba(\"Array.prototype.entries\",function(a){return a?a:function(){return ja(this,function(b,c){return[b,c]})}});var ka=this||self;\nfunction g(a,b,c){a=a.split(\".\");c=c||ka;a[0]in c||\"undefined\"==typeof c.execScript||c.execScript(\"var \"+a[0]);for(var d;a.length&&(d=a.shift());)a.length||void 0===b?c[d]&&c[d]!==Object.prototype[d]?c=c[d]:c=c[d]={}:c[d]=b}\nfunction k(a){var b=typeof a;if(\"object\"==b)if(a){if(a instanceof Array)return\"array\";if(a instanceof Object)return b;var c=Object.prototype.toString.call(a);if(\"[object Window]\"==c)return\"object\";if(\"[object Array]\"==c||\"number\"==typeof a.length&&\"undefined\"!=typeof a.splice&&\"undefined\"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable(\"splice\"))return\"array\";if(\"[object Function]\"==c||\"undefined\"!=typeof a.call&&\"undefined\"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable(\"call\"))return\"function\"}else return\"null\";\nelse if(\"function\"==b&&\"undefined\"==typeof a.call)return\"object\";return b}function la(a){var b=typeof a;return\"object\"==b&&null!=a||\"function\"==b}function ma(a,b,c){g(a,b,c)}function na(a,b){function c(){}c.prototype=b.prototype;a.prototype=new c;a.prototype.constructor=a};var oa=\"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");function pa(a,b){for(var c,d,f=1;f<arguments.length;f++){d=arguments[f];for(c in d)a[c]=d[c];for(var h=0;h<oa.length;h++)c=oa[h],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c])}};var qa=Array.prototype.forEach?function(a,b){Array.prototype.forEach.call(a,b,void 0)}:function(a,b){for(var c=a.length,d=\"string\"===typeof a?a.split(\"\"):a,f=0;f<c;f++)f in d&&b.call(void 0,d[f],f,a)},l=Array.prototype.map?function(a,b){return Array.prototype.map.call(a,b,void 0)}:function(a,b){for(var c=a.length,d=Array(c),f=\"string\"===typeof a?a.split(\"\"):a,h=0;h<c;h++)h in f&&(d[h]=b.call(void 0,f[h],h,a));return d};\nfunction ra(a,b,c){return 2>=arguments.length?Array.prototype.slice.call(a,b):Array.prototype.slice.call(a,b,c)};function sa(a,b,c,d){var f=\"Assertion failed\";if(c){f+=\": \"+c;var h=d}else a&&(f+=\": \"+a,h=b);throw Error(f,h||[]);}function n(a,b,c){for(var d=[],f=2;f<arguments.length;++f)d[f-2]=arguments[f];a||sa(\"\",null,b,d);return a}function ta(a,b,c){for(var d=[],f=2;f<arguments.length;++f)d[f-2]=arguments[f];\"string\"!==typeof a&&sa(\"Expected string but got %s: %s.\",[k(a),a],b,d)}\nfunction ua(a,b,c){for(var d=[],f=2;f<arguments.length;++f)d[f-2]=arguments[f];Array.isArray(a)||sa(\"Expected array but got %s: %s.\",[k(a),a],b,d)}function p(a,b){for(var c=[],d=1;d<arguments.length;++d)c[d-1]=arguments[d];throw Error(\"Failure\"+(a?\": \"+a:\"\"),c);}function q(a,b,c,d){for(var f=[],h=3;h<arguments.length;++h)f[h-3]=arguments[h];a instanceof b||sa(\"Expected instanceof %s but got %s.\",[va(b),va(a)],c,f)}\nfunction va(a){return a instanceof Function?a.displayName||a.name||\"unknown type name\":a instanceof Object?a.constructor.displayName||a.constructor.name||Object.prototype.toString.call(a):null===a?\"null\":typeof a};function r(a,b){this.c=a;this.b=b;this.a={};this.arrClean=!0;if(0<this.c.length){for(a=0;a<this.c.length;a++){b=this.c[a];var c=b[0];this.a[c.toString()]=new wa(c,b[1])}this.arrClean=!0}}g(\"jspb.Map\",r,void 0);\nr.prototype.g=function(){if(this.arrClean){if(this.b){var a=this.a,b;for(b in a)if(Object.prototype.hasOwnProperty.call(a,b)){var c=a[b].a;c&&c.g()}}}else{this.c.length=0;a=u(this);a.sort();for(b=0;b<a.length;b++){var d=this.a[a[b]];(c=d.a)&&c.g();this.c.push([d.key,d.value])}this.arrClean=!0}return this.c};r.prototype.toArray=r.prototype.g;\nr.prototype.Mc=function(a,b){for(var c=this.g(),d=[],f=0;f<c.length;f++){var h=this.a[c[f][0].toString()];v(this,h);var m=h.a;m?(n(b),d.push([h.key,b(a,m)])):d.push([h.key,h.value])}return d};r.prototype.toObject=r.prototype.Mc;r.fromObject=function(a,b,c){b=new r([],b);for(var d=0;d<a.length;d++){var f=a[d][0],h=c(a[d][1]);b.set(f,h)}return b};function w(a){this.a=0;this.b=a}w.prototype.next=function(){return this.a<this.b.length?{done:!1,value:this.b[this.a++]}:{done:!0,value:void 0}};\n\"undefined\"!=typeof Symbol&&(w.prototype[Symbol.iterator]=function(){return this});r.prototype.Jb=function(){return u(this).length};r.prototype.getLength=r.prototype.Jb;r.prototype.clear=function(){this.a={};this.arrClean=!1};r.prototype.clear=r.prototype.clear;r.prototype.Cb=function(a){a=a.toString();var b=this.a.hasOwnProperty(a);delete this.a[a];this.arrClean=!1;return b};r.prototype.del=r.prototype.Cb;\nr.prototype.Eb=function(){var a=[],b=u(this);b.sort();for(var c=0;c<b.length;c++){var d=this.a[b[c]];a.push([d.key,d.value])}return a};r.prototype.getEntryList=r.prototype.Eb;r.prototype.entries=function(){var a=[],b=u(this);b.sort();for(var c=0;c<b.length;c++){var d=this.a[b[c]];a.push([d.key,v(this,d)])}return new w(a)};r.prototype.entries=r.prototype.entries;r.prototype.keys=function(){var a=[],b=u(this);b.sort();for(var c=0;c<b.length;c++)a.push(this.a[b[c]].key);return new w(a)};\nr.prototype.keys=r.prototype.keys;r.prototype.values=function(){var a=[],b=u(this);b.sort();for(var c=0;c<b.length;c++)a.push(v(this,this.a[b[c]]));return new w(a)};r.prototype.values=r.prototype.values;r.prototype.forEach=function(a,b){var c=u(this);c.sort();for(var d=0;d<c.length;d++){var f=this.a[c[d]];a.call(b,v(this,f),f.key,this)}};r.prototype.forEach=r.prototype.forEach;\nr.prototype.set=function(a,b){var c=new wa(a);this.b?(c.a=b,c.value=b.g()):c.value=b;this.a[a.toString()]=c;this.arrClean=!1;return this};r.prototype.set=r.prototype.set;function v(a,b){return a.b?(b.a||(b.a=new a.b(b.value)),b.a):b.value}r.prototype.get=function(a){if(a=this.a[a.toString()])return v(this,a)};r.prototype.get=r.prototype.get;r.prototype.has=function(a){return a.toString()in this.a};r.prototype.has=r.prototype.has;\nr.prototype.Jc=function(a,b,c,d,f){var h=u(this);h.sort();for(var m=0;m<h.length;m++){var t=this.a[h[m]];b.Va(a);c.call(b,1,t.key);this.b?d.call(b,2,v(this,t),f):d.call(b,2,t.value);b.Ya()}};r.prototype.serializeBinary=r.prototype.Jc;r.deserializeBinary=function(a,b,c,d,f,h,m){for(;b.oa()&&!b.bb();){var t=b.c;1==t?h=c.call(b):2==t&&(a.b?(n(f),m||(m=new a.b),d.call(b,m,f)):m=d.call(b))}n(void 0!=h);n(void 0!=m);a.set(h,m)};\nfunction u(a){a=a.a;var b=[],c;for(c in a)Object.prototype.hasOwnProperty.call(a,c)&&b.push(c);return b}function wa(a,b){this.key=a;this.value=b;this.a=void 0};function xa(a){if(8192>=a.length)return String.fromCharCode.apply(null,a);for(var b=\"\",c=0;c<a.length;c+=8192)b+=String.fromCharCode.apply(null,ra(a,c,c+8192));return b};var ya={\"\\x00\":\"\\\\0\",\"\\b\":\"\\\\b\",\"\\f\":\"\\\\f\",\"\\n\":\"\\\\n\",\"\\r\":\"\\\\r\",\"\\t\":\"\\\\t\",\"\\x0B\":\"\\\\x0B\",'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\",\"<\":\"\\\\u003C\"},za={\"'\":\"\\\\'\"};var Aa={},x=null;function Ba(a,b){void 0===b&&(b=0);Ca();b=Aa[b];for(var c=[],d=0;d<a.length;d+=3){var f=a[d],h=d+1<a.length,m=h?a[d+1]:0,t=d+2<a.length,B=t?a[d+2]:0,M=f>>2;f=(f&3)<<4|m>>4;m=(m&15)<<2|B>>6;B&=63;t||(B=64,h||(m=64));c.push(b[M],b[f],b[m]||\"\",b[B]||\"\")}return c.join(\"\")}function Da(a){var b=a.length,c=3*b/4;c%3?c=Math.floor(c):-1!=\"=.\".indexOf(a[b-1])&&(c=-1!=\"=.\".indexOf(a[b-2])?c-2:c-1);var d=new Uint8Array(c),f=0;Ea(a,function(h){d[f++]=h});return d.subarray(0,f)}\nfunction Ea(a,b){function c(B){for(;d<a.length;){var M=a.charAt(d++),La=x[M];if(null!=La)return La;if(!/^[\\s\\xa0]*$/.test(M))throw Error(\"Unknown base64 encoding at char: \"+M);}return B}Ca();for(var d=0;;){var f=c(-1),h=c(0),m=c(64),t=c(64);if(64===t&&-1===f)break;b(f<<2|h>>4);64!=m&&(b(h<<4&240|m>>2),64!=t&&b(m<<6&192|t))}}\nfunction Ca(){if(!x){x={};for(var a=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\".split(\"\"),b=[\"+/=\",\"+/\",\"-_=\",\"-_.\",\"-_\"],c=0;5>c;c++){var d=a.concat(b[c].split(\"\"));Aa[c]=d;for(var f=0;f<d.length;f++){var h=d[f];void 0===x[h]&&(x[h]=f)}}}};g(\"jspb.ConstBinaryMessage\",function(){},void 0);g(\"jspb.BinaryMessage\",function(){},void 0);g(\"jspb.BinaryConstants.FieldType\",{yb:-1,ee:1,FLOAT:2,ke:3,te:4,je:5,xb:6,wb:7,BOOL:8,re:9,ie:10,le:11,ce:12,se:13,ge:14,me:15,ne:16,oe:17,pe:18,he:30,ve:31},void 0);g(\"jspb.BinaryConstants.WireType\",{yb:-1,ue:0,xb:1,de:2,qe:3,fe:4,wb:5},void 0);\ng(\"jspb.BinaryConstants.FieldTypeToWireType\",function(a){switch(a){case 5:case 3:case 13:case 4:case 17:case 18:case 8:case 14:case 31:return 0;case 1:case 6:case 16:case 30:return 1;case 9:case 11:case 12:return 2;case 2:case 7:case 15:return 5;default:return-1}},void 0);g(\"jspb.BinaryConstants.INVALID_FIELD_NUMBER\",-1,void 0);g(\"jspb.BinaryConstants.FLOAT32_EPS\",1.401298464324817E-45,void 0);g(\"jspb.BinaryConstants.FLOAT32_MIN\",1.1754943508222875E-38,void 0);\ng(\"jspb.BinaryConstants.FLOAT32_MAX\",3.4028234663852886E38,void 0);g(\"jspb.BinaryConstants.FLOAT64_EPS\",4.9E-324,void 0);g(\"jspb.BinaryConstants.FLOAT64_MIN\",2.2250738585072014E-308,void 0);g(\"jspb.BinaryConstants.FLOAT64_MAX\",1.7976931348623157E308,void 0);g(\"jspb.BinaryConstants.TWO_TO_20\",1048576,void 0);g(\"jspb.BinaryConstants.TWO_TO_23\",8388608,void 0);g(\"jspb.BinaryConstants.TWO_TO_31\",2147483648,void 0);g(\"jspb.BinaryConstants.TWO_TO_32\",4294967296,void 0);\ng(\"jspb.BinaryConstants.TWO_TO_52\",4503599627370496,void 0);g(\"jspb.BinaryConstants.TWO_TO_63\",0x7fffffffffffffff,void 0);g(\"jspb.BinaryConstants.TWO_TO_64\",1.8446744073709552E19,void 0);g(\"jspb.BinaryConstants.ZERO_HASH\",\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\",void 0);var y=0,z=0;g(\"jspb.utils.getSplit64Low\",function(){return y},void 0);g(\"jspb.utils.getSplit64High\",function(){return z},void 0);function Fa(a){var b=a>>>0;a=Math.floor((a-b)/4294967296)>>>0;y=b;z=a}g(\"jspb.utils.splitUint64\",Fa,void 0);function A(a){var b=0>a;a=Math.abs(a);var c=a>>>0;a=Math.floor((a-c)/4294967296);a>>>=0;b&&(a=~a>>>0,c=(~c>>>0)+1,4294967295<c&&(c=0,a++,4294967295<a&&(a=0)));y=c;z=a}g(\"jspb.utils.splitInt64\",A,void 0);\nfunction Ga(a){var b=0>a;a=2*Math.abs(a);Fa(a);a=y;var c=z;b&&(0==a?0==c?c=a=4294967295:(c--,a=4294967295):a--);y=a;z=c}g(\"jspb.utils.splitZigzag64\",Ga,void 0);\nfunction Ha(a){var b=0>a?1:0;a=b?-a:a;if(0===a)0<1/a?y=z=0:(z=0,y=2147483648);else if(isNaN(a))z=0,y=2147483647;else if(3.4028234663852886E38<a)z=0,y=(b<<31|2139095040)>>>0;else if(1.1754943508222875E-38>a)a=Math.round(a/Math.pow(2,-149)),z=0,y=(b<<31|a)>>>0;else{var c=Math.floor(Math.log(a)/Math.LN2);a*=Math.pow(2,-c);a=Math.round(8388608*a);16777216<=a&&++c;z=0;y=(b<<31|c+127<<23|a&8388607)>>>0}}g(\"jspb.utils.splitFloat32\",Ha,void 0);\nfunction Ia(a){var b=0>a?1:0;a=b?-a:a;if(0===a)z=0<1/a?0:2147483648,y=0;else if(isNaN(a))z=2147483647,y=4294967295;else if(1.7976931348623157E308<a)z=(b<<31|2146435072)>>>0,y=0;else if(2.2250738585072014E-308>a)a/=Math.pow(2,-1074),z=(b<<31|a/4294967296)>>>0,y=a>>>0;else{var c=a,d=0;if(2<=c)for(;2<=c&&1023>d;)d++,c/=2;else for(;1>c&&-1022<d;)c*=2,d--;a*=Math.pow(2,-d);z=(b<<31|d+1023<<20|1048576*a&1048575)>>>0;y=4503599627370496*a>>>0}}g(\"jspb.utils.splitFloat64\",Ia,void 0);\nfunction C(a){var b=a.charCodeAt(4),c=a.charCodeAt(5),d=a.charCodeAt(6),f=a.charCodeAt(7);y=a.charCodeAt(0)+(a.charCodeAt(1)<<8)+(a.charCodeAt(2)<<16)+(a.charCodeAt(3)<<24)>>>0;z=b+(c<<8)+(d<<16)+(f<<24)>>>0}g(\"jspb.utils.splitHash64\",C,void 0);function D(a,b){return 4294967296*b+(a>>>0)}g(\"jspb.utils.joinUint64\",D,void 0);function E(a,b){var c=b&2147483648;c&&(a=~a+1>>>0,b=~b>>>0,0==a&&(b=b+1>>>0));a=D(a,b);return c?-a:a}g(\"jspb.utils.joinInt64\",E,void 0);\nfunction Ja(a,b,c){var d=b>>31;return c(a<<1^d,(b<<1|a>>>31)^d)}g(\"jspb.utils.toZigzag64\",Ja,void 0);function Ka(a,b){return Ma(a,b,E)}g(\"jspb.utils.joinZigzag64\",Ka,void 0);function Ma(a,b,c){var d=-(a&1);return c((a>>>1|b<<31)^d,b>>>1^d)}g(\"jspb.utils.fromZigzag64\",Ma,void 0);function Na(a){var b=2*(a>>31)+1,c=a>>>23&255;a&=8388607;return 255==c?a?NaN:Infinity*b:0==c?b*Math.pow(2,-149)*a:b*Math.pow(2,c-150)*(a+Math.pow(2,23))}g(\"jspb.utils.joinFloat32\",Na,void 0);\nfunction Oa(a,b){var c=2*(b>>31)+1,d=b>>>20&2047;a=4294967296*(b&1048575)+a;return 2047==d?a?NaN:Infinity*c:0==d?c*Math.pow(2,-1074)*a:c*Math.pow(2,d-1075)*(a+4503599627370496)}g(\"jspb.utils.joinFloat64\",Oa,void 0);function Pa(a,b){return String.fromCharCode(a>>>0&255,a>>>8&255,a>>>16&255,a>>>24&255,b>>>0&255,b>>>8&255,b>>>16&255,b>>>24&255)}g(\"jspb.utils.joinHash64\",Pa,void 0);g(\"jspb.utils.DIGITS\",\"0123456789abcdef\".split(\"\"),void 0);\nfunction F(a,b){function c(f,h){f=f?String(f):\"\";return h?\"0000000\".slice(f.length)+f:f}if(2097151>=b)return\"\"+D(a,b);var d=(a>>>24|b<<8)>>>0&16777215;b=b>>16&65535;a=(a&16777215)+6777216*d+6710656*b;d+=8147497*b;b*=2;1E7<=a&&(d+=Math.floor(a/1E7),a%=1E7);1E7<=d&&(b+=Math.floor(d/1E7),d%=1E7);return c(b,0)+c(d,b)+c(a,1)}g(\"jspb.utils.joinUnsignedDecimalString\",F,void 0);function G(a,b){var c=b&2147483648;c&&(a=~a+1>>>0,b=~b+(0==a?1:0)>>>0);a=F(a,b);return c?\"-\"+a:a}\ng(\"jspb.utils.joinSignedDecimalString\",G,void 0);function Qa(a,b){C(a);a=y;var c=z;return b?G(a,c):F(a,c)}g(\"jspb.utils.hash64ToDecimalString\",Qa,void 0);g(\"jspb.utils.hash64ArrayToDecimalStrings\",function(a,b){for(var c=Array(a.length),d=0;d<a.length;d++)c[d]=Qa(a[d],b);return c},void 0);\nfunction H(a){function b(m,t){for(var B=0;8>B&&(1!==m||0<t);B++)t=m*f[B]+t,f[B]=t&255,t>>>=8}function c(){for(var m=0;8>m;m++)f[m]=~f[m]&255}n(0<a.length);var d=!1;\"-\"===a[0]&&(d=!0,a=a.slice(1));for(var f=[0,0,0,0,0,0,0,0],h=0;h<a.length;h++)b(10,a.charCodeAt(h)-48);d&&(c(),b(1,1));return xa(f)}g(\"jspb.utils.decimalStringToHash64\",H,void 0);g(\"jspb.utils.splitDecimalString\",function(a){C(H(a))},void 0);function Ra(a){return String.fromCharCode(10>a?48+a:87+a)}\nfunction Sa(a){return 97<=a?a-97+10:a-48}g(\"jspb.utils.hash64ToHexString\",function(a){var b=Array(18);b[0]=\"0\";b[1]=\"x\";for(var c=0;8>c;c++){var d=a.charCodeAt(7-c);b[2*c+2]=Ra(d>>4);b[2*c+3]=Ra(d&15)}return b.join(\"\")},void 0);g(\"jspb.utils.hexStringToHash64\",function(a){a=a.toLowerCase();n(18==a.length);n(\"0\"==a[0]);n(\"x\"==a[1]);for(var b=\"\",c=0;8>c;c++)b=String.fromCharCode(16*Sa(a.charCodeAt(2*c+2))+Sa(a.charCodeAt(2*c+3)))+b;return b},void 0);\ng(\"jspb.utils.hash64ToNumber\",function(a,b){C(a);a=y;var c=z;return b?E(a,c):D(a,c)},void 0);g(\"jspb.utils.numberToHash64\",function(a){A(a);return Pa(y,z)},void 0);g(\"jspb.utils.countVarints\",function(a,b,c){for(var d=0,f=b;f<c;f++)d+=a[f]>>7;return c-b-d},void 0);\ng(\"jspb.utils.countVarintFields\",function(a,b,c,d){var f=0;d*=8;if(128>d)for(;b<c&&a[b++]==d;)for(f++;;){var h=a[b++];if(0==(h&128))break}else for(;b<c;){for(h=d;128<h;){if(a[b]!=(h&127|128))return f;b++;h>>=7}if(a[b++]!=h)break;for(f++;h=a[b++],0!=(h&128););}return f},void 0);function Ta(a,b,c,d,f){var h=0;if(128>d)for(;b<c&&a[b++]==d;)h++,b+=f;else for(;b<c;){for(var m=d;128<m;){if(a[b++]!=(m&127|128))return h;m>>=7}if(a[b++]!=m)break;h++;b+=f}return h}\ng(\"jspb.utils.countFixed32Fields\",function(a,b,c,d){return Ta(a,b,c,8*d+5,4)},void 0);g(\"jspb.utils.countFixed64Fields\",function(a,b,c,d){return Ta(a,b,c,8*d+1,8)},void 0);g(\"jspb.utils.countDelimitedFields\",function(a,b,c,d){var f=0;for(d=8*d+2;b<c;){for(var h=d;128<h;){if(a[b++]!=(h&127|128))return f;h>>=7}if(a[b++]!=h)break;f++;for(var m=0,t=1;h=a[b++],m+=(h&127)*t,t*=128,0!=(h&128););b+=m}return f},void 0);\ng(\"jspb.utils.debugBytesToTextFormat\",function(a){var b='\"';if(a){a=Ua(a);for(var c=0;c<a.length;c++)b+=\"\\\\x\",16>a[c]&&(b+=\"0\"),b+=a[c].toString(16)}return b+'\"'},void 0);\ng(\"jspb.utils.debugScalarToTextFormat\",function(a){if(\"string\"===typeof a){a=String(a);for(var b=['\"'],c=0;c<a.length;c++){var d=a.charAt(c),f=d.charCodeAt(0),h=c+1,m;if(!(m=ya[d])){if(!(31<f&&127>f))if(f=d,f in za)d=za[f];else if(f in ya)d=za[f]=ya[f];else{m=f.charCodeAt(0);if(31<m&&127>m)d=f;else{if(256>m){if(d=\"\\\\x\",16>m||256<m)d+=\"0\"}else d=\"\\\\u\",4096>m&&(d+=\"0\");d+=m.toString(16).toUpperCase()}d=za[f]=d}m=d}b[h]=m}b.push('\"');a=b.join(\"\")}else a=a.toString();return a},void 0);\ng(\"jspb.utils.stringToByteArray\",function(a){for(var b=new Uint8Array(a.length),c=0;c<a.length;c++){var d=a.charCodeAt(c);if(255<d)throw Error(\"Conversion error: string contains codepoint outside of byte range\");b[c]=d}return b},void 0);\nfunction Ua(a){if(a.constructor===Uint8Array)return a;if(a.constructor===ArrayBuffer)return new Uint8Array(a);if(a.constructor===Array)return new Uint8Array(a);if(a.constructor===String)return Da(a);if(a instanceof Uint8Array)return new Uint8Array(a.buffer,a.byteOffset,a.byteLength);p(\"Type not convertible to Uint8Array.\");return new Uint8Array(0)}g(\"jspb.utils.byteSourceToUint8Array\",Ua,void 0);function I(a,b,c){this.b=null;this.a=this.c=this.h=0;this.v=!1;a&&this.H(a,b,c)}g(\"jspb.BinaryDecoder\",I,void 0);var Va=[];I.getInstanceCacheLength=function(){return Va.length};function Wa(a,b,c){if(Va.length){var d=Va.pop();a&&d.H(a,b,c);return d}return new I(a,b,c)}I.alloc=Wa;I.prototype.Ca=function(){this.clear();100>Va.length&&Va.push(this)};I.prototype.free=I.prototype.Ca;I.prototype.clone=function(){return Wa(this.b,this.h,this.c-this.h)};I.prototype.clone=I.prototype.clone;\nI.prototype.clear=function(){this.b=null;this.a=this.c=this.h=0;this.v=!1};I.prototype.clear=I.prototype.clear;I.prototype.Y=function(){return this.b};I.prototype.getBuffer=I.prototype.Y;I.prototype.H=function(a,b,c){this.b=Ua(a);this.h=void 0!==b?b:0;this.c=void 0!==c?this.h+c:this.b.length;this.a=this.h};I.prototype.setBlock=I.prototype.H;I.prototype.Db=function(){return this.c};I.prototype.getEnd=I.prototype.Db;I.prototype.setEnd=function(a){this.c=a};I.prototype.setEnd=I.prototype.setEnd;\nI.prototype.reset=function(){this.a=this.h};I.prototype.reset=I.prototype.reset;I.prototype.B=function(){return this.a};I.prototype.getCursor=I.prototype.B;I.prototype.Ma=function(a){this.a=a};I.prototype.setCursor=I.prototype.Ma;I.prototype.advance=function(a){this.a+=a;n(this.a<=this.c)};I.prototype.advance=I.prototype.advance;I.prototype.ya=function(){return this.a==this.c};I.prototype.atEnd=I.prototype.ya;I.prototype.Qb=function(){return this.a>this.c};I.prototype.pastEnd=I.prototype.Qb;\nI.prototype.getError=function(){return this.v||0>this.a||this.a>this.c};I.prototype.getError=I.prototype.getError;I.prototype.w=function(a){for(var b=128,c=0,d=0,f=0;4>f&&128<=b;f++)b=this.b[this.a++],c|=(b&127)<<7*f;128<=b&&(b=this.b[this.a++],c|=(b&127)<<28,d|=(b&127)>>4);if(128<=b)for(f=0;5>f&&128<=b;f++)b=this.b[this.a++],d|=(b&127)<<7*f+3;if(128>b)return a(c>>>0,d>>>0);p(\"Failed to read varint, encoding is invalid.\");this.v=!0};I.prototype.readSplitVarint64=I.prototype.w;\nI.prototype.ea=function(a){return this.w(function(b,c){return Ma(b,c,a)})};I.prototype.readSplitZigzagVarint64=I.prototype.ea;I.prototype.ta=function(a){var b=this.b,c=this.a;this.a+=8;for(var d=0,f=0,h=c+7;h>=c;h--)d=d<<8|b[h],f=f<<8|b[h+4];return a(d,f)};I.prototype.readSplitFixed64=I.prototype.ta;I.prototype.kb=function(){for(;this.b[this.a]&128;)this.a++;this.a++};I.prototype.skipVarint=I.prototype.kb;I.prototype.mb=function(a){for(;128<a;)this.a--,a>>>=7;this.a--};I.prototype.unskipVarint=I.prototype.mb;\nI.prototype.o=function(){var a=this.b;var b=a[this.a];var c=b&127;if(128>b)return this.a+=1,n(this.a<=this.c),c;b=a[this.a+1];c|=(b&127)<<7;if(128>b)return this.a+=2,n(this.a<=this.c),c;b=a[this.a+2];c|=(b&127)<<14;if(128>b)return this.a+=3,n(this.a<=this.c),c;b=a[this.a+3];c|=(b&127)<<21;if(128>b)return this.a+=4,n(this.a<=this.c),c;b=a[this.a+4];c|=(b&15)<<28;if(128>b)return this.a+=5,n(this.a<=this.c),c>>>0;this.a+=5;128<=a[this.a++]&&128<=a[this.a++]&&128<=a[this.a++]&&128<=a[this.a++]&&128<=\na[this.a++]&&n(!1);n(this.a<=this.c);return c};I.prototype.readUnsignedVarint32=I.prototype.o;I.prototype.da=function(){return~~this.o()};I.prototype.readSignedVarint32=I.prototype.da;I.prototype.O=function(){return this.o().toString()};I.prototype.Ea=function(){return this.da().toString()};I.prototype.readSignedVarint32String=I.prototype.Ea;I.prototype.Ia=function(){var a=this.o();return a>>>1^-(a&1)};I.prototype.readZigzagVarint32=I.prototype.Ia;I.prototype.Ga=function(){return this.w(D)};\nI.prototype.readUnsignedVarint64=I.prototype.Ga;I.prototype.Ha=function(){return this.w(F)};I.prototype.readUnsignedVarint64String=I.prototype.Ha;I.prototype.sa=function(){return this.w(E)};I.prototype.readSignedVarint64=I.prototype.sa;I.prototype.Fa=function(){return this.w(G)};I.prototype.readSignedVarint64String=I.prototype.Fa;I.prototype.Ja=function(){return this.w(Ka)};I.prototype.readZigzagVarint64=I.prototype.Ja;I.prototype.fb=function(){return this.ea(Pa)};\nI.prototype.readZigzagVarintHash64=I.prototype.fb;I.prototype.Ka=function(){return this.ea(G)};I.prototype.readZigzagVarint64String=I.prototype.Ka;I.prototype.Gc=function(){var a=this.b[this.a];this.a+=1;n(this.a<=this.c);return a};I.prototype.readUint8=I.prototype.Gc;I.prototype.Ec=function(){var a=this.b[this.a],b=this.b[this.a+1];this.a+=2;n(this.a<=this.c);return a<<0|b<<8};I.prototype.readUint16=I.prototype.Ec;\nI.prototype.m=function(){var a=this.b[this.a],b=this.b[this.a+1],c=this.b[this.a+2],d=this.b[this.a+3];this.a+=4;n(this.a<=this.c);return(a<<0|b<<8|c<<16|d<<24)>>>0};I.prototype.readUint32=I.prototype.m;I.prototype.ga=function(){var a=this.m(),b=this.m();return D(a,b)};I.prototype.readUint64=I.prototype.ga;I.prototype.ha=function(){var a=this.m(),b=this.m();return F(a,b)};I.prototype.readUint64String=I.prototype.ha;\nI.prototype.Xb=function(){var a=this.b[this.a];this.a+=1;n(this.a<=this.c);return a<<24>>24};I.prototype.readInt8=I.prototype.Xb;I.prototype.Vb=function(){var a=this.b[this.a],b=this.b[this.a+1];this.a+=2;n(this.a<=this.c);return(a<<0|b<<8)<<16>>16};I.prototype.readInt16=I.prototype.Vb;I.prototype.P=function(){var a=this.b[this.a],b=this.b[this.a+1],c=this.b[this.a+2],d=this.b[this.a+3];this.a+=4;n(this.a<=this.c);return a<<0|b<<8|c<<16|d<<24};I.prototype.readInt32=I.prototype.P;\nI.prototype.ba=function(){var a=this.m(),b=this.m();return E(a,b)};I.prototype.readInt64=I.prototype.ba;I.prototype.ca=function(){var a=this.m(),b=this.m();return G(a,b)};I.prototype.readInt64String=I.prototype.ca;I.prototype.aa=function(){var a=this.m();return Na(a,0)};I.prototype.readFloat=I.prototype.aa;I.prototype.Z=function(){var a=this.m(),b=this.m();return Oa(a,b)};I.prototype.readDouble=I.prototype.Z;I.prototype.pa=function(){return!!this.b[this.a++]};I.prototype.readBool=I.prototype.pa;\nI.prototype.ra=function(){return this.da()};I.prototype.readEnum=I.prototype.ra;\nI.prototype.fa=function(a){var b=this.b,c=this.a;a=c+a;for(var d=[],f=\"\";c<a;){var h=b[c++];if(128>h)d.push(h);else if(192>h)continue;else if(224>h){var m=b[c++];d.push((h&31)<<6|m&63)}else if(240>h){m=b[c++];var t=b[c++];d.push((h&15)<<12|(m&63)<<6|t&63)}else if(248>h){m=b[c++];t=b[c++];var B=b[c++];h=(h&7)<<18|(m&63)<<12|(t&63)<<6|B&63;h-=65536;d.push((h>>10&1023)+55296,(h&1023)+56320)}8192<=d.length&&(f+=String.fromCharCode.apply(null,d),d.length=0)}f+=xa(d);this.a=c;return f};\nI.prototype.readString=I.prototype.fa;I.prototype.Dc=function(){var a=this.o();return this.fa(a)};I.prototype.readStringWithLength=I.prototype.Dc;I.prototype.qa=function(a){if(0>a||this.a+a>this.b.length)return this.v=!0,p(\"Invalid byte length!\"),new Uint8Array(0);var b=this.b.subarray(this.a,this.a+a);this.a+=a;n(this.a<=this.c);return b};I.prototype.readBytes=I.prototype.qa;I.prototype.ia=function(){return this.w(Pa)};I.prototype.readVarintHash64=I.prototype.ia;\nI.prototype.$=function(){var a=this.b,b=this.a,c=a[b],d=a[b+1],f=a[b+2],h=a[b+3],m=a[b+4],t=a[b+5],B=a[b+6];a=a[b+7];this.a+=8;return String.fromCharCode(c,d,f,h,m,t,B,a)};I.prototype.readFixedHash64=I.prototype.$;function J(a,b,c){this.a=Wa(a,b,c);this.O=this.a.B();this.b=this.c=-1;this.h=!1;this.v=null}g(\"jspb.BinaryReader\",J,void 0);var K=[];J.clearInstanceCache=function(){K=[]};J.getInstanceCacheLength=function(){return K.length};function Xa(a,b,c){if(K.length){var d=K.pop();a&&d.a.H(a,b,c);return d}return new J(a,b,c)}J.alloc=Xa;J.prototype.zb=Xa;J.prototype.alloc=J.prototype.zb;J.prototype.Ca=function(){this.a.clear();this.b=this.c=-1;this.h=!1;this.v=null;100>K.length&&K.push(this)};\nJ.prototype.free=J.prototype.Ca;J.prototype.Fb=function(){return this.O};J.prototype.getFieldCursor=J.prototype.Fb;J.prototype.B=function(){return this.a.B()};J.prototype.getCursor=J.prototype.B;J.prototype.Y=function(){return this.a.Y()};J.prototype.getBuffer=J.prototype.Y;J.prototype.Hb=function(){return this.c};J.prototype.getFieldNumber=J.prototype.Hb;J.prototype.Lb=function(){return this.b};J.prototype.getWireType=J.prototype.Lb;J.prototype.Mb=function(){return 2==this.b};\nJ.prototype.isDelimited=J.prototype.Mb;J.prototype.bb=function(){return 4==this.b};J.prototype.isEndGroup=J.prototype.bb;J.prototype.getError=function(){return this.h||this.a.getError()};J.prototype.getError=J.prototype.getError;J.prototype.H=function(a,b,c){this.a.H(a,b,c);this.b=this.c=-1};J.prototype.setBlock=J.prototype.H;J.prototype.reset=function(){this.a.reset();this.b=this.c=-1};J.prototype.reset=J.prototype.reset;J.prototype.advance=function(a){this.a.advance(a)};J.prototype.advance=J.prototype.advance;\nJ.prototype.oa=function(){if(this.a.ya())return!1;if(this.getError())return p(\"Decoder hit an error\"),!1;this.O=this.a.B();var a=this.a.o(),b=a>>>3;a&=7;if(0!=a&&5!=a&&1!=a&&2!=a&&3!=a&&4!=a)return p(\"Invalid wire type: %s (at position %s)\",a,this.O),this.h=!0,!1;this.c=b;this.b=a;return!0};J.prototype.nextField=J.prototype.oa;J.prototype.Oa=function(){this.a.mb(this.c<<3|this.b)};J.prototype.unskipHeader=J.prototype.Oa;\nJ.prototype.Lc=function(){var a=this.c;for(this.Oa();this.oa()&&this.c==a;)this.C();this.a.ya()||this.Oa()};J.prototype.skipMatchingFields=J.prototype.Lc;J.prototype.lb=function(){0!=this.b?(p(\"Invalid wire type for skipVarintField\"),this.C()):this.a.kb()};J.prototype.skipVarintField=J.prototype.lb;J.prototype.gb=function(){if(2!=this.b)p(\"Invalid wire type for skipDelimitedField\"),this.C();else{var a=this.a.o();this.a.advance(a)}};J.prototype.skipDelimitedField=J.prototype.gb;\nJ.prototype.hb=function(){5!=this.b?(p(\"Invalid wire type for skipFixed32Field\"),this.C()):this.a.advance(4)};J.prototype.skipFixed32Field=J.prototype.hb;J.prototype.ib=function(){1!=this.b?(p(\"Invalid wire type for skipFixed64Field\"),this.C()):this.a.advance(8)};J.prototype.skipFixed64Field=J.prototype.ib;J.prototype.jb=function(){var a=this.c;do{if(!this.oa()){p(\"Unmatched start-group tag: stream EOF\");this.h=!0;break}if(4==this.b){this.c!=a&&(p(\"Unmatched end-group tag\"),this.h=!0);break}this.C()}while(1)};\nJ.prototype.skipGroup=J.prototype.jb;J.prototype.C=function(){switch(this.b){case 0:this.lb();break;case 1:this.ib();break;case 2:this.gb();break;case 5:this.hb();break;case 3:this.jb();break;default:p(\"Invalid wire encoding for field.\")}};J.prototype.skipField=J.prototype.C;J.prototype.Hc=function(a,b){null===this.v&&(this.v={});n(!this.v[a]);this.v[a]=b};J.prototype.registerReadCallback=J.prototype.Hc;J.prototype.Ic=function(a){n(null!==this.v);a=this.v[a];n(a);return a(this)};\nJ.prototype.runReadCallback=J.prototype.Ic;J.prototype.Yb=function(a,b){n(2==this.b);var c=this.a.c,d=this.a.o();d=this.a.B()+d;this.a.setEnd(d);b(a,this);this.a.Ma(d);this.a.setEnd(c)};J.prototype.readMessage=J.prototype.Yb;J.prototype.Ub=function(a,b,c){n(3==this.b);n(this.c==a);c(b,this);this.h||4==this.b||(p(\"Group submessage did not end with an END_GROUP tag\"),this.h=!0)};J.prototype.readGroup=J.prototype.Ub;\nJ.prototype.Gb=function(){n(2==this.b);var a=this.a.o(),b=this.a.B(),c=b+a;a=Wa(this.a.Y(),b,a);this.a.Ma(c);return a};J.prototype.getFieldDecoder=J.prototype.Gb;J.prototype.P=function(){n(0==this.b);return this.a.da()};J.prototype.readInt32=J.prototype.P;J.prototype.Wb=function(){n(0==this.b);return this.a.Ea()};J.prototype.readInt32String=J.prototype.Wb;J.prototype.ba=function(){n(0==this.b);return this.a.sa()};J.prototype.readInt64=J.prototype.ba;J.prototype.ca=function(){n(0==this.b);return this.a.Fa()};\nJ.prototype.readInt64String=J.prototype.ca;J.prototype.m=function(){n(0==this.b);return this.a.o()};J.prototype.readUint32=J.prototype.m;J.prototype.Fc=function(){n(0==this.b);return this.a.O()};J.prototype.readUint32String=J.prototype.Fc;J.prototype.ga=function(){n(0==this.b);return this.a.Ga()};J.prototype.readUint64=J.prototype.ga;J.prototype.ha=function(){n(0==this.b);return this.a.Ha()};J.prototype.readUint64String=J.prototype.ha;J.prototype.zc=function(){n(0==this.b);return this.a.Ia()};\nJ.prototype.readSint32=J.prototype.zc;J.prototype.Ac=function(){n(0==this.b);return this.a.Ja()};J.prototype.readSint64=J.prototype.Ac;J.prototype.Bc=function(){n(0==this.b);return this.a.Ka()};J.prototype.readSint64String=J.prototype.Bc;J.prototype.Rb=function(){n(5==this.b);return this.a.m()};J.prototype.readFixed32=J.prototype.Rb;J.prototype.Sb=function(){n(1==this.b);return this.a.ga()};J.prototype.readFixed64=J.prototype.Sb;J.prototype.Tb=function(){n(1==this.b);return this.a.ha()};\nJ.prototype.readFixed64String=J.prototype.Tb;J.prototype.vc=function(){n(5==this.b);return this.a.P()};J.prototype.readSfixed32=J.prototype.vc;J.prototype.wc=function(){n(5==this.b);return this.a.P().toString()};J.prototype.readSfixed32String=J.prototype.wc;J.prototype.xc=function(){n(1==this.b);return this.a.ba()};J.prototype.readSfixed64=J.prototype.xc;J.prototype.yc=function(){n(1==this.b);return this.a.ca()};J.prototype.readSfixed64String=J.prototype.yc;\nJ.prototype.aa=function(){n(5==this.b);return this.a.aa()};J.prototype.readFloat=J.prototype.aa;J.prototype.Z=function(){n(1==this.b);return this.a.Z()};J.prototype.readDouble=J.prototype.Z;J.prototype.pa=function(){n(0==this.b);return!!this.a.o()};J.prototype.readBool=J.prototype.pa;J.prototype.ra=function(){n(0==this.b);return this.a.sa()};J.prototype.readEnum=J.prototype.ra;J.prototype.fa=function(){n(2==this.b);var a=this.a.o();return this.a.fa(a)};J.prototype.readString=J.prototype.fa;\nJ.prototype.qa=function(){n(2==this.b);var a=this.a.o();return this.a.qa(a)};J.prototype.readBytes=J.prototype.qa;J.prototype.ia=function(){n(0==this.b);return this.a.ia()};J.prototype.readVarintHash64=J.prototype.ia;J.prototype.Cc=function(){n(0==this.b);return this.a.fb()};J.prototype.readSintHash64=J.prototype.Cc;J.prototype.w=function(a){n(0==this.b);return this.a.w(a)};J.prototype.readSplitVarint64=J.prototype.w;\nJ.prototype.ea=function(a){n(0==this.b);return this.a.w(function(b,c){return Ma(b,c,a)})};J.prototype.readSplitZigzagVarint64=J.prototype.ea;J.prototype.$=function(){n(1==this.b);return this.a.$()};J.prototype.readFixedHash64=J.prototype.$;J.prototype.ta=function(a){n(1==this.b);return this.a.ta(a)};J.prototype.readSplitFixed64=J.prototype.ta;function L(a,b){n(2==a.b);var c=a.a.o();c=a.a.B()+c;for(var d=[];a.a.B()<c;)d.push(b.call(a.a));return d}J.prototype.gc=function(){return L(this,this.a.da)};\nJ.prototype.readPackedInt32=J.prototype.gc;J.prototype.hc=function(){return L(this,this.a.Ea)};J.prototype.readPackedInt32String=J.prototype.hc;J.prototype.ic=function(){return L(this,this.a.sa)};J.prototype.readPackedInt64=J.prototype.ic;J.prototype.jc=function(){return L(this,this.a.Fa)};J.prototype.readPackedInt64String=J.prototype.jc;J.prototype.qc=function(){return L(this,this.a.o)};J.prototype.readPackedUint32=J.prototype.qc;J.prototype.rc=function(){return L(this,this.a.O)};\nJ.prototype.readPackedUint32String=J.prototype.rc;J.prototype.sc=function(){return L(this,this.a.Ga)};J.prototype.readPackedUint64=J.prototype.sc;J.prototype.tc=function(){return L(this,this.a.Ha)};J.prototype.readPackedUint64String=J.prototype.tc;J.prototype.nc=function(){return L(this,this.a.Ia)};J.prototype.readPackedSint32=J.prototype.nc;J.prototype.oc=function(){return L(this,this.a.Ja)};J.prototype.readPackedSint64=J.prototype.oc;J.prototype.pc=function(){return L(this,this.a.Ka)};\nJ.prototype.readPackedSint64String=J.prototype.pc;J.prototype.bc=function(){return L(this,this.a.m)};J.prototype.readPackedFixed32=J.prototype.bc;J.prototype.cc=function(){return L(this,this.a.ga)};J.prototype.readPackedFixed64=J.prototype.cc;J.prototype.dc=function(){return L(this,this.a.ha)};J.prototype.readPackedFixed64String=J.prototype.dc;J.prototype.kc=function(){return L(this,this.a.P)};J.prototype.readPackedSfixed32=J.prototype.kc;J.prototype.lc=function(){return L(this,this.a.ba)};\nJ.prototype.readPackedSfixed64=J.prototype.lc;J.prototype.mc=function(){return L(this,this.a.ca)};J.prototype.readPackedSfixed64String=J.prototype.mc;J.prototype.fc=function(){return L(this,this.a.aa)};J.prototype.readPackedFloat=J.prototype.fc;J.prototype.$b=function(){return L(this,this.a.Z)};J.prototype.readPackedDouble=J.prototype.$b;J.prototype.Zb=function(){return L(this,this.a.pa)};J.prototype.readPackedBool=J.prototype.Zb;J.prototype.ac=function(){return L(this,this.a.ra)};\nJ.prototype.readPackedEnum=J.prototype.ac;J.prototype.uc=function(){return L(this,this.a.ia)};J.prototype.readPackedVarintHash64=J.prototype.uc;J.prototype.ec=function(){return L(this,this.a.$)};J.prototype.readPackedFixedHash64=J.prototype.ec;function Ya(a,b,c,d,f){this.ma=a;this.Ba=b;this.la=c;this.Na=d;this.na=f}g(\"jspb.ExtensionFieldInfo\",Ya,void 0);function Za(a,b,c,d,f,h){this.Za=a;this.za=b;this.Aa=c;this.Wa=d;this.Ab=f;this.Nb=h}g(\"jspb.ExtensionFieldBinaryInfo\",Za,void 0);Ya.prototype.F=function(){return!!this.la};Ya.prototype.isMessageType=Ya.prototype.F;function N(){}g(\"jspb.Message\",N,void 0);N.GENERATE_TO_OBJECT=!0;N.GENERATE_FROM_OBJECT=!0;var $a=\"function\"==typeof Uint8Array;N.prototype.Ib=function(){return this.b};\nN.prototype.getJsPbMessageId=N.prototype.Ib;\nN.initialize=function(a,b,c,d,f,h){a.f=null;b||(b=c?[c]:[]);a.b=c?String(c):void 0;a.D=0===c?-1:0;a.u=b;a:{c=a.u.length;b=-1;if(c&&(b=c-1,c=a.u[b],!(null===c||\"object\"!=typeof c||Array.isArray(c)||$a&&c instanceof Uint8Array))){a.G=b-a.D;a.i=c;break a}-1<d?(a.G=Math.max(d,b+1-a.D),a.i=null):a.G=Number.MAX_VALUE}a.a={};if(f)for(d=0;d<f.length;d++)b=f[d],b<a.G?(b+=a.D,a.u[b]=a.u[b]||ab):(bb(a),a.i[b]=a.i[b]||ab);if(h&&h.length)for(d=0;d<h.length;d++)cb(a,h[d])};\nvar ab=Object.freeze?Object.freeze([]):[];function bb(a){var b=a.G+a.D;a.u[b]||(a.i=a.u[b]={})}function db(a,b,c){for(var d=[],f=0;f<a.length;f++)d[f]=b.call(a[f],c,a[f]);return d}N.toObjectList=db;N.toObjectExtension=function(a,b,c,d,f){for(var h in c){var m=c[h],t=d.call(a,m);if(null!=t){for(var B in m.Ba)if(m.Ba.hasOwnProperty(B))break;b[B]=m.Na?m.na?db(t,m.Na,f):m.Na(f,t):t}}};\nN.serializeBinaryExtensions=function(a,b,c,d){for(var f in c){var h=c[f],m=h.Za;if(!h.Aa)throw Error(\"Message extension present that was generated without binary serialization support\");var t=d.call(a,m);if(null!=t)if(m.F())if(h.Wa)h.Aa.call(b,m.ma,t,h.Wa);else throw Error(\"Message extension present holding submessage without binary support enabled, and message is being serialized to binary format\");else h.Aa.call(b,m.ma,t)}};\nN.readBinaryExtension=function(a,b,c,d,f){var h=c[b.c];if(h){c=h.Za;if(!h.za)throw Error(\"Deserializing extension whose generated code does not support binary format\");if(c.F()){var m=new c.la;h.za.call(b,m,h.Ab)}else m=h.za.call(b);c.na&&!h.Nb?(b=d.call(a,c))?b.push(m):f.call(a,c,[m]):f.call(a,c,m)}else b.C()};function O(a,b){if(b<a.G){b+=a.D;var c=a.u[b];return c===ab?a.u[b]=[]:c}if(a.i)return c=a.i[b],c===ab?a.i[b]=[]:c}N.getField=O;N.getRepeatedField=function(a,b){return O(a,b)};\nfunction eb(a,b){a=O(a,b);return null==a?a:+a}N.getOptionalFloatingPointField=eb;function fb(a,b){a=O(a,b);return null==a?a:!!a}N.getBooleanField=fb;N.getRepeatedFloatingPointField=function(a,b){var c=O(a,b);a.a||(a.a={});if(!a.a[b]){for(var d=0;d<c.length;d++)c[d]=+c[d];a.a[b]=!0}return c};N.getRepeatedBooleanField=function(a,b){var c=O(a,b);a.a||(a.a={});if(!a.a[b]){for(var d=0;d<c.length;d++)c[d]=!!c[d];a.a[b]=!0}return c};\nfunction gb(a){if(null==a||\"string\"===typeof a)return a;if($a&&a instanceof Uint8Array)return Ba(a);p(\"Cannot coerce to b64 string: \"+k(a));return null}N.bytesAsB64=gb;function hb(a){if(null==a||a instanceof Uint8Array)return a;if(\"string\"===typeof a)return Da(a);p(\"Cannot coerce to Uint8Array: \"+k(a));return null}N.bytesAsU8=hb;N.bytesListAsB64=function(a){ib(a);return a.length&&\"string\"!==typeof a[0]?l(a,gb):a};N.bytesListAsU8=function(a){ib(a);return!a.length||a[0]instanceof Uint8Array?a:l(a,hb)};\nfunction ib(a){if(a&&1<a.length){var b=k(a[0]);qa(a,function(c){k(c)!=b&&p(\"Inconsistent type in JSPB repeated field array. Got \"+k(c)+\" expected \"+b)})}}function jb(a,b,c){a=O(a,b);return null==a?c:a}N.getFieldWithDefault=jb;N.getBooleanFieldWithDefault=function(a,b,c){a=fb(a,b);return null==a?c:a};N.getFloatingPointFieldWithDefault=function(a,b,c){a=eb(a,b);return null==a?c:a};N.getFieldProto3=jb;\nN.getMapField=function(a,b,c,d){a.f||(a.f={});if(b in a.f)return a.f[b];var f=O(a,b);if(!f){if(c)return;f=[];P(a,b,f)}return a.f[b]=new r(f,d)};function P(a,b,c){q(a,N);b<a.G?a.u[b+a.D]=c:(bb(a),a.i[b]=c);return a}N.setField=P;N.setProto3IntField=function(a,b,c){return Q(a,b,c,0)};N.setProto3FloatField=function(a,b,c){return Q(a,b,c,0)};N.setProto3BooleanField=function(a,b,c){return Q(a,b,c,!1)};N.setProto3StringField=function(a,b,c){return Q(a,b,c,\"\")};\nN.setProto3BytesField=function(a,b,c){return Q(a,b,c,\"\")};N.setProto3EnumField=function(a,b,c){return Q(a,b,c,0)};N.setProto3StringIntField=function(a,b,c){return Q(a,b,c,\"0\")};function Q(a,b,c,d){q(a,N);c!==d?P(a,b,c):b<a.G?a.u[b+a.D]=null:(bb(a),delete a.i[b]);return a}N.addToRepeatedField=function(a,b,c,d){q(a,N);b=O(a,b);void 0!=d?b.splice(d,0,c):b.push(c);return a};function kb(a,b,c,d){q(a,N);(c=cb(a,c))&&c!==b&&void 0!==d&&(a.f&&c in a.f&&(a.f[c]=void 0),P(a,c,void 0));return P(a,b,d)}\nN.setOneofField=kb;function cb(a,b){for(var c,d,f=0;f<b.length;f++){var h=b[f],m=O(a,h);null!=m&&(c=h,d=m,P(a,h,void 0))}return c?(P(a,c,d),c):0}N.computeOneofCase=cb;N.getWrapperField=function(a,b,c,d){a.f||(a.f={});if(!a.f[c]){var f=O(a,c);if(d||f)a.f[c]=new b(f)}return a.f[c]};N.getRepeatedWrapperField=function(a,b,c){lb(a,b,c);b=a.f[c];b==ab&&(b=a.f[c]=[]);return b};function lb(a,b,c){a.f||(a.f={});if(!a.f[c]){for(var d=O(a,c),f=[],h=0;h<d.length;h++)f[h]=new b(d[h]);a.f[c]=f}}\nN.setWrapperField=function(a,b,c){q(a,N);a.f||(a.f={});var d=c?c.g():c;a.f[b]=c;return P(a,b,d)};N.setOneofWrapperField=function(a,b,c,d){q(a,N);a.f||(a.f={});var f=d?d.g():d;a.f[b]=d;return kb(a,b,c,f)};N.setRepeatedWrapperField=function(a,b,c){q(a,N);a.f||(a.f={});c=c||[];for(var d=[],f=0;f<c.length;f++)d[f]=c[f].g();a.f[b]=c;return P(a,b,d)};\nN.addToRepeatedWrapperField=function(a,b,c,d,f){lb(a,d,b);var h=a.f[b];h||(h=a.f[b]=[]);c=c?c:new d;a=O(a,b);void 0!=f?(h.splice(f,0,c),a.splice(f,0,c.g())):(h.push(c),a.push(c.g()));return c};N.toMap=function(a,b,c,d){for(var f={},h=0;h<a.length;h++)f[b.call(a[h])]=c?c.call(a[h],d,a[h]):a[h];return f};function mb(a){if(a.f)for(var b in a.f){var c=a.f[b];if(Array.isArray(c))for(var d=0;d<c.length;d++)c[d]&&c[d].g();else c&&c.g()}}N.prototype.g=function(){mb(this);return this.u};\nN.prototype.toArray=N.prototype.g;N.prototype.toString=function(){mb(this);return this.u.toString()};N.prototype.getExtension=function(a){if(this.i){this.f||(this.f={});var b=a.ma;if(a.na){if(a.F())return this.f[b]||(this.f[b]=l(this.i[b]||[],function(c){return new a.la(c)})),this.f[b]}else if(a.F())return!this.f[b]&&this.i[b]&&(this.f[b]=new a.la(this.i[b])),this.f[b];return this.i[b]}};N.prototype.getExtension=N.prototype.getExtension;\nN.prototype.Kc=function(a,b){this.f||(this.f={});bb(this);var c=a.ma;a.na?(b=b||[],a.F()?(this.f[c]=b,this.i[c]=l(b,function(d){return d.g()})):this.i[c]=b):a.F()?(this.f[c]=b,this.i[c]=b?b.g():b):this.i[c]=b;return this};N.prototype.setExtension=N.prototype.Kc;N.difference=function(a,b){if(!(a instanceof b.constructor))throw Error(\"Messages have different types.\");var c=a.g();b=b.g();var d=[],f=0,h=c.length>b.length?c.length:b.length;a.b&&(d[0]=a.b,f=1);for(;f<h;f++)nb(c[f],b[f])||(d[f]=b[f]);return new a.constructor(d)};\nN.equals=function(a,b){return a==b||!(!a||!b)&&a instanceof b.constructor&&nb(a.g(),b.g())};function ob(a,b){a=a||{};b=b||{};var c={},d;for(d in a)c[d]=0;for(d in b)c[d]=0;for(d in c)if(!nb(a[d],b[d]))return!1;return!0}N.compareExtensions=ob;\nfunction nb(a,b){if(a==b)return!0;if(!la(a)||!la(b))return\"number\"===typeof a&&isNaN(a)||\"number\"===typeof b&&isNaN(b)?String(a)==String(b):!1;if(a.constructor!=b.constructor)return!1;if($a&&a.constructor===Uint8Array){if(a.length!=b.length)return!1;for(var c=0;c<a.length;c++)if(a[c]!=b[c])return!1;return!0}if(a.constructor===Array){var d=void 0,f=void 0,h=Math.max(a.length,b.length);for(c=0;c<h;c++){var m=a[c],t=b[c];m&&m.constructor==Object&&(n(void 0===d),n(c===a.length-1),d=m,m=void 0);t&&t.constructor==\nObject&&(n(void 0===f),n(c===b.length-1),f=t,t=void 0);if(!nb(m,t))return!1}return d||f?(d=d||{},f=f||{},ob(d,f)):!0}if(a.constructor===Object)return ob(a,b);throw Error(\"Invalid type in JSPB array\");}N.compareFields=nb;N.prototype.Bb=function(){return pb(this)};N.prototype.cloneMessage=N.prototype.Bb;N.prototype.clone=function(){return pb(this)};N.prototype.clone=N.prototype.clone;N.clone=function(a){return pb(a)};function pb(a){return new a.constructor(qb(a.g()))}\nN.copyInto=function(a,b){q(a,N);q(b,N);n(a.constructor==b.constructor,\"Copy source and target message should have the same type.\");a=pb(a);for(var c=b.g(),d=a.g(),f=c.length=0;f<d.length;f++)c[f]=d[f];b.f=a.f;b.i=a.i};function qb(a){if(Array.isArray(a)){for(var b=Array(a.length),c=0;c<a.length;c++){var d=a[c];null!=d&&(b[c]=\"object\"==typeof d?qb(n(d)):d)}return b}if($a&&a instanceof Uint8Array)return new Uint8Array(a);b={};for(c in a)d=a[c],null!=d&&(b[c]=\"object\"==typeof d?qb(n(d)):d);return b}\nN.registerMessageType=function(a,b){b.we=a};var R={dump:function(a){q(a,N,\"jspb.Message instance expected\");n(a.getExtension,\"Only unobfuscated and unoptimized compilation modes supported.\");return R.X(a)}};g(\"jspb.debug.dump\",R.dump,void 0);\nR.X=function(a){var b=k(a);if(\"number\"==b||\"string\"==b||\"boolean\"==b||\"null\"==b||\"undefined\"==b||\"undefined\"!==typeof Uint8Array&&a instanceof Uint8Array)return a;if(\"array\"==b)return ua(a),l(a,R.X);if(a instanceof r){var c={};a=a.entries();for(var d=a.next();!d.done;d=a.next())c[d.value[0]]=R.X(d.value[1]);return c}q(a,N,\"Only messages expected: \"+a);b=a.constructor;var f={$name:b.name||b.displayName};for(t in b.prototype){var h=/^get([A-Z]\\w*)/.exec(t);if(h&&\"getExtension\"!=t&&\"getJsPbMessageId\"!=\nt){var m=\"has\"+h[1];if(!a[m]||a[m]())m=a[t](),f[R.$a(h[1])]=R.X(m)}}if(a.extensionObject_)return f.$extensions=\"Recursive dumping of extensions not supported in compiled code. Switch to uncompiled or dump extension object directly\",f;for(d in b.extensions)if(/^\\d+$/.test(d)){m=b.extensions[d];var t=a.getExtension(m);h=void 0;m=m.Ba;var B=[],M=0;for(h in m)B[M++]=h;h=B[0];null!=t&&(c||(c=f.$extensions={}),c[R.$a(h)]=R.X(t))}return f};R.$a=function(a){return a.replace(/^[A-Z]/,function(b){return b.toLowerCase()})};function S(){this.a=[]}g(\"jspb.BinaryEncoder\",S,void 0);S.prototype.length=function(){return this.a.length};S.prototype.length=S.prototype.length;S.prototype.end=function(){var a=this.a;this.a=[];return a};S.prototype.end=S.prototype.end;S.prototype.l=function(a,b){n(a==Math.floor(a));n(b==Math.floor(b));n(0<=a&&4294967296>a);for(n(0<=b&&4294967296>b);0<b||127<a;)this.a.push(a&127|128),a=(a>>>7|b<<25)>>>0,b>>>=7;this.a.push(a)};S.prototype.writeSplitVarint64=S.prototype.l;\nS.prototype.A=function(a,b){n(a==Math.floor(a));n(b==Math.floor(b));n(0<=a&&4294967296>a);n(0<=b&&4294967296>b);this.s(a);this.s(b)};S.prototype.writeSplitFixed64=S.prototype.A;S.prototype.j=function(a){n(a==Math.floor(a));for(n(0<=a&&4294967296>a);127<a;)this.a.push(a&127|128),a>>>=7;this.a.push(a)};S.prototype.writeUnsignedVarint32=S.prototype.j;S.prototype.M=function(a){n(a==Math.floor(a));n(-2147483648<=a&&2147483648>a);if(0<=a)this.j(a);else{for(var b=0;9>b;b++)this.a.push(a&127|128),a>>=7;this.a.push(1)}};\nS.prototype.writeSignedVarint32=S.prototype.M;S.prototype.va=function(a){n(a==Math.floor(a));n(0<=a&&1.8446744073709552E19>a);A(a);this.l(y,z)};S.prototype.writeUnsignedVarint64=S.prototype.va;S.prototype.ua=function(a){n(a==Math.floor(a));n(-9223372036854775808<=a&&0x7fffffffffffffff>a);A(a);this.l(y,z)};S.prototype.writeSignedVarint64=S.prototype.ua;S.prototype.wa=function(a){n(a==Math.floor(a));n(-2147483648<=a&&2147483648>a);this.j((a<<1^a>>31)>>>0)};S.prototype.writeZigzagVarint32=S.prototype.wa;\nS.prototype.xa=function(a){n(a==Math.floor(a));n(-9223372036854775808<=a&&0x7fffffffffffffff>a);Ga(a);this.l(y,z)};S.prototype.writeZigzagVarint64=S.prototype.xa;S.prototype.Ta=function(a){this.W(H(a))};S.prototype.writeZigzagVarint64String=S.prototype.Ta;S.prototype.W=function(a){var b=this;C(a);Ja(y,z,function(c,d){b.l(c>>>0,d>>>0)})};S.prototype.writeZigzagVarintHash64=S.prototype.W;S.prototype.be=function(a){n(a==Math.floor(a));n(0<=a&&256>a);this.a.push(a>>>0&255)};S.prototype.writeUint8=S.prototype.be;\nS.prototype.ae=function(a){n(a==Math.floor(a));n(0<=a&&65536>a);this.a.push(a>>>0&255);this.a.push(a>>>8&255)};S.prototype.writeUint16=S.prototype.ae;S.prototype.s=function(a){n(a==Math.floor(a));n(0<=a&&4294967296>a);this.a.push(a>>>0&255);this.a.push(a>>>8&255);this.a.push(a>>>16&255);this.a.push(a>>>24&255)};S.prototype.writeUint32=S.prototype.s;S.prototype.V=function(a){n(a==Math.floor(a));n(0<=a&&1.8446744073709552E19>a);Fa(a);this.s(y);this.s(z)};S.prototype.writeUint64=S.prototype.V;\nS.prototype.Qc=function(a){n(a==Math.floor(a));n(-128<=a&&128>a);this.a.push(a>>>0&255)};S.prototype.writeInt8=S.prototype.Qc;S.prototype.Pc=function(a){n(a==Math.floor(a));n(-32768<=a&&32768>a);this.a.push(a>>>0&255);this.a.push(a>>>8&255)};S.prototype.writeInt16=S.prototype.Pc;S.prototype.S=function(a){n(a==Math.floor(a));n(-2147483648<=a&&2147483648>a);this.a.push(a>>>0&255);this.a.push(a>>>8&255);this.a.push(a>>>16&255);this.a.push(a>>>24&255)};S.prototype.writeInt32=S.prototype.S;\nS.prototype.T=function(a){n(a==Math.floor(a));n(-9223372036854775808<=a&&0x7fffffffffffffff>a);A(a);this.A(y,z)};S.prototype.writeInt64=S.prototype.T;S.prototype.ka=function(a){n(a==Math.floor(a));n(-9223372036854775808<=+a&&0x7fffffffffffffff>+a);C(H(a));this.A(y,z)};S.prototype.writeInt64String=S.prototype.ka;S.prototype.L=function(a){n(Infinity===a||-Infinity===a||isNaN(a)||-3.4028234663852886E38<=a&&3.4028234663852886E38>=a);Ha(a);this.s(y)};S.prototype.writeFloat=S.prototype.L;\nS.prototype.J=function(a){n(Infinity===a||-Infinity===a||isNaN(a)||-1.7976931348623157E308<=a&&1.7976931348623157E308>=a);Ia(a);this.s(y);this.s(z)};S.prototype.writeDouble=S.prototype.J;S.prototype.I=function(a){n(\"boolean\"===typeof a||\"number\"===typeof a);this.a.push(a?1:0)};S.prototype.writeBool=S.prototype.I;S.prototype.R=function(a){n(a==Math.floor(a));n(-2147483648<=a&&2147483648>a);this.M(a)};S.prototype.writeEnum=S.prototype.R;S.prototype.ja=function(a){this.a.push.apply(this.a,a)};\nS.prototype.writeBytes=S.prototype.ja;S.prototype.N=function(a){C(a);this.l(y,z)};S.prototype.writeVarintHash64=S.prototype.N;S.prototype.K=function(a){C(a);this.s(y);this.s(z)};S.prototype.writeFixedHash64=S.prototype.K;\nS.prototype.U=function(a){var b=this.a.length;ta(a);for(var c=0;c<a.length;c++){var d=a.charCodeAt(c);if(128>d)this.a.push(d);else if(2048>d)this.a.push(d>>6|192),this.a.push(d&63|128);else if(65536>d)if(55296<=d&&56319>=d&&c+1<a.length){var f=a.charCodeAt(c+1);56320<=f&&57343>=f&&(d=1024*(d-55296)+f-56320+65536,this.a.push(d>>18|240),this.a.push(d>>12&63|128),this.a.push(d>>6&63|128),this.a.push(d&63|128),c++)}else this.a.push(d>>12|224),this.a.push(d>>6&63|128),this.a.push(d&63|128)}return this.a.length-\nb};S.prototype.writeString=S.prototype.U;function T(a,b){this.lo=a;this.hi=b}g(\"jspb.arith.UInt64\",T,void 0);T.prototype.cmp=function(a){return this.hi<a.hi||this.hi==a.hi&&this.lo<a.lo?-1:this.hi==a.hi&&this.lo==a.lo?0:1};T.prototype.cmp=T.prototype.cmp;T.prototype.La=function(){return new T((this.lo>>>1|(this.hi&1)<<31)>>>0,this.hi>>>1>>>0)};T.prototype.rightShift=T.prototype.La;T.prototype.Da=function(){return new T(this.lo<<1>>>0,(this.hi<<1|this.lo>>>31)>>>0)};T.prototype.leftShift=T.prototype.Da;\nT.prototype.cb=function(){return!!(this.hi&2147483648)};T.prototype.msb=T.prototype.cb;T.prototype.Ob=function(){return!!(this.lo&1)};T.prototype.lsb=T.prototype.Ob;T.prototype.Ua=function(){return 0==this.lo&&0==this.hi};T.prototype.zero=T.prototype.Ua;T.prototype.add=function(a){return new T((this.lo+a.lo&4294967295)>>>0>>>0,((this.hi+a.hi&4294967295)>>>0)+(4294967296<=this.lo+a.lo?1:0)>>>0)};T.prototype.add=T.prototype.add;\nT.prototype.sub=function(a){return new T((this.lo-a.lo&4294967295)>>>0>>>0,((this.hi-a.hi&4294967295)>>>0)-(0>this.lo-a.lo?1:0)>>>0)};T.prototype.sub=T.prototype.sub;function rb(a,b){var c=a&65535;a>>>=16;var d=b&65535,f=b>>>16;b=c*d+65536*(c*f&65535)+65536*(a*d&65535);for(c=a*f+(c*f>>>16)+(a*d>>>16);4294967296<=b;)b-=4294967296,c+=1;return new T(b>>>0,c>>>0)}T.mul32x32=rb;T.prototype.eb=function(a){var b=rb(this.lo,a);a=rb(this.hi,a);a.hi=a.lo;a.lo=0;return b.add(a)};T.prototype.mul=T.prototype.eb;\nT.prototype.Xa=function(a){if(0==a)return[];var b=new T(0,0),c=new T(this.lo,this.hi);a=new T(a,0);for(var d=new T(1,0);!a.cb();)a=a.Da(),d=d.Da();for(;!d.Ua();)0>=a.cmp(c)&&(b=b.add(d),c=c.sub(a)),a=a.La(),d=d.La();return[b,c]};T.prototype.div=T.prototype.Xa;T.prototype.toString=function(){for(var a=\"\",b=this;!b.Ua();){b=b.Xa(10);var c=b[0];a=b[1].lo+a;b=c}\"\"==a&&(a=\"0\");return a};T.prototype.toString=T.prototype.toString;\nfunction U(a){for(var b=new T(0,0),c=new T(0,0),d=0;d<a.length;d++){if(\"0\">a[d]||\"9\"<a[d])return null;c.lo=parseInt(a[d],10);b=b.eb(10).add(c)}return b}T.fromString=U;T.prototype.clone=function(){return new T(this.lo,this.hi)};T.prototype.clone=T.prototype.clone;function V(a,b){this.lo=a;this.hi=b}g(\"jspb.arith.Int64\",V,void 0);V.prototype.add=function(a){return new V((this.lo+a.lo&4294967295)>>>0>>>0,((this.hi+a.hi&4294967295)>>>0)+(4294967296<=this.lo+a.lo?1:0)>>>0)};V.prototype.add=V.prototype.add;\nV.prototype.sub=function(a){return new V((this.lo-a.lo&4294967295)>>>0>>>0,((this.hi-a.hi&4294967295)>>>0)-(0>this.lo-a.lo?1:0)>>>0)};V.prototype.sub=V.prototype.sub;V.prototype.clone=function(){return new V(this.lo,this.hi)};V.prototype.clone=V.prototype.clone;V.prototype.toString=function(){var a=0!=(this.hi&2147483648),b=new T(this.lo,this.hi);a&&(b=(new T(0,0)).sub(b));return(a?\"-\":\"\")+b.toString()};V.prototype.toString=V.prototype.toString;\nfunction sb(a){var b=0<a.length&&\"-\"==a[0];b&&(a=a.substring(1));a=U(a);if(null===a)return null;b&&(a=(new T(0,0)).sub(a));return new V(a.lo,a.hi)}V.fromString=sb;function W(){this.c=[];this.b=0;this.a=new S;this.h=[]}g(\"jspb.BinaryWriter\",W,void 0);function tb(a,b){var c=a.a.end();a.c.push(c);a.c.push(b);a.b+=c.length+b.length}function X(a,b){Y(a,b,2);b=a.a.end();a.c.push(b);a.b+=b.length;b.push(a.b);return b}function Z(a,b){var c=b.pop();c=a.b+a.a.length()-c;for(n(0<=c);127<c;)b.push(c&127|128),c>>>=7,a.b++;b.push(c);a.b++}W.prototype.pb=function(a,b,c){tb(this,a.subarray(b,c))};W.prototype.writeSerializedMessage=W.prototype.pb;\nW.prototype.Pb=function(a,b,c){null!=a&&null!=b&&null!=c&&this.pb(a,b,c)};W.prototype.maybeWriteSerializedMessage=W.prototype.Pb;W.prototype.reset=function(){this.c=[];this.a.end();this.b=0;this.h=[]};W.prototype.reset=W.prototype.reset;W.prototype.ab=function(){n(0==this.h.length);for(var a=new Uint8Array(this.b+this.a.length()),b=this.c,c=b.length,d=0,f=0;f<c;f++){var h=b[f];a.set(h,d);d+=h.length}b=this.a.end();a.set(b,d);d+=b.length;n(d==a.length);this.c=[a];return a};\nW.prototype.getResultBuffer=W.prototype.ab;W.prototype.Kb=function(a){return Ba(this.ab(),a)};W.prototype.getResultBase64String=W.prototype.Kb;W.prototype.Va=function(a){this.h.push(X(this,a))};W.prototype.beginSubMessage=W.prototype.Va;W.prototype.Ya=function(){n(0<=this.h.length);Z(this,this.h.pop())};W.prototype.endSubMessage=W.prototype.Ya;function Y(a,b,c){n(1<=b&&b==Math.floor(b));a.a.j(8*b+c)}\nW.prototype.Nc=function(a,b,c){switch(a){case 1:this.J(b,c);break;case 2:this.L(b,c);break;case 3:this.T(b,c);break;case 4:this.V(b,c);break;case 5:this.S(b,c);break;case 6:this.Qa(b,c);break;case 7:this.Pa(b,c);break;case 8:this.I(b,c);break;case 9:this.U(b,c);break;case 10:p(\"Group field type not supported in writeAny()\");break;case 11:p(\"Message field type not supported in writeAny()\");break;case 12:this.ja(b,c);break;case 13:this.s(b,c);break;case 14:this.R(b,c);break;case 15:this.Ra(b,c);break;\ncase 16:this.Sa(b,c);break;case 17:this.rb(b,c);break;case 18:this.sb(b,c);break;case 30:this.K(b,c);break;case 31:this.N(b,c);break;default:p(\"Invalid field type in writeAny()\")}};W.prototype.writeAny=W.prototype.Nc;function ub(a,b,c){null!=c&&(Y(a,b,0),a.a.j(c))}function vb(a,b,c){null!=c&&(Y(a,b,0),a.a.M(c))}W.prototype.S=function(a,b){null!=b&&(n(-2147483648<=b&&2147483648>b),vb(this,a,b))};W.prototype.writeInt32=W.prototype.S;\nW.prototype.ob=function(a,b){null!=b&&(b=parseInt(b,10),n(-2147483648<=b&&2147483648>b),vb(this,a,b))};W.prototype.writeInt32String=W.prototype.ob;W.prototype.T=function(a,b){null!=b&&(n(-9223372036854775808<=b&&0x7fffffffffffffff>b),null!=b&&(Y(this,a,0),this.a.ua(b)))};W.prototype.writeInt64=W.prototype.T;W.prototype.ka=function(a,b){null!=b&&(b=sb(b),Y(this,a,0),this.a.l(b.lo,b.hi))};W.prototype.writeInt64String=W.prototype.ka;\nW.prototype.s=function(a,b){null!=b&&(n(0<=b&&4294967296>b),ub(this,a,b))};W.prototype.writeUint32=W.prototype.s;W.prototype.ub=function(a,b){null!=b&&(b=parseInt(b,10),n(0<=b&&4294967296>b),ub(this,a,b))};W.prototype.writeUint32String=W.prototype.ub;W.prototype.V=function(a,b){null!=b&&(n(0<=b&&1.8446744073709552E19>b),null!=b&&(Y(this,a,0),this.a.va(b)))};W.prototype.writeUint64=W.prototype.V;W.prototype.vb=function(a,b){null!=b&&(b=U(b),Y(this,a,0),this.a.l(b.lo,b.hi))};\nW.prototype.writeUint64String=W.prototype.vb;W.prototype.rb=function(a,b){null!=b&&(n(-2147483648<=b&&2147483648>b),null!=b&&(Y(this,a,0),this.a.wa(b)))};W.prototype.writeSint32=W.prototype.rb;W.prototype.sb=function(a,b){null!=b&&(n(-9223372036854775808<=b&&0x7fffffffffffffff>b),null!=b&&(Y(this,a,0),this.a.xa(b)))};W.prototype.writeSint64=W.prototype.sb;W.prototype.$d=function(a,b){null!=b&&null!=b&&(Y(this,a,0),this.a.W(b))};W.prototype.writeSintHash64=W.prototype.$d;\nW.prototype.Zd=function(a,b){null!=b&&null!=b&&(Y(this,a,0),this.a.Ta(b))};W.prototype.writeSint64String=W.prototype.Zd;W.prototype.Pa=function(a,b){null!=b&&(n(0<=b&&4294967296>b),Y(this,a,5),this.a.s(b))};W.prototype.writeFixed32=W.prototype.Pa;W.prototype.Qa=function(a,b){null!=b&&(n(0<=b&&1.8446744073709552E19>b),Y(this,a,1),this.a.V(b))};W.prototype.writeFixed64=W.prototype.Qa;W.prototype.nb=function(a,b){null!=b&&(b=U(b),Y(this,a,1),this.a.A(b.lo,b.hi))};W.prototype.writeFixed64String=W.prototype.nb;\nW.prototype.Ra=function(a,b){null!=b&&(n(-2147483648<=b&&2147483648>b),Y(this,a,5),this.a.S(b))};W.prototype.writeSfixed32=W.prototype.Ra;W.prototype.Sa=function(a,b){null!=b&&(n(-9223372036854775808<=b&&0x7fffffffffffffff>b),Y(this,a,1),this.a.T(b))};W.prototype.writeSfixed64=W.prototype.Sa;W.prototype.qb=function(a,b){null!=b&&(b=sb(b),Y(this,a,1),this.a.A(b.lo,b.hi))};W.prototype.writeSfixed64String=W.prototype.qb;W.prototype.L=function(a,b){null!=b&&(Y(this,a,5),this.a.L(b))};\nW.prototype.writeFloat=W.prototype.L;W.prototype.J=function(a,b){null!=b&&(Y(this,a,1),this.a.J(b))};W.prototype.writeDouble=W.prototype.J;W.prototype.I=function(a,b){null!=b&&(n(\"boolean\"===typeof b||\"number\"===typeof b),Y(this,a,0),this.a.I(b))};W.prototype.writeBool=W.prototype.I;W.prototype.R=function(a,b){null!=b&&(n(-2147483648<=b&&2147483648>b),Y(this,a,0),this.a.M(b))};W.prototype.writeEnum=W.prototype.R;W.prototype.U=function(a,b){null!=b&&(a=X(this,a),this.a.U(b),Z(this,a))};\nW.prototype.writeString=W.prototype.U;W.prototype.ja=function(a,b){null!=b&&(b=Ua(b),Y(this,a,2),this.a.j(b.length),tb(this,b))};W.prototype.writeBytes=W.prototype.ja;W.prototype.Rc=function(a,b,c){null!=b&&(a=X(this,a),c(b,this),Z(this,a))};W.prototype.writeMessage=W.prototype.Rc;W.prototype.Sc=function(a,b,c){null!=b&&(Y(this,1,3),Y(this,2,0),this.a.M(a),a=X(this,3),c(b,this),Z(this,a),Y(this,1,4))};W.prototype.writeMessageSet=W.prototype.Sc;\nW.prototype.Oc=function(a,b,c){null!=b&&(Y(this,a,3),c(b,this),Y(this,a,4))};W.prototype.writeGroup=W.prototype.Oc;W.prototype.K=function(a,b){null!=b&&(n(8==b.length),Y(this,a,1),this.a.K(b))};W.prototype.writeFixedHash64=W.prototype.K;W.prototype.N=function(a,b){null!=b&&(n(8==b.length),Y(this,a,0),this.a.N(b))};W.prototype.writeVarintHash64=W.prototype.N;W.prototype.A=function(a,b,c){Y(this,a,1);this.a.A(b,c)};W.prototype.writeSplitFixed64=W.prototype.A;\nW.prototype.l=function(a,b,c){Y(this,a,0);this.a.l(b,c)};W.prototype.writeSplitVarint64=W.prototype.l;W.prototype.tb=function(a,b,c){Y(this,a,0);var d=this.a;Ja(b,c,function(f,h){d.l(f>>>0,h>>>0)})};W.prototype.writeSplitZigzagVarint64=W.prototype.tb;W.prototype.Ed=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)vb(this,a,b[c])};W.prototype.writeRepeatedInt32=W.prototype.Ed;W.prototype.Fd=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.ob(a,b[c])};\nW.prototype.writeRepeatedInt32String=W.prototype.Fd;W.prototype.Gd=function(a,b){if(null!=b)for(var c=0;c<b.length;c++){var d=b[c];null!=d&&(Y(this,a,0),this.a.ua(d))}};W.prototype.writeRepeatedInt64=W.prototype.Gd;W.prototype.Qd=function(a,b,c,d){if(null!=b)for(var f=0;f<b.length;f++)this.A(a,c(b[f]),d(b[f]))};W.prototype.writeRepeatedSplitFixed64=W.prototype.Qd;W.prototype.Rd=function(a,b,c,d){if(null!=b)for(var f=0;f<b.length;f++)this.l(a,c(b[f]),d(b[f]))};\nW.prototype.writeRepeatedSplitVarint64=W.prototype.Rd;W.prototype.Sd=function(a,b,c,d){if(null!=b)for(var f=0;f<b.length;f++)this.tb(a,c(b[f]),d(b[f]))};W.prototype.writeRepeatedSplitZigzagVarint64=W.prototype.Sd;W.prototype.Hd=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.ka(a,b[c])};W.prototype.writeRepeatedInt64String=W.prototype.Hd;W.prototype.Ud=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)ub(this,a,b[c])};W.prototype.writeRepeatedUint32=W.prototype.Ud;\nW.prototype.Vd=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.ub(a,b[c])};W.prototype.writeRepeatedUint32String=W.prototype.Vd;W.prototype.Wd=function(a,b){if(null!=b)for(var c=0;c<b.length;c++){var d=b[c];null!=d&&(Y(this,a,0),this.a.va(d))}};W.prototype.writeRepeatedUint64=W.prototype.Wd;W.prototype.Xd=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.vb(a,b[c])};W.prototype.writeRepeatedUint64String=W.prototype.Xd;\nW.prototype.Md=function(a,b){if(null!=b)for(var c=0;c<b.length;c++){var d=b[c];null!=d&&(Y(this,a,0),this.a.wa(d))}};W.prototype.writeRepeatedSint32=W.prototype.Md;W.prototype.Nd=function(a,b){if(null!=b)for(var c=0;c<b.length;c++){var d=b[c];null!=d&&(Y(this,a,0),this.a.xa(d))}};W.prototype.writeRepeatedSint64=W.prototype.Nd;W.prototype.Od=function(a,b){if(null!=b)for(var c=0;c<b.length;c++){var d=b[c];null!=d&&(Y(this,a,0),this.a.Ta(d))}};W.prototype.writeRepeatedSint64String=W.prototype.Od;\nW.prototype.Pd=function(a,b){if(null!=b)for(var c=0;c<b.length;c++){var d=b[c];null!=d&&(Y(this,a,0),this.a.W(d))}};W.prototype.writeRepeatedSintHash64=W.prototype.Pd;W.prototype.yd=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.Pa(a,b[c])};W.prototype.writeRepeatedFixed32=W.prototype.yd;W.prototype.zd=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.Qa(a,b[c])};W.prototype.writeRepeatedFixed64=W.prototype.zd;\nW.prototype.Ad=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.nb(a,b[c])};W.prototype.writeRepeatedFixed64String=W.prototype.Ad;W.prototype.Jd=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.Ra(a,b[c])};W.prototype.writeRepeatedSfixed32=W.prototype.Jd;W.prototype.Kd=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.Sa(a,b[c])};W.prototype.writeRepeatedSfixed64=W.prototype.Kd;W.prototype.Ld=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.qb(a,b[c])};\nW.prototype.writeRepeatedSfixed64String=W.prototype.Ld;W.prototype.Cd=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.L(a,b[c])};W.prototype.writeRepeatedFloat=W.prototype.Cd;W.prototype.wd=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.J(a,b[c])};W.prototype.writeRepeatedDouble=W.prototype.wd;W.prototype.ud=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.I(a,b[c])};W.prototype.writeRepeatedBool=W.prototype.ud;\nW.prototype.xd=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.R(a,b[c])};W.prototype.writeRepeatedEnum=W.prototype.xd;W.prototype.Td=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.U(a,b[c])};W.prototype.writeRepeatedString=W.prototype.Td;W.prototype.vd=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.ja(a,b[c])};W.prototype.writeRepeatedBytes=W.prototype.vd;W.prototype.Id=function(a,b,c){if(null!=b)for(var d=0;d<b.length;d++){var f=X(this,a);c(b[d],this);Z(this,f)}};\nW.prototype.writeRepeatedMessage=W.prototype.Id;W.prototype.Dd=function(a,b,c){if(null!=b)for(var d=0;d<b.length;d++)Y(this,a,3),c(b[d],this),Y(this,a,4)};W.prototype.writeRepeatedGroup=W.prototype.Dd;W.prototype.Bd=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.K(a,b[c])};W.prototype.writeRepeatedFixedHash64=W.prototype.Bd;W.prototype.Yd=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.N(a,b[c])};W.prototype.writeRepeatedVarintHash64=W.prototype.Yd;\nW.prototype.ad=function(a,b){if(null!=b&&b.length){a=X(this,a);for(var c=0;c<b.length;c++)this.a.M(b[c]);Z(this,a)}};W.prototype.writePackedInt32=W.prototype.ad;W.prototype.bd=function(a,b){if(null!=b&&b.length){a=X(this,a);for(var c=0;c<b.length;c++)this.a.M(parseInt(b[c],10));Z(this,a)}};W.prototype.writePackedInt32String=W.prototype.bd;W.prototype.cd=function(a,b){if(null!=b&&b.length){a=X(this,a);for(var c=0;c<b.length;c++)this.a.ua(b[c]);Z(this,a)}};W.prototype.writePackedInt64=W.prototype.cd;\nW.prototype.md=function(a,b,c,d){if(null!=b){a=X(this,a);for(var f=0;f<b.length;f++)this.a.A(c(b[f]),d(b[f]));Z(this,a)}};W.prototype.writePackedSplitFixed64=W.prototype.md;W.prototype.nd=function(a,b,c,d){if(null!=b){a=X(this,a);for(var f=0;f<b.length;f++)this.a.l(c(b[f]),d(b[f]));Z(this,a)}};W.prototype.writePackedSplitVarint64=W.prototype.nd;W.prototype.od=function(a,b,c,d){if(null!=b){a=X(this,a);for(var f=this.a,h=0;h<b.length;h++)Ja(c(b[h]),d(b[h]),function(m,t){f.l(m>>>0,t>>>0)});Z(this,a)}};\nW.prototype.writePackedSplitZigzagVarint64=W.prototype.od;W.prototype.dd=function(a,b){if(null!=b&&b.length){a=X(this,a);for(var c=0;c<b.length;c++){var d=sb(b[c]);this.a.l(d.lo,d.hi)}Z(this,a)}};W.prototype.writePackedInt64String=W.prototype.dd;W.prototype.pd=function(a,b){if(null!=b&&b.length){a=X(this,a);for(var c=0;c<b.length;c++)this.a.j(b[c]);Z(this,a)}};W.prototype.writePackedUint32=W.prototype.pd;\nW.prototype.qd=function(a,b){if(null!=b&&b.length){a=X(this,a);for(var c=0;c<b.length;c++)this.a.j(parseInt(b[c],10));Z(this,a)}};W.prototype.writePackedUint32String=W.prototype.qd;W.prototype.rd=function(a,b){if(null!=b&&b.length){a=X(this,a);for(var c=0;c<b.length;c++)this.a.va(b[c]);Z(this,a)}};W.prototype.writePackedUint64=W.prototype.rd;W.prototype.sd=function(a,b){if(null!=b&&b.length){a=X(this,a);for(var c=0;c<b.length;c++){var d=U(b[c]);this.a.l(d.lo,d.hi)}Z(this,a)}};\nW.prototype.writePackedUint64String=W.prototype.sd;W.prototype.hd=function(a,b){if(null!=b&&b.length){a=X(this,a);for(var c=0;c<b.length;c++)this.a.wa(b[c]);Z(this,a)}};W.prototype.writePackedSint32=W.prototype.hd;W.prototype.jd=function(a,b){if(null!=b&&b.length){a=X(this,a);for(var c=0;c<b.length;c++)this.a.xa(b[c]);Z(this,a)}};W.prototype.writePackedSint64=W.prototype.jd;W.prototype.kd=function(a,b){if(null!=b&&b.length){a=X(this,a);for(var c=0;c<b.length;c++)this.a.W(H(b[c]));Z(this,a)}};\nW.prototype.writePackedSint64String=W.prototype.kd;W.prototype.ld=function(a,b){if(null!=b&&b.length){a=X(this,a);for(var c=0;c<b.length;c++)this.a.W(b[c]);Z(this,a)}};W.prototype.writePackedSintHash64=W.prototype.ld;W.prototype.Wc=function(a,b){if(null!=b&&b.length)for(Y(this,a,2),this.a.j(4*b.length),a=0;a<b.length;a++)this.a.s(b[a])};W.prototype.writePackedFixed32=W.prototype.Wc;W.prototype.Xc=function(a,b){if(null!=b&&b.length)for(Y(this,a,2),this.a.j(8*b.length),a=0;a<b.length;a++)this.a.V(b[a])};\nW.prototype.writePackedFixed64=W.prototype.Xc;W.prototype.Yc=function(a,b){if(null!=b&&b.length)for(Y(this,a,2),this.a.j(8*b.length),a=0;a<b.length;a++){var c=U(b[a]);this.a.A(c.lo,c.hi)}};W.prototype.writePackedFixed64String=W.prototype.Yc;W.prototype.ed=function(a,b){if(null!=b&&b.length)for(Y(this,a,2),this.a.j(4*b.length),a=0;a<b.length;a++)this.a.S(b[a])};W.prototype.writePackedSfixed32=W.prototype.ed;\nW.prototype.fd=function(a,b){if(null!=b&&b.length)for(Y(this,a,2),this.a.j(8*b.length),a=0;a<b.length;a++)this.a.T(b[a])};W.prototype.writePackedSfixed64=W.prototype.fd;W.prototype.gd=function(a,b){if(null!=b&&b.length)for(Y(this,a,2),this.a.j(8*b.length),a=0;a<b.length;a++)this.a.ka(b[a])};W.prototype.writePackedSfixed64String=W.prototype.gd;W.prototype.$c=function(a,b){if(null!=b&&b.length)for(Y(this,a,2),this.a.j(4*b.length),a=0;a<b.length;a++)this.a.L(b[a])};W.prototype.writePackedFloat=W.prototype.$c;\nW.prototype.Uc=function(a,b){if(null!=b&&b.length)for(Y(this,a,2),this.a.j(8*b.length),a=0;a<b.length;a++)this.a.J(b[a])};W.prototype.writePackedDouble=W.prototype.Uc;W.prototype.Tc=function(a,b){if(null!=b&&b.length)for(Y(this,a,2),this.a.j(b.length),a=0;a<b.length;a++)this.a.I(b[a])};W.prototype.writePackedBool=W.prototype.Tc;W.prototype.Vc=function(a,b){if(null!=b&&b.length){a=X(this,a);for(var c=0;c<b.length;c++)this.a.R(b[c]);Z(this,a)}};W.prototype.writePackedEnum=W.prototype.Vc;\nW.prototype.Zc=function(a,b){if(null!=b&&b.length)for(Y(this,a,2),this.a.j(8*b.length),a=0;a<b.length;a++)this.a.K(b[a])};W.prototype.writePackedFixedHash64=W.prototype.Zc;W.prototype.td=function(a,b){if(null!=b&&b.length){a=X(this,a);for(var c=0;c<b.length;c++)this.a.N(b[c]);Z(this,a)}};W.prototype.writePackedVarintHash64=W.prototype.td;\"object\"===typeof exports&&(exports.debug=R,exports.Map=r,exports.Message=N,exports.BinaryReader=J,exports.BinaryWriter=W,exports.ExtensionFieldInfo=Ya,exports.ExtensionFieldBinaryInfo=Za,exports.exportSymbol=ma,exports.inherits=na,exports.object={extend:pa},exports.typeOf=k);\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/** @license React v17.0.2\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),m=require(\"object-assign\"),r=require(\"scheduler\");function y(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}if(!aa)throw Error(y(227));var ba=new Set,ca={};function da(a,b){ea(a,b);ea(a+\"Capture\",b)}\nfunction ea(a,b){ca[a]=b;for(a=0;a<b.length;a++)ba.add(b[a])}\nvar fa=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ha=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,ia=Object.prototype.hasOwnProperty,\nja={},ka={};function la(a){if(ia.call(ka,a))return!0;if(ia.call(ja,a))return!1;if(ha.test(a))return ka[a]=!0;ja[a]=!0;return!1}function ma(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction na(a,b,c,d){if(null===b||\"undefined\"===typeof b||ma(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function B(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var D={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){D[a]=new B(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];D[b]=new B(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){D[a]=new B(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){D[a]=new B(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){D[a]=new B(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){D[a]=new B(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){D[a]=new B(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){D[a]=new B(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){D[a]=new B(a,5,!1,a.toLowerCase(),null,!1,!1)});var oa=/[\\-:]([a-z])/g;function pa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(oa,\npa);D[b]=new B(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!1,!1)});\nD.xlinkHref=new B(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction qa(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(na(b,c,e,d)&&(c=null),d||null===e?la(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nvar ra=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,sa=60103,ta=60106,ua=60107,wa=60108,xa=60114,ya=60109,za=60110,Aa=60112,Ba=60113,Ca=60120,Da=60115,Ea=60116,Fa=60121,Ga=60128,Ha=60129,Ia=60130,Ja=60131;\nif(\"function\"===typeof Symbol&&Symbol.for){var E=Symbol.for;sa=E(\"react.element\");ta=E(\"react.portal\");ua=E(\"react.fragment\");wa=E(\"react.strict_mode\");xa=E(\"react.profiler\");ya=E(\"react.provider\");za=E(\"react.context\");Aa=E(\"react.forward_ref\");Ba=E(\"react.suspense\");Ca=E(\"react.suspense_list\");Da=E(\"react.memo\");Ea=E(\"react.lazy\");Fa=E(\"react.block\");E(\"react.scope\");Ga=E(\"react.opaque.id\");Ha=E(\"react.debug_trace_mode\");Ia=E(\"react.offscreen\");Ja=E(\"react.legacy_hidden\")}\nvar Ka=\"function\"===typeof Symbol&&Symbol.iterator;function La(a){if(null===a||\"object\"!==typeof a)return null;a=Ka&&a[Ka]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var Ma;function Na(a){if(void 0===Ma)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);Ma=b&&b[1]||\"\"}return\"\\n\"+Ma+a}var Oa=!1;\nfunction Pa(a,b){if(!a||Oa)return\"\";Oa=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(k){var d=k}Reflect.construct(a,[],b)}else{try{b.call()}catch(k){d=k}a.call(b.prototype)}else{try{throw Error();}catch(k){d=k}a()}}catch(k){if(k&&d&&\"string\"===typeof k.stack){for(var e=k.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h])return\"\\n\"+e[g].replace(\" at new \",\" at \");while(1<=g&&0<=h)}break}}}finally{Oa=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Na(a):\"\"}\nfunction Qa(a){switch(a.tag){case 5:return Na(a.type);case 16:return Na(\"Lazy\");case 13:return Na(\"Suspense\");case 19:return Na(\"SuspenseList\");case 0:case 2:case 15:return a=Pa(a.type,!1),a;case 11:return a=Pa(a.type.render,!1),a;case 22:return a=Pa(a.type._render,!1),a;case 1:return a=Pa(a.type,!0),a;default:return\"\"}}\nfunction Ra(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ua:return\"Fragment\";case ta:return\"Portal\";case xa:return\"Profiler\";case wa:return\"StrictMode\";case Ba:return\"Suspense\";case Ca:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case za:return(a.displayName||\"Context\")+\".Consumer\";case ya:return(a._context.displayName||\"Context\")+\".Provider\";case Aa:var b=a.render;b=b.displayName||b.name||\"\";\nreturn a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\")\":\"ForwardRef\");case Da:return Ra(a.type);case Fa:return Ra(a._render);case Ea:b=a._payload;a=a._init;try{return Ra(a(b))}catch(c){}}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return m({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function $a(a,b){b=b.checked;null!=b&&qa(a,\"checked\",b,!1)}\nfunction ab(a,b){$a(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?bb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&bb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction cb(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction bb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}function db(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function eb(a,b){a=m({children:void 0},b);if(b=db(b.children))a.children=b;return a}\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(y(91));return m({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(y(92));if(Array.isArray(c)){if(!(1>=c.length))throw Error(y(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}var kb={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction lb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function mb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?lb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar nb,ob=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==kb.svg||\"innerHTML\"in a)a.innerHTML=b;else{nb=nb||document.createElement(\"div\");nb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=nb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction pb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar qb={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},rb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(qb).forEach(function(a){rb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);qb[b]=qb[a]})});function sb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||qb.hasOwnProperty(a)&&qb[a]?(\"\"+b).trim():b+\"px\"}\nfunction tb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=sb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var ub=m({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction vb(a,b){if(b){if(ub[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(y(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(y(60));if(!(\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML))throw Error(y(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(y(62));}}\nfunction wb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(y(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(a,b,c,d,e){return a(b,c,d,e)}function Ib(){}var Jb=Gb,Kb=!1,Lb=!1;function Mb(){if(null!==zb||null!==Ab)Ib(),Fb()}\nfunction Nb(a,b,c){if(Lb)return a(b,c);Lb=!0;try{return Jb(a,b,c)}finally{Lb=!1,Mb()}}\nfunction Ob(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(y(231,b,typeof c));return c}var Pb=!1;if(fa)try{var Qb={};Object.defineProperty(Qb,\"passive\",{get:function(){Pb=!0}});window.addEventListener(\"test\",Qb,Qb);window.removeEventListener(\"test\",Qb,Qb)}catch(a){Pb=!1}function Rb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(n){this.onError(n)}}var Sb=!1,Tb=null,Ub=!1,Vb=null,Wb={onError:function(a){Sb=!0;Tb=a}};function Xb(a,b,c,d,e,f,g,h,k){Sb=!1;Tb=null;Rb.apply(Wb,arguments)}\nfunction Yb(a,b,c,d,e,f,g,h,k){Xb.apply(this,arguments);if(Sb){if(Sb){var l=Tb;Sb=!1;Tb=null}else throw Error(y(198));Ub||(Ub=!0,Vb=l)}}function Zb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function $b(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function ac(a){if(Zb(a)!==a)throw Error(y(188));}\nfunction bc(a){var b=a.alternate;if(!b){b=Zb(a);if(null===b)throw Error(y(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return ac(e),a;if(f===d)return ac(e),b;f=f.sibling}throw Error(y(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(y(189));}}if(c.alternate!==d)throw Error(y(190));}if(3!==c.tag)throw Error(y(188));return c.stateNode.current===c?a:b}function cc(a){a=bc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nfunction dc(a,b){for(var c=a.alternate;null!==b;){if(b===a||b===c)return!0;b=b.return}return!1}var ec,fc,gc,hc,ic=!1,jc=[],kc=null,lc=null,mc=null,nc=new Map,oc=new Map,pc=[],qc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction rc(a,b,c,d,e){return{blockedOn:a,domEventName:b,eventSystemFlags:c|16,nativeEvent:e,targetContainers:[d]}}function sc(a,b){switch(a){case \"focusin\":case \"focusout\":kc=null;break;case \"dragenter\":case \"dragleave\":lc=null;break;case \"mouseover\":case \"mouseout\":mc=null;break;case \"pointerover\":case \"pointerout\":nc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":oc.delete(b.pointerId)}}\nfunction tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a=rc(b,c,d,e,f),null!==b&&(b=Cb(b),null!==b&&fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction uc(a,b,c,d,e){switch(b){case \"focusin\":return kc=tc(kc,a,b,c,d,e),!0;case \"dragenter\":return lc=tc(lc,a,b,c,d,e),!0;case \"mouseover\":return mc=tc(mc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;nc.set(f,tc(nc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,oc.set(f,tc(oc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction vc(a){var b=wc(a.target);if(null!==b){var c=Zb(b);if(null!==c)if(b=c.tag,13===b){if(b=$b(c),null!==b){a.blockedOn=b;hc(a.lanePriority,function(){r.unstable_runWithPriority(a.priority,function(){gc(c)})});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c)return b=Cb(c),null!==b&&fc(b),a.blockedOn=c,!1;b.shift()}return!0}function zc(a,b,c){xc(a)&&c.delete(b)}\nfunction Ac(){for(ic=!1;0<jc.length;){var a=jc[0];if(null!==a.blockedOn){a=Cb(a.blockedOn);null!==a&&ec(a);break}for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c){a.blockedOn=c;break}b.shift()}null===a.blockedOn&&jc.shift()}null!==kc&&xc(kc)&&(kc=null);null!==lc&&xc(lc)&&(lc=null);null!==mc&&xc(mc)&&(mc=null);nc.forEach(zc);oc.forEach(zc)}\nfunction Bc(a,b){a.blockedOn===b&&(a.blockedOn=null,ic||(ic=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Ac)))}\nfunction Cc(a){function b(b){return Bc(b,a)}if(0<jc.length){Bc(jc[0],a);for(var c=1;c<jc.length;c++){var d=jc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==kc&&Bc(kc,a);null!==lc&&Bc(lc,a);null!==mc&&Bc(mc,a);nc.forEach(b);oc.forEach(b);for(c=0;c<pc.length;c++)d=pc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<pc.length&&(c=pc[0],null===c.blockedOn);)vc(c),null===c.blockedOn&&pc.shift()}\nfunction Dc(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ec={animationend:Dc(\"Animation\",\"AnimationEnd\"),animationiteration:Dc(\"Animation\",\"AnimationIteration\"),animationstart:Dc(\"Animation\",\"AnimationStart\"),transitionend:Dc(\"Transition\",\"TransitionEnd\")},Fc={},Gc={};\nfa&&(Gc=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ec.animationend.animation,delete Ec.animationiteration.animation,delete Ec.animationstart.animation),\"TransitionEvent\"in window||delete Ec.transitionend.transition);function Hc(a){if(Fc[a])return Fc[a];if(!Ec[a])return a;var b=Ec[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Gc)return Fc[a]=b[c];return a}\nvar Ic=Hc(\"animationend\"),Jc=Hc(\"animationiteration\"),Kc=Hc(\"animationstart\"),Lc=Hc(\"transitionend\"),Mc=new Map,Nc=new Map,Oc=[\"abort\",\"abort\",Ic,\"animationEnd\",Jc,\"animationIteration\",Kc,\"animationStart\",\"canplay\",\"canPlay\",\"canplaythrough\",\"canPlayThrough\",\"durationchange\",\"durationChange\",\"emptied\",\"emptied\",\"encrypted\",\"encrypted\",\"ended\",\"ended\",\"error\",\"error\",\"gotpointercapture\",\"gotPointerCapture\",\"load\",\"load\",\"loadeddata\",\"loadedData\",\"loadedmetadata\",\"loadedMetadata\",\"loadstart\",\"loadStart\",\n\"lostpointercapture\",\"lostPointerCapture\",\"playing\",\"playing\",\"progress\",\"progress\",\"seeking\",\"seeking\",\"stalled\",\"stalled\",\"suspend\",\"suspend\",\"timeupdate\",\"timeUpdate\",Lc,\"transitionEnd\",\"waiting\",\"waiting\"];function Pc(a,b){for(var c=0;c<a.length;c+=2){var d=a[c],e=a[c+1];e=\"on\"+(e[0].toUpperCase()+e.slice(1));Nc.set(d,b);Mc.set(d,e);da(e,[d])}}var Qc=r.unstable_now;Qc();var F=8;\nfunction Rc(a){if(0!==(1&a))return F=15,1;if(0!==(2&a))return F=14,2;if(0!==(4&a))return F=13,4;var b=24&a;if(0!==b)return F=12,b;if(0!==(a&32))return F=11,32;b=192&a;if(0!==b)return F=10,b;if(0!==(a&256))return F=9,256;b=3584&a;if(0!==b)return F=8,b;if(0!==(a&4096))return F=7,4096;b=4186112&a;if(0!==b)return F=6,b;b=62914560&a;if(0!==b)return F=5,b;if(a&67108864)return F=4,67108864;if(0!==(a&134217728))return F=3,134217728;b=805306368&a;if(0!==b)return F=2,b;if(0!==(1073741824&a))return F=1,1073741824;\nF=8;return a}function Sc(a){switch(a){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}function Tc(a){switch(a){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(y(358,a));}}\nfunction Uc(a,b){var c=a.pendingLanes;if(0===c)return F=0;var d=0,e=0,f=a.expiredLanes,g=a.suspendedLanes,h=a.pingedLanes;if(0!==f)d=f,e=F=15;else if(f=c&134217727,0!==f){var k=f&~g;0!==k?(d=Rc(k),e=F):(h&=f,0!==h&&(d=Rc(h),e=F))}else f=c&~g,0!==f?(d=Rc(f),e=F):0!==h&&(d=Rc(h),e=F);if(0===d)return 0;d=31-Vc(d);d=c&((0>d?0:1<<d)<<1)-1;if(0!==b&&b!==d&&0===(b&g)){Rc(b);if(e<=F)return b;F=e}b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-Vc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction Wc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function Xc(a,b){switch(a){case 15:return 1;case 14:return 2;case 12:return a=Yc(24&~b),0===a?Xc(10,b):a;case 10:return a=Yc(192&~b),0===a?Xc(8,b):a;case 8:return a=Yc(3584&~b),0===a&&(a=Yc(4186112&~b),0===a&&(a=512)),a;case 2:return b=Yc(805306368&~b),0===b&&(b=268435456),b}throw Error(y(358,a));}function Yc(a){return a&-a}function Zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction $c(a,b,c){a.pendingLanes|=b;var d=b-1;a.suspendedLanes&=d;a.pingedLanes&=d;a=a.eventTimes;b=31-Vc(b);a[b]=c}var Vc=Math.clz32?Math.clz32:ad,bd=Math.log,cd=Math.LN2;function ad(a){return 0===a?32:31-(bd(a)/cd|0)|0}var dd=r.unstable_UserBlockingPriority,ed=r.unstable_runWithPriority,fd=!0;function gd(a,b,c,d){Kb||Ib();var e=hd,f=Kb;Kb=!0;try{Hb(e,a,b,c,d)}finally{(Kb=f)||Mb()}}function id(a,b,c,d){ed(dd,hd.bind(null,a,b,c,d))}\nfunction hd(a,b,c,d){if(fd){var e;if((e=0===(b&4))&&0<jc.length&&-1<qc.indexOf(a))a=rc(null,a,b,c,d),jc.push(a);else{var f=yc(a,b,c,d);if(null===f)e&&sc(a,d);else{if(e){if(-1<qc.indexOf(a)){a=rc(f,a,b,c,d);jc.push(a);return}if(uc(f,a,b,c,d))return;sc(a,d)}jd(a,b,d,null,c)}}}}\nfunction yc(a,b,c,d){var e=xb(d);e=wc(e);if(null!==e){var f=Zb(e);if(null===f)e=null;else{var g=f.tag;if(13===g){e=$b(f);if(null!==e)return e;e=null}else if(3===g){if(f.stateNode.hydrate)return 3===f.tag?f.stateNode.containerInfo:null;e=null}else f!==e&&(e=null)}}jd(a,b,d,e,c);return null}var kd=null,ld=null,md=null;\nfunction nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}function od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}m(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=m({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=m({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=m({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=m({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=m({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=m({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=m({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=m({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=m({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=m({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=m({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=m({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=fa&&\"CompositionEvent\"in window,be=null;fa&&\"documentMode\"in document&&(be=document.documentMode);var ce=fa&&\"TextEvent\"in window&&!be,de=fa&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(fa){var xe;if(fa){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));a=re;if(Kb)a(b);else{Kb=!0;try{Gb(a,b)}finally{Kb=!1,Mb()}}}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge,Ie=Object.prototype.hasOwnProperty;\nfunction Je(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!Ie.call(b,c[d])||!He(a[c[d]],b[c[d]]))return!1;return!0}function Ke(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Le(a,b){var c=Ke(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Ke(c)}}function Me(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Me(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Ne(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Oe(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Pe=fa&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Oe(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Je(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nPc(\"cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange\".split(\" \"),\n0);Pc(\"drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel\".split(\" \"),1);Pc(Oc,2);for(var Ve=\"change selectionchange textInput compositionstart compositionend compositionupdate\".split(\" \"),We=0;We<Ve.length;We++)Nc.set(Ve[We],0);ea(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);\nea(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ea(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);ea(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);da(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));da(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));da(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);da(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));\nda(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));da(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var Xe=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),Ye=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(Xe));\nfunction Ze(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Yb(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}}}if(Ub)throw a=Vb,Ub=!1,Vb=null,a;}\nfunction G(a,b){var c=$e(b),d=a+\"__bubble\";c.has(d)||(af(b,a,2,!1),c.add(d))}var bf=\"_reactListening\"+Math.random().toString(36).slice(2);function cf(a){a[bf]||(a[bf]=!0,ba.forEach(function(b){Ye.has(b)||df(b,!1,a,null);df(b,!0,a,null)}))}\nfunction df(a,b,c,d){var e=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,f=c;\"selectionchange\"===a&&9!==c.nodeType&&(f=c.ownerDocument);if(null!==d&&!b&&Ye.has(a)){if(\"scroll\"!==a)return;e|=2;f=d}var g=$e(f),h=a+\"__\"+(b?\"capture\":\"bubble\");g.has(h)||(b&&(e|=4),af(f,a,e,b),g.add(h))}\nfunction af(a,b,c,d){var e=Nc.get(b);switch(void 0===e?2:e){case 0:e=gd;break;case 1:e=id;break;default:e=hd}c=e.bind(null,b,c,a);e=void 0;!Pb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction jd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Nb(function(){var d=f,e=xb(c),g=[];\na:{var h=Mc.get(a);if(void 0!==h){var k=td,x=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":x=\"focus\";k=Fd;break;case \"focusout\":x=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case Ic:case Jc:case Kc:k=Hd;break;case Lc:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var w=0!==(b&4),z=!w&&\"scroll\"===a,u=w?null!==h?h+\"Capture\":null:h;w=[];for(var t=d,q;null!==\nt;){q=t;var v=q.stateNode;5===q.tag&&null!==v&&(q=v,null!==u&&(v=Ob(t,u),null!=v&&w.push(ef(t,v,q))));if(z)break;t=t.return}0<w.length&&(h=new k(h,x,null,c,e),g.push({event:h,listeners:w}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&0===(b&16)&&(x=c.relatedTarget||c.fromElement)&&(wc(x)||x[ff]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(x=c.relatedTarget||c.toElement,k=d,x=x?wc(x):null,null!==\nx&&(z=Zb(x),x!==z||5!==x.tag&&6!==x.tag))x=null}else k=null,x=d;if(k!==x){w=Bd;v=\"onMouseLeave\";u=\"onMouseEnter\";t=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)w=Td,v=\"onPointerLeave\",u=\"onPointerEnter\",t=\"pointer\";z=null==k?h:ue(k);q=null==x?h:ue(x);h=new w(v,t+\"leave\",k,c,e);h.target=z;h.relatedTarget=q;v=null;wc(e)===d&&(w=new w(u,t+\"enter\",x,c,e),w.target=q,w.relatedTarget=z,v=w);z=v;if(k&&x)b:{w=k;u=x;t=0;for(q=w;q;q=gf(q))t++;q=0;for(v=u;v;v=gf(v))q++;for(;0<t-q;)w=gf(w),t--;for(;0<q-t;)u=\ngf(u),q--;for(;t--;){if(w===u||null!==u&&w===u.alternate)break b;w=gf(w);u=gf(u)}w=null}else w=null;null!==k&&hf(g,h,k,w,!1);null!==x&&null!==z&&hf(g,z,x,w,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var J=ve;else if(me(h))if(we)J=Fe;else{J=De;var K=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(J=Ee);if(J&&(J=J(a,d))){ne(g,J,c,e);break a}K&&K(a,h,d);\"focusout\"===a&&(K=h._wrapperState)&&\nK.controlled&&\"number\"===h.type&&bb(h,\"number\",h.value)}K=d?ue(d):window;switch(a){case \"focusin\":if(me(K)||\"true\"===K.contentEditable)Qe=K,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var Q;if(ae)b:{switch(a){case \"compositionstart\":var L=\"onCompositionStart\";break b;case \"compositionend\":L=\"onCompositionEnd\";break b;\ncase \"compositionupdate\":L=\"onCompositionUpdate\";break b}L=void 0}else ie?ge(a,c)&&(L=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(L=\"onCompositionStart\");L&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==L?\"onCompositionEnd\"===L&&ie&&(Q=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),K=oe(d,L),0<K.length&&(L=new Ld(L,a,null,c,e),g.push({event:L,listeners:K}),Q?L.data=Q:(Q=he(c),null!==Q&&(L.data=Q))));if(Q=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),0<d.length&&(e=new Ld(\"onBeforeInput\",\n\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=Q)}se(g,b)})}function ef(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Ob(a,c),null!=f&&d.unshift(ef(a,f,e)),f=Ob(a,b),null!=f&&d.push(ef(a,f,e)));a=a.return}return d}function gf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction hf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Ob(c,f),null!=k&&g.unshift(ef(c,k,h))):e||(k=Ob(c,f),null!=k&&g.push(ef(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}function jf(){}var kf=null,lf=null;function mf(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nfunction nf(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var of=\"function\"===typeof setTimeout?setTimeout:void 0,pf=\"function\"===typeof clearTimeout?clearTimeout:void 0;function qf(a){1===a.nodeType?a.textContent=\"\":9===a.nodeType&&(a=a.body,null!=a&&(a.textContent=\"\"))}\nfunction rf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}function sf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var tf=0;function uf(a){return{$$typeof:Ga,toString:a,valueOf:a}}var vf=Math.random().toString(36).slice(2),wf=\"__reactFiber$\"+vf,xf=\"__reactProps$\"+vf,ff=\"__reactContainer$\"+vf,yf=\"__reactEvents$\"+vf;\nfunction wc(a){var b=a[wf];if(b)return b;for(var c=a.parentNode;c;){if(b=c[ff]||c[wf]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=sf(a);null!==a;){if(c=a[wf])return c;a=sf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[wf]||a[ff];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(y(33));}function Db(a){return a[xf]||null}\nfunction $e(a){var b=a[yf];void 0===b&&(b=a[yf]=new Set);return b}var zf=[],Af=-1;function Bf(a){return{current:a}}function H(a){0>Af||(a.current=zf[Af],zf[Af]=null,Af--)}function I(a,b){Af++;zf[Af]=a.current;a.current=b}var Cf={},M=Bf(Cf),N=Bf(!1),Df=Cf;\nfunction Ef(a,b){var c=a.type.contextTypes;if(!c)return Cf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function Ff(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Gf(){H(N);H(M)}function Hf(a,b,c){if(M.current!==Cf)throw Error(y(168));I(M,b);I(N,c)}\nfunction If(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(y(108,Ra(b)||\"Unknown\",e));return m({},c,d)}function Jf(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Cf;Df=M.current;I(M,a);I(N,N.current);return!0}function Kf(a,b,c){var d=a.stateNode;if(!d)throw Error(y(169));c?(a=If(a,b,Df),d.__reactInternalMemoizedMergedChildContext=a,H(N),H(M),I(M,a)):H(N);I(N,c)}\nvar Lf=null,Mf=null,Nf=r.unstable_runWithPriority,Of=r.unstable_scheduleCallback,Pf=r.unstable_cancelCallback,Qf=r.unstable_shouldYield,Rf=r.unstable_requestPaint,Sf=r.unstable_now,Tf=r.unstable_getCurrentPriorityLevel,Uf=r.unstable_ImmediatePriority,Vf=r.unstable_UserBlockingPriority,Wf=r.unstable_NormalPriority,Xf=r.unstable_LowPriority,Yf=r.unstable_IdlePriority,Zf={},$f=void 0!==Rf?Rf:function(){},ag=null,bg=null,cg=!1,dg=Sf(),O=1E4>dg?Sf:function(){return Sf()-dg};\nfunction eg(){switch(Tf()){case Uf:return 99;case Vf:return 98;case Wf:return 97;case Xf:return 96;case Yf:return 95;default:throw Error(y(332));}}function fg(a){switch(a){case 99:return Uf;case 98:return Vf;case 97:return Wf;case 96:return Xf;case 95:return Yf;default:throw Error(y(332));}}function gg(a,b){a=fg(a);return Nf(a,b)}function hg(a,b,c){a=fg(a);return Of(a,b,c)}function ig(){if(null!==bg){var a=bg;bg=null;Pf(a)}jg()}\nfunction jg(){if(!cg&&null!==ag){cg=!0;var a=0;try{var b=ag;gg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});ag=null}catch(c){throw null!==ag&&(ag=ag.slice(a+1)),Of(Uf,ig),c;}finally{cg=!1}}}var kg=ra.ReactCurrentBatchConfig;function lg(a,b){if(a&&a.defaultProps){b=m({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var mg=Bf(null),ng=null,og=null,pg=null;function qg(){pg=og=ng=null}\nfunction rg(a){var b=mg.current;H(mg);a.type._context._currentValue=b}function sg(a,b){for(;null!==a;){var c=a.alternate;if((a.childLanes&b)===b)if(null===c||(c.childLanes&b)===b)break;else c.childLanes|=b;else a.childLanes|=b,null!==c&&(c.childLanes|=b);a=a.return}}function tg(a,b){ng=a;pg=og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(ug=!0),a.firstContext=null)}\nfunction vg(a,b){if(pg!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)pg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===og){if(null===ng)throw Error(y(308));og=b;ng.dependencies={lanes:0,firstContext:b,responders:null}}else og=og.next=b}return a._currentValue}var wg=!1;function xg(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}\nfunction yg(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function zg(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}function Ag(a,b){a=a.updateQueue;if(null!==a){a=a.shared;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}}\nfunction Bg(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction Cg(a,b,c,d){var e=a.updateQueue;wg=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var n=a.alternate;if(null!==n){n=n.updateQueue;var A=n.lastBaseUpdate;A!==g&&(null===A?n.firstBaseUpdate=l:A.next=l,n.lastBaseUpdate=k)}}if(null!==f){A=e.baseState;g=0;n=l=k=null;do{h=f.lane;var p=f.eventTime;if((d&h)===h){null!==n&&(n=n.next={eventTime:p,lane:0,tag:f.tag,payload:f.payload,callback:f.callback,\nnext:null});a:{var C=a,x=f;h=b;p=c;switch(x.tag){case 1:C=x.payload;if(\"function\"===typeof C){A=C.call(p,A,h);break a}A=C;break a;case 3:C.flags=C.flags&-4097|64;case 0:C=x.payload;h=\"function\"===typeof C?C.call(p,A,h):C;if(null===h||void 0===h)break a;A=m({},A,h);break a;case 2:wg=!0}}null!==f.callback&&(a.flags|=32,h=e.effects,null===h?e.effects=[f]:h.push(f))}else p={eventTime:p,lane:h,tag:f.tag,payload:f.payload,callback:f.callback,next:null},null===n?(l=n=p,k=A):n=n.next=p,g|=h;f=f.next;if(null===\nf)if(h=e.shared.pending,null===h)break;else f=h.next,h.next=null,e.lastBaseUpdate=h,e.shared.pending=null}while(1);null===n&&(k=A);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=n;Dg|=g;a.lanes=g;a.memoizedState=A}}function Eg(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(y(191,e));e.call(d)}}}var Fg=(new aa.Component).refs;\nfunction Gg(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:m({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Kg={isMounted:function(a){return(a=a._reactInternals)?Zb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=Hg(),d=Ig(a),e=zg(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=\nb);Ag(a,e);Jg(a,d,c)}};function Lg(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Je(c,d)||!Je(e,f):!0}\nfunction Mg(a,b,c){var d=!1,e=Cf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=vg(f):(e=Ff(b)?Df:M.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Ef(a,e):Cf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Kg;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Ng(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Kg.enqueueReplaceState(b,b.state,null)}\nfunction Og(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Fg;xg(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=vg(f):(f=Ff(b)?Df:M.current,e.context=Ef(a,f));Cg(a,c,e,d);e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Gg(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||\n(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Kg.enqueueReplaceState(e,e.state,null),Cg(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4)}var Pg=Array.isArray;\nfunction Qg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(y(309));var d=c.stateNode}if(!d)throw Error(y(147,a));var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Fg&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if(\"string\"!==typeof a)throw Error(y(284));if(!c._owner)throw Error(y(290,a));}return a}\nfunction Rg(a,b){if(\"textarea\"!==a.type)throw Error(y(31,\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b));}\nfunction Sg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.flags=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Tg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags=2,\nc):d;b.flags=2;return c}function g(b){a&&null===b.alternate&&(b.flags=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Ug(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props),d.ref=Qg(a,b,c),d.return=a,d;d=Vg(c.type,c.key,c.props,null,a.mode,d);d.ref=Qg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nWg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function n(a,b,c,d,f){if(null===b||7!==b.tag)return b=Xg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function A(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Ug(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case sa:return c=Vg(b.type,b.key,b.props,null,a.mode,c),c.ref=Qg(a,null,b),c.return=a,c;case ta:return b=Wg(b,a.mode,c),b.return=a,b}if(Pg(b)||La(b))return b=Xg(b,\na.mode,c,null),b.return=a,b;Rg(a,b)}return null}function p(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case sa:return c.key===e?c.type===ua?n(a,b,c.props.children,d,e):k(a,b,c,d):null;case ta:return c.key===e?l(a,b,c,d):null}if(Pg(c)||La(c))return null!==e?null:n(a,b,c,d,null);Rg(a,c)}return null}function C(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||\nnull,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case sa:return a=a.get(null===d.key?c:d.key)||null,d.type===ua?n(b,a,d.props.children,e,d.key):k(b,a,d,e);case ta:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Pg(d)||La(d))return a=a.get(c)||null,n(b,a,d,e,null);Rg(b,d)}return null}function x(e,g,h,k){for(var l=null,t=null,u=g,z=g=0,q=null;null!==u&&z<h.length;z++){u.index>z?(q=u,u=null):q=u.sibling;var n=p(e,u,h[z],k);if(null===n){null===u&&(u=q);break}a&&u&&null===\nn.alternate&&b(e,u);g=f(n,g,z);null===t?l=n:t.sibling=n;t=n;u=q}if(z===h.length)return c(e,u),l;if(null===u){for(;z<h.length;z++)u=A(e,h[z],k),null!==u&&(g=f(u,g,z),null===t?l=u:t.sibling=u,t=u);return l}for(u=d(e,u);z<h.length;z++)q=C(u,e,z,h[z],k),null!==q&&(a&&null!==q.alternate&&u.delete(null===q.key?z:q.key),g=f(q,g,z),null===t?l=q:t.sibling=q,t=q);a&&u.forEach(function(a){return b(e,a)});return l}function w(e,g,h,k){var l=La(h);if(\"function\"!==typeof l)throw Error(y(150));h=l.call(h);if(null==\nh)throw Error(y(151));for(var t=l=null,u=g,z=g=0,q=null,n=h.next();null!==u&&!n.done;z++,n=h.next()){u.index>z?(q=u,u=null):q=u.sibling;var w=p(e,u,n.value,k);if(null===w){null===u&&(u=q);break}a&&u&&null===w.alternate&&b(e,u);g=f(w,g,z);null===t?l=w:t.sibling=w;t=w;u=q}if(n.done)return c(e,u),l;if(null===u){for(;!n.done;z++,n=h.next())n=A(e,n.value,k),null!==n&&(g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);return l}for(u=d(e,u);!n.done;z++,n=h.next())n=C(u,e,z,n.value,k),null!==n&&(a&&null!==n.alternate&&\nu.delete(null===n.key?z:n.key),g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);a&&u.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ua&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case sa:a:{l=f.key;for(k=d;null!==k;){if(k.key===l){switch(k.tag){case 7:if(f.type===ua){c(a,k.sibling);d=e(k,f.props.children);d.return=a;a=d;break a}break;default:if(k.elementType===f.type){c(a,k.sibling);\nd=e(k,f.props);d.ref=Qg(a,k,f);d.return=a;a=d;break a}}c(a,k);break}else b(a,k);k=k.sibling}f.type===ua?(d=Xg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Vg(f.type,f.key,f.props,null,a.mode,h),h.ref=Qg(a,d,f),h.return=a,a=h)}return g(a);case ta:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=\nWg(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=Ug(f,a.mode,h),d.return=a,a=d),g(a);if(Pg(f))return x(a,d,f,h);if(La(f))return w(a,d,f,h);l&&Rg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 22:case 0:case 11:case 15:throw Error(y(152,Ra(a.type)||\"Component\"));}return c(a,d)}}var Yg=Sg(!0),Zg=Sg(!1),$g={},ah=Bf($g),bh=Bf($g),ch=Bf($g);\nfunction dh(a){if(a===$g)throw Error(y(174));return a}function eh(a,b){I(ch,b);I(bh,a);I(ah,$g);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:mb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=mb(b,a)}H(ah);I(ah,b)}function fh(){H(ah);H(bh);H(ch)}function gh(a){dh(ch.current);var b=dh(ah.current);var c=mb(b,a.type);b!==c&&(I(bh,a),I(ah,c))}function hh(a){bh.current===a&&(H(ah),H(bh))}var P=Bf(0);\nfunction ih(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var jh=null,kh=null,lh=!1;\nfunction mh(a,b){var c=nh(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.flags=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function oh(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\nfunction ph(a){if(lh){var b=kh;if(b){var c=b;if(!oh(a,b)){b=rf(c.nextSibling);if(!b||!oh(a,b)){a.flags=a.flags&-1025|2;lh=!1;jh=a;return}mh(jh,c)}jh=a;kh=rf(b.firstChild)}else a.flags=a.flags&-1025|2,lh=!1,jh=a}}function qh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;jh=a}\nfunction rh(a){if(a!==jh)return!1;if(!lh)return qh(a),lh=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!nf(b,a.memoizedProps))for(b=kh;b;)mh(a,b),b=rf(b.nextSibling);qh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(y(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){kh=rf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}kh=null}}else kh=jh?rf(a.stateNode.nextSibling):null;return!0}\nfunction sh(){kh=jh=null;lh=!1}var th=[];function uh(){for(var a=0;a<th.length;a++)th[a]._workInProgressVersionPrimary=null;th.length=0}var vh=ra.ReactCurrentDispatcher,wh=ra.ReactCurrentBatchConfig,xh=0,R=null,S=null,T=null,yh=!1,zh=!1;function Ah(){throw Error(y(321));}function Bh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Ch(a,b,c,d,e,f){xh=f;R=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;vh.current=null===a||null===a.memoizedState?Dh:Eh;a=c(d,e);if(zh){f=0;do{zh=!1;if(!(25>f))throw Error(y(301));f+=1;T=S=null;b.updateQueue=null;vh.current=Fh;a=c(d,e)}while(zh)}vh.current=Gh;b=null!==S&&null!==S.next;xh=0;T=S=R=null;yh=!1;if(b)throw Error(y(300));return a}function Hh(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===T?R.memoizedState=T=a:T=T.next=a;return T}\nfunction Ih(){if(null===S){var a=R.alternate;a=null!==a?a.memoizedState:null}else a=S.next;var b=null===T?R.memoizedState:T.next;if(null!==b)T=b,S=a;else{if(null===a)throw Error(y(310));S=a;a={memoizedState:S.memoizedState,baseState:S.baseState,baseQueue:S.baseQueue,queue:S.queue,next:null};null===T?R.memoizedState=T=a:T=T.next=a}return T}function Jh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Kh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=S,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){e=e.next;d=d.baseState;var h=g=f=null,k=e;do{var l=k.lane;if((xh&l)===l)null!==h&&(h=h.next={lane:0,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null}),d=k.eagerReducer===a?k.eagerState:a(d,k.action);else{var n={lane:l,action:k.action,eagerReducer:k.eagerReducer,\neagerState:k.eagerState,next:null};null===h?(g=h=n,f=d):h=h.next=n;R.lanes|=l;Dg|=l}k=k.next}while(null!==k&&k!==e);null===h?f=d:h.next=g;He(d,b.memoizedState)||(ug=!0);b.memoizedState=d;b.baseState=f;b.baseQueue=h;c.lastRenderedState=d}return[b.memoizedState,c.dispatch]}\nfunction Lh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}\nfunction Mh(a,b,c){var d=b._getVersion;d=d(b._source);var e=b._workInProgressVersionPrimary;if(null!==e)a=e===d;else if(a=a.mutableReadLanes,a=(xh&a)===a)b._workInProgressVersionPrimary=d,th.push(b);if(a)return c(b._source);th.push(b);throw Error(y(350));}\nfunction Nh(a,b,c,d){var e=U;if(null===e)throw Error(y(349));var f=b._getVersion,g=f(b._source),h=vh.current,k=h.useState(function(){return Mh(e,b,c)}),l=k[1],n=k[0];k=T;var A=a.memoizedState,p=A.refs,C=p.getSnapshot,x=A.source;A=A.subscribe;var w=R;a.memoizedState={refs:p,source:b,subscribe:d};h.useEffect(function(){p.getSnapshot=c;p.setSnapshot=l;var a=f(b._source);if(!He(g,a)){a=c(b._source);He(n,a)||(l(a),a=Ig(w),e.mutableReadLanes|=a&e.pendingLanes);a=e.mutableReadLanes;e.entangledLanes|=a;for(var d=\ne.entanglements,h=a;0<h;){var k=31-Vc(h),v=1<<k;d[k]|=a;h&=~v}}},[c,b,d]);h.useEffect(function(){return d(b._source,function(){var a=p.getSnapshot,c=p.setSnapshot;try{c(a(b._source));var d=Ig(w);e.mutableReadLanes|=d&e.pendingLanes}catch(q){c(function(){throw q;})}})},[b,d]);He(C,c)&&He(x,b)&&He(A,d)||(a={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:n},a.dispatch=l=Oh.bind(null,R,a),k.queue=a,k.baseQueue=null,n=Mh(e,b,c),k.memoizedState=k.baseState=n);return n}\nfunction Ph(a,b,c){var d=Ih();return Nh(d,a,b,c)}function Qh(a){var b=Hh();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:a};a=a.dispatch=Oh.bind(null,R,a);return[b.memoizedState,a]}\nfunction Rh(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=R.updateQueue;null===b?(b={lastEffect:null},R.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function Sh(a){var b=Hh();a={current:a};return b.memoizedState=a}function Th(){return Ih().memoizedState}function Uh(a,b,c,d){var e=Hh();R.flags|=a;e.memoizedState=Rh(1|b,c,void 0,void 0===d?null:d)}\nfunction Vh(a,b,c,d){var e=Ih();d=void 0===d?null:d;var f=void 0;if(null!==S){var g=S.memoizedState;f=g.destroy;if(null!==d&&Bh(d,g.deps)){Rh(b,c,f,d);return}}R.flags|=a;e.memoizedState=Rh(1|b,c,f,d)}function Wh(a,b){return Uh(516,4,a,b)}function Xh(a,b){return Vh(516,4,a,b)}function Yh(a,b){return Vh(4,2,a,b)}function Zh(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}\nfunction $h(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Vh(4,2,Zh.bind(null,b,a),c)}function ai(){}function bi(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}function ci(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}\nfunction di(a,b){var c=eg();gg(98>c?98:c,function(){a(!0)});gg(97<c?97:c,function(){var c=wh.transition;wh.transition=1;try{a(!1),b()}finally{wh.transition=c}})}\nfunction Oh(a,b,c){var d=Hg(),e=Ig(a),f={lane:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.pending;null===g?f.next=f:(f.next=g.next,g.next=f);b.pending=f;g=a.alternate;if(a===R||null!==g&&g===R)zh=yh=!0;else{if(0===a.lanes&&(null===g||0===g.lanes)&&(g=b.lastRenderedReducer,null!==g))try{var h=b.lastRenderedState,k=g(h,c);f.eagerReducer=g;f.eagerState=k;if(He(k,h))return}catch(l){}finally{}Jg(a,e,d)}}\nvar Gh={readContext:vg,useCallback:Ah,useContext:Ah,useEffect:Ah,useImperativeHandle:Ah,useLayoutEffect:Ah,useMemo:Ah,useReducer:Ah,useRef:Ah,useState:Ah,useDebugValue:Ah,useDeferredValue:Ah,useTransition:Ah,useMutableSource:Ah,useOpaqueIdentifier:Ah,unstable_isNewReconciler:!1},Dh={readContext:vg,useCallback:function(a,b){Hh().memoizedState=[a,void 0===b?null:b];return a},useContext:vg,useEffect:Wh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Uh(4,2,Zh.bind(null,\nb,a),c)},useLayoutEffect:function(a,b){return Uh(4,2,a,b)},useMemo:function(a,b){var c=Hh();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Hh();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=Oh.bind(null,R,a);return[d.memoizedState,a]},useRef:Sh,useState:Qh,useDebugValue:ai,useDeferredValue:function(a){var b=Qh(a),c=b[0],d=b[1];Wh(function(){var b=wh.transition;\nwh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Qh(!1),b=a[0];a=di.bind(null,a[1]);Sh(a);return[a,b]},useMutableSource:function(a,b,c){var d=Hh();d.memoizedState={refs:{getSnapshot:b,setSnapshot:null},source:a,subscribe:c};return Nh(d,a,b,c)},useOpaqueIdentifier:function(){if(lh){var a=!1,b=uf(function(){a||(a=!0,c(\"r:\"+(tf++).toString(36)));throw Error(y(355));}),c=Qh(b)[1];0===(R.mode&2)&&(R.flags|=516,Rh(5,function(){c(\"r:\"+(tf++).toString(36))},\nvoid 0,null));return b}b=\"r:\"+(tf++).toString(36);Qh(b);return b},unstable_isNewReconciler:!1},Eh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Kh,useRef:Th,useState:function(){return Kh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Kh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Kh(Jh)[0];return[Th().current,\na]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Kh(Jh)[0]},unstable_isNewReconciler:!1},Fh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Lh,useRef:Th,useState:function(){return Lh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Lh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Lh(Jh)[0];return[Th().current,\na]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Lh(Jh)[0]},unstable_isNewReconciler:!1},ei=ra.ReactCurrentOwner,ug=!1;function fi(a,b,c,d){b.child=null===a?Zg(b,null,c,d):Yg(b,a.child,c,d)}function gi(a,b,c,d,e){c=c.render;var f=b.ref;tg(b,e);d=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,d,e);return b.child}\nfunction ii(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!ji(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ki(a,b,g,d,e,f);a=Vg(c.type,null,d,b,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(0===(e&f)&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:Je,c(e,d)&&a.ref===b.ref))return hi(a,b,f);b.flags|=1;a=Tg(g,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction ki(a,b,c,d,e,f){if(null!==a&&Je(a.memoizedProps,d)&&a.ref===b.ref)if(ug=!1,0!==(f&e))0!==(a.flags&16384)&&(ug=!0);else return b.lanes=a.lanes,hi(a,b,f);return li(a,b,c,d,f)}\nfunction mi(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode||\"unstable-defer-without-hiding\"===d.mode)if(0===(b.mode&4))b.memoizedState={baseLanes:0},ni(b,c);else if(0!==(c&1073741824))b.memoizedState={baseLanes:0},ni(b,null!==f?f.baseLanes:c);else return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a},ni(b,a),null;else null!==f?(d=f.baseLanes|c,b.memoizedState=null):d=c,ni(b,d);fi(a,b,e,c);return b.child}\nfunction oi(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=128}function li(a,b,c,d,e){var f=Ff(c)?Df:M.current;f=Ef(b,f);tg(b,e);c=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,c,e);return b.child}\nfunction pi(a,b,c,d,e){if(Ff(c)){var f=!0;Jf(b)}else f=!1;tg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),Mg(b,c,d),Og(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=vg(l):(l=Ff(c)?Df:M.current,l=Ef(b,l));var n=c.getDerivedStateFromProps,A=\"function\"===typeof n||\"function\"===typeof g.getSnapshotBeforeUpdate;A||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Ng(b,g,d,l);wg=!1;var p=b.memoizedState;g.state=p;Cg(b,d,g,e);k=b.memoizedState;h!==d||p!==k||N.current||wg?(\"function\"===typeof n&&(Gg(b,c,n,d),k=b.memoizedState),(h=wg||Lg(b,c,h,d,p,k,l))?(A||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===\ntypeof g.componentDidMount&&(b.flags|=4)):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),d=!1)}else{g=b.stateNode;yg(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:lg(b.type,h);g.props=l;A=b.pendingProps;p=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=vg(k):(k=Ff(c)?Df:M.current,k=Ef(b,k));var C=c.getDerivedStateFromProps;(n=\"function\"===typeof C||\n\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==A||p!==k)&&Ng(b,g,d,k);wg=!1;p=b.memoizedState;g.state=p;Cg(b,d,g,e);var x=b.memoizedState;h!==A||p!==x||N.current||wg?(\"function\"===typeof C&&(Gg(b,c,C,d),x=b.memoizedState),(l=wg||Lg(b,c,l,d,p,x,k))?(n||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,\nx,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,x,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),b.memoizedProps=d,b.memoizedState=x),g.props=d,g.state=x,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||\nh===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),d=!1)}return qi(a,b,c,d,f,e)}\nfunction qi(a,b,c,d,e,f){oi(a,b);var g=0!==(b.flags&64);if(!d&&!g)return e&&Kf(b,c,!1),hi(a,b,f);d=b.stateNode;ei.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Yg(b,a.child,null,f),b.child=Yg(b,null,h,f)):fi(a,b,h,f);b.memoizedState=d.state;e&&Kf(b,c,!0);return b.child}function ri(a){var b=a.stateNode;b.pendingContext?Hf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Hf(a,b.context,!1);eh(a,b.containerInfo)}\nvar si={dehydrated:null,retryLane:0};\nfunction ti(a,b,c){var d=b.pendingProps,e=P.current,f=!1,g;(g=0!==(b.flags&64))||(g=null!==a&&null===a.memoizedState?!1:0!==(e&2));g?(f=!0,b.flags&=-65):null!==a&&null===a.memoizedState||void 0===d.fallback||!0===d.unstable_avoidThisFallback||(e|=1);I(P,e&1);if(null===a){void 0!==d.fallback&&ph(b);a=d.children;e=d.fallback;if(f)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},b.memoizedState=si,a;if(\"number\"===typeof d.unstable_expectedLoadTime)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},\nb.memoizedState=si,b.lanes=33554432,a;c=vi({mode:\"visible\",children:a},b.mode,c,null);c.return=b;return b.child=c}if(null!==a.memoizedState){if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:\n{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}function ui(a,b,c,d){var e=a.mode,f=a.child;b={mode:\"hidden\",children:b};0===(e&2)&&null!==f?(f.childLanes=0,f.pendingProps=b):f=vi(b,e,0,null);c=Xg(c,e,d,null);f.return=a;c.return=a;f.sibling=c;a.child=f;return c}\nfunction xi(a,b,c,d){var e=a.child;a=e.sibling;c=Tg(e,{mode:\"visible\",children:c});0===(b.mode&2)&&(c.lanes=d);c.return=b;c.sibling=null;null!==a&&(a.nextEffect=null,a.flags=8,b.firstEffect=b.lastEffect=a);return b.child=c}\nfunction wi(a,b,c,d,e){var f=b.mode,g=a.child;a=g.sibling;var h={mode:\"hidden\",children:c};0===(f&2)&&b.child!==g?(c=b.child,c.childLanes=0,c.pendingProps=h,g=c.lastEffect,null!==g?(b.firstEffect=c.firstEffect,b.lastEffect=g,g.nextEffect=null):b.firstEffect=b.lastEffect=null):c=Tg(g,h);null!==a?d=Tg(a,d):(d=Xg(d,f,e,null),d.flags|=2);d.return=b;c.return=b;c.sibling=d;b.child=c;return d}function yi(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);sg(a.return,b)}\nfunction zi(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.renderingStartTime=0,g.last=d,g.tail=c,g.tailMode=e,g.lastEffect=f)}\nfunction Ai(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;fi(a,b,d.children,c);d=P.current;if(0!==(d&2))d=d&1|2,b.flags|=64;else{if(null!==a&&0!==(a.flags&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&yi(a,c);else if(19===a.tag)yi(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(P,d);if(0===(b.mode&2))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===ih(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);zi(b,!1,e,c,f,b.lastEffect);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===ih(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}zi(b,!0,c,null,f,b.lastEffect);break;case \"together\":zi(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}\nfunction hi(a,b,c){null!==a&&(b.dependencies=a.dependencies);Dg|=b.lanes;if(0!==(c&b.childLanes)){if(null!==a&&b.child!==a.child)throw Error(y(153));if(null!==b.child){a=b.child;c=Tg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Tg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}return null}var Bi,Ci,Di,Ei;\nBi=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Ci=function(){};\nDi=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;dh(ah.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"option\":e=eb(a,e);d=eb(a,d);f=[];break;case \"select\":e=m({},e,{value:void 0});d=m({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=jf)}vb(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===\nl){var h=e[l];for(g in h)h.hasOwnProperty(g)&&(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ca.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||\n(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,c)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ca.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&G(\"scroll\",a),f||h===k||(f=[])):\"object\"===typeof k&&null!==k&&k.$$typeof===Ga?k.toString():(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",\nc);var l=f;if(b.updateQueue=l)b.flags|=4}};Ei=function(a,b,c,d){c!==d&&(b.flags|=4)};function Fi(a,b){if(!lh)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction Gi(a,b,c){var d=b.pendingProps;switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return Ff(b.type)&&Gf(),null;case 3:fh();H(N);H(M);uh();d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)rh(b)?b.flags|=4:d.hydrate||(b.flags|=256);Ci(b);return null;case 5:hh(b);var e=dh(ch.current);c=b.type;if(null!==a&&null!=b.stateNode)Di(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=128);else{if(!d){if(null===\nb.stateNode)throw Error(y(166));return null}a=dh(ah.current);if(rh(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[wf]=b;d[xf]=f;switch(c){case \"dialog\":G(\"cancel\",d);G(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",d);break;case \"video\":case \"audio\":for(a=0;a<Xe.length;a++)G(Xe[a],d);break;case \"source\":G(\"error\",d);break;case \"img\":case \"image\":case \"link\":G(\"error\",d);G(\"load\",d);break;case \"details\":G(\"toggle\",d);break;case \"input\":Za(d,f);G(\"invalid\",d);break;case \"select\":d._wrapperState=\n{wasMultiple:!!f.multiple};G(\"invalid\",d);break;case \"textarea\":hb(d,f),G(\"invalid\",d)}vb(c,f);a=null;for(var g in f)f.hasOwnProperty(g)&&(e=f[g],\"children\"===g?\"string\"===typeof e?d.textContent!==e&&(a=[\"children\",e]):\"number\"===typeof e&&d.textContent!==\"\"+e&&(a=[\"children\",\"\"+e]):ca.hasOwnProperty(g)&&null!=e&&\"onScroll\"===g&&G(\"scroll\",d));switch(c){case \"input\":Va(d);cb(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=\njf)}d=a;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;a===kb.html&&(a=lb(c));a===kb.html?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[wf]=b;a[xf]=d;Bi(a,b,!1,!1);b.stateNode=a;g=wb(c,d);switch(c){case \"dialog\":G(\"cancel\",a);G(\"close\",a);\ne=d;break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<Xe.length;e++)G(Xe[e],a);e=d;break;case \"source\":G(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":G(\"error\",a);G(\"load\",a);e=d;break;case \"details\":G(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);G(\"invalid\",a);break;case \"option\":e=eb(a,d);break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=m({},d,{value:void 0});G(\"invalid\",a);break;case \"textarea\":hb(a,d);e=\ngb(a,d);G(\"invalid\",a);break;default:e=d}vb(c,e);var h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?tb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&ob(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==c||\"\"!==k)&&pb(a,k):\"number\"===typeof k&&pb(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ca.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&G(\"scroll\",a):null!=k&&qa(a,f,k,g))}switch(c){case \"input\":Va(a);cb(a,d,!1);\nbreak;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=jf)}mf(c,d)&&(b.flags|=4)}null!==b.ref&&(b.flags|=128)}return null;case 6:if(a&&null!=b.stateNode)Ei(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(y(166));\nc=dh(ch.current);dh(ah.current);rh(b)?(d=b.stateNode,c=b.memoizedProps,d[wf]=b,d.nodeValue!==c&&(b.flags|=4)):(d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[wf]=b,b.stateNode=d)}return null;case 13:H(P);d=b.memoizedState;if(0!==(b.flags&64))return b.lanes=c,b;d=null!==d;c=!1;null===a?void 0!==b.memoizedProps.fallback&&rh(b):c=null!==a.memoizedState;if(d&&!c&&0!==(b.mode&2))if(null===a&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(P.current&1))0===V&&(V=3);else{if(0===V||3===V)V=\n4;null===U||0===(Dg&134217727)&&0===(Hi&134217727)||Ii(U,W)}if(d||c)b.flags|=4;return null;case 4:return fh(),Ci(b),null===a&&cf(b.stateNode.containerInfo),null;case 10:return rg(b),null;case 17:return Ff(b.type)&&Gf(),null;case 19:H(P);d=b.memoizedState;if(null===d)return null;f=0!==(b.flags&64);g=d.rendering;if(null===g)if(f)Fi(d,!1);else{if(0!==V||null!==a&&0!==(a.flags&64))for(a=b.child;null!==a;){g=ih(a);if(null!==g){b.flags|=64;Fi(d,!1);f=g.updateQueue;null!==f&&(b.updateQueue=f,b.flags|=4);\nnull===d.lastEffect&&(b.firstEffect=null);b.lastEffect=d.lastEffect;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=2,f.nextEffect=null,f.firstEffect=null,f.lastEffect=null,g=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,\nf.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;I(P,P.current&1|2);return b.child}a=a.sibling}null!==d.tail&&O()>Ji&&(b.flags|=64,f=!0,Fi(d,!1),b.lanes=33554432)}else{if(!f)if(a=ih(g),null!==a){if(b.flags|=64,f=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Fi(d,!0),null===d.tail&&\"hidden\"===d.tailMode&&!g.alternate&&!lh)return b=b.lastEffect=d.lastEffect,null!==b&&(b.nextEffect=null),null}else 2*O()-d.renderingStartTime>Ji&&1073741824!==c&&(b.flags|=\n64,f=!0,Fi(d,!1),b.lanes=33554432);d.isBackwards?(g.sibling=b.child,b.child=g):(c=d.last,null!==c?c.sibling=g:b.child=g,d.last=g)}return null!==d.tail?(c=d.tail,d.rendering=c,d.tail=c.sibling,d.lastEffect=b.lastEffect,d.renderingStartTime=O(),c.sibling=null,b=P.current,I(P,f?b&1|2:b&1),c):null;case 23:case 24:return Ki(),null!==a&&null!==a.memoizedState!==(null!==b.memoizedState)&&\"unstable-defer-without-hiding\"!==d.mode&&(b.flags|=4),null}throw Error(y(156,b.tag));}\nfunction Li(a){switch(a.tag){case 1:Ff(a.type)&&Gf();var b=a.flags;return b&4096?(a.flags=b&-4097|64,a):null;case 3:fh();H(N);H(M);uh();b=a.flags;if(0!==(b&64))throw Error(y(285));a.flags=b&-4097|64;return a;case 5:return hh(a),null;case 13:return H(P),b=a.flags,b&4096?(a.flags=b&-4097|64,a):null;case 19:return H(P),null;case 4:return fh(),null;case 10:return rg(a),null;case 23:case 24:return Ki(),null;default:return null}}\nfunction Mi(a,b){try{var c=\"\",d=b;do c+=Qa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e}}function Ni(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Oi=\"function\"===typeof WeakMap?WeakMap:Map;function Pi(a,b,c){c=zg(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Qi||(Qi=!0,Ri=d);Ni(a,b)};return c}\nfunction Si(a,b,c){c=zg(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){Ni(a,b);return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Ti?Ti=new Set([this]):Ti.add(this),Ni(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}var Ui=\"function\"===typeof WeakSet?WeakSet:Set;\nfunction Vi(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Wi(a,c)}else b.current=null}function Xi(a,b){switch(b.tag){case 0:case 11:case 15:case 22:return;case 1:if(b.flags&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:lg(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}return;case 3:b.flags&256&&qf(b.stateNode.containerInfo);return;case 5:case 6:case 4:case 17:return}throw Error(y(163));}\nfunction Yi(a,b,c){switch(c.tag){case 0:case 11:case 15:case 22:b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{if(3===(a.tag&3)){var d=a.create;a.destroy=d()}a=a.next}while(a!==b)}b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{var e=a;d=e.next;e=e.tag;0!==(e&4)&&0!==(e&1)&&(Zi(c,a),$i(c,a));a=d}while(a!==b)}return;case 1:a=c.stateNode;c.flags&4&&(null===b?a.componentDidMount():(d=c.elementType===c.type?b.memoizedProps:lg(c.type,b.memoizedProps),a.componentDidUpdate(d,\nb.memoizedState,a.__reactInternalSnapshotBeforeUpdate)));b=c.updateQueue;null!==b&&Eg(c,b,a);return;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=c.child.stateNode;break;case 1:a=c.child.stateNode}Eg(c,b,a)}return;case 5:a=c.stateNode;null===b&&c.flags&4&&mf(c.type,c.memoizedProps)&&a.focus();return;case 6:return;case 4:return;case 12:return;case 13:null===c.memoizedState&&(c=c.alternate,null!==c&&(c=c.memoizedState,null!==c&&(c=c.dehydrated,null!==c&&Cc(c))));\nreturn;case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(y(163));}\nfunction aj(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d=d.style,\"function\"===typeof d.setProperty?d.setProperty(\"display\",\"none\",\"important\"):d.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=sb(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if((23!==c.tag&&24!==c.tag||null===c.memoizedState||c===a)&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===\na)break;for(;null===c.sibling;){if(null===c.return||c.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\nfunction bj(a,b){if(Mf&&\"function\"===typeof Mf.onCommitFiberUnmount)try{Mf.onCommitFiberUnmount(Lf,b)}catch(f){}switch(b.tag){case 0:case 11:case 14:case 15:case 22:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var c=a=a.next;do{var d=c,e=d.destroy;d=d.tag;if(void 0!==e)if(0!==(d&4))Zi(b,c);else{d=b;try{e()}catch(f){Wi(d,f)}}c=c.next}while(c!==a)}break;case 1:Vi(b);a=b.stateNode;if(\"function\"===typeof a.componentWillUnmount)try{a.props=b.memoizedProps,a.state=b.memoizedState,a.componentWillUnmount()}catch(f){Wi(b,\nf)}break;case 5:Vi(b);break;case 4:cj(a,b)}}function dj(a){a.alternate=null;a.child=null;a.dependencies=null;a.firstEffect=null;a.lastEffect=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.return=null;a.updateQueue=null}function ej(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction fj(a){a:{for(var b=a.return;null!==b;){if(ej(b))break a;b=b.return}throw Error(y(160));}var c=b;b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(y(161));}c.flags&16&&(pb(b,\"\"),c.flags&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||ej(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.flags&2)continue b;if(null===\nc.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.flags&2)){c=c.stateNode;break a}}d?gj(a,c,b):hj(a,c,b)}\nfunction gj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=jf));else if(4!==d&&(a=a.child,null!==a))for(gj(a,b,c),a=a.sibling;null!==a;)gj(a,b,c),a=a.sibling}\nfunction hj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(hj(a,b,c),a=a.sibling;null!==a;)hj(a,b,c),a=a.sibling}\nfunction cj(a,b){for(var c=b,d=!1,e,f;;){if(!d){d=c.return;a:for(;;){if(null===d)throw Error(y(160));e=d.stateNode;switch(d.tag){case 5:f=!1;break a;case 3:e=e.containerInfo;f=!0;break a;case 4:e=e.containerInfo;f=!0;break a}d=d.return}d=!0}if(5===c.tag||6===c.tag){a:for(var g=a,h=c,k=h;;)if(bj(g,k),null!==k.child&&4!==k.tag)k.child.return=k,k=k.child;else{if(k===h)break a;for(;null===k.sibling;){if(null===k.return||k.return===h)break a;k=k.return}k.sibling.return=k.return;k=k.sibling}f?(g=e,h=c.stateNode,\n8===g.nodeType?g.parentNode.removeChild(h):g.removeChild(h)):e.removeChild(c.stateNode)}else if(4===c.tag){if(null!==c.child){e=c.stateNode.containerInfo;f=!0;c.child.return=c;c=c.child;continue}}else if(bj(a,c),null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return;4===c.tag&&(d=!1)}c.sibling.return=c.return;c=c.sibling}}\nfunction ij(a,b){switch(b.tag){case 0:case 11:case 14:case 15:case 22:var c=b.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do 3===(d.tag&3)&&(a=d.destroy,d.destroy=void 0,void 0!==a&&a()),d=d.next;while(d!==c)}return;case 1:return;case 5:c=b.stateNode;if(null!=c){d=b.memoizedProps;var e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[xf]=d;\"input\"===a&&\"radio\"===d.type&&null!=d.name&&$a(c,d);wb(a,e);b=wb(a,d);for(e=0;e<f.length;e+=\n2){var g=f[e],h=f[e+1];\"style\"===g?tb(c,h):\"dangerouslySetInnerHTML\"===g?ob(c,h):\"children\"===g?pb(c,h):qa(c,g,h,b)}switch(a){case \"input\":ab(c,d);break;case \"textarea\":ib(c,d);break;case \"select\":a=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,f=d.value,null!=f?fb(c,!!d.multiple,f,!1):a!==!!d.multiple&&(null!=d.defaultValue?fb(c,!!d.multiple,d.defaultValue,!0):fb(c,!!d.multiple,d.multiple?[]:\"\",!1))}}}return;case 6:if(null===b.stateNode)throw Error(y(162));b.stateNode.nodeValue=\nb.memoizedProps;return;case 3:c=b.stateNode;c.hydrate&&(c.hydrate=!1,Cc(c.containerInfo));return;case 12:return;case 13:null!==b.memoizedState&&(jj=O(),aj(b.child,!0));kj(b);return;case 19:kj(b);return;case 17:return;case 23:case 24:aj(b,null!==b.memoizedState);return}throw Error(y(163));}function kj(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Ui);b.forEach(function(b){var d=lj.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction mj(a,b){return null!==a&&(a=a.memoizedState,null===a||null!==a.dehydrated)?(b=b.memoizedState,null!==b&&null===b.dehydrated):!1}var nj=Math.ceil,oj=ra.ReactCurrentDispatcher,pj=ra.ReactCurrentOwner,X=0,U=null,Y=null,W=0,qj=0,rj=Bf(0),V=0,sj=null,tj=0,Dg=0,Hi=0,uj=0,vj=null,jj=0,Ji=Infinity;function wj(){Ji=O()+500}var Z=null,Qi=!1,Ri=null,Ti=null,xj=!1,yj=null,zj=90,Aj=[],Bj=[],Cj=null,Dj=0,Ej=null,Fj=-1,Gj=0,Hj=0,Ij=null,Jj=!1;function Hg(){return 0!==(X&48)?O():-1!==Fj?Fj:Fj=O()}\nfunction Ig(a){a=a.mode;if(0===(a&2))return 1;if(0===(a&4))return 99===eg()?1:2;0===Gj&&(Gj=tj);if(0!==kg.transition){0!==Hj&&(Hj=null!==vj?vj.pendingLanes:0);a=Gj;var b=4186112&~Hj;b&=-b;0===b&&(a=4186112&~a,b=a&-a,0===b&&(b=8192));return b}a=eg();0!==(X&4)&&98===a?a=Xc(12,Gj):(a=Sc(a),a=Xc(a,Gj));return a}\nfunction Jg(a,b,c){if(50<Dj)throw Dj=0,Ej=null,Error(y(185));a=Kj(a,b);if(null===a)return null;$c(a,b,c);a===U&&(Hi|=b,4===V&&Ii(a,W));var d=eg();1===b?0!==(X&8)&&0===(X&48)?Lj(a):(Mj(a,c),0===X&&(wj(),ig())):(0===(X&4)||98!==d&&99!==d||(null===Cj?Cj=new Set([a]):Cj.add(a)),Mj(a,c));vj=a}function Kj(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}\nfunction Mj(a,b){for(var c=a.callbackNode,d=a.suspendedLanes,e=a.pingedLanes,f=a.expirationTimes,g=a.pendingLanes;0<g;){var h=31-Vc(g),k=1<<h,l=f[h];if(-1===l){if(0===(k&d)||0!==(k&e)){l=b;Rc(k);var n=F;f[h]=10<=n?l+250:6<=n?l+5E3:-1}}else l<=b&&(a.expiredLanes|=k);g&=~k}d=Uc(a,a===U?W:0);b=F;if(0===d)null!==c&&(c!==Zf&&Pf(c),a.callbackNode=null,a.callbackPriority=0);else{if(null!==c){if(a.callbackPriority===b)return;c!==Zf&&Pf(c)}15===b?(c=Lj.bind(null,a),null===ag?(ag=[c],bg=Of(Uf,jg)):ag.push(c),\nc=Zf):14===b?c=hg(99,Lj.bind(null,a)):(c=Tc(b),c=hg(c,Nj.bind(null,a)));a.callbackPriority=b;a.callbackNode=c}}\nfunction Nj(a){Fj=-1;Hj=Gj=0;if(0!==(X&48))throw Error(y(327));var b=a.callbackNode;if(Oj()&&a.callbackNode!==b)return null;var c=Uc(a,a===U?W:0);if(0===c)return null;var d=c;var e=X;X|=16;var f=Pj();if(U!==a||W!==d)wj(),Qj(a,d);do try{Rj();break}catch(h){Sj(a,h)}while(1);qg();oj.current=f;X=e;null!==Y?d=0:(U=null,W=0,d=V);if(0!==(tj&Hi))Qj(a,0);else if(0!==d){2===d&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),c=Wc(a),0!==c&&(d=Tj(a,c)));if(1===d)throw b=sj,Qj(a,0),Ii(a,c),Mj(a,O()),b;a.finishedWork=\na.current.alternate;a.finishedLanes=c;switch(d){case 0:case 1:throw Error(y(345));case 2:Uj(a);break;case 3:Ii(a,c);if((c&62914560)===c&&(d=jj+500-O(),10<d)){if(0!==Uc(a,0))break;e=a.suspendedLanes;if((e&c)!==c){Hg();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=of(Uj.bind(null,a),d);break}Uj(a);break;case 4:Ii(a,c);if((c&4186112)===c)break;d=a.eventTimes;for(e=-1;0<c;){var g=31-Vc(c);f=1<<g;g=d[g];g>e&&(e=g);c&=~f}c=e;c=O()-c;c=(120>c?120:480>c?480:1080>c?1080:1920>c?1920:3E3>c?3E3:4320>\nc?4320:1960*nj(c/1960))-c;if(10<c){a.timeoutHandle=of(Uj.bind(null,a),c);break}Uj(a);break;case 5:Uj(a);break;default:throw Error(y(329));}}Mj(a,O());return a.callbackNode===b?Nj.bind(null,a):null}function Ii(a,b){b&=~uj;b&=~Hi;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-Vc(b),d=1<<c;a[c]=-1;b&=~d}}\nfunction Lj(a){if(0!==(X&48))throw Error(y(327));Oj();if(a===U&&0!==(a.expiredLanes&W)){var b=W;var c=Tj(a,b);0!==(tj&Hi)&&(b=Uc(a,b),c=Tj(a,b))}else b=Uc(a,0),c=Tj(a,b);0!==a.tag&&2===c&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),b=Wc(a),0!==b&&(c=Tj(a,b)));if(1===c)throw c=sj,Qj(a,0),Ii(a,b),Mj(a,O()),c;a.finishedWork=a.current.alternate;a.finishedLanes=b;Uj(a);Mj(a,O());return null}\nfunction Vj(){if(null!==Cj){var a=Cj;Cj=null;a.forEach(function(a){a.expiredLanes|=24&a.pendingLanes;Mj(a,O())})}ig()}function Wj(a,b){var c=X;X|=1;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function Xj(a,b){var c=X;X&=-2;X|=8;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function ni(a,b){I(rj,qj);qj|=b;tj|=b}function Ki(){qj=rj.current;H(rj)}\nfunction Qj(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,pf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&Gf();break;case 3:fh();H(N);H(M);uh();break;case 5:hh(d);break;case 4:fh();break;case 13:H(P);break;case 19:H(P);break;case 10:rg(d);break;case 23:case 24:Ki()}c=c.return}U=a;Y=Tg(a.current,null);W=qj=tj=b;V=0;sj=null;uj=Hi=Dg=0}\nfunction Sj(a,b){do{var c=Y;try{qg();vh.current=Gh;if(yh){for(var d=R.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}yh=!1}xh=0;T=S=R=null;zh=!1;pj.current=null;if(null===c||null===c.return){V=1;sj=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=W;h.flags|=2048;h.firstEffect=h.lastEffect=null;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k;if(0===(h.mode&2)){var n=h.alternate;n?(h.updateQueue=n.updateQueue,h.memoizedState=n.memoizedState,h.lanes=n.lanes):\n(h.updateQueue=null,h.memoizedState=null)}var A=0!==(P.current&1),p=g;do{var C;if(C=13===p.tag){var x=p.memoizedState;if(null!==x)C=null!==x.dehydrated?!0:!1;else{var w=p.memoizedProps;C=void 0===w.fallback?!1:!0!==w.unstable_avoidThisFallback?!0:A?!1:!0}}if(C){var z=p.updateQueue;if(null===z){var u=new Set;u.add(l);p.updateQueue=u}else z.add(l);if(0===(p.mode&2)){p.flags|=64;h.flags|=16384;h.flags&=-2981;if(1===h.tag)if(null===h.alternate)h.tag=17;else{var t=zg(-1,1);t.tag=2;Ag(h,t)}h.lanes|=1;break a}k=\nvoid 0;h=b;var q=f.pingCache;null===q?(q=f.pingCache=new Oi,k=new Set,q.set(l,k)):(k=q.get(l),void 0===k&&(k=new Set,q.set(l,k)));if(!k.has(h)){k.add(h);var v=Yj.bind(null,f,l,h);l.then(v,v)}p.flags|=4096;p.lanes=b;break a}p=p.return}while(null!==p);k=Error((Ra(h.type)||\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\")}5!==V&&(V=2);k=Mi(k,h);p=\ng;do{switch(p.tag){case 3:f=k;p.flags|=4096;b&=-b;p.lanes|=b;var J=Pi(p,f,b);Bg(p,J);break a;case 1:f=k;var K=p.type,Q=p.stateNode;if(0===(p.flags&64)&&(\"function\"===typeof K.getDerivedStateFromError||null!==Q&&\"function\"===typeof Q.componentDidCatch&&(null===Ti||!Ti.has(Q)))){p.flags|=4096;b&=-b;p.lanes|=b;var L=Si(p,f,b);Bg(p,L);break a}}p=p.return}while(null!==p)}Zj(c)}catch(va){b=va;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}\nfunction Pj(){var a=oj.current;oj.current=Gh;return null===a?Gh:a}function Tj(a,b){var c=X;X|=16;var d=Pj();U===a&&W===b||Qj(a,b);do try{ak();break}catch(e){Sj(a,e)}while(1);qg();X=c;oj.current=d;if(null!==Y)throw Error(y(261));U=null;W=0;return V}function ak(){for(;null!==Y;)bk(Y)}function Rj(){for(;null!==Y&&!Qf();)bk(Y)}function bk(a){var b=ck(a.alternate,a,qj);a.memoizedProps=a.pendingProps;null===b?Zj(a):Y=b;pj.current=null}\nfunction Zj(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&2048)){c=Gi(c,b,qj);if(null!==c){Y=c;return}c=b;if(24!==c.tag&&23!==c.tag||null===c.memoizedState||0!==(qj&1073741824)||0===(c.mode&4)){for(var d=0,e=c.child;null!==e;)d|=e.lanes|e.childLanes,e=e.sibling;c.childLanes=d}null!==a&&0===(a.flags&2048)&&(null===a.firstEffect&&(a.firstEffect=b.firstEffect),null!==b.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=b.firstEffect),a.lastEffect=b.lastEffect),1<b.flags&&(null!==\na.lastEffect?a.lastEffect.nextEffect=b:a.firstEffect=b,a.lastEffect=b))}else{c=Li(b);if(null!==c){c.flags&=2047;Y=c;return}null!==a&&(a.firstEffect=a.lastEffect=null,a.flags|=2048)}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===V&&(V=5)}function Uj(a){var b=eg();gg(99,dk.bind(null,a,b));return null}\nfunction dk(a,b){do Oj();while(null!==yj);if(0!==(X&48))throw Error(y(327));var c=a.finishedWork;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(y(177));a.callbackNode=null;var d=c.lanes|c.childLanes,e=d,f=a.pendingLanes&~e;a.pendingLanes=e;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=e;a.mutableReadLanes&=e;a.entangledLanes&=e;e=a.entanglements;for(var g=a.eventTimes,h=a.expirationTimes;0<f;){var k=31-Vc(f),l=1<<k;e[k]=0;g[k]=-1;h[k]=-1;f&=~l}null!==\nCj&&0===(d&24)&&Cj.has(a)&&Cj.delete(a);a===U&&(Y=U=null,W=0);1<c.flags?null!==c.lastEffect?(c.lastEffect.nextEffect=c,d=c.firstEffect):d=c:d=c.firstEffect;if(null!==d){e=X;X|=32;pj.current=null;kf=fd;g=Ne();if(Oe(g)){if(\"selectionStart\"in g)h={start:g.selectionStart,end:g.selectionEnd};else a:if(h=(h=g.ownerDocument)&&h.defaultView||window,(l=h.getSelection&&h.getSelection())&&0!==l.rangeCount){h=l.anchorNode;f=l.anchorOffset;k=l.focusNode;l=l.focusOffset;try{h.nodeType,k.nodeType}catch(va){h=null;\nbreak a}var n=0,A=-1,p=-1,C=0,x=0,w=g,z=null;b:for(;;){for(var u;;){w!==h||0!==f&&3!==w.nodeType||(A=n+f);w!==k||0!==l&&3!==w.nodeType||(p=n+l);3===w.nodeType&&(n+=w.nodeValue.length);if(null===(u=w.firstChild))break;z=w;w=u}for(;;){if(w===g)break b;z===h&&++C===f&&(A=n);z===k&&++x===l&&(p=n);if(null!==(u=w.nextSibling))break;w=z;z=w.parentNode}w=u}h=-1===A||-1===p?null:{start:A,end:p}}else h=null;h=h||{start:0,end:0}}else h=null;lf={focusedElem:g,selectionRange:h};fd=!1;Ij=null;Jj=!1;Z=d;do try{ek()}catch(va){if(null===\nZ)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Ij=null;Z=d;do try{for(g=a;null!==Z;){var t=Z.flags;t&16&&pb(Z.stateNode,\"\");if(t&128){var q=Z.alternate;if(null!==q){var v=q.ref;null!==v&&(\"function\"===typeof v?v(null):v.current=null)}}switch(t&1038){case 2:fj(Z);Z.flags&=-3;break;case 6:fj(Z);Z.flags&=-3;ij(Z.alternate,Z);break;case 1024:Z.flags&=-1025;break;case 1028:Z.flags&=-1025;ij(Z.alternate,Z);break;case 4:ij(Z.alternate,Z);break;case 8:h=Z;cj(g,h);var J=h.alternate;dj(h);null!==\nJ&&dj(J)}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);v=lf;q=Ne();t=v.focusedElem;g=v.selectionRange;if(q!==t&&t&&t.ownerDocument&&Me(t.ownerDocument.documentElement,t)){null!==g&&Oe(t)&&(q=g.start,v=g.end,void 0===v&&(v=q),\"selectionStart\"in t?(t.selectionStart=q,t.selectionEnd=Math.min(v,t.value.length)):(v=(q=t.ownerDocument||document)&&q.defaultView||window,v.getSelection&&(v=v.getSelection(),h=t.textContent.length,J=Math.min(g.start,h),g=void 0===\ng.end?J:Math.min(g.end,h),!v.extend&&J>g&&(h=g,g=J,J=h),h=Le(t,J),f=Le(t,g),h&&f&&(1!==v.rangeCount||v.anchorNode!==h.node||v.anchorOffset!==h.offset||v.focusNode!==f.node||v.focusOffset!==f.offset)&&(q=q.createRange(),q.setStart(h.node,h.offset),v.removeAllRanges(),J>g?(v.addRange(q),v.extend(f.node,f.offset)):(q.setEnd(f.node,f.offset),v.addRange(q))))));q=[];for(v=t;v=v.parentNode;)1===v.nodeType&&q.push({element:v,left:v.scrollLeft,top:v.scrollTop});\"function\"===typeof t.focus&&t.focus();for(t=\n0;t<q.length;t++)v=q[t],v.element.scrollLeft=v.left,v.element.scrollTop=v.top}fd=!!kf;lf=kf=null;a.current=c;Z=d;do try{for(t=a;null!==Z;){var K=Z.flags;K&36&&Yi(t,Z.alternate,Z);if(K&128){q=void 0;var Q=Z.ref;if(null!==Q){var L=Z.stateNode;switch(Z.tag){case 5:q=L;break;default:q=L}\"function\"===typeof Q?Q(q):Q.current=q}}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Z=null;$f();X=e}else a.current=c;if(xj)xj=!1,yj=a,zj=b;else for(Z=d;null!==Z;)b=\nZ.nextEffect,Z.nextEffect=null,Z.flags&8&&(K=Z,K.sibling=null,K.stateNode=null),Z=b;d=a.pendingLanes;0===d&&(Ti=null);1===d?a===Ej?Dj++:(Dj=0,Ej=a):Dj=0;c=c.stateNode;if(Mf&&\"function\"===typeof Mf.onCommitFiberRoot)try{Mf.onCommitFiberRoot(Lf,c,void 0,64===(c.current.flags&64))}catch(va){}Mj(a,O());if(Qi)throw Qi=!1,a=Ri,Ri=null,a;if(0!==(X&8))return null;ig();return null}\nfunction ek(){for(;null!==Z;){var a=Z.alternate;Jj||null===Ij||(0!==(Z.flags&8)?dc(Z,Ij)&&(Jj=!0):13===Z.tag&&mj(a,Z)&&dc(Z,Ij)&&(Jj=!0));var b=Z.flags;0!==(b&256)&&Xi(a,Z);0===(b&512)||xj||(xj=!0,hg(97,function(){Oj();return null}));Z=Z.nextEffect}}function Oj(){if(90!==zj){var a=97<zj?97:zj;zj=90;return gg(a,fk)}return!1}function $i(a,b){Aj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}function Zi(a,b){Bj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}\nfunction fk(){if(null===yj)return!1;var a=yj;yj=null;if(0!==(X&48))throw Error(y(331));var b=X;X|=32;var c=Bj;Bj=[];for(var d=0;d<c.length;d+=2){var e=c[d],f=c[d+1],g=e.destroy;e.destroy=void 0;if(\"function\"===typeof g)try{g()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}c=Aj;Aj=[];for(d=0;d<c.length;d+=2){e=c[d];f=c[d+1];try{var h=e.create;e.destroy=h()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}for(h=a.current.firstEffect;null!==h;)a=h.nextEffect,h.nextEffect=null,h.flags&8&&(h.sibling=\nnull,h.stateNode=null),h=a;X=b;ig();return!0}function gk(a,b,c){b=Mi(c,b);b=Pi(a,b,1);Ag(a,b);b=Hg();a=Kj(a,1);null!==a&&($c(a,1,b),Mj(a,b))}\nfunction Wi(a,b){if(3===a.tag)gk(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){gk(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d))){a=Mi(b,a);var e=Si(c,a,1);Ag(c,e);e=Hg();c=Kj(c,1);if(null!==c)$c(c,1,e),Mj(c,e);else if(\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d)))try{d.componentDidCatch(b,a)}catch(f){}break}}c=c.return}}\nfunction Yj(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=Hg();a.pingedLanes|=a.suspendedLanes&c;U===a&&(W&c)===c&&(4===V||3===V&&(W&62914560)===W&&500>O()-jj?Qj(a,0):uj|=c);Mj(a,b)}function lj(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=a.mode,0===(b&2)?b=1:0===(b&4)?b=99===eg()?1:2:(0===Gj&&(Gj=tj),b=Yc(62914560&~Gj),0===b&&(b=4194304)));c=Hg();a=Kj(a,b);null!==a&&($c(a,b,c),Mj(a,c))}var ck;\nck=function(a,b,c){var d=b.lanes;if(null!==a)if(a.memoizedProps!==b.pendingProps||N.current)ug=!0;else if(0!==(c&d))ug=0!==(a.flags&16384)?!0:!1;else{ug=!1;switch(b.tag){case 3:ri(b);sh();break;case 5:gh(b);break;case 1:Ff(b.type)&&Jf(b);break;case 4:eh(b,b.stateNode.containerInfo);break;case 10:d=b.memoizedProps.value;var e=b.type._context;I(mg,e._currentValue);e._currentValue=d;break;case 13:if(null!==b.memoizedState){if(0!==(c&b.child.childLanes))return ti(a,b,c);I(P,P.current&1);b=hi(a,b,c);return null!==\nb?b.sibling:null}I(P,P.current&1);break;case 19:d=0!==(c&b.childLanes);if(0!==(a.flags&64)){if(d)return Ai(a,b,c);b.flags|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);I(P,P.current);if(d)break;else return null;case 23:case 24:return b.lanes=0,mi(a,b,c)}return hi(a,b,c)}else ug=!1;b.lanes=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);a=b.pendingProps;e=Ef(b,M.current);tg(b,c);e=Ch(null,b,d,a,e,c);b.flags|=1;if(\"object\"===\ntypeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;b.memoizedState=null;b.updateQueue=null;if(Ff(d)){var f=!0;Jf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;xg(b);var g=d.getDerivedStateFromProps;\"function\"===typeof g&&Gg(b,d,g,a);e.updater=Kg;b.stateNode=e;e._reactInternals=b;Og(b,d,a,c);b=qi(null,b,d,!0,f,c)}else b.tag=0,fi(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;a:{null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);\na=b.pendingProps;f=e._init;e=f(e._payload);b.type=e;f=b.tag=hk(e);a=lg(e,a);switch(f){case 0:b=li(null,b,e,a,c);break a;case 1:b=pi(null,b,e,a,c);break a;case 11:b=gi(null,b,e,a,c);break a;case 14:b=ii(null,b,e,lg(e.type,a),d,c);break a}throw Error(y(306,e,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),li(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),pi(a,b,d,e,c);case 3:ri(b);d=b.updateQueue;if(null===a||null===d)throw Error(y(282));\nd=b.pendingProps;e=b.memoizedState;e=null!==e?e.element:null;yg(a,b);Cg(b,d,null,c);d=b.memoizedState.element;if(d===e)sh(),b=hi(a,b,c);else{e=b.stateNode;if(f=e.hydrate)kh=rf(b.stateNode.containerInfo.firstChild),jh=b,f=lh=!0;if(f){a=e.mutableSourceEagerHydrationData;if(null!=a)for(e=0;e<a.length;e+=2)f=a[e],f._workInProgressVersionPrimary=a[e+1],th.push(f);c=Zg(b,null,d,c);for(b.child=c;c;)c.flags=c.flags&-3|1024,c=c.sibling}else fi(a,b,d,c),sh();b=b.child}return b;case 5:return gh(b),null===a&&\nph(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,nf(d,e)?g=null:null!==f&&nf(d,f)&&(b.flags|=16),oi(a,b),fi(a,b,g,c),b.child;case 6:return null===a&&ph(b),null;case 13:return ti(a,b,c);case 4:return eh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Yg(b,null,d,c):fi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),gi(a,b,d,e,c);case 7:return fi(a,b,b.pendingProps,c),b.child;case 8:return fi(a,b,b.pendingProps.children,\nc),b.child;case 12:return fi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;var h=b.type._context;I(mg,h._currentValue);h._currentValue=f;if(null!==g)if(h=g.value,f=He(h,f)?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0,0===f){if(g.children===e.children&&!N.current){b=hi(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==k){g=h.child;for(var l=\nk.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=zg(-1,c&-c),l.tag=2,Ag(h,l));h.lanes|=c;l=h.alternate;null!==l&&(l.lanes|=c);sg(h.return,c);k.lanes|=c;break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}fi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,tg(b,c),e=vg(e,\nf.unstable_observedBits),d=d(e),b.flags|=1,fi(a,b,d,c),b.child;case 14:return e=b.type,f=lg(e,b.pendingProps),f=lg(e.type,f),ii(a,b,e,f,d,c);case 15:return ki(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),b.tag=1,Ff(d)?(a=!0,Jf(b)):a=!1,tg(b,c),Mg(b,d,e),Og(b,d,e,c),qi(null,b,d,!0,a,c);case 19:return Ai(a,b,c);case 23:return mi(a,b,c);case 24:return mi(a,b,c)}throw Error(y(156,b.tag));\n};function ik(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.flags=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childLanes=this.lanes=0;this.alternate=null}function nh(a,b,c,d){return new ik(a,b,c,d)}function ji(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction hk(a){if(\"function\"===typeof a)return ji(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Aa)return 11;if(a===Da)return 14}return 2}\nfunction Tg(a,b){var c=a.alternate;null===c?(c=nh(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Vg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)ji(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ua:return Xg(c.children,e,f,b);case Ha:g=8;e|=16;break;case wa:g=8;e|=1;break;case xa:return a=nh(12,c,b,e|8),a.elementType=xa,a.type=xa,a.lanes=f,a;case Ba:return a=nh(13,c,b,e),a.type=Ba,a.elementType=Ba,a.lanes=f,a;case Ca:return a=nh(19,c,b,e),a.elementType=Ca,a.lanes=f,a;case Ia:return vi(c,e,f,b);case Ja:return a=nh(24,c,b,e),a.elementType=Ja,a.lanes=f,a;default:if(\"object\"===\ntypeof a&&null!==a)switch(a.$$typeof){case ya:g=10;break a;case za:g=9;break a;case Aa:g=11;break a;case Da:g=14;break a;case Ea:g=16;d=null;break a;case Fa:g=22;break a}throw Error(y(130,null==a?a:typeof a,\"\"));}b=nh(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Xg(a,b,c,d){a=nh(7,a,d,b);a.lanes=c;return a}function vi(a,b,c,d){a=nh(23,a,d,b);a.elementType=Ia;a.lanes=c;return a}function Ug(a,b,c){a=nh(6,a,null,b);a.lanes=c;return a}\nfunction Wg(a,b,c){b=nh(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction jk(a,b,c){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=0;this.eventTimes=Zc(0);this.expirationTimes=Zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=Zc(0);this.mutableSourceEagerHydrationData=null}\nfunction kk(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:ta,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction lk(a,b,c,d){var e=b.current,f=Hg(),g=Ig(e);a:if(c){c=c._reactInternals;b:{if(Zb(c)!==c||1!==c.tag)throw Error(y(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(Ff(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(y(171));}if(1===c.tag){var k=c.type;if(Ff(k)){c=If(c,k,h);break a}}c=h}else c=Cf;null===b.context?b.context=c:b.pendingContext=c;b=zg(f,g);b.payload={element:a};d=void 0===d?null:d;null!==\nd&&(b.callback=d);Ag(e,b);Jg(e,g,f);return g}function mk(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function nk(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function ok(a,b){nk(a,b);(a=a.alternate)&&nk(a,b)}function pk(){return null}\nfunction qk(a,b,c){var d=null!=c&&null!=c.hydrationOptions&&c.hydrationOptions.mutableSources||null;c=new jk(a,b,null!=c&&!0===c.hydrate);b=nh(3,null,null,2===b?7:1===b?3:0);c.current=b;b.stateNode=c;xg(b);a[ff]=c.current;cf(8===a.nodeType?a.parentNode:a);if(d)for(a=0;a<d.length;a++){b=d[a];var e=b._getVersion;e=e(b._source);null==c.mutableSourceEagerHydrationData?c.mutableSourceEagerHydrationData=[b,e]:c.mutableSourceEagerHydrationData.push(b,e)}this._internalRoot=c}\nqk.prototype.render=function(a){lk(a,this._internalRoot,null,null)};qk.prototype.unmount=function(){var a=this._internalRoot,b=a.containerInfo;lk(null,a,null,function(){b[ff]=null})};function rk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}\nfunction sk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new qk(a,0,b?{hydrate:!0}:void 0)}\nfunction tk(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if(\"function\"===typeof e){var h=e;e=function(){var a=mk(g);h.call(a)}}lk(b,g,a,e)}else{f=c._reactRootContainer=sk(c,d);g=f._internalRoot;if(\"function\"===typeof e){var k=e;e=function(){var a=mk(g);k.call(a)}}Xj(function(){lk(b,g,a,e)})}return mk(g)}ec=function(a){if(13===a.tag){var b=Hg();Jg(a,4,b);ok(a,4)}};fc=function(a){if(13===a.tag){var b=Hg();Jg(a,67108864,b);ok(a,67108864)}};\ngc=function(a){if(13===a.tag){var b=Hg(),c=Ig(a);Jg(a,c,b);ok(a,c)}};hc=function(a,b){return b()};\nyb=function(a,b,c){switch(b){case \"input\":ab(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(y(90));Wa(d);ab(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Wj;\nHb=function(a,b,c,d,e){var f=X;X|=4;try{return gg(98,a.bind(null,b,c,d,e))}finally{X=f,0===X&&(wj(),ig())}};Ib=function(){0===(X&49)&&(Vj(),Oj())};Jb=function(a,b){var c=X;X|=2;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}};function uk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!rk(b))throw Error(y(200));return kk(a,b,null,c)}var vk={Events:[Cb,ue,Db,Eb,Fb,Oj,{current:!1}]},wk={findFiberByHostInstance:wc,bundleType:0,version:\"17.0.2\",rendererPackageName:\"react-dom\"};\nvar xk={bundleType:wk.bundleType,version:wk.version,rendererPackageName:wk.rendererPackageName,rendererConfig:wk.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ra.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=cc(a);return null===a?null:a.stateNode},findFiberByHostInstance:wk.findFiberByHostInstance||\npk,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var yk=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!yk.isDisabled&&yk.supportsFiber)try{Lf=yk.inject(xk),Mf=yk}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=vk;exports.createPortal=uk;\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(y(188));throw Error(y(268,Object.keys(a)));}a=cc(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a,b){var c=X;if(0!==(c&48))return a(b);X|=1;try{if(a)return gg(99,a.bind(null,b))}finally{X=c,ig()}};exports.hydrate=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!0,c)};\nexports.render=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!rk(a))throw Error(y(40));return a._reactRootContainer?(Xj(function(){tk(null,null,a,!1,function(){a._reactRootContainer=null;a[ff]=null})}),!0):!1};exports.unstable_batchedUpdates=Wj;exports.unstable_createPortal=function(a,b){return uk(a,b,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)};\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!rk(c))throw Error(y(200));if(null==a||void 0===a._reactInternals)throw Error(y(38));return tk(a,b,c,!1,d)};exports.version=\"17.0.2\";\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/** @license React v17.0.2\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';require(\"object-assign\");var f=require(\"react\"),g=60103;exports.Fragment=60107;if(\"function\"===typeof Symbol&&Symbol.for){var h=Symbol.for;g=h(\"react.element\");exports.Fragment=h(\"react.fragment\")}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,k){var b,d={},e=null,l=null;void 0!==k&&(e=\"\"+k);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(l=a.ref);for(b in a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q;exports.jsxs=q;\n","/** @license React v17.0.2\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=require(\"object-assign\"),n=60103,p=60106;exports.Fragment=60107;exports.StrictMode=60108;exports.Profiler=60114;var q=60109,r=60110,t=60112;exports.Suspense=60113;var u=60115,v=60116;\nif(\"function\"===typeof Symbol&&Symbol.for){var w=Symbol.for;n=w(\"react.element\");p=w(\"react.portal\");exports.Fragment=w(\"react.fragment\");exports.StrictMode=w(\"react.strict_mode\");exports.Profiler=w(\"react.profiler\");q=w(\"react.provider\");r=w(\"react.context\");t=w(\"react.forward_ref\");exports.Suspense=w(\"react.suspense\");u=w(\"react.memo\");v=w(\"react.lazy\")}var x=\"function\"===typeof Symbol&&Symbol.iterator;\nfunction y(a){if(null===a||\"object\"!==typeof a)return null;a=x&&a[x]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}function z(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar A={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},B={};function C(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}C.prototype.isReactComponent={};C.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(z(85));this.updater.enqueueSetState(this,a,b,\"setState\")};C.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction D(){}D.prototype=C.prototype;function E(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}var F=E.prototype=new D;F.constructor=E;l(F,C.prototype);F.isPureReactComponent=!0;var G={current:null},H=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0};\nfunction J(a,b,c){var e,d={},k=null,h=null;if(null!=b)for(e in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)H.call(b,e)&&!I.hasOwnProperty(e)&&(d[e]=b[e]);var g=arguments.length-2;if(1===g)d.children=c;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];d.children=f}if(a&&a.defaultProps)for(e in g=a.defaultProps,g)void 0===d[e]&&(d[e]=g[e]);return{$$typeof:n,type:a,key:k,ref:h,props:d,_owner:G.current}}\nfunction K(a,b){return{$$typeof:n,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function L(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===n}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var M=/\\/+/g;function N(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction O(a,b,c,e,d){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case n:case p:h=!0}}if(h)return h=a,d=d(h),a=\"\"===e?\".\"+N(h,0):e,Array.isArray(d)?(c=\"\",null!=a&&(c=a.replace(M,\"$&/\")+\"/\"),O(d,b,c,\"\",function(a){return a})):null!=d&&(L(d)&&(d=K(d,c+(!d.key||h&&h.key===d.key?\"\":(\"\"+d.key).replace(M,\"$&/\")+\"/\")+a)),b.push(d)),1;h=0;e=\"\"===e?\".\":e+\":\";if(Array.isArray(a))for(var g=\n0;g<a.length;g++){k=a[g];var f=e+N(k,g);h+=O(k,b,c,f,d)}else if(f=y(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=e+N(k,g++),h+=O(k,b,c,f,d);else if(\"object\"===k)throw b=\"\"+a,Error(z(31,\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b));return h}function P(a,b,c){if(null==a)return a;var e=[],d=0;O(a,e,\"\",\"\",function(a){return b.call(c,a,d++)});return e}\nfunction Q(a){if(-1===a._status){var b=a._result;b=b();a._status=0;a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}if(1===a._status)return a._result;throw a._result;}var R={current:null};function S(){var a=R.current;if(null===a)throw Error(z(321));return a}var T={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:G,IsSomeRendererActing:{current:!1},assign:l};\nexports.Children={map:P,forEach:function(a,b,c){P(a,function(){b.apply(this,arguments)},c)},count:function(a){var b=0;P(a,function(){b++});return b},toArray:function(a){return P(a,function(a){return a})||[]},only:function(a){if(!L(a))throw Error(z(143));return a}};exports.Component=C;exports.PureComponent=E;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=T;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(z(267,a));var e=l({},a.props),d=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=G.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)H.call(b,f)&&!I.hasOwnProperty(f)&&(e[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)e.children=c;else if(1<f){g=Array(f);for(var m=0;m<f;m++)g[m]=arguments[m+2];e.children=g}return{$$typeof:n,type:a.type,\nkey:d,ref:k,props:e,_owner:h}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:r,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:q,_context:a};return a.Consumer=a};exports.createElement=J;exports.createFactory=function(a){var b=J.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:t,render:a}};exports.isValidElement=L;\nexports.lazy=function(a){return{$$typeof:v,_payload:{_status:-1,_result:a},_init:Q}};exports.memo=function(a,b){return{$$typeof:u,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return S().useCallback(a,b)};exports.useContext=function(a,b){return S().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return S().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return S().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return S().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return S().useMemo(a,b)};exports.useReducer=function(a,b,c){return S().useReducer(a,b,c)};exports.useRef=function(a){return S().useRef(a)};exports.useState=function(a){return S().useState(a)};exports.version=\"17.0.2\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/** @license React v0.20.2\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f,g,h,k;if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}\nif(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var t=null,u=null,w=function(){if(null!==t)try{var a=exports.unstable_now();t(!0,a);t=null}catch(b){throw setTimeout(w,0),b;}};f=function(a){null!==t?setTimeout(f,0,a):(t=a,setTimeout(w,0))};g=function(a,b){u=setTimeout(a,b)};h=function(){clearTimeout(u)};exports.unstable_shouldYield=function(){return!1};k=exports.unstable_forceFrameRate=function(){}}else{var x=window.setTimeout,y=window.clearTimeout;if(\"undefined\"!==typeof console){var z=\nwindow.cancelAnimationFrame;\"function\"!==typeof window.requestAnimationFrame&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\");\"function\"!==typeof z&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\")}var A=!1,B=null,C=-1,D=5,E=0;exports.unstable_shouldYield=function(){return exports.unstable_now()>=\nE};k=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):D=0<a?Math.floor(1E3/a):5};var F=new MessageChannel,G=F.port2;F.port1.onmessage=function(){if(null!==B){var a=exports.unstable_now();E=a+D;try{B(!0,a)?G.postMessage(null):(A=!1,B=null)}catch(b){throw G.postMessage(null),b;}}else A=!1};f=function(a){B=a;A||(A=!0,G.postMessage(null))};g=function(a,b){C=\nx(function(){a(exports.unstable_now())},b)};h=function(){y(C);C=-1}}function H(a,b){var c=a.length;a.push(b);a:for(;;){var d=c-1>>>1,e=a[d];if(void 0!==e&&0<I(e,b))a[d]=b,a[c]=e,c=d;else break a}}function J(a){a=a[0];return void 0===a?null:a}\nfunction K(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>I(n,c))void 0!==r&&0>I(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>I(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function I(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var L=[],M=[],N=1,O=null,P=3,Q=!1,R=!1,S=!1;\nfunction T(a){for(var b=J(M);null!==b;){if(null===b.callback)K(M);else if(b.startTime<=a)K(M),b.sortIndex=b.expirationTime,H(L,b);else break;b=J(M)}}function U(a){S=!1;T(a);if(!R)if(null!==J(L))R=!0,f(V);else{var b=J(M);null!==b&&g(U,b.startTime-a)}}\nfunction V(a,b){R=!1;S&&(S=!1,h());Q=!0;var c=P;try{T(b);for(O=J(L);null!==O&&(!(O.expirationTime>b)||a&&!exports.unstable_shouldYield());){var d=O.callback;if(\"function\"===typeof d){O.callback=null;P=O.priorityLevel;var e=d(O.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?O.callback=e:O===J(L)&&K(L);T(b)}else K(L);O=J(L)}if(null!==O)var m=!0;else{var n=J(M);null!==n&&g(U,n.startTime-b);m=!1}return m}finally{O=null,P=c,Q=!1}}var W=k;exports.unstable_IdlePriority=5;\nexports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){R||Q||(R=!0,f(V))};exports.unstable_getCurrentPriorityLevel=function(){return P};exports.unstable_getFirstCallbackNode=function(){return J(L)};\nexports.unstable_next=function(a){switch(P){case 1:case 2:case 3:var b=3;break;default:b=P}var c=P;P=b;try{return a()}finally{P=c}};exports.unstable_pauseExecution=function(){};exports.unstable_requestPaint=W;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=P;P=a;try{return b()}finally{P=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:N++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,H(M,a),null===J(L)&&a===J(M)&&(S?h():S=!0,g(U,c-d))):(a.sortIndex=e,H(L,a),R||Q||(R=!0,f(V)));return a};\nexports.unstable_wrapCallback=function(a){var b=P;return function(){var c=P;P=b;try{return a.apply(this,arguments)}finally{P=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","//\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || !objA || typeof objB !== \"object\" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  // Test for A's keys different from B.\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || (ret === void 0 && valueA !== valueB)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","__webpack_require__.nc = undefined;","/**\n * Property helper functions.\n */\n\nfunction checkType(value: any, type: string, name: string): void {\n    const types = type.split('|').map((t) => t.trim());\n    for (let i = 0; i < types.length; i++) {\n        switch (type) {\n            case 'any':\n                return;\n            case 'bigint':\n            case 'boolean':\n            case 'number':\n            case 'string':\n                if (typeof value === type) {\n                    return;\n                }\n        }\n    }\n\n    const error: any = new Error(`invalid value for type ${type}`);\n    error.code = 'INVALID_ARGUMENT';\n    error.argument = `value.${name}`;\n    error.value = value;\n\n    throw error;\n}\n\n/**\n * Resolves to a new object that is a copy of `value`, but with all values resolved.\n *\n * @category Utils\n * @param {Object} value - The object to resolve.\n * @returns {Promise<Object>} The resolved object.\n */\nexport async function resolveProperties<T>(value: { [P in keyof T]: T[P] | Promise<T[P]> }): Promise<T> {\n    const keys = Object.keys(value);\n    const results = await Promise.all(keys.map((k) => Promise.resolve(value[<keyof T>k])));\n    return results.reduce(\n        (accum: any, v, index) => {\n            accum[keys[index]] = v;\n            return accum;\n        },\n        <{ [P in keyof T]: T[P] }>{},\n    );\n}\n\n// Crawl up the constructor chain to find a static method\nexport function getStatic<T>(ctor: any, key: string): T | null {\n    for (let i = 0; i < 32; i++) {\n        if (ctor[key]) {\n            return ctor[key];\n        }\n        if (!ctor.prototype || typeof ctor.prototype !== 'object') {\n            break;\n        }\n        ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n    }\n    return null;\n}\n\n/**\n * Assigns the `values` to `target` as read-only values.\n *\n * It `types` is specified, the values are checked.\n *\n * @category Utils\n * @param {Object} target - The target object to assign to.\n * @param {Object} values - The values to assign.\n * @param {Object} types - The types to check.\n */\nexport function defineProperties<T>(\n    target: T,\n    values: { [K in keyof T]?: T[K] },\n    types?: { [K in keyof T]?: string },\n): void {\n    for (const key in values) {\n        const value = values[key];\n\n        const type = types ? types[key] : null;\n        if (type) {\n            checkType(value, type, key);\n        }\n\n        Object.defineProperty(target, key, { enumerable: true, value, writable: false });\n    }\n}\n","/**\n * All errors in quais include properties to ensure they are both human-readable (i.e. `.message`) and machine-readable\n * (i.e. `.code`).\n *\n * The {@link isError | **isError**} function can be used to check the error `code` and provide a type guard for the\n * properties present on that error interface.\n */\n\nimport { version } from '../_version.js';\n\nimport { defineProperties } from './properties.js';\n\nimport type { TransactionRequest, TransactionReceipt, TransactionResponse } from '../providers/index.js';\n\nimport type { FetchRequest, FetchResponse } from './fetch.js';\nimport { ExternalTransactionResponse } from '../providers/provider.js';\n\n/**\n * An error may contain additional properties, but those must not conflict with any implicit properties.\n *\n * @category Utils\n */\nexport type ErrorInfo<T> = Omit<T, 'code' | 'name' | 'message' | 'shortMessage'> & { shortMessage?: string };\n\nfunction stringify(value: any): any {\n    if (value == null) {\n        return 'null';\n    }\n\n    if (Array.isArray(value)) {\n        return '[ ' + value.map(stringify).join(', ') + ' ]';\n    }\n\n    if (value instanceof Uint8Array) {\n        const HEX = '0123456789abcdef';\n        let result = '0x';\n        for (let i = 0; i < value.length; i++) {\n            result += HEX[value[i] >> 4];\n            result += HEX[value[i] & 0xf];\n        }\n        return result;\n    }\n\n    if (typeof value === 'object' && typeof value.toJSON === 'function') {\n        return stringify(value.toJSON());\n    }\n\n    switch (typeof value) {\n        case 'boolean':\n        case 'symbol':\n            return value.toString();\n        case 'bigint':\n            return BigInt(value).toString();\n        case 'number':\n            return value.toString();\n        case 'string':\n            return JSON.stringify(value);\n        case 'object': {\n            const keys = Object.keys(value);\n            keys.sort();\n            return '{ ' + keys.map((k) => `${stringify(k)}: ${stringify(value[k])}`).join(', ') + ' }';\n        }\n    }\n\n    return `[ COULD NOT SERIALIZE ]`;\n}\n\n/**\n * All errors emitted by quais have an **ErrorCode** to help identify and coalesce errors to simplify programmatic\n * analysis.\n *\n * Each **ErrorCode** is the `code` proerty of a coresponding {@link quaisError | **quaisError**}.\n *\n * **Generic Errors**\n *\n * **`\"UNKNOWN_ERROR\"`** - see {@link UnknownError | **UnknownError**}\n *\n * **`\"NOT_IMPLEMENTED\"`** - see {@link NotImplementedError | **NotImplementedError**}\n *\n * **`\"UNSUPPORTED_OPERATION\"`** - see {@link UnsupportedOperationError | **UnsupportedOperationError**}\n *\n * **`\"NETWORK_ERROR\"`** - see {@link NetworkError | **NetworkError**}\n *\n * **`\"SERVER_ERROR\"`** - see {@link ServerError | **ServerError**}\n *\n * **`\"TIMEOUT\"`** - see {@link TimeoutError | **TimeoutError**}\n *\n * **`\"BAD_DATA\"`** - see {@link BadDataError | **BadDataError**}\n *\n * **`\"CANCELLED\"`** - see {@link CancelledError | **CancelledError**}\n *\n * **Operational Errors**\n *\n * **`\"BUFFER_OVERRUN\"`** - see {@link BufferOverrunError | **BufferOverrunError**}\n *\n * **`\"NUMERIC_FAULT\"`** - see {@link NumericFaultError | **NumericFaultError**}\n *\n * **Argument Errors**\n *\n * **`\"INVALID_ARGUMENT\"`** - see {@link InvalidArgumentError | **InvalidArgumentError**}\n *\n * **`\"MISSING_ARGUMENT\"`** - see {@link MissingArgumentError | **MissingArgumentError**}\n *\n * **`\"UNEXPECTED_ARGUMENT\"`** - see {@link UnexpectedArgumentError | **UnexpectedArgumentError**}\n *\n * **Blockchain Errors**\n *\n * **`\"CALL_EXCEPTION\"`** - see {@link CallExceptionError | **CallExceptionError**}\n *\n * **`\"INSUFFICIENT_FUNDS\"`** - see {@link InsufficientFundsError | **InsufficientFundsError**}\n *\n * **`\"NONCE_EXPIRED\"`** - see{@link NonceExpiredError | **NonceExpiredError**}\n *\n * **`\"REPLACEMENT_UNDERPRICED\"`** - see {@link ReplacementUnderpricedError | **ReplacementUnderpricedError**}\n *\n * **`\"TRANSACTION_REPLACED\"`** - see {@link TransactionReplacedError | **TransactionReplacedError**}\n *\n * **User Interaction Errors**\n *\n * **`\"ACTION_REJECTED\"`** - see {@link ActionRejectedError | **ActionRejectedError**}\n */\nexport type ErrorCode =\n    // Generic Errors\n    | 'UNKNOWN_ERROR'\n    | 'NOT_IMPLEMENTED'\n    | 'UNSUPPORTED_OPERATION'\n    | 'NETWORK_ERROR'\n    | 'SERVER_ERROR'\n    | 'TIMEOUT'\n    | 'BAD_DATA'\n    | 'CANCELLED'\n\n    // Operational Errors\n    | 'BUFFER_OVERRUN'\n    | 'NUMERIC_FAULT'\n\n    // Argument Errors\n    | 'INVALID_ARGUMENT'\n    | 'MISSING_ARGUMENT'\n    | 'UNEXPECTED_ARGUMENT'\n    | 'VALUE_MISMATCH'\n\n    // Blockchain Errors\n    | 'CALL_EXCEPTION'\n    | 'INSUFFICIENT_FUNDS'\n    | 'NONCE_EXPIRED'\n    | 'REPLACEMENT_UNDERPRICED'\n    | 'TRANSACTION_REPLACED'\n    | 'UNCONFIGURED_NAME'\n    | 'OFFCHAIN_FAULT'\n    | 'TRANSACTION_NOT_FOUND'\n    | 'TRANSACTION_ALREADY_KNOWN'\n\n    // User Interaction\n    | 'ACTION_REJECTED'\n\n    // Provider Errors\n    | 'PROVIDER_FAILED_TO_INITIALIZE';\n\n/**\n * All errors in quais include properties to assist in machine-readable errors.\n *\n * @category Utils\n */\n// TODO:\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport interface quaisError<T extends ErrorCode = ErrorCode> extends Error {\n    /**\n     * The string error code.\n     */\n    code: ErrorCode;\n\n    /**\n     * A short message describing the error, with minimal additional details.\n     */\n    shortMessage: string;\n\n    /**\n     * Additional info regarding the error that may be useful.\n     *\n     * This is generally helpful mostly for human-based debugging.\n     */\n    info?: Record<string, any>;\n\n    /**\n     * Any related error.\n     */\n    error?: Error;\n}\n\n// Generic Errors\n\n/**\n * This Error is a catch-all for when there is no way for quais to know what the underlying problem is.\n *\n * @category Utils\n */\nexport interface UnknownError extends quaisError<'UNKNOWN_ERROR'> {\n    [key: string]: any;\n}\n\n/**\n * This Error is mostly used as a stub for functionality that is intended for the future, but is currently not\n * implemented.\n *\n * @category Utils\n */\nexport interface NotImplementedError extends quaisError<'NOT_IMPLEMENTED'> {\n    /**\n     * The attempted operation.\n     */\n    operation: string;\n}\n\n/**\n * This Error indicates that the attempted operation is not supported.\n *\n * This could range from a specific JSON-RPC end-point not supporting a feature to a specific configuration of an object\n * prohibiting the operation.\n *\n * For example, a [Wallet](../classes/Wallet) with no connected [Provider](../interfaces/Provider) is unable to send a\n * transaction.\n *\n * @category Utils\n */\nexport interface UnsupportedOperationError extends quaisError<'UNSUPPORTED_OPERATION'> {\n    /**\n     * The attempted operation.\n     */\n    operation: string;\n}\n\n/**\n * This Error indicates a problem connecting to a network.\n *\n * @category Utils\n */\nexport interface NetworkError extends quaisError<'NETWORK_ERROR'> {\n    /**\n     * The network event.\n     */\n    event: string;\n}\n\n/**\n * This Error indicates there was a problem fetching a resource from a server.\n *\n * @category Utils\n */\nexport interface ServerError extends quaisError<'SERVER_ERROR'> {\n    /**\n     * The requested resource.\n     */\n    request: FetchRequest | string;\n\n    /**\n     * The response received from the server, if available.\n     */\n    response?: FetchResponse;\n}\n\n/**\n * This Error indicates that the timeout duration has expired and that the operation has been implicitly cancelled.\n *\n * The side-effect of the operation may still occur, as this generally means a request has been sent and there has\n * simply been no response to indicate whether it was processed or not.\n *\n * @category Utils\n */\nexport interface TimeoutError extends quaisError<'TIMEOUT'> {\n    /**\n     * The attempted operation.\n     */\n    operation: string;\n\n    /**\n     * The reason.\n     */\n    reason: string;\n\n    /**\n     * The resource request, if available.\n     */\n    request?: FetchRequest;\n}\n\n/**\n * This Error indicates that a provided set of data cannot be correctly interpreted.\n *\n * @category Utils\n */\nexport interface BadDataError extends quaisError<'BAD_DATA'> {\n    /**\n     * The data.\n     */\n    value: any;\n}\n\n/**\n * This Error indicates that the operation was cancelled by a programmatic call, for example to `cancel()`.\n *\n * @category Utils\n */\nexport interface CancelledError extends quaisError<'CANCELLED'> {}\n\n// Operational Errors\n\n/**\n * This Error indicates an attempt was made to read outside the bounds of protected data.\n *\n * Most operations in quais are protected by bounds checks, to mitigate exploits when parsing data.\n *\n * @category Utils\n */\nexport interface BufferOverrunError extends quaisError<'BUFFER_OVERRUN'> {\n    /**\n     * The buffer that was overrun.\n     */\n    buffer: Uint8Array;\n\n    /**\n     * The length of the buffer.\n     */\n    length: number;\n\n    /**\n     * The offset that was requested.\n     */\n    offset: number;\n}\n\n/**\n * This Error indicates an operation which would result in incorrect arithmetic output has occurred.\n *\n * For example, trying to divide by zero or using a `uint8` to store a negative value.\n *\n * @category Utils\n */\nexport interface NumericFaultError extends quaisError<'NUMERIC_FAULT'> {\n    /**\n     * The attempted operation.\n     */\n    operation: string;\n\n    /**\n     * The fault reported.\n     */\n    fault: string;\n\n    /**\n     * The value the operation was attempted against.\n     */\n    value: any;\n}\n\n// Argument Errors\n\n/**\n * This Error indicates an incorrect type or value was passed to a function or method.\n *\n * @category Utils\n */\nexport interface InvalidArgumentError extends quaisError<'INVALID_ARGUMENT'> {\n    /**\n     * The name of the argument.\n     */\n    argument: string;\n\n    /**\n     * The value that was provided.\n     */\n    value: any;\n\n    info?: Record<string, any>;\n}\n\n/**\n * This Error indicates there were too few arguments were provided.\n *\n * @category Utils\n */\nexport interface MissingArgumentError extends quaisError<'MISSING_ARGUMENT'> {\n    /**\n     * The number of arguments received.\n     */\n    count: number;\n\n    /**\n     * The number of arguments expected.\n     */\n    expectedCount: number;\n}\n\n/**\n * This Error indicates too many arguments were provided.\n *\n * @category Utils\n */\nexport interface UnexpectedArgumentError extends quaisError<'UNEXPECTED_ARGUMENT'> {\n    /**\n     * The number of arguments received.\n     */\n    count: number;\n\n    /**\n     * The number of arguments expected.\n     */\n    expectedCount: number;\n}\n\n// Blockchain Errors\n\n/**\n * The action that resulted in the call exception.\n *\n * @category Utils\n */\nexport type CallExceptionAction = 'call' | 'estimateGas' | 'getTransactionResult' | 'sendTransaction' | 'unknown';\n\n/**\n * The related transaction that caused the error.\n *\n * @category Utils\n */\nexport type CallExceptionTransaction = {\n    to: null | string;\n    from?: string;\n    data: string;\n};\n\n/**\n * This **Error** indicates a transaction reverted.\n *\n * @category Utils\n */\nexport interface CallExceptionError extends quaisError<'CALL_EXCEPTION'> {\n    /**\n     * The action being performed when the revert was encountered.\n     */\n    action: CallExceptionAction;\n\n    /**\n     * The revert data returned.\n     */\n    data: null | string;\n\n    /**\n     * A human-readable representation of data, if possible.\n     */\n    reason: null | string;\n\n    /**\n     * The transaction that triggered the exception.\n     */\n    transaction: CallExceptionTransaction;\n\n    /**\n     * The contract invocation details, if available.\n     */\n    invocation: null | {\n        method: string;\n        signature: string;\n        args: Array<any>;\n    };\n\n    /**\n     * The built-in or custom revert error, if available\n     */\n    revert: null | {\n        signature: string;\n        name: string;\n        args: Array<any>;\n    };\n\n    /**\n     * If the error occurred in a transaction that was mined (with a status of `0`), this is the receipt.\n     */\n    receipt?: TransactionReceipt; // @TODO: in v7, make this `null | TransactionReceipt`\n}\n\n/**\n * The sending account has insufficient funds to cover the entire transaction cost.\n *\n * @category Utils\n */\nexport interface InsufficientFundsError extends quaisError<'INSUFFICIENT_FUNDS'> {\n    /**\n     * The transaction.\n     */\n    transaction: TransactionRequest;\n}\n\n/**\n * The sending account has already used this nonce in a transaction that has been included.\n *\n * @category Utils\n */\nexport interface NonceExpiredError extends quaisError<'NONCE_EXPIRED'> {\n    /**\n     * The transaction.\n     */\n    transaction: TransactionRequest;\n}\n\n/**\n * An attempt was made to replace a transaction, but with an insufficient additional fee to afford evicting the old\n * transaction from the memory pool.\n *\n * @category Utils\n */\nexport interface ReplacementUnderpricedError extends quaisError<'REPLACEMENT_UNDERPRICED'> {\n    /**\n     * The transaction.\n     */\n    transaction: TransactionRequest;\n}\n\n/**\n * A pending transaction was replaced by another.\n *\n * @category Utils\n */\nexport interface TransactionReplacedError extends quaisError<'TRANSACTION_REPLACED'> {\n    /**\n     * If the transaction was cancelled, such that the original effects of the transaction cannot be assured.\n     */\n    cancelled: boolean;\n\n    /**\n     * The reason the transaction was replaced.\n     */\n    reason: 'repriced' | 'cancelled' | 'replaced';\n\n    /**\n     * The hash of the replaced transaction.\n     */\n    hash: string;\n\n    /**\n     * The transaction that replaced the transaction.\n     */\n    replacement: TransactionResponse | ExternalTransactionResponse;\n\n    /**\n     * The receipt of the transaction that replace the transaction.\n     */\n    receipt: TransactionReceipt;\n}\n\n/**\n * This Error indicates a request was rejected by the user.\n *\n * In most clients (such as MetaMask), when an operation requires user authorization (such as `signer.sendTransaction`),\n * the client presents a dialog box to the user. If the user denies the request this error is thrown.\n *\n * @category Utils\n */\nexport interface ActionRejectedError extends quaisError<'ACTION_REJECTED'> {\n    /**\n     * The requested action.\n     */\n    action: 'requestAccess' | 'sendTransaction' | 'signMessage' | 'signTransaction' | 'signTypedData' | 'unknown';\n\n    /**\n     * The reason the action was rejected.\n     *\n     * If there is already a pending request, some clients may indicate there is already a `\"pending\"` action. This\n     * prevents an app from spamming the user.\n     */\n    reason: 'expired' | 'rejected' | 'pending';\n}\n\n/**\n * This Error indicates the requested transaction was not found by the node.\n *\n * @category Utils\n */\nexport interface TransactionNotFoundError extends quaisError<'TRANSACTION_NOT_FOUND'> {}\n\n/**\n * This Error indicates the sent transaction is already known to the node.\n *\n * @category Utils\n */\nexport interface TransactionAlreadyKnown extends quaisError<'TRANSACTION_ALREADY_KNOWN'> {}\n\nexport interface ProviderFailedToInitializeError extends quaisError<'PROVIDER_FAILED_TO_INITIALIZE'> {}\n\n// Coding; converts an ErrorCode its Typed Error\n\n/**\n * A conditional type that transforms the {@link ErrorCode | **ErrorCode**} T into its quaisError type.\n *\n * @category Utils\n */\nexport type CodedquaisError<T> = T extends 'UNKNOWN_ERROR'\n    ? UnknownError\n    : T extends 'NOT_IMPLEMENTED'\n      ? NotImplementedError\n      : T extends 'UNSUPPORTED_OPERATION'\n        ? UnsupportedOperationError\n        : T extends 'NETWORK_ERROR'\n          ? NetworkError\n          : T extends 'SERVER_ERROR'\n            ? ServerError\n            : T extends 'TIMEOUT'\n              ? TimeoutError\n              : T extends 'BAD_DATA'\n                ? BadDataError\n                : T extends 'CANCELLED'\n                  ? CancelledError\n                  : T extends 'BUFFER_OVERRUN'\n                    ? BufferOverrunError\n                    : T extends 'NUMERIC_FAULT'\n                      ? NumericFaultError\n                      : T extends 'INVALID_ARGUMENT'\n                        ? InvalidArgumentError\n                        : T extends 'MISSING_ARGUMENT'\n                          ? MissingArgumentError\n                          : T extends 'UNEXPECTED_ARGUMENT'\n                            ? UnexpectedArgumentError\n                            : T extends 'CALL_EXCEPTION'\n                              ? CallExceptionError\n                              : T extends 'INSUFFICIENT_FUNDS'\n                                ? InsufficientFundsError\n                                : T extends 'NONCE_EXPIRED'\n                                  ? NonceExpiredError\n                                  : T extends 'REPLACEMENT_UNDERPRICED'\n                                    ? ReplacementUnderpricedError\n                                    : T extends 'TRANSACTION_REPLACED'\n                                      ? TransactionReplacedError\n                                      : T extends 'ACTION_REJECTED'\n                                        ? ActionRejectedError\n                                        : T extends 'TRANSACTION_NOT_FOUND'\n                                          ? TransactionNotFoundError\n                                          : T extends 'TRANSACTION_ALREADY_KNOWN'\n                                            ? TransactionAlreadyKnown\n                                            : T extends 'PROVIDER_FAILED_TO_INITIALIZE'\n                                              ? ProviderFailedToInitializeError\n                                              : never;\n\n/**\n * Returns true if the `error` matches an error thrown by quais that matches the error `code`.\n *\n * In TypeScript environments, this can be used to check that `error` matches an quaisError type, which means the\n * expected properties will be set.\n *\n * @category Utils\n * @example\n *\n * ```ts\n * try {\n *     // code....\n * } catch (e) {\n *     if (isError(e, 'CALL_EXCEPTION')) {\n *         // The Type Guard has validated this object\n *         console.log(e.data);\n *     }\n * }\n * ```\n *\n * @see [ErrorCodes](api:ErrorCode)\n */\nexport function isError<K extends ErrorCode, T extends CodedquaisError<K>>(error: any, code: K): error is T {\n    return error && (<quaisError>error).code === code;\n}\n\n/**\n * Returns true if `error` is a {@link CallExceptionError | **CallExceptionError**}.\n *\n * @category Utils\n */\nexport function isCallException(error: any): error is CallExceptionError {\n    return isError(error, 'CALL_EXCEPTION');\n}\n\n/**\n * Returns a new Error configured to the format quais emits errors, with the `message`, {@link ErrorCode | **ErrorCode**}\n * `code` and additional properties for the corresponding quaisError.\n *\n * Each error in quais includes the version of quais, a machine-readable {@link ErrorCode | **ErrorCode**}, and depending\n * on `code`, additional required properties. The error message will also include the `message`, quais version, `code`\n * and all additional properties, serialized.\n *\n * @category Utils\n * @param {string} message - The error message.\n * @param {ErrorCode} code - The error code.\n * @param {ErrorInfo<T>} [info] - Additional properties for the error.\n * @returns {T} The new error.\n */\nexport function makeError<K extends ErrorCode, T extends CodedquaisError<K>>(\n    message: string,\n    code: K,\n    info?: ErrorInfo<T>,\n): T {\n    const shortMessage = message;\n\n    {\n        const details: Array<string> = [];\n        if (info) {\n            if ('message' in info || 'code' in info || 'name' in info) {\n                throw new Error(`value will overwrite populated values: ${stringify(info)}`);\n            }\n            for (const key in info) {\n                if (key === 'shortMessage') {\n                    continue;\n                }\n                const value = <any>info[<keyof ErrorInfo<T>>key];\n                details.push(key + '=' + stringify(value));\n            }\n        }\n        details.push(`code=${code}`);\n        details.push(`version=${version}`);\n\n        if (details.length) {\n            message += ' (' + details.join(', ') + ')';\n        }\n    }\n\n    let error;\n    switch (code) {\n        case 'INVALID_ARGUMENT':\n            error = new TypeError(message);\n            break;\n        case 'NUMERIC_FAULT':\n        case 'BUFFER_OVERRUN':\n            error = new RangeError(message);\n            break;\n        default:\n            error = new Error(message);\n    }\n\n    defineProperties<quaisError>(<quaisError>error, { code });\n\n    if (info) {\n        Object.assign(error, info);\n    }\n\n    if ((<any>error).shortMessage == null) {\n        defineProperties<quaisError>(<quaisError>error, { shortMessage });\n    }\n\n    return <T>error;\n}\n\n/**\n * Throws an quaisError with `message`, `code` and additional error `info` when `check` is falsish..\n *\n * @category Utils\n * @param {unknown} check - The value to check.\n * @param {string} message - The error message.\n * @param {ErrorCode} code - The error code.\n * @param {ErrorInfo<T>} [info] - Additional properties for the error.\n * @throws {T} Throws the error if `check` is falsish.\n */\nexport function assert<K extends ErrorCode, T extends CodedquaisError<K>>(\n    check: unknown,\n    message: string,\n    code: K,\n    info?: ErrorInfo<T>,\n): asserts check {\n    if (!check) {\n        throw makeError(message, code, info);\n    }\n}\n\n/**\n * A simple helper to simply ensuring provided arguments match expected constraints, throwing if not.\n *\n * In TypeScript environments, the `check` has been asserted true, so any further code does not need additional\n * compile-time checks.\n *\n * @category Utils\n * @param {unknown} check - The value to check.\n * @param {string} message - The error message.\n * @param {string} name - The name of the argument.\n * @param {unknown} value - The value of the argument.\n * @throws {InvalidArgumentError} Throws if `check` is falsish.\n */\nexport function assertArgument(check: unknown, message: string, name: string, value: unknown): asserts check {\n    assert(check, message, 'INVALID_ARGUMENT', { argument: name, value: value });\n}\n\nexport function assertArgumentCount(count: number, expectedCount: number, message?: string): void {\n    if (message == null) {\n        message = '';\n    }\n    if (message) {\n        message = ': ' + message;\n    }\n\n    assert(count >= expectedCount, 'missing arguemnt' + message, 'MISSING_ARGUMENT', {\n        count: count,\n        expectedCount: expectedCount,\n    });\n\n    assert(count <= expectedCount, 'too many arguemnts' + message, 'UNEXPECTED_ARGUMENT', {\n        count: count,\n        expectedCount: expectedCount,\n    });\n}\n\nconst _normalizeForms = ['NFD', 'NFC', 'NFKD', 'NFKC'].reduce(\n    (accum, form) => {\n        try {\n            // General test for normalize\n            /* c8 ignore start */\n            if ('test'.normalize(form) !== 'test') {\n                throw new Error('bad');\n            }\n            /* c8 ignore stop */\n\n            if (form === 'NFD') {\n                const check = String.fromCharCode(0xe9).normalize('NFD');\n                const expected = String.fromCharCode(0x65, 0x0301);\n                /* c8 ignore start */\n                if (check !== expected) {\n                    throw new Error('broken');\n                }\n                /* c8 ignore stop */\n            }\n\n            accum.push(form);\n            // eslint-disable-next-line no-empty\n        } catch (error) {}\n\n        return accum;\n    },\n    <Array<string>>[],\n);\n\n/**\n * Throws if the normalization `form` is not supported.\n *\n * @category Utils\n * @param {string} form - The normalization form.\n * @throws {UnsupportedOperationError} Throws if the form is not supported.\n */\nexport function assertNormalize(form: string): void {\n    assert(_normalizeForms.indexOf(form) >= 0, 'platform missing String.prototype.normalize', 'UNSUPPORTED_OPERATION', {\n        operation: 'String.prototype.normalize',\n        info: { form },\n    });\n}\n\n/**\n * Many classes use file-scoped values to guard the constructor, making it effectively private. This facilitates that\n * pattern by ensuring the `givenGuard` matches the file-scoped `guard`, throwing if not, indicating the `className%% if\n * provided.\n *\n * @category Utils\n * @param {any} givenGuard - The guard provided to the constructor.\n * @param {any} guard - The file-scoped guard.\n * @param {string} [className] - The class name.\n * @throws {UnsupportedOperationError} Throws if the guards do not match.\n */\nexport function assertPrivate(givenGuard: any, guard: any, className?: string): void {\n    if (className == null) {\n        className = '';\n    }\n    if (givenGuard !== guard) {\n        let method = className,\n            operation = 'new';\n        if (className) {\n            method += '.';\n            operation += ' ' + className;\n        }\n        assert(false, `private constructor; use ${method}from* methods`, 'UNSUPPORTED_OPERATION', {\n            operation,\n        });\n    }\n}\n","/**\n * Some data helpers.\n */\nimport { assert, assertArgument } from './errors.js';\n\n/**\n * A {@link HexString | **HexString**} whose length is even, which ensures it is a valid representation of binary data.\n *\n * @category Utils\n */\nexport type DataHexString = string;\n\n/**\n * A string which is prefixed with `0x` and followed by any number of case-agnostic hexadecimal characters.\n *\n * It must match the regular expression `/0x[0-9A-Fa-f]*\\/`.\n *\n * @category Utils\n */\nexport type HexString = string;\n\n/**\n * An object that can be used to represent binary data.\n *\n * @category Utils\n */\nexport type BytesLike = DataHexString | Uint8Array;\n\n/**\n * Converts a BytesLike value to a Uint8Array.\n *\n * @ignore\n * @category Utils\n * @param {BytesLike} value - The value to convert.\n * @param {string} [name] - The name of the value for error context.\n * @param {boolean} [copy] - Whether to create a copy of the value.\n * @returns {Uint8Array} The converted Uint8Array.\n * @throws {Error} If the value is not a valid BytesLike.\n */\nfunction _getBytes(value: BytesLike, name?: string, copy?: boolean): Uint8Array {\n    if (value instanceof Uint8Array) {\n        if (copy) {\n            return new Uint8Array(value);\n        }\n        return value;\n    }\n\n    if (typeof value === 'string' && value.match(/^0x([0-9a-f][0-9a-f])*$/i)) {\n        const result = new Uint8Array((value.length - 2) / 2);\n        let offset = 2;\n        for (let i = 0; i < result.length; i++) {\n            result[i] = parseInt(value.substring(offset, offset + 2), 16);\n            offset += 2;\n        }\n        return result;\n    }\n\n    assertArgument(false, 'invalid BytesLike value', name || 'value', value);\n}\n\n/**\n * Get a typed Uint8Array for `value`. If already a Uint8Array the original `value` is returned; if a copy is required\n * use {@link getBytesCopy | **getBytesCopy**}.\n *\n * @category Utils\n * @param {BytesLike} value - The value to convert to a Uint8Array.\n * @param {string} [name] - The name of the value for error context.\n * @returns {Uint8Array} The typed Uint8Array.\n */\nexport function getBytes(value: BytesLike, name?: string): Uint8Array {\n    return _getBytes(value, name, false);\n}\n\n/**\n * Get a typed Uint8Array for `value`, creating a copy if necessary to prevent any modifications of the returned value\n * from being reflected elsewhere.\n *\n * @category Utils\n * @param {BytesLike} value - The value to convert to a Uint8Array.\n * @param {string} [name] - The name of the value for error context.\n * @returns {Uint8Array} The typed Uint8Array.\n */\nexport function getBytesCopy(value: BytesLike, name?: string): Uint8Array {\n    return _getBytes(value, name, true);\n}\n\n/**\n * Returns true if `value` is a valid {@link HexString | **HexString**}.\n *\n * If `length` is `true` or a number, it also checks that `value` is a valid {@link DataHexString | **DataHexString**} of\n * `length` (if a number) bytes of data (e.g. `0x1234` is 2 bytes).\n *\n * @category Utils\n * @param {any} value - The value to check.\n * @param {number | boolean} [length] - The expected length of the data.\n * @returns {boolean} True if the value is a valid {@link HexString | **HexString**}.\n */\nexport function isHexString(value: any, length?: number | boolean): value is `0x${string}` {\n    if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n\n    if (typeof length === 'number' && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    if (length === true && value.length % 2 !== 0) {\n        return false;\n    }\n\n    return true;\n}\n\n/**\n * Returns true if `value` is a valid representation of arbitrary data (i.e. a valid\n * {@link DataHexString | **DataHexString**} or a Uint8Array).\n *\n * @category Utils\n * @param {any} value - The value to check.\n * @returns {boolean} True if the value is a valid {@link DataHexString | **DataHexString**}.\n */\nexport function isBytesLike(value: any): value is BytesLike {\n    return isHexString(value, true) || value instanceof Uint8Array;\n}\n\nconst HexCharacters: string = '0123456789abcdef';\n\n/**\n * Returns a {@link DataHexString | **DataHexString**} representation of `data`.\n *\n * @category Utils\n * @param {BytesLike} data - The data to convert to a hex string.\n * @returns {string} The hex string.\n */\nexport function hexlify(data: BytesLike): string {\n    const bytes = getBytes(data);\n\n    let result = '0x';\n    for (let i = 0; i < bytes.length; i++) {\n        const v = bytes[i];\n        result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n    }\n    return result;\n}\n\n/**\n * Returns a {@link DataHexString | **DataHexString** } by concatenating all values within `data`.\n *\n * @category Utils\n * @param {ReadonlyArray<BytesLike>} datas - The data to concatenate.\n * @returns {string} The concatenated data.\n */\nexport function concat(datas: ReadonlyArray<BytesLike>): string {\n    return '0x' + datas.map((d) => hexlify(d).substring(2)).join('');\n}\n\n/**\n * Returns the length of `data`, in bytes.\n *\n * @category Utils\n * @param {BytesLike} data - The data to get the length of.\n * @returns {number} The length of the data.\n */\nexport function dataLength(data: BytesLike): number {\n    if (isHexString(data, true)) {\n        return (data.length - 2) / 2;\n    }\n    return getBytes(data).length;\n}\n\n/**\n * Returns a {@link DataHexString | **DataHexString** } by slicing `data` from the `start` offset to the `end` offset.\n *\n * By default `start` is 0 and `end` is the length of `data`.\n *\n * @category Utils\n * @param {BytesLike} data - The data to slice.\n * @param {number} [start] - The start offset.\n * @param {number} [end] - The end offset.\n * @returns {string} The sliced data.\n * @throws {Error} If the end offset is beyond the data bounds.\n */\nexport function dataSlice(data: BytesLike, start?: number, end?: number): string {\n    const bytes = getBytes(data);\n    if (end != null && end > bytes.length) {\n        assert(false, 'cannot slice beyond data bounds', 'BUFFER_OVERRUN', {\n            buffer: bytes,\n            length: bytes.length,\n            offset: end,\n        });\n    }\n    return hexlify(bytes.slice(start == null ? 0 : start, end == null ? bytes.length : end));\n}\n\n/**\n * Return the {@link DataHexString | **DataHexString**} result by stripping all **leading** zero bytes from `data`.\n *\n * @category Utils\n * @param {BytesLike} data - The data to strip.\n * @returns {string} The stripped data.\n */\nexport function stripZerosLeft(data: BytesLike): string {\n    let bytes = hexlify(data).substring(2);\n    while (bytes.startsWith('00')) {\n        bytes = bytes.substring(2);\n    }\n    return '0x' + bytes;\n}\n\n/**\n * Pads the data to the specified length.\n *\n * @ignore\n * @category Utils\n * @param {BytesLike} data - The data to pad.\n * @param {number} length - The length to pad to.\n * @param {boolean} left - Whether to pad on the left.\n * @returns {string} The padded data.\n * @throws {Error} If the padding exceeds data length.\n */\nfunction zeroPad(data: BytesLike, length: number, left: boolean): string {\n    const bytes = getBytes(data);\n    assert(length >= bytes.length, 'padding exceeds data length', 'BUFFER_OVERRUN', {\n        buffer: new Uint8Array(bytes),\n        length: length,\n        offset: length + 1,\n    });\n\n    const result = new Uint8Array(length);\n    result.fill(0);\n    if (left) {\n        result.set(bytes, length - bytes.length);\n    } else {\n        result.set(bytes, 0);\n    }\n\n    return hexlify(result);\n}\n\n/**\n * Return the {@link DataHexString | **DataHexString**} of `data` padded on the **left** to `length` bytes.\n *\n * If `data` already exceeds `length`, a [BufferOverrunError](../interfaces/BufferOverrunError) is thrown.\n *\n * This pads data the same as **values** are in Solidity (e.g. `uint128`).\n *\n * @category Utils\n * @param {BytesLike} data - The data to pad.\n * @param {number} length - The length to pad to.\n * @returns {string} The padded data.\n */\nexport function zeroPadValue(data: BytesLike, length: number): string {\n    return zeroPad(data, length, true);\n}\n\n/**\n * Return the {@link DataHexString | **DataHexString**} of `data` padded on the **right** to `length` bytes.\n *\n * If `data` already exceeds %%length%%, a [BufferOverrunError](../interfaces/BufferOverrunError) is thrown.\n *\n * This pads data the same as **bytes** are in Solidity (e.g. `bytes16`).\n *\n * @category Utils\n * @param {BytesLike} data - The data to pad.\n * @param {number} length - The length to pad to.\n * @returns {string} The padded data.\n */\nexport function zeroPadBytes(data: BytesLike, length: number): string {\n    return zeroPad(data, length, false);\n}\n\n/**\n * XOR two Uint8Array values.\n *\n * @category Utils\n * @param {Uint8Array} a - The first Uint8Array.\n * @param {Uint8Array} b - The second Uint8Array.\n * @returns {Uint8Array} The XOR result.\n */\nexport function xorUint8Arrays(a: Uint8Array, b: Uint8Array): Uint8Array {\n    if (a.length !== b.length) {\n        throw new Error('Uint8Arrays are not of the same length');\n    }\n\n    const result = new Uint8Array(a.length);\n\n    // eslint-disable-next-line\n    for (let i = 0; i < a.length; i++) {\n        result[i] = a[i] ^ b[i];\n    }\n\n    return result;\n}\n","/**\n * Some mathematic operations.\n */\nimport { hexlify, isBytesLike } from './data.js';\nimport { assert, assertArgument } from './errors.js';\n\nimport type { BytesLike } from './data.js';\n\n/**\n * Any type that can be used where a numeric value is needed.\n *\n * @category Utils\n */\nexport type Numeric = number | bigint;\n\n/**\n * Any type that can be used where a big number is needed.\n *\n * @category Utils\n */\nexport type BigNumberish = string | Numeric;\n\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\n\n//const BN_Max256 = (BN_1 << BigInt(256)) - BN_1;\n\n// IEEE 754 support 53-bits of mantissa\nconst maxValue = 0x1fffffffffffff;\n\n/**\n * Convert `value` from a twos-compliment representation of `width` bits to its value.\n *\n * If the highest bit is `1`, the result will be negative.\n *\n * @category Utils\n * @param {BigNumberish} _value - The value to convert.\n * @param {Numeric} _width - The width of the value in bits.\n * @returns {bigint} The value.\n * @throws {Error} If the value is too large for the width.\n */\nexport function fromTwos(_value: BigNumberish, _width: Numeric): bigint {\n    const value = getUint(_value, 'value');\n    const width = BigInt(getNumber(_width, 'width'));\n\n    assert(value >> width === BN_0, 'overflow', 'NUMERIC_FAULT', {\n        operation: 'fromTwos',\n        fault: 'overflow',\n        value: _value,\n    });\n\n    // Top bit set; treat as a negative value\n    if (value >> (width - BN_1)) {\n        const mask = (BN_1 << width) - BN_1;\n        return -((~value & mask) + BN_1);\n    }\n\n    return value;\n}\n\n/**\n * Convert `value` to a twos-compliment representation of `width` bits.\n *\n * The result will always be positive.\n *\n * @category Utils\n * @param {BigNumberish} _value - The value to convert.\n * @param {Numeric} _width - The width of the value in bits.\n * @returns {bigint} The value.\n * @throws {Error} If the value is too large for the width.\n */\nexport function toTwos(_value: BigNumberish, _width: Numeric): bigint {\n    let value = getBigInt(_value, 'value');\n    const width = BigInt(getNumber(_width, 'width'));\n\n    const limit = BN_1 << (width - BN_1);\n\n    if (value < BN_0) {\n        value = -value;\n        assert(value <= limit, 'too low', 'NUMERIC_FAULT', {\n            operation: 'toTwos',\n            fault: 'overflow',\n            value: _value,\n        });\n        const mask = (BN_1 << width) - BN_1;\n        return (~value & mask) + BN_1;\n    } else {\n        assert(value < limit, 'too high', 'NUMERIC_FAULT', {\n            operation: 'toTwos',\n            fault: 'overflow',\n            value: _value,\n        });\n    }\n\n    return value;\n}\n\n/**\n * Mask `value` with a bitmask of `bits` ones.\n *\n * @category Utils\n * @param {BigNumberish} _value - The value to mask.\n * @param {Numeric} _bits - The number of bits to mask.\n * @returns {bigint} The masked value.\n */\nexport function mask(_value: BigNumberish, _bits: Numeric): bigint {\n    const value = getUint(_value, 'value');\n    const bits = BigInt(getNumber(_bits, 'bits'));\n    return value & ((BN_1 << bits) - BN_1);\n}\n\n/**\n * Gets a BigInt from `value`. If it is an invalid value for a BigInt, then an ArgumentError will be thrown for `name`.\n *\n * @category Utils\n * @param {BigNumberish} value - The value to convert.\n * @param {string} name - The name of the value.\n * @returns {bigint} The value.\n */\nexport function getBigInt(value: BigNumberish, name?: string): bigint {\n    switch (typeof value) {\n        case 'bigint':\n            return value;\n        case 'number':\n            assertArgument(Number.isInteger(value), 'underflow', name || 'value', value);\n            assertArgument(value >= -maxValue && value <= maxValue, 'overflow', name || 'value', value);\n            return BigInt(value);\n        case 'string':\n            try {\n                if (value === '') {\n                    throw new Error('empty string');\n                }\n                if (value[0] === '-' && value[1] !== '-') {\n                    return -BigInt(value.substring(1));\n                }\n                return BigInt(value);\n            } catch (e: any) {\n                assertArgument(false, `invalid BigNumberish string: ${e.message}`, name || 'value', value);\n            }\n    }\n    assertArgument(false, 'invalid BigNumberish value', name || 'value', value);\n}\n\n/**\n * Returns absolute value of bigint `value`.\n *\n * @category Utils\n * @param {BigNumberish} value - The value to convert.\n * @returns {bigint} The absolute value.\n */\nexport function bigIntAbs(value: BigNumberish): bigint {\n    value = getBigInt(value);\n\n    // if value is negative (including -0), return -value, else return value\n    if (value === -BN_0 || value < BN_0) {\n        return -value;\n    }\n    return value;\n}\n\n/**\n * Returns `value` as a bigint, validating it is valid as a bigint value and that it is positive.\n *\n * @category Utils\n * @param {BigNumberish} value - The value to convert.\n * @param {string} name - The name of the value.\n * @returns {bigint} The value.\n * @throws {Error} If the value is negative.\n */\nexport function getUint(value: BigNumberish, name?: string): bigint {\n    const result = getBigInt(value, name);\n    assert(result >= BN_0, 'unsigned value cannot be negative', 'NUMERIC_FAULT', {\n        fault: 'overflow',\n        operation: 'getUint',\n        value,\n    });\n    return result;\n}\n\nconst Nibbles = '0123456789abcdef';\n\n/**\n * Converts `value` to a BigInt. If `value` is a Uint8Array, it is treated as Big Endian data.\n *\n * @category Utils\n * @param {BigNumberish | Uint8Array} value - The value to convert.\n * @returns {bigint} The value.\n */\nexport function toBigInt(value: BigNumberish | Uint8Array): bigint {\n    if (value instanceof Uint8Array) {\n        let result = '0x0';\n        for (const v of value) {\n            result += Nibbles[v >> 4];\n            result += Nibbles[v & 0x0f];\n        }\n        return BigInt(result);\n    }\n\n    return getBigInt(value);\n}\n\n/**\n * Gets a number from `value`. If it is an invalid value for a number, then an ArgumentError will be thrown for `name`.\n *\n * @category Utils\n * @param {BigNumberish} value - The value to convert.\n * @param {string} name - The name of the value.\n * @returns {number} The value.\n * @throws {Error} If the value is invalid.\n * @throws {Error} If the value is too large.\n */\nexport function getNumber(value: BigNumberish, name?: string): number {\n    switch (typeof value) {\n        case 'bigint':\n            assertArgument(value >= -maxValue && value <= maxValue, 'overflow', name || 'value', value);\n            return Number(value);\n        case 'number':\n            assertArgument(Number.isInteger(value), 'underflow', name || 'value', value);\n            assertArgument(value >= -maxValue && value <= maxValue, 'overflow', name || 'value', value);\n            return value;\n        case 'string':\n            try {\n                if (value === '') {\n                    throw new Error('empty string');\n                }\n                return getNumber(BigInt(value), name);\n            } catch (e: any) {\n                assertArgument(false, `invalid numeric string: ${e.message}`, name || 'value', value);\n            }\n    }\n    assertArgument(false, 'invalid numeric value', name || 'value', value);\n}\n\n/**\n * Converts `value` to a number. If `value` is a Uint8Array, it is treated as Big Endian data. Throws if the value is\n * not safe.\n *\n * @category Utils\n * @param {BigNumberish | Uint8Array} value - The value to convert.\n * @returns {number} The value.\n * @throws {Error} If the value is not safe to convert to a number.\n */\nexport function toNumber(value: BigNumberish | Uint8Array): number {\n    return getNumber(toBigInt(value));\n}\n\n/**\n * Converts `value` to a Big Endian hexstring, optionally padded to `width` bytes.\n *\n * @category Utils\n * @param {BigNumberish} _value - The value to convert.\n * @param {Numeric} _width - The width of the value in bytes.\n * @returns {string} The hexstring.\n * @throws {Error} If the value exceeds the width.\n */\nexport function toBeHex(_value: BigNumberish, _width?: Numeric): string {\n    const value = getUint(_value, 'value');\n\n    let result = value.toString(16);\n\n    if (_width == null) {\n        // Ensure the value is of even length\n        if (result.length % 2) {\n            result = '0' + result;\n        }\n    } else {\n        const width = getNumber(_width, 'width');\n        assert(width * 2 >= result.length, `value exceeds width (${width} bytes)`, 'NUMERIC_FAULT', {\n            operation: 'toBeHex',\n            fault: 'overflow',\n            value: _value,\n        });\n\n        // Pad the value to the required width\n        while (result.length < width * 2) {\n            result = '0' + result;\n        }\n    }\n\n    return '0x' + result;\n}\n\n/**\n * Converts `value` to a Big Endian Uint8Array.\n *\n * @category Utils\n * @param {BigNumberish} _value - The value to convert.\n * @returns {Uint8Array} The value.\n */\nexport function toBeArray(_value: BigNumberish): Uint8Array {\n    const value = getUint(_value, 'value');\n\n    if (value === BN_0) {\n        return new Uint8Array([]);\n    }\n\n    let hex = value.toString(16);\n    if (hex.length % 2) {\n        hex = '0' + hex;\n    }\n\n    const result = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < result.length; i++) {\n        const offset = i * 2;\n        result[i] = parseInt(hex.substring(offset, offset + 2), 16);\n    }\n\n    return result;\n}\n\n/**\n * Returns a `HexString` for `value` safe to use as a Quantity.\n *\n * A Quantity does not have and leading 0 values unless the value is the literal value `0x0`. This is most commonly used\n * for JSSON-RPC numeric values.\n *\n * @category Utils\n * @param {BigNumberish | Uint8Array} value - The value to convert.\n * @returns {string} The quantity.\n */\nexport function toQuantity(value: BytesLike | BigNumberish): string {\n    let result = hexlify(isBytesLike(value) ? value : toBeArray(value)).substring(2);\n    while (result.startsWith('0')) {\n        result = result.substring(1);\n    }\n    if (result === '') {\n        result = '0';\n    }\n    return '0x' + result;\n}\n","import {\n    defineProperties,\n    concat,\n    getBytesCopy,\n    getNumber,\n    hexlify,\n    toBeArray,\n    toBigInt,\n    toNumber,\n    assert,\n    assertArgument,\n} from '../../utils/index.js';\n\nimport type { BigNumberish, BytesLike } from '../../utils/index.js';\n\n/**\n * @ignore\n */\nexport const WordSize: number = 32;\nconst Padding = new Uint8Array(WordSize);\n\n// Properties used to immediate pass through to the underlying object\n// - `then` is used to detect if an object is a Promise for await\nconst passProperties = ['then'];\n\nconst _guard = {};\n\nfunction throwError(name: string, error: Error): never {\n    const wrapped = new Error(`deferred error during ABI decoding triggered accessing ${name}`);\n    (<any>wrapped).error = error;\n    throw wrapped;\n}\n\n/**\n * A {@link Result | **Result**} is a sub-class of Array, which allows accessing any of its values either positionally by\n * its index or, if keys are provided by its name.\n *\n * @category Application Binary Interface\n */\nexport class Result extends Array<any> {\n    readonly #names: ReadonlyArray<null | string>;\n\n    [K: string | number]: any;\n\n    /**\n     * @ignore\n     */\n    constructor(...args: Array<any>) {\n        // To properly sub-class Array so the other built-in\n        // functions work, the constructor has to behave fairly\n        // well. So, in the event we are created via fromItems()\n        // we build the read-only Result object we want, but on\n        // any other input, we use the default constructor\n\n        // constructor(guard: any, items: Array<any>, keys?: Array<null | string>);\n        const guard = args[0];\n        let items: Array<any> = args[1];\n        let names: Array<null | string> = (args[2] || []).slice();\n\n        let wrap = true;\n        if (guard !== _guard) {\n            items = args;\n            names = [];\n            wrap = false;\n        }\n\n        // Can't just pass in ...items since an array of length 1\n        // is a special case in the super.\n        super(items.length);\n        items.forEach((item, index) => {\n            this[index] = item;\n        });\n\n        // Find all unique keys\n        const nameCounts = names.reduce(\n            (accum, name) => {\n                if (typeof name === 'string') {\n                    accum.set(name, (accum.get(name) || 0) + 1);\n                }\n                return accum;\n            },\n            <Map<string, number>>new Map(),\n        );\n\n        // Remove any key thats not unique\n        this.#names = Object.freeze(\n            items.map((item, index) => {\n                const name = names[index];\n                if (name != null && nameCounts.get(name) === 1) {\n                    return name;\n                }\n                return null;\n            }),\n        );\n\n        if (!wrap) {\n            return;\n        }\n\n        // A wrapped Result is immutable\n        Object.freeze(this);\n\n        // Proxy indices and names so we can trap deferred errors\n        return new Proxy(this, {\n            get: (target, prop, receiver) => {\n                if (typeof prop === 'string') {\n                    // Index accessor\n                    if (prop.match(/^[0-9]+$/)) {\n                        const index = getNumber(prop, '%index');\n                        if (index < 0 || index >= this.length) {\n                            throw new RangeError('out of result range');\n                        }\n\n                        const item = target[index];\n                        if (item instanceof Error) {\n                            throwError(`index ${index}`, item);\n                        }\n                        return item;\n                    }\n\n                    // Pass important checks (like `then` for Promise) through\n                    if (passProperties.indexOf(prop) >= 0) {\n                        return Reflect.get(target, prop, receiver);\n                    }\n\n                    const value = target[prop];\n                    if (value instanceof Function) {\n                        // Make sure functions work with private variables\n                        // See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy#no_private_property_forwarding\n                        return function (this: any, ...args: Array<any>) {\n                            return value.apply(this === receiver ? target : this, args);\n                        };\n                    } else if (!(prop in target)) {\n                        // Possible name accessor\n                        return target.getValue.apply(this === receiver ? target : this, [prop]);\n                    }\n                }\n\n                return Reflect.get(target, prop, receiver);\n            },\n        });\n    }\n\n    /**\n     * Returns the Result as a normal Array.\n     *\n     * This will throw if there are any outstanding deferred errors.\n     */\n    toArray(): Array<any> {\n        const result: Array<any> = [];\n        this.forEach((item, index) => {\n            if (item instanceof Error) {\n                throwError(`index ${index}`, item);\n            }\n            result.push(item);\n        });\n        return result;\n    }\n\n    /**\n     * Returns the Result as an Object with each name-value pair.\n     *\n     * This will throw if any value is unnamed, or if there are any outstanding deferred errors.\n     */\n    toObject(): Record<string, any> {\n        return this.#names.reduce(\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            (accum, name, index) => {\n                assert(name != null, 'value at index ${ index } unnamed', 'UNSUPPORTED_OPERATION', {\n                    operation: 'toObject()',\n                });\n\n                // Add values for names that don't conflict\n                if (!(name in accum)) {\n                    accum[name] = this.getValue(name);\n                }\n\n                return accum;\n            },\n            <Record<string, any>>{},\n        );\n    }\n\n    /**\n     * @ignore\n     */\n    slice(start?: number | undefined, end?: number | undefined): Result {\n        if (start == null) {\n            start = 0;\n        }\n        if (start < 0) {\n            start += this.length;\n            if (start < 0) {\n                start = 0;\n            }\n        }\n\n        if (end == null) {\n            end = this.length;\n        }\n        if (end < 0) {\n            end += this.length;\n            if (end < 0) {\n                end = 0;\n            }\n        }\n        if (end > this.length) {\n            end = this.length;\n        }\n\n        const result: Array<any> = [],\n            names: Array<null | string> = [];\n        for (let i = start; i < end; i++) {\n            result.push(this[i]);\n            names.push(this.#names[i]);\n        }\n\n        return new Result(_guard, result, names);\n    }\n\n    /**\n     * @ignore\n     */\n    filter(callback: (el: any, index: number, array: Result) => boolean, thisArg?: any): Result {\n        const result: Array<any> = [],\n            names: Array<null | string> = [];\n        for (let i = 0; i < this.length; i++) {\n            const item = this[i];\n            if (item instanceof Error) {\n                throwError(`index ${i}`, item);\n            }\n\n            if (callback.call(thisArg, item, i, this)) {\n                result.push(item);\n                names.push(this.#names[i]);\n            }\n        }\n\n        return new Result(_guard, result, names);\n    }\n\n    /**\n     * @ignore\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-constraint\n    map<T extends any = any>(callback: (el: any, index: number, array: Result) => T, thisArg?: any): Array<T> {\n        const result: Array<T> = [];\n        for (let i = 0; i < this.length; i++) {\n            const item = this[i];\n            if (item instanceof Error) {\n                throwError(`index ${i}`, item);\n            }\n\n            result.push(callback.call(thisArg, item, i, this));\n        }\n\n        return result;\n    }\n\n    /**\n     * Returns the value for `name`.\n     *\n     * Since it is possible to have a key whose name conflicts with a method on a {@link Result | **Result**} or its\n     * superclass Array, or any JavaScript keyword, this ensures all named values are still accessible by name.\n     *\n     * @param {string} name - The name of the value to retrieve.\n     *\n     * @returns The value for `name`.\n     */\n    getValue(name: string): any {\n        const index = this.#names.indexOf(name);\n        if (index === -1) {\n            return undefined;\n        }\n\n        const value = this[index];\n\n        if (value instanceof Error) {\n            throwError(`property ${JSON.stringify(name)}`, (<any>value).error);\n        }\n\n        return value;\n    }\n\n    /**\n     * Creates a new {@link Result | **Result**} for `items` with each entry also accessible by its corresponding name in\n     * `keys`.\n     *\n     * @param {any[]} items - The items to include in the Result.\n     * @param {(null | string)[]} [keys] - The names for each item in `items`.\n     *\n     * @returns The new Result.\n     */\n    static fromItems(items: Array<any>, keys?: Array<null | string>): Result {\n        return new Result(_guard, items, keys);\n    }\n}\n\n/**\n * Returns all errors found in a {@link Result | **Result**}.\n *\n * Since certain errors encountered when creating a {@link Result | **Result**} do not impact the ability to continue\n * parsing data, they are deferred until they are actually accessed. Hence a faulty string in an Event that is never\n * used does not impact the program flow.\n *\n * However, sometimes it may be useful to access, identify or validate correctness of a {@link Result | **Result**}.\n *\n * @category Application Binary Interface\n * @param {Result} result - The Result to check for errors.\n *\n * @returns An array of objects with the path to the error and the error itself.\n */\nexport function checkResultErrors(result: Result): Array<{ path: Array<string | number>; error: Error }> {\n    // Find the first error (if any)\n    const errors: Array<{ path: Array<string | number>; error: Error }> = [];\n\n    const checkErrors = function (path: Array<string | number>, object: any): void {\n        if (!Array.isArray(object)) {\n            return;\n        }\n        for (const key in object) {\n            const childPath = path.slice();\n            childPath.push(key);\n\n            try {\n                checkErrors(childPath, object[key]);\n            } catch (error: any) {\n                errors.push({ path: childPath, error: error });\n            }\n        }\n    };\n    checkErrors([], result);\n\n    return errors;\n}\n\nfunction getValue(value: BigNumberish): Uint8Array {\n    let bytes = toBeArray(value);\n\n    assert(bytes.length <= WordSize, 'value out-of-bounds', 'BUFFER_OVERRUN', {\n        buffer: bytes,\n        length: WordSize,\n        offset: bytes.length,\n    });\n\n    if (bytes.length !== WordSize) {\n        bytes = getBytesCopy(concat([Padding.slice(bytes.length % WordSize), bytes]));\n    }\n\n    return bytes;\n}\n\n/**\n * @ignore\n */\nexport abstract class Coder {\n    // The coder name:\n    //   - address, uint256, tuple, array, etc.\n    readonly name!: string;\n\n    // The fully expanded type, including composite types:\n    //   - address, uint256, tuple(address,bytes), uint256[3][4][],  etc.\n    readonly type!: string;\n\n    // The localName bound in the signature, in this example it is \"baz\":\n    //   - tuple(address foo, uint bar) baz\n    readonly localName!: string;\n\n    // Whether this type is dynamic:\n    //  - Dynamic: bytes, string, address[], tuple(boolean[]), etc.\n    //  - Not Dynamic: address, uint256, boolean[3], tuple(address, uint8)\n    readonly dynamic!: boolean;\n\n    constructor(name: string, type: string, localName: string, dynamic: boolean) {\n        defineProperties<Coder>(\n            this,\n            { name, type, localName, dynamic },\n            {\n                name: 'string',\n                type: 'string',\n                localName: 'string',\n                dynamic: 'boolean',\n            },\n        );\n    }\n\n    _throwError(message: string, value: any): never {\n        assertArgument(false, message, this.localName, value);\n    }\n\n    abstract encode(writer: Writer, value: any): number;\n    abstract decode(reader: Reader): any;\n\n    abstract defaultValue(): any;\n}\n\n/**\n * @ignore\n */\nexport class Writer {\n    // An array of WordSize lengthed objects to concatenation\n    #data: Array<Uint8Array>;\n    #dataLength: number;\n\n    constructor() {\n        this.#data = [];\n        this.#dataLength = 0;\n    }\n\n    get data(): string {\n        return concat(this.#data);\n    }\n    get length(): number {\n        return this.#dataLength;\n    }\n\n    #writeData(data: Uint8Array): number {\n        this.#data.push(data);\n        this.#dataLength += data.length;\n        return data.length;\n    }\n\n    appendWriter(writer: Writer): number {\n        return this.#writeData(getBytesCopy(writer.data));\n    }\n\n    // Arrayish item; pad on the right to *nearest* WordSize\n    writeBytes(value: BytesLike): number {\n        let bytes = getBytesCopy(value);\n        const paddingOffset = bytes.length % WordSize;\n        if (paddingOffset) {\n            bytes = getBytesCopy(concat([bytes, Padding.slice(paddingOffset)]));\n        }\n        return this.#writeData(bytes);\n    }\n\n    // Numeric item; pad on the left *to* WordSize\n    writeValue(value: BigNumberish): number {\n        return this.#writeData(getValue(value));\n    }\n\n    // Inserts a numeric place-holder, returning a callback that can\n    // be used to asjust the value later\n    writeUpdatableValue(): (value: BigNumberish) => void {\n        const offset = this.#data.length;\n        this.#data.push(Padding);\n        this.#dataLength += WordSize;\n        return (value: BigNumberish) => {\n            this.#data[offset] = getValue(value);\n        };\n    }\n}\n\n/**\n * @ignore\n */\nexport class Reader {\n    // Allows incomplete unpadded data to be read; otherwise an error\n    // is raised if attempting to overrun the buffer. This is required\n    // to deal with an old Solidity bug, in which event data for\n    // external (not public thoguh) was tightly packed.\n    readonly allowLoose!: boolean;\n\n    readonly #data: Uint8Array;\n    #offset: number;\n\n    #bytesRead: number;\n    #parent: null | Reader;\n    #maxInflation: number;\n\n    constructor(data: BytesLike, allowLoose?: boolean, maxInflation?: number) {\n        defineProperties<Reader>(this, { allowLoose: !!allowLoose });\n\n        this.#data = getBytesCopy(data);\n        this.#bytesRead = 0;\n        this.#parent = null;\n        this.#maxInflation = maxInflation != null ? maxInflation : 1024;\n\n        this.#offset = 0;\n    }\n\n    get data(): string {\n        return hexlify(this.#data);\n    }\n    get dataLength(): number {\n        return this.#data.length;\n    }\n    get consumed(): number {\n        return this.#offset;\n    }\n    get bytes(): Uint8Array {\n        return new Uint8Array(this.#data);\n    }\n\n    #incrementBytesRead(count: number): void {\n        if (this.#parent) {\n            return this.#parent.#incrementBytesRead(count);\n        }\n\n        this.#bytesRead += count;\n\n        // Check for excessive inflation (see: #4537)\n        assert(\n            this.#maxInflation < 1 || this.#bytesRead <= this.#maxInflation * this.dataLength,\n            // eslint-disable-next-line no-useless-escape\n            `compressed ABI data exceeds inflation ratio of ${this.#maxInflation} ( see: https:/\\/github.com/ethers-io/ethers.js/issues/4537 )`,\n            'BUFFER_OVERRUN',\n            {\n                buffer: getBytesCopy(this.#data),\n                offset: this.#offset,\n                length: count,\n                info: {\n                    bytesRead: this.#bytesRead,\n                    dataLength: this.dataLength,\n                },\n            },\n        );\n    }\n\n    #peekBytes(offset: number, length: number, loose?: boolean): Uint8Array {\n        let alignedLength = Math.ceil(length / WordSize) * WordSize;\n        if (this.#offset + alignedLength > this.#data.length) {\n            if (this.allowLoose && loose && this.#offset + length <= this.#data.length) {\n                alignedLength = length;\n            } else {\n                assert(false, 'data out-of-bounds', 'BUFFER_OVERRUN', {\n                    buffer: getBytesCopy(this.#data),\n                    length: this.#data.length,\n                    offset: this.#offset + alignedLength,\n                });\n            }\n        }\n        return this.#data.slice(this.#offset, this.#offset + alignedLength);\n    }\n\n    // Create a sub-reader with the same underlying data, but offset\n    subReader(offset: number): Reader {\n        const reader = new Reader(this.#data.slice(this.#offset + offset), this.allowLoose, this.#maxInflation);\n        reader.#parent = this;\n        return reader;\n    }\n\n    // Read bytes\n    readBytes(length: number, loose?: boolean): Uint8Array {\n        const bytes = this.#peekBytes(0, length, !!loose);\n        this.#incrementBytesRead(length);\n        this.#offset += bytes.length;\n        // @TODO: Make sure the length..end bytes are all 0?\n        return bytes.slice(0, length);\n    }\n\n    // Read a numeric values\n    readValue(): bigint {\n        return toBigInt(this.readBytes(WordSize));\n    }\n\n    readIndex(): number {\n        return toNumber(this.readBytes(WordSize));\n    }\n}\n","function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new Error('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nfunction split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nconst toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, _l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h: number, l: number) => l;\nconst rotr32L = (h: number, _l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nexport {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// See utils.ts for details.\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!u8a(data)) throw new Error(`expected Uint8Array, got ${typeof data}`);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\nconst toStr = {}.toString;\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n","import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport {\n  Hash,\n  u32,\n  Input,\n  toBytes,\n  wrapConstructor,\n  wrapXOFConstructorWithOpts,\n  HashXOF,\n} from './utils.js';\n\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA]: [number[], number[], bigint[]] = [[], [], []];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n  // Pi\n  [x, y] = [y, (2 * x + 3 * y) % 5];\n  SHA3_PI.push(2 * (5 * y + x));\n  // Rotational\n  SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n  // Iota\n  let t = _0n;\n  for (let j = 0; j < 7; j++) {\n    R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n    if (R & _2n) t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n  }\n  _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h: number, l: number, s: number) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h: number, l: number, s: number) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s: Uint32Array, rounds: number = 24) {\n  const B = new Uint32Array(5 * 2);\n  // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n  for (let round = 24 - rounds; round < 24; round++) {\n    // Theta θ\n    for (let x = 0; x < 10; x++) B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n    for (let x = 0; x < 10; x += 2) {\n      const idx1 = (x + 8) % 10;\n      const idx0 = (x + 2) % 10;\n      const B0 = B[idx0];\n      const B1 = B[idx0 + 1];\n      const Th = rotlH(B0, B1, 1) ^ B[idx1];\n      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n      for (let y = 0; y < 50; y += 10) {\n        s[x + y] ^= Th;\n        s[x + y + 1] ^= Tl;\n      }\n    }\n    // Rho (ρ) and Pi (π)\n    let curH = s[2];\n    let curL = s[3];\n    for (let t = 0; t < 24; t++) {\n      const shift = SHA3_ROTL[t];\n      const Th = rotlH(curH, curL, shift);\n      const Tl = rotlL(curH, curL, shift);\n      const PI = SHA3_PI[t];\n      curH = s[PI];\n      curL = s[PI + 1];\n      s[PI] = Th;\n      s[PI + 1] = Tl;\n    }\n    // Chi (χ)\n    for (let y = 0; y < 50; y += 10) {\n      for (let x = 0; x < 10; x++) B[x] = s[y + x];\n      for (let x = 0; x < 10; x++) s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n    }\n    // Iota (ι)\n    s[0] ^= SHA3_IOTA_H[round];\n    s[1] ^= SHA3_IOTA_L[round];\n  }\n  B.fill(0);\n}\n\nexport class Keccak extends Hash<Keccak> implements HashXOF<Keccak> {\n  protected state: Uint8Array;\n  protected pos = 0;\n  protected posOut = 0;\n  protected finished = false;\n  protected state32: Uint32Array;\n  protected destroyed = false;\n  // NOTE: we accept arguments in bytes instead of bits here.\n  constructor(\n    public blockLen: number,\n    public suffix: number,\n    public outputLen: number,\n    protected enableXOF = false,\n    protected rounds: number = 24\n  ) {\n    super();\n    // Can be passed from user as dkLen\n    number(outputLen);\n    // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n    if (0 >= this.blockLen || this.blockLen >= 200)\n      throw new Error('Sha3 supports only keccak-f1600 function');\n    this.state = new Uint8Array(200);\n    this.state32 = u32(this.state);\n  }\n  protected keccak() {\n    keccakP(this.state32, this.rounds);\n    this.posOut = 0;\n    this.pos = 0;\n  }\n  update(data: Input) {\n    exists(this);\n    const { blockLen, state } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      for (let i = 0; i < take; i++) state[this.pos++] ^= data[pos++];\n      if (this.pos === blockLen) this.keccak();\n    }\n    return this;\n  }\n  protected finish() {\n    if (this.finished) return;\n    this.finished = true;\n    const { state, suffix, pos, blockLen } = this;\n    // Do the padding\n    state[pos] ^= suffix;\n    if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();\n    state[blockLen - 1] ^= 0x80;\n    this.keccak();\n  }\n  protected writeInto(out: Uint8Array): Uint8Array {\n    exists(this, false);\n    bytes(out);\n    this.finish();\n    const bufferOut = this.state;\n    const { blockLen } = this;\n    for (let pos = 0, len = out.length; pos < len; ) {\n      if (this.posOut >= blockLen) this.keccak();\n      const take = Math.min(blockLen - this.posOut, len - pos);\n      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n      this.posOut += take;\n      pos += take;\n    }\n    return out;\n  }\n  xofInto(out: Uint8Array): Uint8Array {\n    // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');\n    return this.writeInto(out);\n  }\n  xof(bytes: number): Uint8Array {\n    number(bytes);\n    return this.xofInto(new Uint8Array(bytes));\n  }\n  digestInto(out: Uint8Array) {\n    output(out, this);\n    if (this.finished) throw new Error('digest() was already called');\n    this.writeInto(out);\n    this.destroy();\n    return out;\n  }\n  digest() {\n    return this.digestInto(new Uint8Array(this.outputLen));\n  }\n  destroy() {\n    this.destroyed = true;\n    this.state.fill(0);\n  }\n  _cloneInto(to?: Keccak): Keccak {\n    const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n    to ||= new Keccak(blockLen, suffix, outputLen, enableXOF, rounds);\n    to.state32.set(this.state32);\n    to.pos = this.pos;\n    to.posOut = this.posOut;\n    to.finished = this.finished;\n    to.rounds = rounds;\n    // Suffix can change in cSHAKE\n    to.suffix = suffix;\n    to.outputLen = outputLen;\n    to.enableXOF = enableXOF;\n    to.destroyed = this.destroyed;\n    return to;\n  }\n}\n\nconst gen = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\n\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\n\nexport type ShakeOpts = { dkLen?: number };\n\nconst genShake = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapXOFConstructorWithOpts<HashXOF<Keccak>, ShakeOpts>(\n    (opts: ShakeOpts = {}) =>\n      new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true)\n  );\n\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n","/**\n * Cryptographic hashing functions\n */\n\nimport { keccak_256 } from '@noble/hashes/sha3';\n\nimport { getBytes, hexlify } from '../utils/index.js';\n\nimport type { BytesLike } from '../utils/index.js';\n\nlet locked = false;\n\nconst _keccak256 = function (data: Uint8Array): Uint8Array {\n    return keccak_256(data);\n};\n\nlet __keccak256: (data: Uint8Array) => BytesLike = _keccak256;\n\n/**\n * Compute the cryptographic KECCAK256 hash of `data`.\n *\n * The `data` **must** be a data representation, to compute the hash of UTF-8 data use the [**id**}(../functions/id)\n * function.\n *\n * @category Crypto\n * @example\n *\n * ```ts\n * keccak256('0x');\n *\n * keccak256('0x1337');\n *\n * keccak256(new Uint8Array([0x13, 0x37]));\n *\n * // Strings are assumed to be DataHexString, otherwise it will\n * // throw. To hash UTF-8 data, see the note above.\n * keccak256('Hello World');\n * ```\n *\n * @param {BytesLike} _data - The data to hash.\n * @returns DataHexstring\n * @returns {string} The hash of the data.\n */\nexport function keccak256(_data: BytesLike): string {\n    const data = getBytes(_data, 'data');\n    return hexlify(__keccak256(data));\n}\nkeccak256._ = _keccak256;\nkeccak256.lock = function (): void {\n    locked = true;\n};\nkeccak256.register = function (func: (data: Uint8Array) => BytesLike) {\n    if (locked) {\n        throw new TypeError('keccak256 is locked');\n    }\n    __keccak256 = func;\n};\nObject.freeze(keccak256);\n","import { exists, output } from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    exists(this);\n    output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\nexport type Hex = Uint8Array | string; // hex strings are accepted for simplicity\nexport type PrivKey = Hex | bigint; // bigints are accepted to ease learning curve\nexport type CHash = {\n  (message: Uint8Array | string): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create(opts?: { dkLen?: number }): any; // For shake\n};\nexport type FHash = (message: Uint8Array | string) => Uint8Array;\n\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\nexport function numberToHexUnpadded(num: number | bigint): string {\n  const hex = num.toString(16);\n  return hex.length & 1 ? `0${hex}` : hex;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // Big Endian\n  return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes: Uint8Array): bigint {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\n\nexport function numberToBytesBE(n: number | bigint, len: number): Uint8Array {\n  return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n: number | bigint, len: number): Uint8Array {\n  return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n: number | bigint): Uint8Array {\n  return hexToBytes(numberToHexUnpadded(n));\n}\n\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title: string, hex: Hex, expectedLength?: number): Uint8Array {\n  let res: Uint8Array;\n  if (typeof hex === 'string') {\n    try {\n      res = hexToBytes(hex);\n    } catch (e) {\n      throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n    }\n  } else if (u8a(hex)) {\n    // Uint8Array.from() instead of hash.slice() because node.js Buffer\n    // is instance of Uint8Array, and its slice() creates **mutable** copy\n    res = Uint8Array.from(hex);\n  } else {\n    throw new Error(`${title} must be hex string or Uint8Array`);\n  }\n  const len = res.length;\n  if (typeof expectedLength === 'number' && len !== expectedLength)\n    throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n  return res;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\nexport function equalBytes(b1: Uint8Array, b2: Uint8Array) {\n  // We don't care about timing attacks here\n  if (b1.length !== b2.length) return false;\n  for (let i = 0; i < b1.length; i++) if (b1[i] !== b2[i]) return false;\n  return true;\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n// Bit operations\n\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n: bigint) {\n  let len;\n  for (len = 0; n > _0n; n >>= _1n, len += 1);\n  return len;\n}\n\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n: bigint, pos: number) {\n  return (n >> BigInt(pos)) & _1n;\n}\n\n/**\n * Sets single bit at position.\n */\nexport const bitSet = (n: bigint, pos: number, value: boolean) => {\n  return n | ((value ? _1n : _0n) << BigInt(pos));\n};\n\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n: number) => (_2n << BigInt(n - 1)) - _1n;\n\n// DRBG\n\nconst u8n = (data?: any) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr: any) => Uint8Array.from(arr); // another shortcut\ntype Pred<T> = (v: Uint8Array) => T | undefined;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg<T>(\n  hashLen: number,\n  qByteLen: number,\n  hmacFn: (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array\n): (seed: Uint8Array, predicate: Pred<T>) => T {\n  if (typeof hashLen !== 'number' || hashLen < 2) throw new Error('hashLen must be a number');\n  if (typeof qByteLen !== 'number' || qByteLen < 2) throw new Error('qByteLen must be a number');\n  if (typeof hmacFn !== 'function') throw new Error('hmacFn must be a function');\n  // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n  let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n  let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n  let i = 0; // Iterations counter, will throw when over 1000\n  const reset = () => {\n    v.fill(1);\n    k.fill(0);\n    i = 0;\n  };\n  const h = (...b: Uint8Array[]) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n  const reseed = (seed = u8n()) => {\n    // HMAC-DRBG reseed() function. Steps D-G\n    k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n    v = h(); // v = hmac(k || v)\n    if (seed.length === 0) return;\n    k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n    v = h(); // v = hmac(k || v)\n  };\n  const gen = () => {\n    // HMAC-DRBG generate() function\n    if (i++ >= 1000) throw new Error('drbg: tried 1000 values');\n    let len = 0;\n    const out: Uint8Array[] = [];\n    while (len < qByteLen) {\n      v = h();\n      const sl = v.slice();\n      out.push(sl);\n      len += v.length;\n    }\n    return concatBytes(...out);\n  };\n  const genUntil = (seed: Uint8Array, pred: Pred<T>): T => {\n    reset();\n    reseed(seed); // Steps D-G\n    let res: T | undefined = undefined; // Step H: grind until k is in [1..n-1]\n    while (!(res = pred(gen()))) reseed();\n    reset();\n    return res;\n  };\n  return genUntil;\n}\n\n// Validating curves and fields\n\nconst validatorFns = {\n  bigint: (val: any) => typeof val === 'bigint',\n  function: (val: any) => typeof val === 'function',\n  boolean: (val: any) => typeof val === 'boolean',\n  string: (val: any) => typeof val === 'string',\n  stringOrUint8Array: (val: any) => typeof val === 'string' || val instanceof Uint8Array,\n  isSafeInteger: (val: any) => Number.isSafeInteger(val),\n  array: (val: any) => Array.isArray(val),\n  field: (val: any, object: any) => (object as any).Fp.isValid(val),\n  hash: (val: any) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n} as const;\ntype Validator = keyof typeof validatorFns;\ntype ValMap<T extends Record<string, any>> = { [K in keyof T]?: Validator };\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\n\nexport function validateObject<T extends Record<string, any>>(\n  object: T,\n  validators: ValMap<T>,\n  optValidators: ValMap<T> = {}\n) {\n  const checkField = (fieldName: keyof T, type: Validator, isOptional: boolean) => {\n    const checkVal = validatorFns[type];\n    if (typeof checkVal !== 'function')\n      throw new Error(`Invalid validator \"${type}\", expected function`);\n\n    const val = object[fieldName as keyof typeof object];\n    if (isOptional && val === undefined) return;\n    if (!checkVal(val, object)) {\n      throw new Error(\n        `Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`\n      );\n    }\n  };\n  for (const [fieldName, type] of Object.entries(validators)) checkField(fieldName, type!, false);\n  for (const [fieldName, type] of Object.entries(optValidators)) checkField(fieldName, type!, true);\n  return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport {\n  bitMask,\n  numberToBytesBE,\n  numberToBytesLE,\n  bytesToNumberBE,\n  bytesToNumberLE,\n  ensureBytes,\n  validateObject,\n} from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n\n// Calculates a modulo b\nexport function mod(a: bigint, b: bigint): bigint {\n  const result = a % b;\n  return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num: bigint, power: bigint, modulo: bigint): bigint {\n  if (modulo <= _0n || power < _0n) throw new Error('Expected power/modulo > 0');\n  if (modulo === _1n) return _0n;\n  let res = _1n;\n  while (power > _0n) {\n    if (power & _1n) res = (res * num) % modulo;\n    num = (num * num) % modulo;\n    power >>= _1n;\n  }\n  return res;\n}\n\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x: bigint, power: bigint, modulo: bigint): bigint {\n  let res = x;\n  while (power-- > _0n) {\n    res *= res;\n    res %= modulo;\n  }\n  return res;\n}\n\n// Inverses number over modulo\nexport function invert(number: bigint, modulo: bigint): bigint {\n  if (number === _0n || modulo <= _0n) {\n    throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n  }\n  // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n  // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n  let a = mod(number, modulo);\n  let b = modulo;\n  // prettier-ignore\n  let x = _0n, y = _1n, u = _1n, v = _0n;\n  while (a !== _0n) {\n    // JIT applies optimization if those two lines follow each other\n    const q = b / a;\n    const r = b % a;\n    const m = x - u * q;\n    const n = y - v * q;\n    // prettier-ignore\n    b = a, a = r, x = u, y = v, u = m, v = n;\n  }\n  const gcd = b;\n  if (gcd !== _1n) throw new Error('invert: does not exist');\n  return mod(x, modulo);\n}\n\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P: bigint) {\n  // Legendre constant: used to calculate Legendre symbol (a | p),\n  // which denotes the value of a^((p-1)/2) (mod p).\n  // (a | p) ≡ 1    if a is a square (mod p)\n  // (a | p) ≡ -1   if a is not a square (mod p)\n  // (a | p) ≡ 0    if a ≡ 0 (mod p)\n  const legendreC = (P - _1n) / _2n;\n\n  let Q: bigint, S: number, Z: bigint;\n  // Step 1: By factoring out powers of 2 from p - 1,\n  // find q and s such that p - 1 = q*(2^s) with q odd\n  for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++);\n\n  // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n  for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++);\n\n  // Fast-path\n  if (S === 1) {\n    const p1div4 = (P + _1n) / _4n;\n    return function tonelliFast<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Slow-path\n  const Q1div2 = (Q + _1n) / _2n;\n  return function tonelliSlow<T>(Fp: IField<T>, n: T): T {\n    // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n    if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE)) throw new Error('Cannot find square root');\n    let r = S;\n    // TODO: will fail at Fp2/etc\n    let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n    let x = Fp.pow(n, Q1div2); // first guess at the square root\n    let b = Fp.pow(n, Q); // first guess at the fudge factor\n\n    while (!Fp.eql(b, Fp.ONE)) {\n      if (Fp.eql(b, Fp.ZERO)) return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n      // Find m such b^(2^m)==1\n      let m = 1;\n      for (let t2 = Fp.sqr(b); m < r; m++) {\n        if (Fp.eql(t2, Fp.ONE)) break;\n        t2 = Fp.sqr(t2); // t2 *= t2\n      }\n      // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n      const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n      g = Fp.sqr(ge); // g = ge * ge\n      x = Fp.mul(x, ge); // x *= ge\n      b = Fp.mul(b, g); // b *= g\n      r = m;\n    }\n    return x;\n  };\n}\n\nexport function FpSqrt(P: bigint) {\n  // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n  // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n\n  // P ≡ 3 (mod 4)\n  // √n = n^((P+1)/4)\n  if (P % _4n === _3n) {\n    // Not all roots possible!\n    // const ORDER =\n    //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n    // const NUM = 72057594037927816n;\n    const p1div4 = (P + _1n) / _4n;\n    return function sqrt3mod4<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      // Throw if root**2 != n\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n  if (P % _8n === _5n) {\n    const c1 = (P - _5n) / _8n;\n    return function sqrt5mod8<T>(Fp: IField<T>, n: T) {\n      const n2 = Fp.mul(n, _2n);\n      const v = Fp.pow(n2, c1);\n      const nv = Fp.mul(n, v);\n      const i = Fp.mul(Fp.mul(nv, _2n), v);\n      const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // P ≡ 9 (mod 16)\n  if (P % _16n === _9n) {\n    // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n    // Means we cannot use sqrt for constants at all!\n    //\n    // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n    // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n    // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n    // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n    // sqrt = (x) => {\n    //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n    //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n    //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n    //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n    //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n    //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n    //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n    //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n    //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n    //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n    // }\n  }\n\n  // Other cases: Tonelli-Shanks algorithm\n  return tonelliShanks(P);\n}\n\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num: bigint, modulo: bigint) => (mod(num, modulo) & _1n) === _1n;\n\n// Field is not always over prime: for example, Fp2 has ORDER(q)=p^m\nexport interface IField<T> {\n  ORDER: bigint;\n  BYTES: number;\n  BITS: number;\n  MASK: bigint;\n  ZERO: T;\n  ONE: T;\n  // 1-arg\n  create: (num: T) => T;\n  isValid: (num: T) => boolean;\n  is0: (num: T) => boolean;\n  neg(num: T): T;\n  inv(num: T): T;\n  sqrt(num: T): T;\n  sqr(num: T): T;\n  // 2-args\n  eql(lhs: T, rhs: T): boolean;\n  add(lhs: T, rhs: T): T;\n  sub(lhs: T, rhs: T): T;\n  mul(lhs: T, rhs: T | bigint): T;\n  pow(lhs: T, power: bigint): T;\n  div(lhs: T, rhs: T | bigint): T;\n  // N for NonNormalized (for now)\n  addN(lhs: T, rhs: T): T;\n  subN(lhs: T, rhs: T): T;\n  mulN(lhs: T, rhs: T | bigint): T;\n  sqrN(num: T): T;\n\n  // Optional\n  // Should be same as sgn0 function in\n  // [RFC9380](https://www.rfc-editor.org/rfc/rfc9380#section-4.1).\n  // NOTE: sgn0 is 'negative in LE', which is same as odd. And negative in LE is kinda strange definition anyway.\n  isOdd?(num: T): boolean; // Odd instead of even since we have it for Fp2\n  // legendre?(num: T): T;\n  pow(lhs: T, power: bigint): T;\n  invertBatch: (lst: T[]) => T[];\n  toBytes(num: T): Uint8Array;\n  fromBytes(bytes: Uint8Array): T;\n  // If c is False, CMOV returns a, otherwise it returns b.\n  cmov(a: T, b: T, c: boolean): T;\n}\n// prettier-ignore\nconst FIELD_FIELDS = [\n  'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n  'eql', 'add', 'sub', 'mul', 'pow', 'div',\n  'addN', 'subN', 'mulN', 'sqrN'\n] as const;\nexport function validateField<T>(field: IField<T>) {\n  const initial = {\n    ORDER: 'bigint',\n    MASK: 'bigint',\n    BYTES: 'isSafeInteger',\n    BITS: 'isSafeInteger',\n  } as Record<string, string>;\n  const opts = FIELD_FIELDS.reduce((map, val: string) => {\n    map[val] = 'function';\n    return map;\n  }, initial);\n  return validateObject(field, opts);\n}\n\n// Generic field functions\n\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow<T>(f: IField<T>, num: T, power: bigint): T {\n  // Should have same speed as pow for bigints\n  // TODO: benchmark!\n  if (power < _0n) throw new Error('Expected power > 0');\n  if (power === _0n) return f.ONE;\n  if (power === _1n) return num;\n  let p = f.ONE;\n  let d = num;\n  while (power > _0n) {\n    if (power & _1n) p = f.mul(p, d);\n    d = f.sqr(d);\n    power >>= _1n;\n  }\n  return p;\n}\n\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch<T>(f: IField<T>, nums: T[]): T[] {\n  const tmp = new Array(nums.length);\n  // Walk from first to last, multiply them by each other MOD p\n  const lastMultiplied = nums.reduce((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = acc;\n    return f.mul(acc, num);\n  }, f.ONE);\n  // Invert last element\n  const inverted = f.inv(lastMultiplied);\n  // Walk from last to first, multiply them by inverted each other MOD p\n  nums.reduceRight((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = f.mul(acc, tmp[i]);\n    return f.mul(acc, num);\n  }, inverted);\n  return tmp;\n}\n\nexport function FpDiv<T>(f: IField<T>, lhs: T, rhs: T | bigint): T {\n  return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare<T>(f: IField<T>) {\n  const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n  return (x: T): boolean => {\n    const p = f.pow(x, legendreConst);\n    return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n  };\n}\n\n// CURVE.n lengths\nexport function nLength(n: bigint, nBitLength?: number) {\n  // Bit size, byte size of CURVE.n\n  const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n  const nByteLength = Math.ceil(_nBitLength / 8);\n  return { nBitLength: _nBitLength, nByteLength };\n}\n\ntype FpField = IField<bigint> & Required<Pick<IField<bigint>, 'isOdd'>>;\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(\n  ORDER: bigint,\n  bitLen?: number,\n  isLE = false,\n  redef: Partial<IField<bigint>> = {}\n): Readonly<FpField> {\n  if (ORDER <= _0n) throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n  const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n  if (BYTES > 2048) throw new Error('Field lengths over 2048 bytes are not supported');\n  const sqrtP = FpSqrt(ORDER);\n  const f: Readonly<FpField> = Object.freeze({\n    ORDER,\n    BITS,\n    BYTES,\n    MASK: bitMask(BITS),\n    ZERO: _0n,\n    ONE: _1n,\n    create: (num) => mod(num, ORDER),\n    isValid: (num) => {\n      if (typeof num !== 'bigint')\n        throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n      return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n    },\n    is0: (num) => num === _0n,\n    isOdd: (num) => (num & _1n) === _1n,\n    neg: (num) => mod(-num, ORDER),\n    eql: (lhs, rhs) => lhs === rhs,\n\n    sqr: (num) => mod(num * num, ORDER),\n    add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n    sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n    mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n    pow: (num, power) => FpPow(f, num, power),\n    div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n\n    // Same as above, but doesn't normalize\n    sqrN: (num) => num * num,\n    addN: (lhs, rhs) => lhs + rhs,\n    subN: (lhs, rhs) => lhs - rhs,\n    mulN: (lhs, rhs) => lhs * rhs,\n\n    inv: (num) => invert(num, ORDER),\n    sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n    invertBatch: (lst) => FpInvertBatch(f, lst),\n    // TODO: do we really need constant cmov?\n    // We don't have const-time bigints anyway, so probably will be not very useful\n    cmov: (a, b, c) => (c ? b : a),\n    toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n    fromBytes: (bytes) => {\n      if (bytes.length !== BYTES)\n        throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n      return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n    },\n  } as FpField);\n  return Object.freeze(f);\n}\n\nexport function FpSqrtOdd<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? root : Fp.neg(root);\n}\n\nexport function FpSqrtEven<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(\n  hash: string | Uint8Array,\n  groupOrder: bigint,\n  isLE = false\n): bigint {\n  hash = ensureBytes('privateHash', hash);\n  const hashLen = hash.length;\n  const minLen = nLength(groupOrder).nByteLength + 8;\n  if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n    throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n  const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n  return mod(num, groupOrder - _1n) + _1n;\n}\n\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder: bigint): number {\n  if (typeof fieldOrder !== 'bigint') throw new Error('field order must be bigint');\n  const bitLength = fieldOrder.toString(2).length;\n  return Math.ceil(bitLength / 8);\n}\n\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder: bigint): number {\n  const length = getFieldBytesLength(fieldOrder);\n  return length + Math.ceil(length / 2);\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key: Uint8Array, fieldOrder: bigint, isLE = false): Uint8Array {\n  const len = key.length;\n  const fieldLen = getFieldBytesLength(fieldOrder);\n  const minLen = getMinHashLength(fieldOrder);\n  // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n  if (len < 16 || len < minLen || len > 1024)\n    throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n  const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n  // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n  const reduced = mod(num, fieldOrder - _1n) + _1n;\n  return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n","import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assertHash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new Error('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assertExists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assertExists(this);\n    assertBytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { IField, validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n\nexport type AffinePoint<T> = {\n  x: T;\n  y: T;\n} & { z?: never; t?: never };\n\nexport interface Group<T extends Group<T>> {\n  double(): T;\n  negate(): T;\n  add(other: T): T;\n  subtract(other: T): T;\n  equals(other: T): boolean;\n  multiply(scalar: bigint): T;\n}\n\nexport type GroupConstructor<T> = {\n  BASE: T;\n  ZERO: T;\n};\nexport type Mapper<T> = (i: T[]) => T[];\n\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF<T extends Group<T>>(c: GroupConstructor<T>, bits: number) {\n  const constTimeNegate = (condition: boolean, item: T): T => {\n    const neg = item.negate();\n    return condition ? neg : item;\n  };\n  const opts = (W: number) => {\n    const windows = Math.ceil(bits / W) + 1; // +1, because\n    const windowSize = 2 ** (W - 1); // -1 because we skip zero\n    return { windows, windowSize };\n  };\n  return {\n    constTimeNegate,\n    // non-const time multiplication ladder\n    unsafeLadder(elm: T, n: bigint) {\n      let p = c.ZERO;\n      let d: T = elm;\n      while (n > _0n) {\n        if (n & _1n) p = p.add(d);\n        d = d.double();\n        n >>= _1n;\n      }\n      return p;\n    },\n\n    /**\n     * Creates a wNAF precomputation window. Used for caching.\n     * Default window size is set by `utils.precompute()` and is equal to 8.\n     * Number of precomputed points depends on the curve size:\n     * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n     * - 𝑊 is the window size\n     * - 𝑛 is the bitlength of the curve order.\n     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n     * @returns precomputed point tables flattened to a single array\n     */\n    precomputeWindow(elm: T, W: number): Group<T>[] {\n      const { windows, windowSize } = opts(W);\n      const points: T[] = [];\n      let p: T = elm;\n      let base = p;\n      for (let window = 0; window < windows; window++) {\n        base = p;\n        points.push(base);\n        // =1, because we skip zero\n        for (let i = 1; i < windowSize; i++) {\n          base = base.add(p);\n          points.push(base);\n        }\n        p = base.double();\n      }\n      return points;\n    },\n\n    /**\n     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @returns real and fake (for const-time) points\n     */\n    wNAF(W: number, precomputes: T[], n: bigint): { p: T; f: T } {\n      // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n      // But need to carefully remove other checks before wNAF. ORDER == bits here\n      const { windows, windowSize } = opts(W);\n\n      let p = c.ZERO;\n      let f = c.BASE;\n\n      const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n      const maxNumber = 2 ** W;\n      const shiftBy = BigInt(W);\n\n      for (let window = 0; window < windows; window++) {\n        const offset = window * windowSize;\n        // Extract W bits.\n        let wbits = Number(n & mask);\n\n        // Shift number by W bits.\n        n >>= shiftBy;\n\n        // If the bits are bigger than max size, we'll split those.\n        // +224 => 256 - 32\n        if (wbits > windowSize) {\n          wbits -= maxNumber;\n          n += _1n;\n        }\n\n        // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n        // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n        // there is negate now: it is possible that negated element from low value\n        // would be the same as high element, which will create carry into next window.\n        // It's not obvious how this can fail, but still worth investigating later.\n\n        // Check if we're onto Zero point.\n        // Add random point inside current window to f.\n        const offset1 = offset;\n        const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n        const cond1 = window % 2 !== 0;\n        const cond2 = wbits < 0;\n        if (wbits === 0) {\n          // The most important part for const-time getPublicKey\n          f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n        } else {\n          p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n        }\n      }\n      // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n      // Even if the variable is still unused, there are some checks which will\n      // throw an exception, so compiler needs to prove they won't happen, which is hard.\n      // At this point there is a way to F be infinity-point even if p is not,\n      // which makes it less const-time: around 1 bigint multiply.\n      return { p, f };\n    },\n\n    wNAFCached(P: T, precomputesMap: Map<T, T[]>, n: bigint, transform: Mapper<T>): { p: T; f: T } {\n      // @ts-ignore\n      const W: number = P._WINDOW_SIZE || 1;\n      // Calculate precomputes on a first run, reuse them after\n      let comp = precomputesMap.get(P);\n      if (!comp) {\n        comp = this.precomputeWindow(P, W) as T[];\n        if (W !== 1) {\n          precomputesMap.set(P, transform(comp));\n        }\n      }\n      return this.wNAF(W, comp, n);\n    },\n  };\n}\n\n// Generic BasicCurve interface: works even for polynomial fields (BLS): P, n, h would be ok.\n// Though generator can be different (Fp2 / Fp6 for BLS).\nexport type BasicCurve<T> = {\n  Fp: IField<T>; // Field over which we'll do calculations (Fp)\n  n: bigint; // Curve order, total count of valid points in the field\n  nBitLength?: number; // bit length of curve order\n  nByteLength?: number; // byte length of curve order\n  h: bigint; // cofactor. we can assign default=1, but users will just ignore it w/o validation\n  hEff?: bigint; // Number to multiply to clear cofactor\n  Gx: T; // base point X coordinate\n  Gy: T; // base point Y coordinate\n  allowInfinityPoint?: boolean; // bls12-381 requires it. ZERO point is valid, but invalid pubkey\n};\n\nexport function validateBasic<FP, T>(curve: BasicCurve<FP> & T) {\n  validateField(curve.Fp);\n  validateObject(\n    curve,\n    {\n      n: 'bigint',\n      h: 'bigint',\n      Gx: 'field',\n      Gy: 'field',\n    },\n    {\n      nBitLength: 'isSafeInteger',\n      nByteLength: 'isSafeInteger',\n    }\n  );\n  // Set defaults\n  return Object.freeze({\n    ...nLength(curve.n, curve.nBitLength),\n    ...curve,\n    ...{ p: curve.Fp.ORDER },\n  } as const);\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { CHash, Hex, PrivKey, ensureBytes } from './utils.js';\nimport { Group, GroupConstructor, wNAF, BasicCurve, validateBasic, AffinePoint } from './curve.js';\n\nexport type { AffinePoint };\ntype HmacFnSync = (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array;\ntype EndomorphismOpts = {\n  beta: bigint;\n  splitScalar: (k: bigint) => { k1neg: boolean; k1: bigint; k2neg: boolean; k2: bigint };\n};\nexport type BasicWCurve<T> = BasicCurve<T> & {\n  // Params: a, b\n  a: T;\n  b: T;\n\n  // Optional params\n  allowedPrivateKeyLengths?: readonly number[]; // for P521\n  wrapPrivateKey?: boolean; // bls12-381 requires mod(n) instead of rejecting keys >= n\n  endo?: EndomorphismOpts; // Endomorphism options for Koblitz curves\n  // When a cofactor != 1, there can be an effective methods to:\n  // 1. Determine whether a point is torsion-free\n  isTorsionFree?: (c: ProjConstructor<T>, point: ProjPointType<T>) => boolean;\n  // 2. Clear torsion component\n  clearCofactor?: (c: ProjConstructor<T>, point: ProjPointType<T>) => ProjPointType<T>;\n};\n\ntype Entropy = Hex | true;\nexport type SignOpts = { lowS?: boolean; extraEntropy?: Entropy; prehash?: boolean };\nexport type VerOpts = { lowS?: boolean; prehash?: boolean };\n\n/**\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance of nominative types in TypeScript and interfaces only check for shape, so it's hard to create unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * TODO: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n */\n\n// Instance for 3d XYZ points\nexport interface ProjPointType<T> extends Group<ProjPointType<T>> {\n  readonly px: T;\n  readonly py: T;\n  readonly pz: T;\n  get x(): T;\n  get y(): T;\n  multiply(scalar: bigint): ProjPointType<T>;\n  toAffine(iz?: T): AffinePoint<T>;\n  isTorsionFree(): boolean;\n  clearCofactor(): ProjPointType<T>;\n  assertValidity(): void;\n  hasEvenY(): boolean;\n  toRawBytes(isCompressed?: boolean): Uint8Array;\n  toHex(isCompressed?: boolean): string;\n\n  multiplyUnsafe(scalar: bigint): ProjPointType<T>;\n  multiplyAndAddUnsafe(Q: ProjPointType<T>, a: bigint, b: bigint): ProjPointType<T> | undefined;\n  _setWindowSize(windowSize: number): void;\n}\n// Static methods for 3d XYZ points\nexport interface ProjConstructor<T> extends GroupConstructor<ProjPointType<T>> {\n  new (x: T, y: T, z: T): ProjPointType<T>;\n  fromAffine(p: AffinePoint<T>): ProjPointType<T>;\n  fromHex(hex: Hex): ProjPointType<T>;\n  fromPrivateKey(privateKey: PrivKey): ProjPointType<T>;\n  normalizeZ(points: ProjPointType<T>[]): ProjPointType<T>[];\n}\n\nexport type CurvePointsType<T> = BasicWCurve<T> & {\n  // Bytes\n  fromBytes?: (bytes: Uint8Array) => AffinePoint<T>;\n  toBytes?: (c: ProjConstructor<T>, point: ProjPointType<T>, isCompressed: boolean) => Uint8Array;\n};\n\nfunction validatePointOpts<T>(curve: CurvePointsType<T>) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      a: 'field',\n      b: 'field',\n    },\n    {\n      allowedPrivateKeyLengths: 'array',\n      wrapPrivateKey: 'boolean',\n      isTorsionFree: 'function',\n      clearCofactor: 'function',\n      allowInfinityPoint: 'boolean',\n      fromBytes: 'function',\n      toBytes: 'function',\n    }\n  );\n  const { endo, Fp, a } = opts;\n  if (endo) {\n    if (!Fp.eql(a, Fp.ZERO)) {\n      throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n    }\n    if (\n      typeof endo !== 'object' ||\n      typeof endo.beta !== 'bigint' ||\n      typeof endo.splitScalar !== 'function'\n    ) {\n      throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n    }\n  }\n  return Object.freeze({ ...opts } as const);\n}\n\nexport type CurvePointsRes<T> = {\n  ProjectivePoint: ProjConstructor<T>;\n  normPrivateKeyToScalar: (key: PrivKey) => bigint;\n  weierstrassEquation: (x: T) => T;\n  isWithinCurveOrder: (num: bigint) => boolean;\n};\n\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n  // asn.1 DER encoding utils\n  Err: class DERErr extends Error {\n    constructor(m = '') {\n      super(m);\n    }\n  },\n  _parseInt(data: Uint8Array): { d: bigint; l: Uint8Array } {\n    const { Err: E } = DER;\n    if (data.length < 2 || data[0] !== 0x02) throw new E('Invalid signature integer tag');\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) throw new E('Invalid signature integer: wrong length');\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    if (res[0] & 0b10000000) throw new E('Invalid signature integer: negative');\n    if (res[0] === 0x00 && !(res[1] & 0b10000000))\n      throw new E('Invalid signature integer: unnecessary leading zero');\n    return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n  },\n  toSig(hex: string | Uint8Array): { r: bigint; s: bigint } {\n    // parse DER signature\n    const { Err: E } = DER;\n    const data = typeof hex === 'string' ? h2b(hex) : hex;\n    if (!(data instanceof Uint8Array)) throw new Error('ui8a expected');\n    let l = data.length;\n    if (l < 2 || data[0] != 0x30) throw new E('Invalid signature tag');\n    if (data[1] !== l - 2) throw new E('Invalid signature: incorrect length');\n    const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n    const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n    if (rBytesLeft.length) throw new E('Invalid signature: left bytes after parsing');\n    return { r, s };\n  },\n  hexFromSig(sig: { r: bigint; s: bigint }): string {\n    // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n    const slice = (s: string): string => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n    const h = (num: number | bigint) => {\n      const hex = num.toString(16);\n      return hex.length & 1 ? `0${hex}` : hex;\n    };\n    const s = slice(h(sig.s));\n    const r = slice(h(sig.r));\n    const shl = s.length / 2;\n    const rhl = r.length / 2;\n    const sl = h(shl);\n    const rl = h(rhl);\n    return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n  },\n};\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\n\nexport function weierstrassPoints<T>(opts: CurvePointsType<T>) {\n  const CURVE = validatePointOpts(opts);\n  const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n\n  const toBytes =\n    CURVE.toBytes ||\n    ((_c: ProjConstructor<T>, point: ProjPointType<T>, _isCompressed: boolean) => {\n      const a = point.toAffine();\n      return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n    });\n  const fromBytes =\n    CURVE.fromBytes ||\n    ((bytes: Uint8Array) => {\n      // const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n      const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n      const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n      return { x, y };\n    });\n\n  /**\n   * y² = x³ + ax + b: Short weierstrass curve formula\n   * @returns y²\n   */\n  function weierstrassEquation(x: T): T {\n    const { a, b } = CURVE;\n    const x2 = Fp.sqr(x); // x * x\n    const x3 = Fp.mul(x2, x); // x2 * x\n    return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n  }\n  // Validate whether the passed curve params are valid.\n  // We check if curve equation works for generator point.\n  // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n  // ProjectivePoint class has not been initialized yet.\n  if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n    throw new Error('bad generator point: equation left != right');\n\n  // Valid group elements reside in range 1..n-1\n  function isWithinCurveOrder(num: bigint): boolean {\n    return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n  }\n  function assertGE(num: bigint) {\n    if (!isWithinCurveOrder(num)) throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n  }\n  // Validates if priv key is valid and converts it to bigint.\n  // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n  function normPrivateKeyToScalar(key: PrivKey): bigint {\n    const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n    if (lengths && typeof key !== 'bigint') {\n      if (key instanceof Uint8Array) key = ut.bytesToHex(key);\n      // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n      if (typeof key !== 'string' || !lengths.includes(key.length)) throw new Error('Invalid key');\n      key = key.padStart(nByteLength * 2, '0');\n    }\n    let num: bigint;\n    try {\n      num =\n        typeof key === 'bigint'\n          ? key\n          : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n    } catch (error) {\n      throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n    }\n    if (wrapPrivateKey) num = mod.mod(num, n); // disabled by default, enabled for BLS\n    assertGE(num); // num in range [1..N-1]\n    return num;\n  }\n\n  const pointPrecomputes = new Map<Point, Point[]>();\n  function assertPrjPoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('ProjectivePoint expected');\n  }\n  /**\n   * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n   * Default Point works in 2d / affine coordinates: (x, y)\n   * We're doing calculations in projective, because its operations don't require costly inversion.\n   */\n  class Point implements ProjPointType<T> {\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    static readonly ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n\n    constructor(readonly px: T, readonly py: T, readonly pz: T) {\n      if (px == null || !Fp.isValid(px)) throw new Error('x required');\n      if (py == null || !Fp.isValid(py)) throw new Error('y required');\n      if (pz == null || !Fp.isValid(pz)) throw new Error('z required');\n    }\n\n    // Does not validate if the point is on-curve.\n    // Use fromHex instead, or call assertValidity() later.\n    static fromAffine(p: AffinePoint<T>): Point {\n      const { x, y } = p || {};\n      if (!p || !Fp.isValid(x) || !Fp.isValid(y)) throw new Error('invalid affine point');\n      if (p instanceof Point) throw new Error('projective point not allowed');\n      const is0 = (i: T) => Fp.eql(i, Fp.ZERO);\n      // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n      if (is0(x) && is0(y)) return Point.ZERO;\n      return new Point(x, y, Fp.ONE);\n    }\n\n    get x(): T {\n      return this.toAffine().x;\n    }\n    get y(): T {\n      return this.toAffine().y;\n    }\n\n    /**\n     * Takes a bunch of Projective Points but executes only one\n     * inversion on all of them. Inversion is very slow operation,\n     * so this improves performance massively.\n     * Optimization: converts a list of projective points to a list of identical points with Z=1.\n     */\n    static normalizeZ(points: Point[]): Point[] {\n      const toInv = Fp.invertBatch(points.map((p) => p.pz));\n      return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n    }\n\n    /**\n     * Converts hash string or Uint8Array to Point.\n     * @param hex short/long ECDSA hex\n     */\n    static fromHex(hex: Hex): Point {\n      const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n      P.assertValidity();\n      return P;\n    }\n\n    // Multiplies generator point by privateKey.\n    static fromPrivateKey(privateKey: PrivKey) {\n      return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n    }\n\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n    _WINDOW_SIZE?: number;\n\n    // \"Private method\", don't use it directly\n    _setWindowSize(windowSize: number) {\n      this._WINDOW_SIZE = windowSize;\n      pointPrecomputes.delete(this);\n    }\n\n    // A point on curve is valid if it conforms to equation.\n    assertValidity(): void {\n      if (this.is0()) {\n        // (0, 1, 0) aka ZERO is invalid in most contexts.\n        // In BLS, ZERO can be serialized, so we allow it.\n        // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n        if (CURVE.allowInfinityPoint && !Fp.is0(this.py)) return;\n        throw new Error('bad point: ZERO');\n      }\n      // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n      const { x, y } = this.toAffine();\n      // Check if x, y are valid field elements\n      if (!Fp.isValid(x) || !Fp.isValid(y)) throw new Error('bad point: x or y not FE');\n      const left = Fp.sqr(y); // y²\n      const right = weierstrassEquation(x); // x³ + ax + b\n      if (!Fp.eql(left, right)) throw new Error('bad point: equation left != right');\n      if (!this.isTorsionFree()) throw new Error('bad point: not in prime-order subgroup');\n    }\n    hasEvenY(): boolean {\n      const { y } = this.toAffine();\n      if (Fp.isOdd) return !Fp.isOdd(y);\n      throw new Error(\"Field doesn't support isOdd\");\n    }\n\n    /**\n     * Compare one point to another.\n     */\n    equals(other: Point): boolean {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n      const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n      return U1 && U2;\n    }\n\n    /**\n     * Flips point to one corresponding to (x, -y) in Affine coordinates.\n     */\n    negate(): Point {\n      return new Point(this.px, Fp.neg(this.py), this.pz);\n    }\n\n    // Renes-Costello-Batina exception-free doubling formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 3\n    // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n    double() {\n      const { a, b } = CURVE;\n      const b3 = Fp.mul(b, _3n);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      let t0 = Fp.mul(X1, X1); // step 1\n      let t1 = Fp.mul(Y1, Y1);\n      let t2 = Fp.mul(Z1, Z1);\n      let t3 = Fp.mul(X1, Y1);\n      t3 = Fp.add(t3, t3); // step 5\n      Z3 = Fp.mul(X1, Z1);\n      Z3 = Fp.add(Z3, Z3);\n      X3 = Fp.mul(a, Z3);\n      Y3 = Fp.mul(b3, t2);\n      Y3 = Fp.add(X3, Y3); // step 10\n      X3 = Fp.sub(t1, Y3);\n      Y3 = Fp.add(t1, Y3);\n      Y3 = Fp.mul(X3, Y3);\n      X3 = Fp.mul(t3, X3);\n      Z3 = Fp.mul(b3, Z3); // step 15\n      t2 = Fp.mul(a, t2);\n      t3 = Fp.sub(t0, t2);\n      t3 = Fp.mul(a, t3);\n      t3 = Fp.add(t3, Z3);\n      Z3 = Fp.add(t0, t0); // step 20\n      t0 = Fp.add(Z3, t0);\n      t0 = Fp.add(t0, t2);\n      t0 = Fp.mul(t0, t3);\n      Y3 = Fp.add(Y3, t0);\n      t2 = Fp.mul(Y1, Z1); // step 25\n      t2 = Fp.add(t2, t2);\n      t0 = Fp.mul(t2, t3);\n      X3 = Fp.sub(X3, t0);\n      Z3 = Fp.mul(t2, t1);\n      Z3 = Fp.add(Z3, Z3); // step 30\n      Z3 = Fp.add(Z3, Z3);\n      return new Point(X3, Y3, Z3);\n    }\n\n    // Renes-Costello-Batina exception-free addition formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 1\n    // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n    add(other: Point): Point {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      const a = CURVE.a;\n      const b3 = Fp.mul(CURVE.b, _3n);\n      let t0 = Fp.mul(X1, X2); // step 1\n      let t1 = Fp.mul(Y1, Y2);\n      let t2 = Fp.mul(Z1, Z2);\n      let t3 = Fp.add(X1, Y1);\n      let t4 = Fp.add(X2, Y2); // step 5\n      t3 = Fp.mul(t3, t4);\n      t4 = Fp.add(t0, t1);\n      t3 = Fp.sub(t3, t4);\n      t4 = Fp.add(X1, Z1);\n      let t5 = Fp.add(X2, Z2); // step 10\n      t4 = Fp.mul(t4, t5);\n      t5 = Fp.add(t0, t2);\n      t4 = Fp.sub(t4, t5);\n      t5 = Fp.add(Y1, Z1);\n      X3 = Fp.add(Y2, Z2); // step 15\n      t5 = Fp.mul(t5, X3);\n      X3 = Fp.add(t1, t2);\n      t5 = Fp.sub(t5, X3);\n      Z3 = Fp.mul(a, t4);\n      X3 = Fp.mul(b3, t2); // step 20\n      Z3 = Fp.add(X3, Z3);\n      X3 = Fp.sub(t1, Z3);\n      Z3 = Fp.add(t1, Z3);\n      Y3 = Fp.mul(X3, Z3);\n      t1 = Fp.add(t0, t0); // step 25\n      t1 = Fp.add(t1, t0);\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.mul(b3, t4);\n      t1 = Fp.add(t1, t2);\n      t2 = Fp.sub(t0, t2); // step 30\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.add(t4, t2);\n      t0 = Fp.mul(t1, t4);\n      Y3 = Fp.add(Y3, t0);\n      t0 = Fp.mul(t5, t4); // step 35\n      X3 = Fp.mul(t3, X3);\n      X3 = Fp.sub(X3, t0);\n      t0 = Fp.mul(t3, t1);\n      Z3 = Fp.mul(t5, Z3);\n      Z3 = Fp.add(Z3, t0); // step 40\n      return new Point(X3, Y3, Z3);\n    }\n\n    subtract(other: Point) {\n      return this.add(other.negate());\n    }\n\n    private is0() {\n      return this.equals(Point.ZERO);\n    }\n    private wNAF(n: bigint): { p: Point; f: Point } {\n      return wnaf.wNAFCached(this, pointPrecomputes, n, (comp: Point[]) => {\n        const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n        return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n      });\n    }\n\n    /**\n     * Non-constant-time multiplication. Uses double-and-add algorithm.\n     * It's faster, but should only be used when you don't care about\n     * an exposed private key e.g. sig verification, which works over *public* keys.\n     */\n    multiplyUnsafe(n: bigint): Point {\n      const I = Point.ZERO;\n      if (n === _0n) return I;\n      assertGE(n); // Will throw on 0\n      if (n === _1n) return this;\n      const { endo } = CURVE;\n      if (!endo) return wnaf.unsafeLadder(this, n);\n\n      // Apply endomorphism\n      let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n      let k1p = I;\n      let k2p = I;\n      let d: Point = this;\n      while (k1 > _0n || k2 > _0n) {\n        if (k1 & _1n) k1p = k1p.add(d);\n        if (k2 & _1n) k2p = k2p.add(d);\n        d = d.double();\n        k1 >>= _1n;\n        k2 >>= _1n;\n      }\n      if (k1neg) k1p = k1p.negate();\n      if (k2neg) k2p = k2p.negate();\n      k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n      return k1p.add(k2p);\n    }\n\n    /**\n     * Constant time multiplication.\n     * Uses wNAF method. Windowed method may be 10% faster,\n     * but takes 2x longer to generate and consumes 2x memory.\n     * Uses precomputes when available.\n     * Uses endomorphism for Koblitz curves.\n     * @param scalar by which the point would be multiplied\n     * @returns New point\n     */\n    multiply(scalar: bigint): Point {\n      assertGE(scalar);\n      let n = scalar;\n      let point: Point, fake: Point; // Fake point is used to const-time mult\n      const { endo } = CURVE;\n      if (endo) {\n        const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let { p: k1p, f: f1p } = this.wNAF(k1);\n        let { p: k2p, f: f2p } = this.wNAF(k2);\n        k1p = wnaf.constTimeNegate(k1neg, k1p);\n        k2p = wnaf.constTimeNegate(k2neg, k2p);\n        k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n        point = k1p.add(k2p);\n        fake = f1p.add(f2p);\n      } else {\n        const { p, f } = this.wNAF(n);\n        point = p;\n        fake = f;\n      }\n      // Normalize `z` for both points, but return only real one\n      return Point.normalizeZ([point, fake])[0];\n    }\n\n    /**\n     * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n     * Not using Strauss-Shamir trick: precomputation tables are faster.\n     * The trick could be useful if both P and Q are not G (not in our case).\n     * @returns non-zero affine point\n     */\n    multiplyAndAddUnsafe(Q: Point, a: bigint, b: bigint): Point | undefined {\n      const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n      const mul = (\n        P: Point,\n        a: bigint // Select faster multiply() method\n      ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n      const sum = mul(this, a).add(mul(Q, b));\n      return sum.is0() ? undefined : sum;\n    }\n\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) ∋ (x=x/z, y=y/z)\n    toAffine(iz?: T): AffinePoint<T> {\n      const { px: x, py: y, pz: z } = this;\n      const is0 = this.is0();\n      // If invZ was 0, we return zero point. However we still want to execute\n      // all operations, so we replace invZ with a random number, 1.\n      if (iz == null) iz = is0 ? Fp.ONE : Fp.inv(z);\n      const ax = Fp.mul(x, iz);\n      const ay = Fp.mul(y, iz);\n      const zz = Fp.mul(z, iz);\n      if (is0) return { x: Fp.ZERO, y: Fp.ZERO };\n      if (!Fp.eql(zz, Fp.ONE)) throw new Error('invZ was invalid');\n      return { x: ax, y: ay };\n    }\n    isTorsionFree(): boolean {\n      const { h: cofactor, isTorsionFree } = CURVE;\n      if (cofactor === _1n) return true; // No subgroups, always torsion-free\n      if (isTorsionFree) return isTorsionFree(Point, this);\n      throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n    }\n    clearCofactor(): Point {\n      const { h: cofactor, clearCofactor } = CURVE;\n      if (cofactor === _1n) return this; // Fast-path\n      if (clearCofactor) return clearCofactor(Point, this) as Point;\n      return this.multiplyUnsafe(CURVE.h);\n    }\n\n    toRawBytes(isCompressed = true): Uint8Array {\n      this.assertValidity();\n      return toBytes(Point, this, isCompressed);\n    }\n\n    toHex(isCompressed = true): string {\n      return ut.bytesToHex(this.toRawBytes(isCompressed));\n    }\n  }\n  const _bits = CURVE.nBitLength;\n  const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n  // Validate if generator point is on curve\n  return {\n    CURVE,\n    ProjectivePoint: Point as ProjConstructor<T>,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  };\n}\n\n// Instance\nexport interface SignatureType {\n  readonly r: bigint;\n  readonly s: bigint;\n  readonly recovery?: number;\n  assertValidity(): void;\n  addRecoveryBit(recovery: number): RecoveredSignatureType;\n  hasHighS(): boolean;\n  normalizeS(): SignatureType;\n  recoverPublicKey(msgHash: Hex): ProjPointType<bigint>;\n  toCompactRawBytes(): Uint8Array;\n  toCompactHex(): string;\n  // DER-encoded\n  toDERRawBytes(isCompressed?: boolean): Uint8Array;\n  toDERHex(isCompressed?: boolean): string;\n}\nexport type RecoveredSignatureType = SignatureType & {\n  readonly recovery: number;\n};\n// Static methods\nexport type SignatureConstructor = {\n  new (r: bigint, s: bigint): SignatureType;\n  fromCompact(hex: Hex): SignatureType;\n  fromDER(hex: Hex): SignatureType;\n};\ntype SignatureLike = { r: bigint; s: bigint };\n\nexport type PubKey = Hex | ProjPointType<bigint>;\n\nexport type CurveType = BasicWCurve<bigint> & {\n  hash: CHash; // CHash not FHash because we need outputLen for DRBG\n  hmac: HmacFnSync;\n  randomBytes: (bytesLength?: number) => Uint8Array;\n  lowS?: boolean;\n  bits2int?: (bytes: Uint8Array) => bigint;\n  bits2int_modN?: (bytes: Uint8Array) => bigint;\n};\n\nfunction validateOpts(curve: CurveType) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      hash: 'hash',\n      hmac: 'function',\n      randomBytes: 'function',\n    },\n    {\n      bits2int: 'function',\n      bits2int_modN: 'function',\n      lowS: 'boolean',\n    }\n  );\n  return Object.freeze({ lowS: true, ...opts } as const);\n}\n\nexport type CurveFn = {\n  CURVE: ReturnType<typeof validateOpts>;\n  getPublicKey: (privateKey: PrivKey, isCompressed?: boolean) => Uint8Array;\n  getSharedSecret: (privateA: PrivKey, publicB: Hex, isCompressed?: boolean) => Uint8Array;\n  sign: (msgHash: Hex, privKey: PrivKey, opts?: SignOpts) => RecoveredSignatureType;\n  verify: (signature: Hex | SignatureLike, msgHash: Hex, publicKey: Hex, opts?: VerOpts) => boolean;\n  ProjectivePoint: ProjConstructor<bigint>;\n  Signature: SignatureConstructor;\n  utils: {\n    normPrivateKeyToScalar: (key: PrivKey) => bigint;\n    isValidPrivateKey(privateKey: PrivKey): boolean;\n    randomPrivateKey: () => Uint8Array;\n    precompute: (windowSize?: number, point?: ProjPointType<bigint>) => ProjPointType<bigint>;\n  };\n};\n\nexport function weierstrass(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef) as ReturnType<typeof validateOpts>;\n  const { Fp, n: CURVE_ORDER } = CURVE;\n  const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n  const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n\n  function isValidFieldElement(num: bigint): boolean {\n    return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n  }\n  function modN(a: bigint) {\n    return mod.mod(a, CURVE_ORDER);\n  }\n  function invN(a: bigint) {\n    return mod.invert(a, CURVE_ORDER);\n  }\n\n  const {\n    ProjectivePoint: Point,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  } = weierstrassPoints({\n    ...CURVE,\n    toBytes(_c, point, isCompressed: boolean): Uint8Array {\n      const a = point.toAffine();\n      const x = Fp.toBytes(a.x);\n      const cat = ut.concatBytes;\n      if (isCompressed) {\n        return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n      } else {\n        return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n      }\n    },\n    fromBytes(bytes: Uint8Array) {\n      const len = bytes.length;\n      const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // this.assertValidity() is done inside of fromHex\n      if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n        const x = ut.bytesToNumberBE(tail);\n        if (!isValidFieldElement(x)) throw new Error('Point is not on curve');\n        const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n        let y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n        const isYOdd = (y & _1n) === _1n;\n        // ECDSA\n        const isHeadOdd = (head & 1) === 1;\n        if (isHeadOdd !== isYOdd) y = Fp.neg(y);\n        return { x, y };\n      } else if (len === uncompressedLen && head === 0x04) {\n        const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n        const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n        return { x, y };\n      } else {\n        throw new Error(\n          `Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`\n        );\n      }\n    },\n  });\n  const numToNByteStr = (num: bigint): string =>\n    ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n\n  function isBiggerThanHalfOrder(number: bigint) {\n    const HALF = CURVE_ORDER >> _1n;\n    return number > HALF;\n  }\n\n  function normalizeS(s: bigint) {\n    return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n  }\n  // slice bytes num\n  const slcNum = (b: Uint8Array, from: number, to: number) => ut.bytesToNumberBE(b.slice(from, to));\n\n  /**\n   * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n   */\n  class Signature implements SignatureType {\n    constructor(readonly r: bigint, readonly s: bigint, readonly recovery?: number) {\n      this.assertValidity();\n    }\n\n    // pair (bytes of r, bytes of s)\n    static fromCompact(hex: Hex) {\n      const l = CURVE.nByteLength;\n      hex = ensureBytes('compactSignature', hex, l * 2);\n      return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n    }\n\n    // DER encoded ECDSA signature\n    // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n    static fromDER(hex: Hex) {\n      const { r, s } = DER.toSig(ensureBytes('DER', hex));\n      return new Signature(r, s);\n    }\n\n    assertValidity(): void {\n      // can use assertGE here\n      if (!isWithinCurveOrder(this.r)) throw new Error('r must be 0 < r < CURVE.n');\n      if (!isWithinCurveOrder(this.s)) throw new Error('s must be 0 < s < CURVE.n');\n    }\n\n    addRecoveryBit(recovery: number): RecoveredSignature {\n      return new Signature(this.r, this.s, recovery) as RecoveredSignature;\n    }\n\n    recoverPublicKey(msgHash: Hex): typeof Point.BASE {\n      const { r, s, recovery: rec } = this;\n      const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n      if (rec == null || ![0, 1, 2, 3].includes(rec)) throw new Error('recovery id invalid');\n      const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n      if (radj >= Fp.ORDER) throw new Error('recovery id 2 or 3 invalid');\n      const prefix = (rec & 1) === 0 ? '02' : '03';\n      const R = Point.fromHex(prefix + numToNByteStr(radj));\n      const ir = invN(radj); // r^-1\n      const u1 = modN(-h * ir); // -hr^-1\n      const u2 = modN(s * ir); // sr^-1\n      const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n      if (!Q) throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n      Q.assertValidity();\n      return Q;\n    }\n\n    // Signatures should be low-s, to prevent malleability.\n    hasHighS(): boolean {\n      return isBiggerThanHalfOrder(this.s);\n    }\n\n    normalizeS() {\n      return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n    }\n\n    // DER-encoded\n    toDERRawBytes() {\n      return ut.hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n      return DER.hexFromSig({ r: this.r, s: this.s });\n    }\n\n    // padded bytes of r, then padded bytes of s\n    toCompactRawBytes() {\n      return ut.hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n      return numToNByteStr(this.r) + numToNByteStr(this.s);\n    }\n  }\n  type RecoveredSignature = Signature & { recovery: number };\n\n  const utils = {\n    isValidPrivateKey(privateKey: PrivKey) {\n      try {\n        normPrivateKeyToScalar(privateKey);\n        return true;\n      } catch (error) {\n        return false;\n      }\n    },\n    normPrivateKeyToScalar: normPrivateKeyToScalar,\n\n    /**\n     * Produces cryptographically secure private key from random of size\n     * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n     */\n    randomPrivateKey: (): Uint8Array => {\n      const length = mod.getMinHashLength(CURVE.n);\n      return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n    },\n\n    /**\n     * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n     * Allows to massively speed-up `point.multiply(scalar)`.\n     * @returns cached point\n     * @example\n     * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n     * fast.multiply(privKey); // much faster ECDH now\n     */\n    precompute(windowSize = 8, point = Point.BASE): typeof Point.BASE {\n      point._setWindowSize(windowSize);\n      point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n      return point;\n    },\n  };\n\n  /**\n   * Computes public key for a private key. Checks for validity of the private key.\n   * @param privateKey private key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns Public key, full when isCompressed=false; short when isCompressed=true\n   */\n  function getPublicKey(privateKey: PrivKey, isCompressed = true): Uint8Array {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n  }\n\n  /**\n   * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n   */\n  function isProbPub(item: PrivKey | PubKey): boolean {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && (item as Hex).length;\n    if (arr) return len === compressedLen || len === uncompressedLen;\n    if (str) return len === 2 * compressedLen || len === 2 * uncompressedLen;\n    if (item instanceof Point) return true;\n    return false;\n  }\n\n  /**\n   * ECDH (Elliptic Curve Diffie Hellman).\n   * Computes shared public key from private key and public key.\n   * Checks: 1) private key validity 2) shared key is on-curve.\n   * Does NOT hash the result.\n   * @param privateA private key\n   * @param publicB different public key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns shared public key\n   */\n  function getSharedSecret(privateA: PrivKey, publicB: Hex, isCompressed = true): Uint8Array {\n    if (isProbPub(privateA)) throw new Error('first arg must be private key');\n    if (!isProbPub(publicB)) throw new Error('second arg must be public key');\n    const b = Point.fromHex(publicB); // check for being on-curve\n    return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n  }\n\n  // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n  // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n  // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n  // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n  const bits2int =\n    CURVE.bits2int ||\n    function (bytes: Uint8Array): bigint {\n      // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n      // for some cases, since bytes.length * 8 is not actual bitLength.\n      const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n      const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n      return delta > 0 ? num >> BigInt(delta) : num;\n    };\n  const bits2int_modN =\n    CURVE.bits2int_modN ||\n    function (bytes: Uint8Array): bigint {\n      return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n    };\n  // NOTE: pads output with zero as per spec\n  const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n  /**\n   * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n   */\n  function int2octets(num: bigint): Uint8Array {\n    if (typeof num !== 'bigint') throw new Error('bigint expected');\n    if (!(_0n <= num && num < ORDER_MASK))\n      throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n    // works with order, can have different size than numToField!\n    return ut.numberToBytesBE(num, CURVE.nByteLength);\n  }\n\n  // Steps A, D of RFC6979 3.2\n  // Creates RFC6979 seed; converts msg/privKey to numbers.\n  // Used only in sign, not in verify.\n  // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n  // Also it can be bigger for P224 + SHA256\n  function prepSig(msgHash: Hex, privateKey: PrivKey, opts = defaultSigOpts) {\n    if (['recovered', 'canonical'].some((k) => k in opts))\n      throw new Error('sign() legacy options not supported');\n    const { hash, randomBytes } = CURVE;\n    let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n    if (lowS == null) lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n    msgHash = ensureBytes('msgHash', msgHash);\n    if (prehash) msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n\n    // We can't later call bits2octets, since nested bits2int is broken for curves\n    // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n    // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n    const h1int = bits2int_modN(msgHash);\n    const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n    const seedArgs = [int2octets(d), int2octets(h1int)];\n    // extraEntropy. RFC6979 3.6: additional k' (optional).\n    if (ent != null) {\n      // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n      const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n      seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n    }\n    const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n    const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n    // Converts signature params into point w r/s, checks result for validity.\n    function k2sig(kBytes: Uint8Array): RecoveredSignature | undefined {\n      // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n      const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n      if (!isWithinCurveOrder(k)) return; // Important: all mod() calls here must be done over N\n      const ik = invN(k); // k^-1 mod n\n      const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n      const r = modN(q.x); // r = q.x mod n\n      if (r === _0n) return;\n      // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n      // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n      // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n      const s = modN(ik * modN(m + r * d)); // Not using blinding here\n      if (s === _0n) return;\n      let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n      let normS = s;\n      if (lowS && isBiggerThanHalfOrder(s)) {\n        normS = normalizeS(s); // if lowS was passed, ensure s is always\n        recovery ^= 1; // // in the bottom half of N\n      }\n      return new Signature(r, normS, recovery) as RecoveredSignature; // use normS, not s\n    }\n    return { seed, k2sig };\n  }\n  const defaultSigOpts: SignOpts = { lowS: CURVE.lowS, prehash: false };\n  const defaultVerOpts: VerOpts = { lowS: CURVE.lowS, prehash: false };\n\n  /**\n   * Signs message hash with a private key.\n   * ```\n   * sign(m, d, k) where\n   *   (x, y) = G × k\n   *   r = x mod n\n   *   s = (m + dr)/k mod n\n   * ```\n   * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n   * @param privKey private key\n   * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n   * @returns signature with recovery param\n   */\n  function sign(msgHash: Hex, privKey: PrivKey, opts = defaultSigOpts): RecoveredSignature {\n    const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n    const C = CURVE;\n    const drbg = ut.createHmacDrbg<RecoveredSignature>(C.hash.outputLen, C.nByteLength, C.hmac);\n    return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n  }\n\n  // Enable precomputes. Slows down first publicKey computation by 20ms.\n  Point.BASE._setWindowSize(8);\n  // utils.precompute(8, ProjectivePoint.BASE)\n\n  /**\n   * Verifies a signature against message hash and public key.\n   * Rejects lowS signatures by default: to override,\n   * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n   *\n   * ```\n   * verify(r, s, h, P) where\n   *   U1 = hs^-1 mod n\n   *   U2 = rs^-1 mod n\n   *   R = U1⋅G - U2⋅P\n   *   mod(R.x, n) == r\n   * ```\n   */\n  function verify(\n    signature: Hex | SignatureLike,\n    msgHash: Hex,\n    publicKey: Hex,\n    opts = defaultVerOpts\n  ): boolean {\n    const sg = signature;\n    msgHash = ensureBytes('msgHash', msgHash);\n    publicKey = ensureBytes('publicKey', publicKey);\n    if ('strict' in opts) throw new Error('options.strict was renamed to lowS');\n    const { lowS, prehash } = opts;\n\n    let _sig: Signature | undefined = undefined;\n    let P: ProjPointType<bigint>;\n    try {\n      if (typeof sg === 'string' || sg instanceof Uint8Array) {\n        // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n        // Since DER can also be 2*nByteLength bytes, we check for it first.\n        try {\n          _sig = Signature.fromDER(sg);\n        } catch (derError) {\n          if (!(derError instanceof DER.Err)) throw derError;\n          _sig = Signature.fromCompact(sg);\n        }\n      } else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n        const { r, s } = sg;\n        _sig = new Signature(r, s);\n      } else {\n        throw new Error('PARSE');\n      }\n      P = Point.fromHex(publicKey);\n    } catch (error) {\n      if ((error as Error).message === 'PARSE')\n        throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n      return false;\n    }\n    if (lowS && _sig.hasHighS()) return false;\n    if (prehash) msgHash = CURVE.hash(msgHash);\n    const { r, s } = _sig;\n    const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n    const is = invN(s); // s^-1\n    const u1 = modN(h * is); // u1 = hs^-1 mod n\n    const u2 = modN(r * is); // u2 = rs^-1 mod n\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n    if (!R) return false;\n    const v = modN(R.x);\n    return v === r;\n  }\n  return {\n    CURVE,\n    getPublicKey,\n    getSharedSecret,\n    sign,\n    verify,\n    ProjectivePoint: Point,\n    Signature,\n    utils,\n  };\n}\n\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio<T>(Fp: mod.IField<T>, Z: T) {\n  // Generic implementation\n  const q = Fp.ORDER;\n  let l = _0n;\n  for (let o = q - _1n; o % _2n === _0n; o /= _2n) l += _1n;\n  const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n  // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n  // 2n ** c1 == 2n << (c1-1)\n  const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n  const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n  const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n  const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n  const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n  const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n  const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n  const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n  let sqrtRatio = (u: T, v: T): { isValid: boolean; value: T } => {\n    let tv1 = c6; // 1. tv1 = c6\n    let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n    let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n    tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n    let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n    tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n    tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n    tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n    tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n    let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n    tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n    let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n    tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n    tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n    tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n    tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n    // 17. for i in (c1, c1 - 1, ..., 2):\n    for (let i = c1; i > _1n; i--) {\n      let tv5 = i - _2n; // 18.    tv5 = i - 2\n      tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n      let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n      const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n      tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n      tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n      tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n      tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n      tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n    }\n    return { isValid: isQR, value: tv3 };\n  };\n  if (Fp.ORDER % _4n === _3n) {\n    // sqrt_ratio_3mod4(u, v)\n    const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n    const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n    sqrtRatio = (u: T, v: T) => {\n      let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n      const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n      tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n      let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n      y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n      const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n      const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n      const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n      let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n      return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n    };\n  }\n  // No curves uses that\n  // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n  return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU<T>(\n  Fp: mod.IField<T>,\n  opts: {\n    A: T;\n    B: T;\n    Z: T;\n  }\n) {\n  mod.validateField(Fp);\n  if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n    throw new Error('mapToCurveSimpleSWU: invalid opts');\n  const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n  if (!Fp.isOdd) throw new Error('Fp.isOdd is not implemented!');\n  // Input: u, an element of F.\n  // Output: (x, y), a point on E.\n  return (u: T): { x: T; y: T } => {\n    // prettier-ignore\n    let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n    tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n    tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n    tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n    tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n    tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n    tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n    tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n    tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n    tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n    tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n    tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n    tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n    tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n    tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n    tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n    x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n    const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n    y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n    y = Fp.mul(y, value); // 20.   y = y * y1\n    x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n    y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n    const e1 = Fp.isOdd!(u) === Fp.isOdd!(y); // 23.  e1 = sgn0(u) == sgn0(y)\n    y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n    x = Fp.div(x, tv4); // 25.   x = x / tv4\n    return { x, y };\n  };\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass, CurveType } from './abstract/weierstrass.js';\nimport { CHash } from './abstract/utils.js';\n\n// connects noble-curves to noble-hashes\nexport function getHash(hash: CHash) {\n  return {\n    hash,\n    hmac: (key: Uint8Array, ...msgs: Uint8Array[]) => hmac(hash, key, concatBytes(...msgs)),\n    randomBytes,\n  };\n}\n// Same API as @noble/hashes, with ability to create curve with custom hash\ntype CurveDef = Readonly<Omit<CurveType, 'hash' | 'hmac' | 'randomBytes'>>;\nexport function createCurve(curveDef: CurveDef, defHash: CHash) {\n  const create = (hash: CHash) => weierstrass({ ...curveDef, ...getHash(hash) });\n  return Object.freeze({ ...create(defHash), create });\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { ProjPointType as PointType, mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport type { Hex, PrivKey } from './abstract/utils.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\n\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a: bigint, b: bigint) => (a + b / _2n) / b;\n\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y: bigint): bigint {\n  const P = secp256k1P;\n  // prettier-ignore\n  const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n  // prettier-ignore\n  const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n  const b2 = (y * y * y) % P; // x^3, 11\n  const b3 = (b2 * b2 * y) % P; // x^7\n  const b6 = (pow2(b3, _3n, P) * b3) % P;\n  const b9 = (pow2(b6, _3n, P) * b3) % P;\n  const b11 = (pow2(b9, _2n, P) * b2) % P;\n  const b22 = (pow2(b11, _11n, P) * b11) % P;\n  const b44 = (pow2(b22, _22n, P) * b22) % P;\n  const b88 = (pow2(b44, _44n, P) * b44) % P;\n  const b176 = (pow2(b88, _88n, P) * b88) % P;\n  const b220 = (pow2(b176, _44n, P) * b44) % P;\n  const b223 = (pow2(b220, _3n, P) * b3) % P;\n  const t1 = (pow2(b223, _23n, P) * b22) % P;\n  const t2 = (pow2(t1, _6n, P) * b2) % P;\n  const root = pow2(t2, _2n, P);\n  if (!Fp.eql(Fp.sqr(root), y)) throw new Error('Cannot find square root');\n  return root;\n}\n\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\n\nexport const secp256k1 = createCurve(\n  {\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n      beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n      splitScalar: (k: bigint) => {\n        const n = secp256k1N;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg) k1 = n - k1;\n        if (k2neg) k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n          throw new Error('splitScalar: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n      },\n    },\n  },\n  sha256\n);\n\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES: { [tag: string]: Uint8Array } = {};\nfunction taggedHash(tag: string, ...messages: Uint8Array[]): Uint8Array {\n  let tagP = TAGGED_HASH_PREFIXES[tag];\n  if (tagP === undefined) {\n    const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n    tagP = concatBytes(tagH, tagH);\n    TAGGED_HASH_PREFIXES[tag] = tagP;\n  }\n  return sha256(concatBytes(tagP, ...messages));\n}\n\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point: PointType<bigint>) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n: bigint) => numberToBytesBE(n, 32);\nconst modP = (x: bigint) => mod(x, secp256k1P);\nconst modN = (x: bigint) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q: PointType<bigint>, a: bigint, b: bigint) =>\n  Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv: PrivKey) {\n  let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n  let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n  const scalar = p.hasEvenY() ? d_ : modN(-d_);\n  return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x: bigint): PointType<bigint> {\n  if (!fe(x)) throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n  const xx = modP(x * x);\n  const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n  let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n  if (y % _2n !== _0n) y = modP(-y); // Return the unique point P such that x(P) = x and\n  const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n  p.assertValidity();\n  return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args: Uint8Array[]): bigint {\n  return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey: Hex): Uint8Array {\n  return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(\n  message: Hex,\n  privateKey: PrivKey,\n  auxRand: Hex = randomBytes(32)\n): Uint8Array {\n  const m = ensureBytes('message', message);\n  const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n  const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n  const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n  const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n  const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n  if (k_ === _0n) throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n  const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n  const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n  const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n  sig.set(rx, 0);\n  sig.set(numTo32b(modN(k + e * d)), 32);\n  // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n  if (!schnorrVerify(sig, m, px)) throw new Error('sign: Invalid signature produced');\n  return sig;\n}\n\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature: Hex, message: Hex, publicKey: Hex): boolean {\n  const sig = ensureBytes('signature', signature, 64);\n  const m = ensureBytes('message', message);\n  const pub = ensureBytes('publicKey', publicKey, 32);\n  try {\n    const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n    const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n    if (!fe(r)) return false;\n    const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n    if (!ge(s)) return false;\n    const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n    const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n    if (!R || !R.hasEvenY() || R.toAffine().x !== r) return false; // -eP == (n-e)P\n    return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n  } catch (error) {\n    return false;\n  }\n}\n\nexport const schnorr = /* @__PURE__ */ (() => ({\n  getPublicKey: schnorrGetPublicKey,\n  sign: schnorrSign,\n  verify: schnorrVerify,\n  utils: {\n    randomPrivateKey: secp256k1.utils.randomPrivateKey,\n    lift_x,\n    pointToBytes,\n    numberToBytesBE,\n    bytesToNumberBE,\n    taggedHash,\n    mod,\n  },\n}))();\n\nconst isoMap = /* @__PURE__ */ (() =>\n  isogenyMap(\n    Fp,\n    [\n      // xNum\n      [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n      ],\n      // xDen\n      [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n      // yNum\n      [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n      ],\n      // yDen\n      [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n    ].map((i) => i.map((j) => BigInt(j))) as [bigint[], bigint[], bigint[], bigint[]]\n  ))();\nconst mapSWU = /* @__PURE__ */ (() =>\n  mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n  }))();\nconst htf = /* @__PURE__ */ (() =>\n  createHasher(\n    secp256k1.ProjectivePoint,\n    (scalars: bigint[]) => {\n      const { x, y } = mapSWU(Fp.create(scalars[0]));\n      return isoMap(x, y);\n    },\n    {\n      DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n      encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n      p: Fp.ORDER,\n      m: 1,\n      k: 128,\n      expand: 'xmd',\n      hash: sha256,\n    }\n  ))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n","/**\n * A constant for the zero hash.\n *\n * (**i.e.** `\"0x0000000000000000000000000000000000000000000000000000000000000000\"`)\n *\n * @category Constants\n */\nexport const ZeroHash: string = '0x0000000000000000000000000000000000000000000000000000000000000000';\n","import { ZeroHash } from '../constants/index.js';\nimport {\n    concat,\n    dataLength,\n    getBigInt,\n    getBytes,\n    getNumber,\n    hexlify,\n    toBeArray,\n    isHexString,\n    zeroPadValue,\n    assertArgument,\n    assertPrivate,\n} from '../utils/index.js';\n\nimport type { BigNumberish, BytesLike } from '../utils/index.js';\n\n// Constants\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_2 = BigInt(2);\nconst BN_27 = BigInt(27);\nconst BN_28 = BigInt(28);\nconst BN_35 = BigInt(35);\n\nconst _guard = {};\n\n// @TODO: Allow Uint8Array\n\n/**\n * A SignatureLike\n *\n * @category Crypto\n */\nexport type SignatureLike =\n    | Signature\n    | string\n    | {\n          r: string;\n          s: string;\n          v: BigNumberish;\n          yParity?: 0 | 1;\n          yParityAndS?: string;\n      }\n    | {\n          r: string;\n          yParityAndS: string;\n          yParity?: 0 | 1;\n          s?: string;\n          v?: number;\n      }\n    | {\n          r: string;\n          s: string;\n          yParity: 0 | 1;\n          v?: BigNumberish;\n          yParityAndS?: string;\n      };\n\nfunction toUint256(value: BigNumberish): string {\n    return zeroPadValue(toBeArray(value), 32);\n}\n\n/**\n * A Signature @TODO\n *\n * @category Crypto\n */\nexport class Signature {\n    #r: string;\n    #s: string;\n    #v: 27 | 28;\n    #networkV: null | bigint;\n\n    /**\n     * The `r` value for a signautre.\n     *\n     * This represents the `x` coordinate of a \"reference\" or challenge point, from which the `y` can be computed.\n     */\n    get r(): string {\n        return this.#r;\n    }\n    set r(value: BytesLike) {\n        assertArgument(dataLength(value) === 32, 'invalid r', 'value', value);\n        this.#r = hexlify(value);\n    }\n\n    /**\n     * The `s` value for a signature.\n     */\n    get s(): string {\n        return this.#s;\n    }\n    set s(_value: BytesLike) {\n        assertArgument(dataLength(_value) === 32, 'invalid s', 'value', _value);\n        const value = hexlify(_value);\n        assertArgument(parseInt(value.substring(0, 3)) < 8, 'non-canonical s', 'value', value);\n        this.#s = value;\n    }\n\n    /**\n     * The `v` value for a signature.\n     *\n     * Since a given `x` value for `r` has two possible values for its correspondin `y`, the `v` indicates which of the\n     * two `y` values to use.\n     *\n     * It is normalized to the values `27` or `28` for legacy purposes.\n     */\n    get v(): 27 | 28 {\n        return this.#v;\n    }\n    set v(value: BigNumberish) {\n        const v = getNumber(value, 'value');\n        assertArgument(v === 27 || v === 28, 'invalid v', 'v', value);\n        this.#v = v;\n    }\n\n    /**\n     * The EIP-155 `v` for legacy transactions. For non-legacy transactions, this value is `null`.\n     */\n    get networkV(): null | bigint {\n        return this.#networkV;\n    }\n\n    /**\n     * The chain ID for EIP-155 legacy transactions. For non-legacy transactions, this value is `null`.\n     */\n    get legacyChainId(): null | bigint {\n        const v = this.networkV;\n        if (v == null) {\n            return null;\n        }\n        return Signature.getChainId(v);\n    }\n\n    /**\n     * The `yParity` for the signature.\n     *\n     * See `v` for more details on how this value is used.\n     */\n    get yParity(): 0 | 1 {\n        return this.v === 27 ? 0 : 1;\n    }\n\n    /**\n     * The [EIP-2098](https://eips.ethereum.org/EIPS/eip-2098) compact representation of the `yParity` and `s` compacted\n     * into a single `bytes32`.\n     */\n    get yParityAndS(): string {\n        // The EIP-2098 compact representation\n        const yParityAndS = getBytes(this.s);\n        if (this.yParity) {\n            yParityAndS[0] |= 0x80;\n        }\n        return hexlify(yParityAndS);\n    }\n\n    /**\n     * The [EIP-2098](https://eips.ethereum.org/EIPS/eip-2098) compact representation.\n     */\n    get compactSerialized(): string {\n        return concat([this.r, this.yParityAndS]);\n    }\n\n    /**\n     * The serialized representation.\n     */\n    get serialized(): string {\n        return concat([this.r, this.s, this.yParity ? '0x1c' : '0x1b']);\n    }\n\n    /**\n     * @ignore\n     */\n    constructor(guard: any, r: string, s: string, v: 27 | 28) {\n        assertPrivate(guard, _guard, 'Signature');\n        this.#r = r;\n        this.#s = s;\n        this.#v = v;\n        this.#networkV = null;\n    }\n\n    [Symbol.for('nodejs.util.inspect.custom')](): string {\n        return `Signature { r: \"${this.r}\", s: \"${this.s}\", yParity: ${this.yParity}, networkV: ${this.networkV} }`;\n    }\n\n    /**\n     * Returns a new identical {@link Signature | **Signature**}.\n     */\n    clone(): Signature {\n        const clone = new Signature(_guard, this.r, this.s, this.v);\n        if (this.networkV) {\n            clone.#networkV = this.networkV;\n        }\n        return clone;\n    }\n\n    /**\n     * Returns a representation that is compatible with `JSON.stringify`.\n     */\n    toJSON(): any {\n        const networkV = this.networkV;\n        return {\n            _type: 'signature',\n            networkV: networkV != null ? networkV.toString() : null,\n            r: this.r,\n            s: this.s,\n            v: this.v,\n        };\n    }\n\n    /**\n     * Compute the chain ID from the `v` in a legacy EIP-155 transactions.\n     *\n     * @example\n     *\n     * ```ts\n     * Signature.getChainId(45);\n     *\n     * Signature.getChainId(46);\n     * ```\n     *\n     * @param {BigNumberish} v - The `v` value from the signature.\n     * @returns {bigint} The chain ID.\n     */\n    static getChainId(v: BigNumberish): bigint {\n        const bv = getBigInt(v, 'v');\n\n        // The v is not an EIP-155 v, so it is the unspecified chain ID\n        if (bv == BN_27 || bv == BN_28) {\n            return BN_0;\n        }\n\n        // Bad value for an EIP-155 v\n        assertArgument(bv >= BN_35, 'invalid EIP-155 v', 'v', v);\n\n        return (bv - BN_35) / BN_2;\n    }\n\n    /**\n     * Compute the `v` for a chain ID for a legacy EIP-155 transactions.\n     *\n     * Legacy transactions which use [EIP-155](https://eips.ethereum.org/EIPS/eip-155) hijack the `v` property to\n     * include the chain ID.\n     *\n     * @example\n     *\n     * ```ts\n     * Signature.getChainIdV(5, 27);\n     *\n     * Signature.getChainIdV(5, 28);\n     * ```\n     *\n     * @param {BigNumberish} chainId - The chain ID.\n     * @param {27 | 28} v - The `v` value.\n     * @returns {bigint} The `v` value.\n     */\n    static getChainIdV(chainId: BigNumberish, v: 27 | 28): bigint {\n        return getBigInt(chainId) * BN_2 + BigInt(35 + v - 27);\n    }\n\n    /**\n     * Compute the normalized legacy transaction `v` from a `yParirty`, a legacy transaction `v` or a legacy\n     * [EIP-155](https://eips.ethereum.org/EIPS/eip-155) transaction.\n     *\n     * @example\n     *\n     * ```ts\n     * // The values 0 and 1 imply v is actually yParity\n     * Signature.getNormalizedV(0);\n     *\n     * // Legacy non-EIP-1559 transaction (i.e. 27 or 28)\n     * Signature.getNormalizedV(27);\n     *\n     * // Legacy EIP-155 transaction (i.e. >= 35)\n     * Signature.getNormalizedV(46);\n     *\n     * // Invalid values throw\n     * Signature.getNormalizedV(5);\n     * ```\n     *\n     * @param {BigNumberish} v - The `v` value.\n     * @returns {27 | 28} The normalized `v` value.\n     * @throws {Error} Thrown if the `v` is invalid.\n     */\n    static getNormalizedV(v: BigNumberish): 27 | 28 {\n        const bv = getBigInt(v);\n\n        if (bv === BN_0 || bv === BN_27) {\n            return 27;\n        }\n        if (bv === BN_1 || bv === BN_28) {\n            return 28;\n        }\n\n        assertArgument(bv >= BN_35, 'invalid v', 'v', v);\n\n        // Otherwise, EIP-155 v means odd is 27 and even is 28\n        return bv & BN_1 ? 27 : 28;\n    }\n\n    /**\n     * Creates a new {@link Signature | **Signature**}.\n     *\n     * If no `sig` is provided, a new {@link Signature | **Signature**} is created with default values.\n     *\n     * If `sig` is a string, it is parsed.\n     *\n     * @param {SignatureLike} [sig] - The signature to create.\n     * @returns {Signature} The new signature.\n     */\n    static from(sig?: SignatureLike): Signature {\n        function assertError(check: unknown, message: string): asserts check {\n            assertArgument(check, message, 'signature', sig);\n        }\n\n        if (sig == null) {\n            return new Signature(_guard, ZeroHash, ZeroHash, 27);\n        }\n\n        if (typeof sig === 'string') {\n            const bytes = getBytes(sig, 'signature');\n            if (bytes.length === 64) {\n                const r = hexlify(bytes.slice(0, 32));\n                const s = bytes.slice(32, 64);\n                const v = s[0] & 0x80 ? 28 : 27;\n                s[0] &= 0x7f;\n                return new Signature(_guard, r, hexlify(s), v);\n            }\n\n            if (bytes.length === 65) {\n                const r = hexlify(bytes.slice(0, 32));\n                const s = bytes.slice(32, 64);\n                assertError((s[0] & 0x80) === 0, 'non-canonical s');\n                const v = Signature.getNormalizedV(bytes[64]);\n                return new Signature(_guard, r, hexlify(s), v);\n            }\n\n            assertError(false, 'invalid raw signature length');\n        }\n\n        if (sig instanceof Signature) {\n            return sig.clone();\n        }\n\n        // Get r\n        const _r = sig.r;\n        assertError(_r != null, 'missing r');\n        const r = toUint256(_r);\n\n        // Get s; by any means necessary (we check consistency below)\n        const s = (function (s?: string, yParityAndS?: string) {\n            if (s != null) {\n                return toUint256(s);\n            }\n\n            if (yParityAndS != null) {\n                assertError(isHexString(yParityAndS, 32), 'invalid yParityAndS');\n                const bytes = getBytes(yParityAndS);\n                bytes[0] &= 0x7f;\n                return hexlify(bytes);\n            }\n\n            assertError(false, 'missing s');\n        })(sig.s, sig.yParityAndS);\n        assertError((getBytes(s)[0] & 0x80) == 0, 'non-canonical s');\n\n        // Get v; by any means necessary (we check consistency below)\n        const { networkV, v } = (function (\n            _v?: BigNumberish,\n            yParityAndS?: string,\n            yParity?: number,\n        ): { networkV?: bigint; v: 27 | 28 } {\n            if (_v != null) {\n                const v = getBigInt(_v);\n                return {\n                    networkV: v >= BN_35 ? v : undefined,\n                    v: Signature.getNormalizedV(v),\n                };\n            }\n\n            if (yParityAndS != null) {\n                assertError(isHexString(yParityAndS, 32), 'invalid yParityAndS');\n                return { v: getBytes(yParityAndS)[0] & 0x80 ? 28 : 27 };\n            }\n\n            if (yParity != null) {\n                switch (yParity) {\n                    case 0:\n                        return { v: 27 };\n                    case 1:\n                        return { v: 28 };\n                }\n                assertError(false, 'invalid yParity');\n            }\n\n            assertError(false, 'missing v');\n        })(sig.v, sig.yParityAndS, sig.yParity);\n\n        const result = new Signature(_guard, r, s, v);\n        if (networkV) {\n            result.#networkV = networkV;\n        }\n\n        // If multiple of v, yParity, yParityAndS we given, check they match\n        assertError(!('yParity' in sig && sig.yParity !== result.yParity), 'yParity mismatch');\n        assertError(!('yParityAndS' in sig && sig.yParityAndS !== result.yParityAndS), 'yParityAndS mismatch');\n\n        return result;\n    }\n}\n","/**\n * Add details about signing here.\n */\n\nimport { secp256k1 } from '@noble/curves/secp256k1';\n\nimport { concat, dataLength, getBytes, getBytesCopy, hexlify, toBeHex, assertArgument } from '../utils/index.js';\n\nimport { Signature } from './signature.js';\n\nimport type { BytesLike } from '../utils/index.js';\n\nimport type { SignatureLike } from './index.js';\n\n/**\n * A **SigningKey** provides high-level access to the elliptic curve cryptography (ECC) operations and key management.\n *\n * @category Crypto\n */\nexport class SigningKey {\n    #privateKey: string;\n\n    /**\n     * Creates a new **SigningKey** for `privateKey`.\n     */\n    constructor(privateKey: BytesLike) {\n        assertArgument(dataLength(privateKey) === 32, 'invalid private key', 'privateKey', '[REDACTED]');\n        this.#privateKey = hexlify(privateKey);\n    }\n\n    /**\n     * The private key.\n     */\n    get privateKey(): string {\n        return this.#privateKey;\n    }\n\n    /**\n     * The uncompressed public key.\n     *\n     * This will always begin with the prefix `0x04` and be 132 characters long (the `0x` prefix and 130 hexadecimal\n     * nibbles).\n     */\n    get publicKey(): string {\n        return SigningKey.computePublicKey(this.#privateKey);\n    }\n\n    /**\n     * The compressed public key.\n     *\n     * This will always begin with either the prefix `0x02` or `0x03` and be 68 characters long (the `0x` prefix and 33\n     * hexadecimal nibbles)\n     */\n    get compressedPublicKey(): string {\n        return SigningKey.computePublicKey(this.#privateKey, true);\n    }\n\n    /**\n     * Return the signature of the signed `digest`.\n     *\n     * @param {BytesLike} digest - The data to sign.\n     * @returns {Signature} The signature of the data.\n     * @throws {Error} If the digest is not 32 bytes long.\n     */\n    sign(digest: BytesLike): Signature {\n        assertArgument(dataLength(digest) === 32, 'invalid digest length', 'digest', digest);\n\n        const sig = secp256k1.sign(getBytesCopy(digest), getBytesCopy(this.#privateKey), {\n            lowS: true,\n        });\n\n        return Signature.from({\n            r: toBeHex('0x' + sig.r.toString(16), 32),\n            s: toBeHex('0x' + sig.s.toString(16), 32),\n            v: sig.recovery ? 0x1c : 0x1b,\n        });\n    }\n\n    /**\n     * Returns the [ECDH](https://en.wikipedia.org/wiki/Elliptic-curve_Diffie-Hellman) shared secret between this\n     * private key and the `other` key.\n     *\n     * The `other` key may be any type of key, a raw public key, a compressed/uncompressed pubic key or aprivate key.\n     *\n     * Best practice is usually to use a cryptographic hash on the returned value before using it as a symetric secret.\n     *\n     * @example\n     *\n     * ```ts\n     * sign1 = new SigningKey(id('some-secret-1'));\n     * sign2 = new SigningKey(id('some-secret-2'));\n     *\n     * // Notice that privA.computeSharedSecret(pubB)...\n     * sign1.computeSharedSecret(sign2.publicKey);\n     *\n     * // ...is equal to privB.computeSharedSecret(pubA).\n     * sign2.computeSharedSecret(sign1.publicKey);\n     * ```\n     *\n     * @param {BytesLike} other - The other key to compute the shared secret with.\n     * @returns {string} The shared secret.\n     */\n    computeSharedSecret(other: BytesLike): string {\n        const pubKey = SigningKey.computePublicKey(other);\n        return hexlify(secp256k1.getSharedSecret(getBytesCopy(this.#privateKey), getBytes(pubKey), false));\n    }\n\n    /**\n     * Compute the public key for `key`, optionally `compressed`.\n     *\n     * The `key` may be any type of key, a raw public key, a compressed/uncompressed public key or private key.\n     *\n     * @example\n     *\n     * ```ts\n     * sign = new SigningKey(id('some-secret'));\n     *\n     * // Compute the uncompressed public key for a private key\n     * SigningKey.computePublicKey(sign.privateKey);\n     *\n     * // Compute the compressed public key for a private key\n     * SigningKey.computePublicKey(sign.privateKey, true);\n     *\n     * // Compute the uncompressed public key\n     * SigningKey.computePublicKey(sign.publicKey, false);\n     *\n     * // Compute the Compressed a public key\n     * SigningKey.computePublicKey(sign.publicKey, true);\n     * ```\n     *\n     * @param {BytesLike} key - The key to compute the public key for.\n     * @param {boolean} [compressed] - Whether to return the compressed public key.\n     * @returns {string} The public key.\n     */\n    static computePublicKey(key: BytesLike, compressed?: boolean): string {\n        let bytes = getBytes(key, 'key');\n\n        // private key\n        if (bytes.length === 32) {\n            const pubKey = secp256k1.getPublicKey(bytes, !!compressed);\n            return hexlify(pubKey);\n        }\n\n        // raw public key; use uncompressed key with 0x04 prefix\n        if (bytes.length === 64) {\n            const pub = new Uint8Array(65);\n            pub[0] = 0x04;\n            pub.set(bytes, 1);\n            bytes = pub;\n        }\n\n        const point = secp256k1.ProjectivePoint.fromHex(bytes);\n        return hexlify(point.toRawBytes(compressed));\n    }\n\n    /**\n     * Returns the public key for the private key which produced the `signature` for the given `digest`.\n     *\n     * @example\n     *\n     * ```ts\n     * key = new SigningKey(id('some-secret'));\n     * digest = id('hello world');\n     * sig = key.sign(digest);\n     *\n     * // Notice the signer public key...\n     * key.publicKey;\n     *\n     * // ...is equal to the recovered public key\n     * SigningKey.recoverPublicKey(digest, sig);\n     * ```\n     *\n     * @param {BytesLike} digest - The data that was signed.\n     * @param {SignatureLike} signature - The signature of the data.\n     * @returns {string} The public key.\n     */\n    static recoverPublicKey(digest: BytesLike, signature: SignatureLike): string {\n        assertArgument(dataLength(digest) === 32, 'invalid digest length', 'digest', digest);\n\n        const sig = Signature.from(signature);\n\n        let secpSig = secp256k1.Signature.fromCompact(getBytesCopy(concat([sig.r, sig.s])));\n        secpSig = secpSig.addRecoveryBit(sig.yParity);\n\n        const pubKey = secpSig.recoverPublicKey(getBytesCopy(digest));\n        assertArgument(pubKey != null, 'invalid signautre for digest', 'signature', signature);\n\n        return '0x' + pubKey.toHex(false);\n    }\n\n    /**\n     * Returns the point resulting from adding the ellipic curve points `p0` and `p1`.\n     *\n     * This is not a common function most developers should require, but can be useful for certain privacy-specific\n     * techniques.\n     *\n     * For example, it is used by [**QuaiHDWallet**](../classes/QuaiHDWallet) to compute child addresses from parent\n     * public keys and chain codes.\n     *\n     * @param {BytesLike} p0 - The first point to add.\n     * @param {BytesLike} p1 - The second point to add.\n     * @param {boolean} [compressed] - Whether to return the compressed public key.\n     * @returns {string} The sum of the points.\n     */\n    static addPoints(p0: BytesLike, p1: BytesLike, compressed?: boolean): string {\n        const pub0 = secp256k1.ProjectivePoint.fromHex(SigningKey.computePublicKey(p0).substring(2));\n        const pub1 = secp256k1.ProjectivePoint.fromHex(SigningKey.computePublicKey(p1).substring(2));\n        return '0x' + pub0.add(pub1).toHex(!!compressed);\n    }\n}\n","import { keccak256, SigningKey } from '../crypto/index.js';\nimport {\n    getBytes,\n    assertArgument,\n    BytesLike,\n    concat,\n    zeroPadValue,\n    dataSlice,\n    BigNumberish,\n    toBigInt,\n    toBeHex,\n    stripZerosLeft,\n} from '../utils/index.js';\n\nimport type { SignatureLike } from '../crypto/index.js';\n\nexport function formatMixedCaseChecksumAddress(address: string): string {\n    address = address.toLowerCase();\n\n    const chars = address.substring(2).split('');\n\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n\n    const hashed = getBytes(keccak256(expanded));\n\n    for (let i = 0; i < 40; i += 2) {\n        if (hashed[i >> 1] >> 4 >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n\n    return '0x' + chars.join('');\n}\n\n/**\n * Returns a normalized and checksumed address for `address`. This accepts non-checksum addressesa and checksum\n * addresses.\n *\n * The checksum in Quai uses the capitalization (upper-case vs lower-case) of the characters within an address to encode\n * its checksum, which offers, on average, a checksum of 15-bits.\n *\n * If `address` contains both upper-case and lower-case, it is assumed to already be a checksum address and its checksum\n * is validated, and if the address fails its expected checksum an error is thrown.\n *\n * If you wish the checksum of `address` to be ignore, it should be converted to lower-case (i.e. `.toLowercase()`)\n * before being passed in. This should be a very rare situation though, that you wish to bypass the safeguards in place\n * to protect against an address that has been incorrectly copied from another source.\n *\n * @category Address\n * @example\n *\n * ```js\n * // Adds the checksum (via upper-casing specific letters)\n * getAddress('0x8ba1f109551bd432803012645ac136ddd64dba72');\n *\n * // Throws an error if an address contains mixed case,\n * // but the checksum fails\n * getAddress('0x8Ba1f109551bD432803012645Ac136ddd64DBA72');\n * ```\n */\nexport function getAddress(address: string): string {\n    assertArgument(typeof address === 'string', 'invalid address', 'address', address);\n\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n        // Missing the 0x prefix\n        if (!address.startsWith('0x')) {\n            address = '0x' + address;\n        }\n\n        const result = formatMixedCaseChecksumAddress(address);\n\n        // If original address is mix cased and recomputed version doesn't\n        // match the original this could indicate a potential typo or mispaste.\n        assertArgument(\n            !address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) || result === address,\n            'invalid address checksum',\n            'address',\n            address,\n        );\n\n        return result;\n    }\n\n    assertArgument(false, 'invalid address string format', 'address', address);\n}\n\nexport function getContractAddress(from: string, nonce: BigNumberish, data: BytesLike): string {\n    const nonceBytes = zeroPadValue(toBeHex(toBigInt(nonce)), 8);\n    return getAddress(dataSlice(keccak256(concat([getAddress(from), nonceBytes, stripZerosLeft(data)])), 12));\n}\n\n/**\n * Returns the address for the `key`.\n *\n * The key may be any standard form of public key or a private key.\n *\n * @category Address\n * @param {string | SigningKey} key - The key to compute the address for.\n * @returns {string} The address.\n */\nexport function computeAddress(key: string | SigningKey): string {\n    let pubkey: string;\n    if (typeof key === 'string') {\n        pubkey = SigningKey.computePublicKey(key, false);\n    } else {\n        pubkey = key.publicKey;\n    }\n    return getAddress(keccak256('0x' + pubkey.substring(4)).substring(26));\n}\n\n/**\n * Returns the recovered address for the private key that was used to sign `digest` that resulted in `signature`.\n *\n * @category Address\n * @param {BytesLike} digest - The digest of the message.\n * @param {SignatureLike} signature - The signature.\n * @returns {string} The address.\n */\nexport function recoverAddress(digest: BytesLike, signature: SignatureLike): string {\n    return computeAddress(SigningKey.recoverPublicKey(digest, signature));\n}\n","/**\n * A Typed object allows a value to have its type explicitly specified.\n *\n * For example, in Solidity, the value `45` could represent a `uint8` or a `uint256`. The value `0x1234` could represent\n * a `bytes2` or `bytes`.\n *\n * Since JavaScript has no meaningful way to explicitly inform any APIs which what the type is, this allows transparent\n * interoperation with Soldity.\n *\n * @category Application Binary Interface\n */\n\nimport { assertPrivate, defineProperties } from '../utils/index.js';\n\nimport type { Addressable } from '../address/index.js';\nimport type { BigNumberish, BytesLike } from '../utils/index.js';\n\nimport type { Result } from './coders/abstract-coder.js';\n\nconst _guard = {};\n\nfunction n(value: BigNumberish, width: number): Typed {\n    let signed = false;\n    if (width < 0) {\n        signed = true;\n        width *= -1;\n    }\n\n    // @TODO: Check range is valid for value\n    return new Typed(_guard, `${signed ? '' : 'u'}int${width}`, value, { signed, width });\n}\n\nfunction b(value: BytesLike, size?: number): Typed {\n    // @TODO: Check range is valid for value\n    return new Typed(_guard, `bytes${size ? size : ''}`, value, { size });\n}\n\n// @TODO: Remove this in v7, it was replaced by TypedBigInt\n/**\n * @ignore\n */\nexport interface TypedNumber extends Typed {\n    value: number;\n    defaultValue(): number;\n    minValue(): number;\n    maxValue(): number;\n}\n\n/**\n * A **Typed** that represents a numeric value.\n *\n * @category Application Binary Interface\n */\nexport interface TypedBigInt extends Typed {\n    /**\n     * The value.\n     */\n    value: bigint;\n\n    /**\n     * The default value for all numeric types is `0`.\n     */\n    defaultValue(): bigint;\n\n    /**\n     * The minimum value for this type, accounting for bit-width and signed-ness.\n     */\n    minValue(): bigint;\n\n    /**\n     * The minimum value for this type, accounting for bit-width.\n     */\n    maxValue(): bigint;\n}\n\n/**\n * A **Typed** that represents a binary sequence of data as bytes.\n *\n * @category Application Binary Interface\n */\nexport interface TypedData extends Typed {\n    /**\n     * The value.\n     */\n    value: string;\n\n    /**\n     * The default value for this type.\n     */\n    defaultValue(): string;\n}\n\n/**\n * A **Typed** that represents a UTF-8 sequence of bytes.\n *\n * @category Application Binary Interface\n */\nexport interface TypedString extends Typed {\n    /**\n     * The value.\n     */\n    value: string;\n\n    /**\n     * The default value for the string type is the empty string (i.e. `\"\"`).\n     */\n    defaultValue(): string;\n}\n\nconst _typedSymbol = Symbol.for('_quais_typed');\n\n/**\n * The **Typed** class to wrap values providing explicit type information.\n *\n * @category Application Binary Interface\n */\nexport class Typed {\n    /**\n     * The type, as a Solidity-compatible type.\n     */\n    readonly type!: string;\n\n    /**\n     * The actual value.\n     */\n    readonly value!: any;\n\n    readonly #options: any;\n\n    /**\n     * @ignore\n     */\n    readonly _typedSymbol!: symbol;\n\n    /**\n     * @ignore\n     */\n    constructor(guard: any, type: string, value: any, options?: any) {\n        if (options == null) {\n            options = null;\n        }\n        assertPrivate(_guard, guard, 'Typed');\n        defineProperties<Typed>(this, { _typedSymbol, type, value });\n        this.#options = options;\n\n        // Check the value is valid\n        this.format();\n    }\n\n    /**\n     * Format the type as a Human-Readable type.\n     *\n     * @returns The human-readable type for the provided type.\n     * @throws If the type is array or dynamic array.\n     */\n    format(): string {\n        if (this.type === 'array') {\n            throw new Error('');\n        } else if (this.type === 'dynamicArray') {\n            throw new Error('');\n        } else if (this.type === 'tuple') {\n            return `tuple(${this.value.map((v: Typed) => v.format()).join(',')})`;\n        }\n\n        return this.type;\n    }\n\n    /**\n     * The default value returned by this type.\n     *\n     * @returns The default value for this type.\n     */\n    defaultValue(): string | number | bigint | Result {\n        return 0;\n    }\n\n    /**\n     * The minimum value for numeric types.\n     *\n     * @returns The minimum value for the provided numeric type.\n     */\n    minValue(): string | number | bigint {\n        return 0;\n    }\n\n    /**\n     * The maximum value for numeric types.\n     *\n     * @returns The maximum value for the provided numeric type.\n     */\n    maxValue(): string | number | bigint {\n        return 0;\n    }\n\n    /**\n     * Returns whether this is a {@link TypedBigInt | **TypedBigInt**}. If true, a type guard is provided.\n     *\n     * @returns `true` if this is a big integer.\n     */\n    isBigInt(): this is TypedBigInt {\n        return !!this.type.match(/^u?int[0-9]+$/);\n    }\n\n    /**\n     * Returns whether this is a {@link TypedData | **TypedData**}. If true, a type guard is provided.\n     *\n     * @returns {boolean} `true` if this is a number.\n     */\n    isData(): this is TypedData {\n        return this.type.startsWith('bytes');\n    }\n\n    /**\n     * Return whether this is a {@link TypedString | **TypedString**}. If true, a type guard is provided.\n     *\n     * @returns {boolean} `true` if this is a string.\n     */\n    isString(): this is TypedString {\n        return this.type === 'string';\n    }\n\n    /**\n     * Returns the tuple name.\n     *\n     * @returns {boolean} The tuple name if this is a tuple.\n     * @throws If this is not a tuple.\n     */\n    get tupleName(): null | string {\n        if (this.type !== 'tuple') {\n            throw TypeError('not a tuple');\n        }\n        return this.#options;\n    }\n\n    /**\n     * Returns the length of a typed array.\n     *\n     * @returns {number} The length of the array type or `-1` if it is dynamic.\n     * @throws If this is not an array.\n     */\n    get arrayLength(): null | number {\n        if (this.type !== 'array') {\n            throw TypeError('not an array');\n        }\n        if (this.#options === true) {\n            return -1;\n        }\n        if (this.#options === false) {\n            return (<Array<any>>this.value).length;\n        }\n        return null;\n    }\n\n    /**\n     * Returns a new **Typed** of `type` with the `value`.\n     *\n     * @param {string} type - The type to use.\n     * @param {any} value - The value to use.\n     */\n    static from(type: string, value: any): Typed {\n        return new Typed(_guard, type, value);\n    }\n\n    /**\n     * Return a new `uint8` type for v.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint8`.\n     * @returns {uint8} A new `uint8` type for `v`.\n     */\n    static uint8(v: BigNumberish): Typed {\n        return n(v, 8);\n    }\n\n    /**\n     * Return a new `uint16` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint16`.\n     * @returns A new `uint16` type for `v`.\n     */\n    static uint16(v: BigNumberish): Typed {\n        return n(v, 16);\n    }\n\n    /**\n     * Return a new `uint24` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint24`.\n     * @returns A new `uint24` type for `v`.\n     */\n    static uint24(v: BigNumberish): Typed {\n        return n(v, 24);\n    }\n\n    /**\n     * Return a new `uint32` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint32`.\n     * @returns A new `uint32` type for `v`.\n     */\n    static uint32(v: BigNumberish): Typed {\n        return n(v, 32);\n    }\n\n    /**\n     * Return a new `uint40` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint40`.\n     * @returns A new `uint40` type for `v`.\n     */\n    static uint40(v: BigNumberish): Typed {\n        return n(v, 40);\n    }\n\n    /**\n     * Return a new `uint48` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint48`.\n     * @returns A new `uint48` type for `v`.\n     */\n    static uint48(v: BigNumberish): Typed {\n        return n(v, 48);\n    }\n\n    /**\n     * Return a new `uint56` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint56`.\n     * @returns A new `uint56` type for `v`.\n     */\n    static uint56(v: BigNumberish): Typed {\n        return n(v, 56);\n    }\n\n    /**\n     * Return a new `uint64` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint64`.\n     * @returns A new `uint64` type for `v`.\n     */\n    static uint64(v: BigNumberish): Typed {\n        return n(v, 64);\n    }\n\n    /**\n     * Return a new `uint72` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint72`.\n     * @returns A new `uint72` type for `v`.\n     */\n    static uint72(v: BigNumberish): Typed {\n        return n(v, 72);\n    }\n\n    /**\n     * Return a new `uint80` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint80`.\n     * @returns A new `uint80` type for `v`.\n     */\n    static uint80(v: BigNumberish): Typed {\n        return n(v, 80);\n    }\n\n    /**\n     * Return a new `uint88` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint88`.\n     * @returns A new `uint88` type for `v`.\n     */\n    static uint88(v: BigNumberish): Typed {\n        return n(v, 88);\n    }\n\n    /**\n     * Return a new `uint96` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint96`.\n     * @returns A new `uint96` type for `v`.\n     */\n    static uint96(v: BigNumberish): Typed {\n        return n(v, 96);\n    }\n\n    /**\n     * Return a new `uint104` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint104`.\n     * @returns A new `uint104` type for `v`.\n     */\n    static uint104(v: BigNumberish): Typed {\n        return n(v, 104);\n    }\n\n    /**\n     * Return a new `uint112` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint112`.\n     * @returns A new `uint112` type for `v`.\n     */\n    static uint112(v: BigNumberish): Typed {\n        return n(v, 112);\n    }\n\n    /**\n     * Return a new `uint120` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint120`.\n     * @returns A new `uint120` type for `v`.\n     */\n    static uint120(v: BigNumberish): Typed {\n        return n(v, 120);\n    }\n\n    /**\n     * Return a new `uint128` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint128`.\n     * @returns A new `uint128` type for `v`.\n     */\n    static uint128(v: BigNumberish): Typed {\n        return n(v, 128);\n    }\n\n    /**\n     * Return a new `uint136` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint136`.\n     * @returns A new `uint136` type for `v`.\n     */\n    static uint136(v: BigNumberish): Typed {\n        return n(v, 136);\n    }\n\n    /**\n     * Return a new `uint144` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint144`.\n     * @returns A new `uint144` type for `v`.\n     */\n    static uint144(v: BigNumberish): Typed {\n        return n(v, 144);\n    }\n\n    /**\n     * Return a new `uint152` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint152`.\n     * @returns A new `uint152` type for `v`.\n     */\n    static uint152(v: BigNumberish): Typed {\n        return n(v, 152);\n    }\n\n    /**\n     * Return a new `uint160` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint160`.\n     * @returns A new `uint160` type for `v`.\n     */\n    static uint160(v: BigNumberish): Typed {\n        return n(v, 160);\n    }\n\n    /**\n     * Return a new `uint168` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint168`.\n     * @returns A new `uint168` type for `v`.\n     */\n    static uint168(v: BigNumberish): Typed {\n        return n(v, 168);\n    }\n\n    /**\n     * Return a new `uint176` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint176`.\n     * @returns A new `uint176` type for `v`.\n     */\n    static uint176(v: BigNumberish): Typed {\n        return n(v, 176);\n    }\n\n    /**\n     * Return a new `uint184` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint184`.\n     * @returns A new `uint184` type for `v`.\n     */\n    static uint184(v: BigNumberish): Typed {\n        return n(v, 184);\n    }\n\n    /**\n     * Return a new `uint192` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint192`.\n     * @returns A new `uint192` type for `v`.\n     */\n    static uint192(v: BigNumberish): Typed {\n        return n(v, 192);\n    }\n\n    /**\n     * Return a new `uint200` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint200`.\n     * @returns A new `uint200` type for `v`.\n     */\n    static uint200(v: BigNumberish): Typed {\n        return n(v, 200);\n    }\n\n    /**\n     * Return a new `uint208` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint208`.\n     * @returns A new `uint208` type for `v`.\n     */\n    static uint208(v: BigNumberish): Typed {\n        return n(v, 208);\n    }\n\n    /**\n     * Return a new `uint216` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint216`.\n     * @returns A new `uint216` type for `v`.\n     */\n    static uint216(v: BigNumberish): Typed {\n        return n(v, 216);\n    }\n\n    /**\n     * Return a new `uint224` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint224`.\n     * @returns A new `uint224` type for `v`.\n     */\n    static uint224(v: BigNumberish): Typed {\n        return n(v, 224);\n    }\n\n    /**\n     * Return a new `uint232` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint232`.\n     * @returns A new `uint232` type for `v`.\n     */\n    static uint232(v: BigNumberish): Typed {\n        return n(v, 232);\n    }\n\n    /**\n     * Return a new `uint240` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint240`.\n     * @returns A new `uint240` type for `v`.\n     */\n    static uint240(v: BigNumberish): Typed {\n        return n(v, 240);\n    }\n\n    /**\n     * Return a new `uint248` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint248`.\n     * @returns A new `uint248` type for `v`.\n     */\n    static uint248(v: BigNumberish): Typed {\n        return n(v, 248);\n    }\n\n    /**\n     * Return a new `uint256` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint256`.\n     * @returns A new `uint256` type for `v`.\n     */\n    static uint256(v: BigNumberish): Typed {\n        return n(v, 256);\n    }\n\n    /**\n     * Return a new `uint256` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint256`.\n     * @returns A new `uint256` type for `v`.\n     */\n    static uint(v: BigNumberish): Typed {\n        return n(v, 256);\n    }\n\n    /**\n     * Return a new `int8` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int8`.\n     * @returns A new `int8` type for `v`.\n     */\n    static int8(v: BigNumberish): Typed {\n        return n(v, -8);\n    }\n\n    /**\n     * Return a new `int16` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int16`.\n     * @returns A new `int16` type for `v`.\n     */\n    static int16(v: BigNumberish): Typed {\n        return n(v, -16);\n    }\n\n    /**\n     * Return a new `int24` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int24`.\n     * @returns A new `int24` type for `v`.\n     */\n    static int24(v: BigNumberish): Typed {\n        return n(v, -24);\n    }\n\n    /**\n     * Return a new `int32` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int32`.\n     * @returns A new `int32` type for `v`.\n     */\n    static int32(v: BigNumberish): Typed {\n        return n(v, -32);\n    }\n\n    /**\n     * Return a new `int40` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int40`.\n     * @returns A new `int40` type for `v`.\n     */\n    static int40(v: BigNumberish): Typed {\n        return n(v, -40);\n    }\n\n    /**\n     * Return a new `int48` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int48`.\n     * @returns A new `int48` type for `v`.\n     */\n    static int48(v: BigNumberish): Typed {\n        return n(v, -48);\n    }\n\n    /**\n     * Return a new `int56` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int56`.\n     * @returns A new `int56` type for `v`.\n     */\n    static int56(v: BigNumberish): Typed {\n        return n(v, -56);\n    }\n\n    /**\n     * Return a new `int64` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int64`.\n     * @returns A new `int64` type for `v`.\n     */\n    static int64(v: BigNumberish): Typed {\n        return n(v, -64);\n    }\n\n    /**\n     * Return a new `int72` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int72`.\n     * @returns A new `int72` type for `v`.\n     */\n    static int72(v: BigNumberish): Typed {\n        return n(v, -72);\n    }\n\n    /**\n     * Return a new `int80` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int80`.\n     * @returns A new `int80` type for `v`.\n     */\n    static int80(v: BigNumberish): Typed {\n        return n(v, -80);\n    }\n\n    /**\n     * Return a new `int88` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int88`.\n     * @returns A new `int88` type for `v`.\n     */\n    static int88(v: BigNumberish): Typed {\n        return n(v, -88);\n    }\n\n    /**\n     * Return a new `int96` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int96`.\n     * @returns A new `int96` type for `v`.\n     */\n    static int96(v: BigNumberish): Typed {\n        return n(v, -96);\n    }\n\n    /**\n     * Return a new `int104` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int104`.\n     * @returns A new `int104` type for `v`.\n     */\n    static int104(v: BigNumberish): Typed {\n        return n(v, -104);\n    }\n\n    /**\n     * Return a new `int112` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int112`.\n     * @returns A new `int112` type for `v`.\n     */\n    static int112(v: BigNumberish): Typed {\n        return n(v, -112);\n    }\n\n    /**\n     * Return a new `int120` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int120`.\n     * @returns A new `int120` type for `v`.\n     */\n    static int120(v: BigNumberish): Typed {\n        return n(v, -120);\n    }\n\n    /**\n     * Return a new `int128` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int128`.\n     * @returns A new `int128` type for `v`.\n     */\n    static int128(v: BigNumberish): Typed {\n        return n(v, -128);\n    }\n\n    /**\n     * Return a new `int136` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int136`.\n     * @returns A new `int136` type for `v`.\n     */\n    static int136(v: BigNumberish): Typed {\n        return n(v, -136);\n    }\n\n    /**\n     * Return a new `int144` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int144`.\n     * @returns A new `int144` type for `v`.\n     */\n    static int144(v: BigNumberish): Typed {\n        return n(v, -144);\n    }\n\n    /**\n     * Return a new `int152` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int152`.\n     * @returns A new `int152` type for `v`.\n     */\n    static int152(v: BigNumberish): Typed {\n        return n(v, -152);\n    }\n\n    /**\n     * Return a new `int160` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int160`.\n     * @returns A new `int160` type for `v`.\n     */\n    static int160(v: BigNumberish): Typed {\n        return n(v, -160);\n    }\n\n    /**\n     * Return a new `int168` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int168`.\n     * @returns A new `int168` type for `v`.\n     */\n    static int168(v: BigNumberish): Typed {\n        return n(v, -168);\n    }\n\n    /**\n     * Return a new `int176` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int176`.\n     * @returns A new `int176` type for `v`.\n     */\n    static int176(v: BigNumberish): Typed {\n        return n(v, -176);\n    }\n\n    /**\n     * Return a new `int184` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int184`.\n     * @returns A new `int184` type for `v`.\n     */\n    static int184(v: BigNumberish): Typed {\n        return n(v, -184);\n    }\n\n    /**\n     * Return a new `int192` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int192`.\n     * @returns A new `int192` type for `v`.\n     */\n    static int192(v: BigNumberish): Typed {\n        return n(v, -192);\n    }\n\n    /**\n     * Return a new `int200` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int200`.\n     * @returns A new `int200` type for `v`.\n     */\n    static int200(v: BigNumberish): Typed {\n        return n(v, -200);\n    }\n\n    /**\n     * Return a new `int208` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int208`.\n     * @returns A new `int208` type for `v`.\n     */\n    static int208(v: BigNumberish): Typed {\n        return n(v, -208);\n    }\n\n    /**\n     * Return a new `int216` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int216`.\n     * @returns A new `int216` type for `v`.\n     */\n    static int216(v: BigNumberish): Typed {\n        return n(v, -216);\n    }\n\n    /**\n     * Return a new `int224` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int224`.\n     * @returns A new `int224` type for `v`.\n     */\n    static int224(v: BigNumberish): Typed {\n        return n(v, -224);\n    }\n\n    /**\n     * Return a new `int232` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int232`.\n     * @returns A new `int232` type for `v`.\n     */\n    static int232(v: BigNumberish): Typed {\n        return n(v, -232);\n    }\n\n    /**\n     * Return a new `int240` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int240`.\n     * @returns A new `int240` type for `v`.\n     */\n    static int240(v: BigNumberish): Typed {\n        return n(v, -240);\n    }\n\n    /**\n     * Return a new `int248` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int248`.\n     * @returns A new `int248` type for `v`.\n     */\n    static int248(v: BigNumberish): Typed {\n        return n(v, -248);\n    }\n\n    /**\n     * Return a new `int256` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int256`.\n     * @returns A new `int256` type for `v`.\n     */\n    static int256(v: BigNumberish): Typed {\n        return n(v, -256);\n    }\n\n    /**\n     * Return a new `int256` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int256`.\n     * @returns A new `int256` type for `v`.\n     */\n    static int(v: BigNumberish): Typed {\n        return n(v, -256);\n    }\n\n    /**\n     * Return a new `bytes1` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes1`.\n     * @returns A new `bytes1` type for `v`.\n     */\n    static bytes1(v: BytesLike): Typed {\n        return b(v, 1);\n    }\n\n    /**\n     * Return a new `bytes2` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes2`.\n     * @returns A new `bytes2` type for `v`.\n     */\n    static bytes2(v: BytesLike): Typed {\n        return b(v, 2);\n    }\n\n    /**\n     * Return a new `bytes3` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes3`.\n     * @returns A new `bytes3` type for `v`.\n     */\n    static bytes3(v: BytesLike): Typed {\n        return b(v, 3);\n    }\n\n    /**\n     * Return a new `bytes4` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes4`.\n     * @returns A new `bytes4` type for `v`.\n     */\n    static bytes4(v: BytesLike): Typed {\n        return b(v, 4);\n    }\n\n    /**\n     * Return a new `bytes5` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes5`.\n     * @returns A new `bytes5` type for `v`.\n     */\n    static bytes5(v: BytesLike): Typed {\n        return b(v, 5);\n    }\n\n    /**\n     * Return a new `bytes6` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes6`.\n     * @returns A new `bytes6` type for `v`.\n     */\n    static bytes6(v: BytesLike): Typed {\n        return b(v, 6);\n    }\n\n    /**\n     * Return a new `bytes7` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes7`.\n     * @returns A new `bytes7` type for `v`.\n     */\n    static bytes7(v: BytesLike): Typed {\n        return b(v, 7);\n    }\n\n    /**\n     * Return a new `bytes8` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes8`.\n     * @returns A new `bytes8` type for `v`.\n     */\n    static bytes8(v: BytesLike): Typed {\n        return b(v, 8);\n    }\n\n    /**\n     * Return a new `bytes9` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes9`.\n     * @returns A new `bytes9` type for `v`.\n     */\n    static bytes9(v: BytesLike): Typed {\n        return b(v, 9);\n    }\n\n    /**\n     * Return a new `bytes10` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes10`.\n     * @returns A new `bytes10` type for `v`.\n     */\n    static bytes10(v: BytesLike): Typed {\n        return b(v, 10);\n    }\n\n    /**\n     * Return a new `bytes11` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes11`.\n     * @returns A new `bytes11` type for `v`.\n     */\n    static bytes11(v: BytesLike): Typed {\n        return b(v, 11);\n    }\n\n    /**\n     * Return a new `bytes12` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes12`.\n     * @returns A new `bytes12` type for `v`.\n     */\n    static bytes12(v: BytesLike): Typed {\n        return b(v, 12);\n    }\n\n    /**\n     * Return a new `bytes13` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes13`.\n     * @returns A new `bytes13` type for `v`.\n     */\n    static bytes13(v: BytesLike): Typed {\n        return b(v, 13);\n    }\n\n    /**\n     * Return a new `bytes14` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes14`.\n     * @returns A new `bytes14` type for `v`.\n     */\n    static bytes14(v: BytesLike): Typed {\n        return b(v, 14);\n    }\n\n    /**\n     * Return a new `bytes15` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes15`.\n     * @returns A new `bytes15` type for `v`.\n     */\n    static bytes15(v: BytesLike): Typed {\n        return b(v, 15);\n    }\n\n    /**\n     * Return a new `bytes16` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes16`.\n     * @returns A new `bytes16` type for `v`.\n     */\n    static bytes16(v: BytesLike): Typed {\n        return b(v, 16);\n    }\n\n    /**\n     * Return a new `bytes17` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes17`.\n     * @returns A new `bytes17` type for `v`.\n     */\n    static bytes17(v: BytesLike): Typed {\n        return b(v, 17);\n    }\n\n    /**\n     * Return a new `bytes18` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes18`.\n     * @returns A new `bytes18` type for `v`.\n     */\n    static bytes18(v: BytesLike): Typed {\n        return b(v, 18);\n    }\n\n    /**\n     * Return a new `bytes19` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes19`.\n     * @returns A new `bytes19` type for `v`.\n     */\n    static bytes19(v: BytesLike): Typed {\n        return b(v, 19);\n    }\n\n    /**\n     * Return a new `bytes20` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes20`.\n     * @returns A new `bytes20` type for `v`.\n     */\n    static bytes20(v: BytesLike): Typed {\n        return b(v, 20);\n    }\n\n    /**\n     * Return a new `bytes21` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes21`.\n     * @returns A new `bytes21` type for `v`.\n     */\n    static bytes21(v: BytesLike): Typed {\n        return b(v, 21);\n    }\n\n    /**\n     * Return a new `bytes22` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes22`.\n     * @returns A new `bytes22` type for `v`.\n     */\n    static bytes22(v: BytesLike): Typed {\n        return b(v, 22);\n    }\n\n    /**\n     * Return a new `bytes23` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes23`.\n     * @returns A new `bytes23` type for `v`.\n     */\n    static bytes23(v: BytesLike): Typed {\n        return b(v, 23);\n    }\n\n    /**\n     * Return a new `bytes24` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes24`.\n     * @returns A new `bytes24` type for `v`.\n     */\n    static bytes24(v: BytesLike): Typed {\n        return b(v, 24);\n    }\n\n    /**\n     * Return a new `bytes25` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes25`.\n     * @returns A new `bytes25` type for `v`.\n     */\n    static bytes25(v: BytesLike): Typed {\n        return b(v, 25);\n    }\n\n    /**\n     * Return a new `bytes26` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes26`.\n     * @returns A new `bytes26` type for `v`.\n     */\n    static bytes26(v: BytesLike): Typed {\n        return b(v, 26);\n    }\n\n    /**\n     * Return a new `bytes27` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes27`.\n     * @returns A new `bytes27` type for `v`.\n     */\n    static bytes27(v: BytesLike): Typed {\n        return b(v, 27);\n    }\n\n    /**\n     * Return a new `bytes28` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes28`.\n     * @returns A new `bytes28` type for `v`.\n     */\n    static bytes28(v: BytesLike): Typed {\n        return b(v, 28);\n    }\n\n    /**\n     * Return a new `bytes29` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes29`.\n     * @returns A new `bytes29` type for `v`.\n     */\n    static bytes29(v: BytesLike): Typed {\n        return b(v, 29);\n    }\n\n    /**\n     * Return a new `bytes30` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes30`.\n     * @returns A new `bytes30` type for `v`.\n     */\n    static bytes30(v: BytesLike): Typed {\n        return b(v, 30);\n    }\n\n    /**\n     * Return a new `bytes31` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes31`.\n     * @returns A new `bytes31` type for `v`.\n     */\n    static bytes31(v: BytesLike): Typed {\n        return b(v, 31);\n    }\n\n    /**\n     * Return a new `bytes32` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes32`.\n     * @returns A new `bytes32` type for `v`.\n     */\n    static bytes32(v: BytesLike): Typed {\n        return b(v, 32);\n    }\n\n    /**\n     * Return a new `address` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to an `address`.\n     * @returns A new `address` type for `v`.\n     */\n    static address(v: string | Addressable): Typed {\n        return new Typed(_guard, 'address', v);\n    }\n\n    /**\n     * Return a new `bool` type for `v`.\n     *\n     * @param {any} v - The value to convert to a `bool`.\n     * @returns A new `bool` type for `v`.\n     */\n    static bool(v: any): Typed {\n        return new Typed(_guard, 'bool', !!v);\n    }\n\n    /**\n     * Return a new `bytes` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes`.\n     * @returns A new `bytes` type for `v`.\n     */\n    static bytes(v: BytesLike): Typed {\n        return new Typed(_guard, 'bytes', v);\n    }\n\n    /**\n     * Return a new `string` type for `v`.\n     *\n     * @param {string} v - The value to convert to a `string`.\n     * @returns A new `string` type for `v`.\n     */\n    static string(v: string): Typed {\n        return new Typed(_guard, 'string', v);\n    }\n\n    /**\n     * Return a new `array` type for v, allowing dynamic length.\n     *\n     * @param {(any | Typed)[]} v - The value to convert to an `array`.\n     * @param {null | boolean} dynamic - Whether the array is dynamic.\n     * @returns A new `array` type for `v`.\n     */\n    static array(v: Array<any | Typed>, dynamic?: null | boolean): Typed {\n        throw new Error('not implemented yet');\n        return new Typed(_guard, 'array', v, dynamic);\n    }\n\n    /**\n     * Return a new `tuple` type for v, with the optional name.\n     *\n     * @param {(any | Typed)[]} v - The value to convert to a `tuple`.\n     * @param {string} name - The name of the tuple.\n     * @returns A new `tuple` type for `v`.\n     */\n    static tuple(v: Array<any | Typed> | Record<string, any | Typed>, name?: string): Typed {\n        throw new Error('not implemented yet');\n        return new Typed(_guard, 'tuple', v, name);\n    }\n\n    /**\n     * Return a new `overrides` type with the provided properties.\n     *\n     * @param {Record<string, any>} v - A record containing the properties to be included in the `overrides` type.\n     * @returns A new `overrides` type with the given properties.\n     */\n    static overrides(v: Record<string, any>): Typed {\n        return new Typed(_guard, 'overrides', Object.assign({}, v));\n    }\n\n    /**\n     * Returns true only if `value` is a {@link Typed | **Typed**} instance.\n     *\n     * @param {any} value - The value to check.\n     * @returns {boolean} True if `value` is a {@link Typed | **Typed**} instance.\n     */\n    static isTyped(value: any): value is Typed {\n        return value && typeof value === 'object' && '_typedSymbol' in value && value._typedSymbol === _typedSymbol;\n    }\n\n    /**\n     * If the value is a {@link Typed | **Typed**} instance, validates the underlying value and returns it, otherwise\n     * returns value directly.\n     *\n     * This is useful for functions that with to accept either a {@link Typed | **Typed**} object or values.\n     *\n     * @param {Typed | T} value - The value to dereference.\n     * @param {string} type - The dereferenced value.\n     */\n    static dereference<T>(value: Typed | T, type: string): T {\n        if (Typed.isTyped(value)) {\n            if (value.type !== type) {\n                throw new Error(`invalid type: expected ${type}, got ${value.type}`);\n            }\n            return value.value;\n        }\n        return value;\n    }\n}\n","import { getAddress } from \"../../address/index.js\";\nimport { toBeHex } from \"../../utils/maths.js\";\n\nimport { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n\n/**\n *  @ignore\n */\nexport class AddressCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"address\", \"address\", localName, false);\n    }\n\n    defaultValue(): string {\n        return \"0x0000000000000000000000000000000000000000\";\n    }\n\n    encode(writer: Writer, _value: string | Typed): number {\n        let value = Typed.dereference(_value, \"string\");\n        try {\n            value = getAddress(value);\n        } catch (error: any) {\n            return this._throwError(error.message, _value);\n        }\n        return writer.writeValue(value);\n    }\n\n    decode(reader: Reader): any {\n        return getAddress(toBeHex(reader.readValue(), 20));\n    }\n}\n","import { Coder } from \"./abstract-coder.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n/**\n *  Clones the functionality of an existing Coder, but without a localName\n *\n *  @ignore\n */\nexport class AnonymousCoder extends Coder {\n    private coder: Coder;\n\n    constructor(coder: Coder) {\n        super(coder.name, coder.type, \"_\", coder.dynamic);\n        this.coder = coder;\n    }\n\n    defaultValue(): any {\n        return this.coder.defaultValue();\n    }\n\n    encode(writer: Writer, value: any): number {\n        return this.coder.encode(writer, value);\n    }\n\n    decode(reader: Reader): any {\n        return this.coder.decode(reader);\n    }\n}\n","import {\n    defineProperties, isError, assert, assertArgument, assertArgumentCount\n} from \"../../utils/index.js\";\n\nimport { Typed } from \"../typed.js\";\n\nimport { Coder, Result, WordSize, Writer } from \"./abstract-coder.js\";\nimport { AnonymousCoder } from \"./anonymous.js\";\n\nimport type { Reader } from \"./abstract-coder.js\";\n\n/**\n *  @ignore\n */\nexport function pack(writer: Writer, coders: ReadonlyArray<Coder>, values: Array<any> | { [ name: string ]: any }): number {\n    let arrayValues: Array<any> = [ ];\n\n    if (Array.isArray(values)) {\n       arrayValues = values;\n\n    } else if (values && typeof(values) === \"object\") {\n        let unique: { [ name: string ]: boolean } = { };\n\n        arrayValues = coders.map((coder) => {\n            const name = coder.localName;\n            assert(name, \"cannot encode object for signature with missing names\",\n                \"INVALID_ARGUMENT\", { argument: \"values\", info: { coder }, value: values });\n\n            assert(!unique[name], \"cannot encode object for signature with duplicate names\",\n                \"INVALID_ARGUMENT\", { argument: \"values\", info: { coder }, value: values });\n\n            unique[name] = true;\n\n            return values[name];\n        });\n\n    } else {\n        assertArgument(false, \"invalid tuple value\", \"tuple\", values);\n    }\n\n    assertArgument(coders.length === arrayValues.length, \"types/value length mismatch\", \"tuple\", values);\n\n    let staticWriter = new Writer();\n    let dynamicWriter = new Writer();\n\n    let updateFuncs: Array<(baseOffset: number) => void> = [];\n    coders.forEach((coder, index) => {\n        let value = arrayValues[index];\n\n        if (coder.dynamic) {\n            // Get current dynamic offset (for the future pointer)\n            let dynamicOffset = dynamicWriter.length;\n\n            // Encode the dynamic value into the dynamicWriter\n            coder.encode(dynamicWriter, value);\n\n            // Prepare to populate the correct offset once we are done\n            let updateFunc = staticWriter.writeUpdatableValue();\n            updateFuncs.push((baseOffset: number) => {\n                updateFunc(baseOffset + dynamicOffset);\n            });\n\n        } else {\n            coder.encode(staticWriter, value);\n        }\n    });\n\n    // Backfill all the dynamic offsets, now that we know the static length\n    updateFuncs.forEach((func) => { func(staticWriter.length); });\n\n    let length = writer.appendWriter(staticWriter);\n    length += writer.appendWriter(dynamicWriter);\n    return length;\n}\n\n/**\n *  @ignore\n */\nexport function unpack(reader: Reader, coders: ReadonlyArray<Coder>): Result {\n    let values: Array<any> = [];\n    let keys: Array<null | string> = [ ];\n\n    // A reader anchored to this base\n    let baseReader = reader.subReader(0);\n\n    coders.forEach((coder) => {\n        let value: any = null;\n\n        if (coder.dynamic) {\n            let offset = reader.readIndex();\n            let offsetReader = baseReader.subReader(offset);\n            try {\n                value = coder.decode(offsetReader);\n            } catch (error: any) {\n                // Cannot recover from this\n                if (isError(error, \"BUFFER_OVERRUN\")) {\n                    throw error;\n                }\n\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n\n        } else {\n            try {\n                value = coder.decode(reader);\n            } catch (error: any) {\n                // Cannot recover from this\n                if (isError(error, \"BUFFER_OVERRUN\")) {\n                    throw error;\n                }\n\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n\n        if (value == undefined) {\n            throw new Error(\"investigate\");\n        }\n\n        values.push(value);\n        keys.push(coder.localName || null);\n    });\n\n    return Result.fromItems(values, keys);\n}\n\n/**\n *  @ignore\n */\nexport class ArrayCoder extends Coder {\n    readonly coder!: Coder;\n    readonly length!: number;\n\n    constructor(coder: Coder, length: number, localName: string) {\n        const type = (coder.type + \"[\" + (length >= 0 ? length: \"\") + \"]\");\n        const dynamic = (length === -1 || coder.dynamic);\n        super(\"array\", type, localName, dynamic);\n        defineProperties<ArrayCoder>(this, { coder, length });\n    }\n\n    defaultValue(): Array<any> {\n        // Verifies the child coder is valid (even if the array is dynamic or 0-length)\n        const defaultChild = this.coder.defaultValue();\n\n        const result: Array<any> = [];\n        for (let i = 0; i < this.length; i++) {\n            result.push(defaultChild);\n        }\n        return result;\n    }\n\n    encode(writer: Writer, _value: Array<any> | Typed): number {\n        const value = Typed.dereference(_value, \"array\");\n\n        if(!Array.isArray(value)) {\n            this._throwError(\"expected array value\", value);\n        }\n\n        let count = this.length;\n\n        if (count === -1) {\n            count = value.length;\n            writer.writeValue(value.length);\n        }\n\n        assertArgumentCount(value.length, count, \"coder array\" + (this.localName? (\" \"+ this.localName): \"\"));\n\n        let coders: Array<Coder> = [ ];\n        for (let i = 0; i < value.length; i++) { coders.push(this.coder); }\n\n        return pack(writer, coders, value);\n    }\n\n    decode(reader: Reader): any {\n        let count = this.length;\n        if (count === -1) {\n            count = reader.readIndex();\n\n            // Check that there is *roughly* enough data to ensure\n            // stray random data is not being read as a length. Each\n            // slot requires at least 32 bytes for their value (or 32\n            // bytes as a link to the data). This could use a much\n            // tighter bound, but we are erroring on the side of safety.\n            assert(count * WordSize <= reader.dataLength, \"insufficient data length\",\n                \"BUFFER_OVERRUN\", { buffer: reader.bytes, offset: count * WordSize, length: reader.dataLength });\n        }\n        let coders: Array<Coder> = [];\n        for (let i = 0; i < count; i++) { coders.push(new AnonymousCoder(this.coder)); }\n\n        return unpack(reader, coders);\n    }\n}\n\n","import { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n/**\n *  @ignore\n */\nexport class BooleanCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"bool\", \"bool\", localName, false);\n    }\n\n    defaultValue(): boolean {\n        return false;\n    }\n\n    encode(writer: Writer, _value: boolean | Typed): number {\n        const value = Typed.dereference(_value, \"bool\");\n        return writer.writeValue(value ? 1: 0);\n    }\n\n    decode(reader: Reader): any {\n        return !!reader.readValue();\n    }\n}\n","import { getBytesCopy, hexlify } from \"../../utils/index.js\";\n\nimport { Coder } from \"./abstract-coder.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n\n/**\n *  @ignore\n */\nexport class DynamicBytesCoder extends Coder {\n    constructor(type: string, localName: string) {\n       super(type, type, localName, true);\n    }\n\n    defaultValue(): string {\n        return \"0x\";\n    }\n\n    encode(writer: Writer, value: any): number {\n        value = getBytesCopy(value);\n        let length = writer.writeValue(value.length);\n        length += writer.writeBytes(value);\n        return length;\n    }\n\n    decode(reader: Reader): any {\n        return reader.readBytes(reader.readIndex(), true);\n    }\n}\n\n/**\n *  @ignore\n */\nexport class BytesCoder extends DynamicBytesCoder {\n    constructor(localName: string) {\n        super(\"bytes\", localName);\n    }\n\n    decode(reader: Reader): any {\n        return hexlify(super.decode(reader));\n    }\n}\n","\nimport { defineProperties, getBytesCopy, hexlify } from \"../../utils/index.js\";\n\nimport { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\n\nimport type { BytesLike } from \"../../utils/index.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n\n/**\n *  @ignore\n */\nexport class FixedBytesCoder extends Coder {\n    readonly size!: number;\n\n    constructor(size: number, localName: string) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        defineProperties<FixedBytesCoder>(this, { size }, { size: \"number\" });\n    }\n\n    defaultValue(): string {\n        return (\"0x0000000000000000000000000000000000000000000000000000000000000000\").substring(0, 2 + this.size * 2);\n    }\n\n    encode(writer: Writer, _value: BytesLike | Typed): number {\n        let data = getBytesCopy(Typed.dereference(_value, this.type));\n        if (data.length !== this.size) { this._throwError(\"incorrect data length\", _value); }\n        return writer.writeBytes(data);\n    }\n\n    decode(reader: Reader): any {\n        return hexlify(reader.readBytes(this.size));\n    }\n}\n","import { Coder } from \"./abstract-coder.js\";\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\nconst Empty = new Uint8Array([ ]);\n\n/**\n *  @ignore\n */\nexport class NullCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"null\", \"\", localName, false);\n    }\n\n    defaultValue(): null {\n        return null;\n    }\n\n    encode(writer: Writer, value: any): number {\n        if (value != null) { this._throwError(\"not null\", value); }\n        return writer.writeBytes(Empty);\n    }\n\n    decode(reader: Reader): any {\n        reader.readBytes(0);\n        return null;\n    }\n}\n","import {\n    defineProperties, fromTwos, getBigInt, mask, toTwos\n} from \"../../utils/index.js\";\n\nimport { Typed } from \"../typed.js\";\nimport { Coder, WordSize } from \"./abstract-coder.js\";\n\nimport type { BigNumberish } from \"../../utils/index.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_MAX_UINT256 = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\n/**\n *  @ignore\n */\nexport class NumberCoder extends Coder {\n    readonly size!: number;\n    readonly signed!: boolean;\n\n    constructor(size: number, signed: boolean, localName: string) {\n        const name = ((signed ? \"int\": \"uint\") + (size * 8));\n        super(name, name, localName, false);\n\n        defineProperties<NumberCoder>(this, { size, signed }, { size: \"number\", signed: \"boolean\" });\n    }\n\n    defaultValue(): number {\n        return 0;\n    }\n\n    encode(writer: Writer, _value: BigNumberish | Typed): number {\n        let value = getBigInt(Typed.dereference(_value, this.type));\n\n        // Check bounds are safe for encoding\n        let maxUintValue = mask(BN_MAX_UINT256, WordSize * 8);\n        if (this.signed) {\n            let bounds = mask(maxUintValue, (this.size * 8) - 1);\n            if (value > bounds || value < -(bounds + BN_1)) {\n                this._throwError(\"value out-of-bounds\", _value);\n            }\n            value = toTwos(value, 8 * WordSize);\n        } else if (value < BN_0 || value > mask(maxUintValue, this.size * 8)) {\n            this._throwError(\"value out-of-bounds\", _value);\n        }\n\n        return writer.writeValue(value);\n    }\n\n    decode(reader: Reader): any {\n        let value = mask(reader.readValue(), this.size * 8);\n\n        if (this.signed) {\n            value = fromTwos(value, this.size * 8);\n        }\n\n        return value;\n    }\n}\n\n","/**\n * Using strings in Ethereum (or any security-basd system) requires additional care. These utilities attempt to mitigate\n * some of the safety issues as well as provide the ability to recover and analyse strings.\n *\n * @subsection api/utils:Strings and UTF-8  [about-strings]\n */\nimport { getBytes } from '../utils/data.js';\nimport { assertArgument, assertNormalize } from '../utils/errors.js';\n\nimport type { BytesLike } from '../utils/index.js';\n\n///////////////////////////////\n\n/**\n * The stanard normalization forms.\n *\n * @category Encoding\n */\nexport type UnicodeNormalizationForm = 'NFC' | 'NFD' | 'NFKC' | 'NFKD';\n\n/**\n * When using the UTF-8 error API the following errors can be intercepted and processed as the `reason` passed to the\n * {@link Utf8ErrorFunc | **Utf8ErrorFunc**}.\n *\n * **`\"UNEXPECTED_CONTINUE\"`** - a continuation byte was present where there was nothing to continue.\n *\n * **`\"BAD_PREFIX\"`** - an invalid (non-continuation) byte to start a UTF-8 codepoint was found.\n *\n * **`\"OVERRUN\"`** - the string is too short to process the expected codepoint length.\n *\n * **`\"MISSING_CONTINUE\"`** - a missing continuation byte was expected but not found. The `offset` indicates the index\n * the continuation byte was expected at.\n *\n * **`\"OUT_OF_RANGE\"`** - the computed code point is outside the range for UTF-8. The `badCodepoint` indicates the\n * computed codepoint, which was outside the valid UTF-8 range.\n *\n * **`\"UTF16_SURROGATE\"`** - the UTF-8 strings contained a UTF-16 surrogate pair. The `badCodepoint` is the computed\n * codepoint, which was inside the UTF-16 surrogate range.\n *\n * **`\"OVERLONG\"`** - the string is an overlong representation. The `badCodepoint` indicates the computed codepoint,\n * which has already been bounds checked.\n *\n * @category Encoding\n */\nexport type Utf8ErrorReason =\n    | 'UNEXPECTED_CONTINUE'\n    | 'BAD_PREFIX'\n    | 'OVERRUN'\n    | 'MISSING_CONTINUE'\n    | 'OUT_OF_RANGE'\n    | 'UTF16_SURROGATE'\n    | 'OVERLONG';\n\n/**\n * A callback that can be used with {@link toUtf8String | **toUtf8String**} to analysis or recovery from invalid UTF-8\n * data.\n *\n * Parsing UTF-8 data is done through a simple Finite-State Machine (FSM) which calls the `Utf8ErrorFunc` if a fault is\n * detected.\n *\n * The `reason` indicates where in the FSM execution the fault occurred and the `offset` indicates where the input\n * failed.\n *\n * The `bytes` represents the raw UTF-8 data that was provided and `output` is the current array of UTF-8 code-points,\n * which may be updated by the `Utf8ErrorFunc`.\n *\n * The value of the `badCodepoint` depends on the `reason`. See {@link Utf8ErrorReason | **Utf8ErrorReason**} for\n * details.\n *\n * The function should return the number of bytes that should be skipped when control resumes to the FSM.\n *\n * @category Encoding\n */\nexport type Utf8ErrorFunc = (\n    reason: Utf8ErrorReason,\n    offset: number,\n    bytes: Uint8Array,\n    output: Array<number>,\n    badCodepoint?: number,\n) => number;\n\n// `output` and `badCodepoint` are passed to calls below, but not used in the function\nfunction errorFunc(\n    reason: Utf8ErrorReason,\n    offset: number,\n    bytes: Uint8Array,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    output: Array<number>,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    badCodepoint?: number,\n): number {\n    assertArgument(false, `invalid codepoint at offset ${offset}; ${reason}`, 'bytes', bytes);\n}\n\n// `output` and `badCodepoint` are passed to calls below, but not used in the function\nfunction ignoreFunc(\n    reason: Utf8ErrorReason,\n    offset: number,\n    bytes: Uint8Array,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    output: Array<number>,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    badCodepoint?: number,\n): number {\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === 'BAD_PREFIX' || reason === 'UNEXPECTED_CONTINUE') {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) {\n                break;\n            }\n            i++;\n        }\n        return i;\n    }\n\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === 'OVERRUN') {\n        return bytes.length - offset - 1;\n    }\n\n    // Nothing to skip\n    return 0;\n}\n\nfunction replaceFunc(\n    reason: Utf8ErrorReason,\n    offset: number,\n    bytes: Uint8Array,\n    output: Array<number>,\n    badCodepoint?: number,\n): number {\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === 'OVERLONG') {\n        assertArgument(\n            typeof badCodepoint === 'number',\n            'invalid bad code point for replacement',\n            'badCodepoint',\n            badCodepoint,\n        );\n        output.push(badCodepoint);\n        return 0;\n    }\n\n    // Put the replacement character into the output\n    output.push(0xfffd);\n\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n\n/**\n * A handful of popular, built-in UTF-8 error handling strategies.\n *\n * **`\"error\"`** - throws on ANY illegal UTF-8 sequence or non-canonical (overlong) codepoints (this is the default)\n *\n * **`\"ignore\"`** - silently drops any illegal UTF-8 sequence and accepts non-canonical (overlong) codepoints\n *\n * **`\"replace\"`** - replace any illegal UTF-8 sequence with the UTF-8 replacement character (i.e. `\"\\\\ufffd\"`) and\n * accepts non-canonical (overlong) codepoints\n *\n * @category Encoding\n * @returns Record<\"error\" | \"ignore\" | \"replace\", Utf8ErrorFunc>\n */\nexport const Utf8ErrorFuncs: Readonly<Record<'error' | 'ignore' | 'replace', Utf8ErrorFunc>> = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc,\n});\n\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(_bytes: BytesLike, onError?: Utf8ErrorFunc): Array<number> {\n    if (onError == null) {\n        onError = Utf8ErrorFuncs.error;\n    }\n\n    const bytes = getBytes(_bytes, 'bytes');\n\n    const result: Array<number> = [];\n    let i = 0;\n\n    // Invalid bytes are ignored\n    while (i < bytes.length) {\n        const c = bytes[i++];\n\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n\n        // Multibyte; how many bytes left for this character?\n        let extraLength: null | number = null;\n        let overlongMask: null | number = null;\n\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n\n            // 1110 xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n\n            // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n        } else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError('UNEXPECTED_CONTINUE', i - 1, bytes, result);\n            } else {\n                i += onError('BAD_PREFIX', i - 1, bytes, result);\n            }\n            continue;\n        }\n\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError('OVERRUN', i - 1, bytes, result);\n            continue;\n        }\n\n        // Remove the length prefix from the char\n        let res: null | number = c & ((1 << (8 - extraLength - 1)) - 1);\n\n        for (let j = 0; j < extraLength; j++) {\n            const nextChar = bytes[i];\n\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError('MISSING_CONTINUE', i, bytes, result);\n                res = null;\n                break;\n            }\n\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n\n        // See above loop for invalid continuation byte\n        if (res === null) {\n            continue;\n        }\n\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError('OUT_OF_RANGE', i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError('UTF16_SURROGATE', i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError('OVERLONG', i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        result.push(res);\n    }\n\n    return result;\n}\n\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\n\n/**\n * Returns the UTF-8 byte representation of `str`.\n *\n * If `form` is specified, the string is normalized.\n *\n * @category Encoding\n * @param {string} str - The string to convert.\n * @param {UnicodeNormalizationForm} [form] - The normalization form to use.\n * @returns {Uint8Array} The UTF-8 byte representation.\n * @throws {Error} If the UTF-8 conversion fails.\n */\nexport function toUtf8Bytes(str: string, form?: UnicodeNormalizationForm): Uint8Array {\n    if (form != null) {\n        assertNormalize(form);\n        str = str.normalize(form);\n    }\n\n    const result: Array<number> = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n\n        if (c < 0x80) {\n            result.push(c);\n        } else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n        } else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n\n            assertArgument(i < str.length && (c2 & 0xfc00) === 0xdc00, 'invalid surrogate pair', 'str', str);\n\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n        } else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n\n    return new Uint8Array(result);\n}\n\n/**\n * @ignore\n */\nfunction _toUtf8String(codePoints: Array<number>): string {\n    return codePoints\n        .map((codePoint) => {\n            if (codePoint <= 0xffff) {\n                return String.fromCharCode(codePoint);\n            }\n            codePoint -= 0x10000;\n            return String.fromCharCode(((codePoint >> 10) & 0x3ff) + 0xd800, (codePoint & 0x3ff) + 0xdc00);\n        })\n        .join('');\n}\n\n/**\n * Returns the string represented by the UTF-8 data `bytes`.\n *\n * When `onError` function is specified, it is called on UTF-8 errors allowing recovery using the\n * {@link Utf8ErrorFunc | **Utf8ErrorFunc**} API. (default: [error](Utf8ErrorFuncs))\n *\n * @category Encoding\n * @param {BytesLike} bytes - The UTF-8 data to convert.\n * @param {Utf8ErrorFunc} [onError] - The error handling function.\n * @returns {string} The string.\n */\nexport function toUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\n\n/**\n * Returns the UTF-8 code-points for `str`.\n *\n * If `form` is specified, the string is normalized.\n *\n * @category Encoding\n * @param {string} str - The string to convert.\n * @param {UnicodeNormalizationForm} [form] - The normalization form to use.\n * @returns {number[]} The UTF-8 code-points.\n */\nexport function toUtf8CodePoints(str: string, form?: UnicodeNormalizationForm): Array<number> {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n","import { toUtf8Bytes, toUtf8String } from \"../../encoding/index.js\";\n\nimport { Typed } from \"../typed.js\";\nimport { DynamicBytesCoder } from \"./bytes.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n\n/**\n *  @ignore\n */\nexport class StringCoder extends DynamicBytesCoder {\n\n    constructor(localName: string) {\n        super(\"string\", localName);\n    }\n\n    defaultValue(): string {\n        return \"\";\n    }\n\n    encode(writer: Writer, _value: string | Typed): number {\n        return super.encode(writer, toUtf8Bytes(Typed.dereference(_value, \"string\")));\n    }\n\n    decode(reader: Reader): any {\n        return toUtf8String(super.decode(reader));\n    }\n}\n","import { defineProperties } from \"../../utils/properties.js\";\n\nimport { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\n\nimport { pack, unpack } from \"./array.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n/**\n *  @ignore\n */\nexport class TupleCoder extends Coder {\n    readonly coders!: ReadonlyArray<Coder>;\n\n    constructor(coders: Array<Coder>, localName: string) {\n        let dynamic = false;\n        const types: Array<string> = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) { dynamic = true; }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n\n        super(\"tuple\", type, localName, dynamic);\n        defineProperties<TupleCoder>(this, { coders: Object.freeze(coders.slice()) });\n    }\n\n    defaultValue(): any {\n        const values: any = [ ];\n        this.coders.forEach((coder) => {\n            values.push(coder.defaultValue());\n        });\n\n        // We only output named properties for uniquely named coders\n        const uniqueNames = this.coders.reduce((accum, coder) => {\n            const name = coder.localName;\n            if (name) {\n                if (!accum[name]) { accum[name] = 0; }\n                accum[name]++;\n            }\n            return accum;\n        }, <{ [ name: string ]: number }>{ });\n\n        // Add named values\n        this.coders.forEach((coder: Coder, index: number) => {\n            let name = coder.localName;\n            if (!name || uniqueNames[name] !== 1) { return; }\n\n            if (name === \"length\") { name = \"_length\"; }\n\n            if (values[name] != null) { return; }\n\n            values[name] = values[index];\n        });\n\n        return Object.freeze(values);\n    }\n\n    encode(writer: Writer, _value: Array<any> | { [ name: string ]: any } | Typed): number {\n        const value = Typed.dereference(_value, \"tuple\");\n        return pack(writer, this.coders, value);\n    }\n\n    decode(reader: Reader): any {\n        return unpack(reader, this.coders);\n    }\n}\n\n","import { keccak256 } from '../crypto/index.js';\nimport { toUtf8Bytes } from '../encoding/index.js';\n\n/**\n * A simple hashing function which operates on UTF-8 strings to compute an 32-byte identifier.\n *\n * This simply computes the {@link toUtf8Bytes | **UTF-8 bytes**} and computes the {@link keccak256 | **keccak256**}.\n *\n * @category Hash\n * @example\n *\n * ```ts\n * id('hello world');\n * ```\n *\n * @param {string} value - The string to hash.\n * @returns {string} The 32-byte identifier.\n */\nexport function id(value: string): string {\n    return keccak256(toUtf8Bytes(value));\n}\n","/**\n * A fragment is a single item from an ABI, which may represent any of:\n *\n * - {@link FunctionFragment | Functions}\n * - {@link EventFragment | Events}\n * - {@link ConstructorFragment | Constructors}\n * - Custom {@link ErrorFragment | Errors}\n * - {@link FallbackFragment | Fallback or Recieve} functions\n *\n * @category Application Binary Interface\n */\n\nimport { defineProperties, getBigInt, getNumber, assert, assertPrivate, assertArgument } from '../utils/index.js';\nimport { id } from '../hash/index.js';\n\n/**\n * A Type description in a [JSON ABI format](https://docs.soliditylang.org/en/v0.8.19/abi-spec.html#json).\n *\n * @category Application Binary Interface\n */\nexport interface JsonFragmentType {\n    /**\n     * The parameter name.\n     */\n    readonly name?: string;\n\n    /**\n     * If the parameter is indexed.\n     */\n    readonly indexed?: boolean;\n\n    /**\n     * The type of the parameter.\n     */\n    readonly type?: string;\n\n    /**\n     * The internal Solidity type.\n     */\n    readonly internalType?: string;\n\n    /**\n     * The components for a tuple.\n     */\n    readonly components?: ReadonlyArray<JsonFragmentType>;\n}\n\n/**\n * A fragment for a method, event or error in a [JSON ABI\n * format](https://docs.soliditylang.org/en/v0.8.19/abi-spec.html#json)\n *\n * @category Application Binary Interface\n */\nexport interface JsonFragment {\n    /**\n     * The name of the error, event, function, etc.\n     */\n    readonly name?: string;\n\n    /**\n     * The type of the fragment (e.g. `event`, `\"function\"`, etc.)\n     */\n    readonly type?: string;\n\n    /**\n     * If the event is anonymous.\n     */\n    readonly anonymous?: boolean;\n\n    /**\n     * If the function is payable.\n     */\n    readonly payable?: boolean;\n\n    /**\n     * If the function is constant.\n     */\n    readonly constant?: boolean;\n\n    /**\n     * The mutability state of the function.\n     */\n    readonly stateMutability?: string;\n\n    /**\n     * The input parameters.\n     */\n    readonly inputs?: ReadonlyArray<JsonFragmentType>;\n\n    /**\n     * The output parameters.\n     */\n    readonly outputs?: ReadonlyArray<JsonFragmentType>;\n\n    /**\n     * The gas limit to use when sending a transaction for this function.\n     */\n    readonly gas?: string;\n}\n\n/**\n * The format to serialize the output as.\n *\n * **`sighash`** - the bare formatting, used to compute the selector or topic hash; this format cannot be reversed (as\n * it discards `indexed`) so cannot by used to export an [Interface](../classes/Interface).\n *\n * **`minimal`** - Human-Readable ABI with minimal spacing and without names, so it is compact, but will result in\n * Result objects that cannot be accessed by name.\n *\n * **`full`** - Full Human-Readable ABI, with readable spacing and names intact; this is generally the recommended\n * format.\n *\n * **`json`** - The [ABI JSON Specification](https://docs.soliditylang.org/en/v0.8.19/abi-spec.html#json).\n *\n * @category Application Binary Interface\n */\nexport type FormatType = 'sighash' | 'minimal' | 'full' | 'json';\n\n// [ \"a\", \"b\" ] => { \"a\": 1, \"b\": 1 }\nfunction setify(items: Array<string>): ReadonlySet<string> {\n    const result: Set<string> = new Set();\n    items.forEach((k) => result.add(k));\n    return Object.freeze(result);\n}\n\nconst _kwVisibDeploy = 'external public payable';\nconst KwVisibDeploy = setify(_kwVisibDeploy.split(' '));\n\n// Visibility Keywords\nconst _kwVisib = 'constant external internal payable private public pure view';\nconst KwVisib = setify(_kwVisib.split(' '));\n\nconst _kwTypes = 'constructor error event fallback function receive struct';\nconst KwTypes = setify(_kwTypes.split(' '));\n\nconst _kwModifiers = 'calldata memory storage payable indexed';\nconst KwModifiers = setify(_kwModifiers.split(' '));\n\nconst _kwOther = 'tuple returns';\n\n// All Keywords\nconst _keywords = [_kwTypes, _kwModifiers, _kwOther, _kwVisib].join(' ');\nconst Keywords = setify(_keywords.split(' '));\n\n// Single character tokens\nconst SimpleTokens: Record<string, string> = {\n    '(': 'OPEN_PAREN',\n    ')': 'CLOSE_PAREN',\n    '[': 'OPEN_BRACKET',\n    ']': 'CLOSE_BRACKET',\n    ',': 'COMMA',\n    '@': 'AT',\n};\n\n// Parser regexes to consume the next token\nconst regexWhitespacePrefix = new RegExp('^(\\\\s*)');\nconst regexNumberPrefix = new RegExp('^([0-9]+)');\nconst regexIdPrefix = new RegExp('^([a-zA-Z$_][a-zA-Z0-9$_]*)');\n\n// Parser regexs to check validity\nconst regexId = new RegExp('^([a-zA-Z$_][a-zA-Z0-9$_]*)$');\nconst regexType = new RegExp('^(address|bool|bytes([0-9]*)|string|u?int([0-9]*))$');\n\n/**\n * Represents the tokens for parsing.\n *\n * @ignore\n */\ntype Token = Readonly<{\n    // Type of token (e.g. TYPE, KEYWORD, NUMBER, etc)\n    type: string;\n\n    // Offset into the original source code\n    offset: number;\n\n    // Actual text content of the token\n    text: string;\n\n    // The parenthesis depth\n    depth: number;\n\n    // If a parenthesis, the offset (in tokens) that balances it\n    match: number;\n\n    // For parenthesis and commas, the offset (in tokens) to the\n    // previous/next parenthesis or comma in the list\n    linkBack: number;\n    linkNext: number;\n\n    // If a BRACKET, the value inside\n    value: number;\n}>;\n\n/**\n * Represents a parsed list of tokens.\n *\n * @category Application Binary Interface\n */\nclass TokenString {\n    #offset: number;\n    #tokens: ReadonlyArray<Token>;\n\n    get offset(): number {\n        return this.#offset;\n    }\n    get length(): number {\n        return this.#tokens.length - this.#offset;\n    }\n\n    constructor(tokens: ReadonlyArray<Token>) {\n        this.#offset = 0;\n        this.#tokens = tokens.slice();\n    }\n\n    /**\n     * Returns a clone of the current token string.\n     *\n     * @returns {TokenString} A cloned TokenString object.\n     */\n    clone(): TokenString {\n        return new TokenString(this.#tokens);\n    }\n    reset(): void {\n        this.#offset = 0;\n    }\n\n    /**\n     * @ignore\n     */\n    #subTokenString(from: number = 0, to: number = 0): TokenString {\n        return new TokenString(\n            this.#tokens.slice(from, to).map((t) => {\n                return Object.freeze(\n                    Object.assign({}, t, {\n                        match: t.match - from,\n                        linkBack: t.linkBack - from,\n                        linkNext: t.linkNext - from,\n                    }),\n                );\n            }),\n        );\n    }\n\n    // Pops and returns the value of the next token, if it is a keyword in allowed; throws if out of tokens\n    popKeyword(allowed: ReadonlySet<string>): string {\n        const top = this.peek();\n        if (top.type !== 'KEYWORD' || !allowed.has(top.text)) {\n            throw new Error(`expected keyword ${top.text}`);\n        }\n        return this.pop().text;\n    }\n\n    // Pops and returns the value of the next token if it is `type`; throws if out of tokens\n    popType(type: string): string {\n        if (this.peek().type !== type) {\n            throw new Error(`expected ${type}; got ${JSON.stringify(this.peek())}`);\n        }\n        return this.pop().text;\n    }\n\n    // Pops and returns a \"(\" TOKENS \")\"\n    popParen(): TokenString {\n        const top = this.peek();\n        if (top.type !== 'OPEN_PAREN') {\n            throw new Error('bad start');\n        }\n        const result = this.#subTokenString(this.#offset + 1, top.match + 1);\n        this.#offset = top.match + 1;\n        return result;\n    }\n\n    // Pops and returns the items within \"(\" ITEM1 \",\" ITEM2 \",\" ... \")\"\n    popParams(): Array<TokenString> {\n        const top = this.peek();\n\n        if (top.type !== 'OPEN_PAREN') {\n            throw new Error('bad start');\n        }\n\n        const result: Array<TokenString> = [];\n\n        while (this.#offset < top.match - 1) {\n            const link = this.peek().linkNext;\n            result.push(this.#subTokenString(this.#offset + 1, link));\n            this.#offset = link;\n        }\n\n        this.#offset = top.match + 1;\n\n        return result;\n    }\n\n    // Returns the top Token, throwing if out of tokens\n    peek(): Token {\n        if (this.#offset >= this.#tokens.length) {\n            throw new Error('out-of-bounds');\n        }\n        return this.#tokens[this.#offset];\n    }\n\n    // Returns the next value, if it is a keyword in `allowed`\n    peekKeyword(allowed: ReadonlySet<string>): null | string {\n        const top = this.peekType('KEYWORD');\n        return top != null && allowed.has(top) ? top : null;\n    }\n\n    // Returns the value of the next token if it is `type`\n    peekType(type: string): null | string {\n        if (this.length === 0) {\n            return null;\n        }\n        const top = this.peek();\n        return top.type === type ? top.text : null;\n    }\n\n    // Returns the next token; throws if out of tokens\n    pop(): Token {\n        const result = this.peek();\n        this.#offset++;\n        return result;\n    }\n\n    toString(): string {\n        const tokens: Array<string> = [];\n        for (let i = this.#offset; i < this.#tokens.length; i++) {\n            const token = this.#tokens[i];\n            tokens.push(`${token.type}:${token.text}`);\n        }\n        return `<TokenString ${tokens.join(' ')}>`;\n    }\n}\n\ntype Writeable<T> = { -readonly [P in keyof T]: T[P] };\n\nfunction lex(text: string): TokenString {\n    const tokens: Array<Token> = [];\n\n    const throwError = (message: string) => {\n        const token = offset < text.length ? JSON.stringify(text[offset]) : '$EOI';\n        throw new Error(`invalid token ${token} at ${offset}: ${message}`);\n    };\n\n    const brackets: Array<number> = [];\n    const commas: Array<number> = [];\n\n    let offset = 0;\n    while (offset < text.length) {\n        // Strip off any leading whitespace\n        let cur = text.substring(offset);\n        let match = cur.match(regexWhitespacePrefix);\n        if (match) {\n            offset += match[1].length;\n            cur = text.substring(offset);\n        }\n\n        const token = {\n            depth: brackets.length,\n            linkBack: -1,\n            linkNext: -1,\n            match: -1,\n            type: '',\n            text: '',\n            offset,\n            value: -1,\n        };\n        tokens.push(token);\n\n        const type = SimpleTokens[cur[0]] || '';\n        if (type) {\n            token.type = type;\n            token.text = cur[0];\n            offset++;\n\n            if (type === 'OPEN_PAREN') {\n                brackets.push(tokens.length - 1);\n                commas.push(tokens.length - 1);\n            } else if (type == 'CLOSE_PAREN') {\n                if (brackets.length === 0) {\n                    throwError('no matching open bracket');\n                }\n\n                token.match = brackets.pop() as number;\n                (<Writeable<Token>>tokens[token.match]).match = tokens.length - 1;\n                token.depth--;\n\n                token.linkBack = commas.pop() as number;\n                (<Writeable<Token>>tokens[token.linkBack]).linkNext = tokens.length - 1;\n            } else if (type === 'COMMA') {\n                token.linkBack = commas.pop() as number;\n                (<Writeable<Token>>tokens[token.linkBack]).linkNext = tokens.length - 1;\n                commas.push(tokens.length - 1);\n            } else if (type === 'OPEN_BRACKET') {\n                token.type = 'BRACKET';\n            } else if (type === 'CLOSE_BRACKET') {\n                // Remove the CLOSE_BRACKET\n                let suffix = (tokens.pop() as Token).text;\n                if (tokens.length > 0 && tokens[tokens.length - 1].type === 'NUMBER') {\n                    const value = (tokens.pop() as Token).text;\n                    suffix = value + suffix;\n                    (<Writeable<Token>>tokens[tokens.length - 1]).value = getNumber(value);\n                }\n                if (tokens.length === 0 || tokens[tokens.length - 1].type !== 'BRACKET') {\n                    throw new Error('missing opening bracket');\n                }\n                (<Writeable<Token>>tokens[tokens.length - 1]).text += suffix;\n            }\n\n            continue;\n        }\n\n        match = cur.match(regexIdPrefix);\n        if (match) {\n            token.text = match[1];\n            offset += token.text.length;\n\n            if (Keywords.has(token.text)) {\n                token.type = 'KEYWORD';\n                continue;\n            }\n\n            if (token.text.match(regexType)) {\n                token.type = 'TYPE';\n                continue;\n            }\n\n            token.type = 'ID';\n            continue;\n        }\n\n        match = cur.match(regexNumberPrefix);\n        if (match) {\n            token.text = match[1];\n            token.type = 'NUMBER';\n            offset += token.text.length;\n            continue;\n        }\n\n        throw new Error(`unexpected token ${JSON.stringify(cur[0])} at position ${offset}`);\n    }\n\n    return new TokenString(tokens.map((t) => Object.freeze(t)));\n}\n\n// Check only one of `allowed` is in `set`\nfunction allowSingle(set: ReadonlySet<string>, allowed: ReadonlySet<string>): void {\n    const included: Array<string> = [];\n    for (const key in allowed.keys()) {\n        if (set.has(key)) {\n            included.push(key);\n        }\n    }\n    if (included.length > 1) {\n        throw new Error(`conflicting types: ${included.join(', ')}`);\n    }\n}\n\n// Functions to process a Solidity Signature TokenString from left-to-right for...\n\n// ...the name with an optional type, returning the name\nfunction consumeName(type: string, tokens: TokenString): string {\n    if (tokens.peekKeyword(KwTypes)) {\n        const keyword = tokens.pop().text;\n        if (keyword !== type) {\n            throw new Error(`expected ${type}, got ${keyword}`);\n        }\n    }\n\n    return tokens.popType('ID');\n}\n\n// ...all keywords matching allowed, returning the keywords\nfunction consumeKeywords(tokens: TokenString, allowed?: ReadonlySet<string>): ReadonlySet<string> {\n    const keywords: Set<string> = new Set();\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const keyword = tokens.peekType('KEYWORD');\n\n        if (keyword == null || (allowed && !allowed.has(keyword))) {\n            break;\n        }\n        tokens.pop();\n\n        if (keywords.has(keyword)) {\n            throw new Error(`duplicate keywords: ${JSON.stringify(keyword)}`);\n        }\n        keywords.add(keyword);\n    }\n\n    return Object.freeze(keywords);\n}\n\n// ...all visibility keywords, returning the coalesced mutability\nfunction consumeMutability(tokens: TokenString): 'payable' | 'nonpayable' | 'view' | 'pure' {\n    const modifiers = consumeKeywords(tokens, KwVisib);\n\n    // Detect conflicting modifiers\n    allowSingle(modifiers, setify('constant payable nonpayable'.split(' ')));\n    allowSingle(modifiers, setify('pure view payable nonpayable'.split(' ')));\n\n    // Process mutability states\n    if (modifiers.has('view')) {\n        return 'view';\n    }\n    if (modifiers.has('pure')) {\n        return 'pure';\n    }\n    if (modifiers.has('payable')) {\n        return 'payable';\n    }\n    if (modifiers.has('nonpayable')) {\n        return 'nonpayable';\n    }\n\n    // Process legacy `constant` last\n    if (modifiers.has('constant')) {\n        return 'view';\n    }\n\n    return 'nonpayable';\n}\n\n// ...a parameter list, returning the ParamType list\nfunction consumeParams(tokens: TokenString, allowIndexed?: boolean): Array<ParamType> {\n    return tokens.popParams().map((t) => ParamType.from(t, allowIndexed));\n}\n\n// ...a gas limit, returning a BigNumber or null if none\nfunction consumeGas(tokens: TokenString): null | bigint {\n    if (tokens.peekType('AT')) {\n        tokens.pop();\n        if (tokens.peekType('NUMBER')) {\n            return getBigInt(tokens.pop().text);\n        }\n        throw new Error('invalid gas');\n    }\n    return null;\n}\n\nfunction consumeEoi(tokens: TokenString): void {\n    if (tokens.length) {\n        throw new Error(`unexpected tokens: ${tokens.toString()}`);\n    }\n}\n\nconst regexArrayType = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\n\nfunction verifyBasicType(type: string): string {\n    const match = type.match(regexType);\n    assertArgument(match, 'invalid type', 'type', type);\n    if (type === 'uint') {\n        return 'uint256';\n    }\n    if (type === 'int') {\n        return 'int256';\n    }\n\n    if (match[2]) {\n        // bytesXX\n        const length = parseInt(match[2]);\n        assertArgument(length !== 0 && length <= 32, 'invalid bytes length', 'type', type);\n    } else if (match[3]) {\n        // intXX or uintXX\n        const size = parseInt(match[3] as string);\n        assertArgument(size !== 0 && size <= 256 && size % 8 === 0, 'invalid numeric width', 'type', type);\n    }\n\n    return type;\n}\n\n// Make the Fragment constructors effectively private\nconst _guard = {};\n\n/**\n * When {@link ParamType.walk | **walking**} a {@link ParamType | **ParamType**}, this is called on each component.\n *\n * @category Application Binary Interface\n */\nexport type ParamTypeWalkFunc = (type: string, value: any) => any;\n\n/**\n * When {@link ParamType.walkAsync | **walking asynchronously**} a {@link ParamType | **ParamType**}, this is called on\n * each component.\n *\n * @category Application Binary Interface\n */\nexport type ParamTypeWalkAsyncFunc = (type: string, value: any) => any | Promise<any>;\n\nconst internal = Symbol.for('_quais_internal');\n\nconst ParamTypeInternal = '_ParamTypeInternal';\nconst ErrorFragmentInternal = '_ErrorInternal';\nconst EventFragmentInternal = '_EventInternal';\nconst ConstructorFragmentInternal = '_ConstructorInternal';\nconst FallbackFragmentInternal = '_FallbackInternal';\nconst FunctionFragmentInternal = '_FunctionInternal';\nconst StructFragmentInternal = '_StructInternal';\n\n/**\n * Each input and output of a {@link Fragment | **Fragment**} is an Array of {@link ParamType | **ParamType**}.\n *\n * @category Application Binary Interface\n */\nexport class ParamType {\n    /**\n     * The local name of the parameter (or `\"\"` if unbound)\n     */\n    readonly name!: string;\n\n    /**\n     * The fully qualified type (e.g. `\"address\"`, `\"tuple(address)\"`, `\"uint256[3][]\"`)\n     */\n    readonly type!: string;\n\n    /**\n     * The base type (e.g. `\"address\"`, `\"tuple\"`, `\"array\"`)\n     */\n    readonly baseType!: string;\n\n    /**\n     * True if the parameters is indexed.\n     *\n     * For non-indexable types this is `null`.\n     */\n    readonly indexed!: null | boolean;\n\n    /**\n     * The components for the tuple.\n     *\n     * For non-tuple types this is `null`.\n     */\n    readonly components!: null | ReadonlyArray<ParamType>;\n\n    /**\n     * The array length, or `-1` for dynamic-lengthed arrays.\n     *\n     * For non-array types this is `null`.\n     */\n    readonly arrayLength!: null | number;\n\n    /**\n     * The type of each child in the array.\n     *\n     * For non-array types this is `null`.\n     */\n    readonly arrayChildren!: null | ParamType;\n\n    /**\n     * @ignore\n     */\n    constructor(\n        guard: any,\n        name: string,\n        type: string,\n        baseType: string,\n        indexed: null | boolean,\n        components: null | ReadonlyArray<ParamType>,\n        arrayLength: null | number,\n        arrayChildren: null | ParamType,\n    ) {\n        assertPrivate(guard, _guard, 'ParamType');\n        Object.defineProperty(this, internal, { value: ParamTypeInternal });\n\n        if (components) {\n            components = Object.freeze(components.slice());\n        }\n\n        if (baseType === 'array') {\n            if (arrayLength == null || arrayChildren == null) {\n                throw new Error('');\n            }\n        } else if (arrayLength != null || arrayChildren != null) {\n            throw new Error('');\n        }\n\n        if (baseType === 'tuple') {\n            if (components == null) {\n                throw new Error('');\n            }\n        } else if (components != null) {\n            throw new Error('');\n        }\n\n        defineProperties<ParamType>(this, {\n            name,\n            type,\n            baseType,\n            indexed,\n            components,\n            arrayLength,\n            arrayChildren,\n        });\n    }\n\n    /**\n     * Return a string representation of this type.\n     *\n     * For example,\n     *\n     * `sighash\" => \"(uint256,address)\"`\n     *\n     * `\"minimal\" => \"tuple(uint256,address) indexed\"`\n     *\n     * `\"full\" => \"tuple(uint256 foo, address bar) indexed baz\"`\n     *\n     * @returns {string} The formatted type.\n     */\n    format(format?: FormatType): string {\n        if (format == null) {\n            format = 'sighash';\n        }\n        if (format === 'json') {\n            const name = this.name || '';\n\n            if (this.isArray()) {\n                const result = JSON.parse(this.arrayChildren.format('json'));\n                result.name = name;\n                result.type += `[${this.arrayLength < 0 ? '' : String(this.arrayLength)}]`;\n                return JSON.stringify(result);\n            }\n\n            const result: any = {\n                type: this.baseType === 'tuple' ? 'tuple' : this.type,\n                name,\n            };\n\n            if (typeof this.indexed === 'boolean') {\n                result.indexed = this.indexed;\n            }\n            if (this.isTuple()) {\n                result.components = this.components.map((c) => JSON.parse(c.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n\n        let result = '';\n\n        // Array\n        if (this.isArray()) {\n            result += this.arrayChildren.format(format);\n            result += `[${this.arrayLength < 0 ? '' : String(this.arrayLength)}]`;\n        } else {\n            if (this.isTuple()) {\n                result +=\n                    '(' + this.components.map((comp) => comp.format(format)).join(format === 'full' ? ', ' : ',') + ')';\n            } else {\n                result += this.type;\n            }\n        }\n\n        if (format !== 'sighash') {\n            if (this.indexed === true) {\n                result += ' indexed';\n            }\n            if (format === 'full' && this.name) {\n                result += ' ' + this.name;\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * This provides a type guard ensuring that {@link arrayChildren | **arrayChildren**} and\n     * {@link arrayLength | **arrayLength**} are non-null.\n     *\n     * @returns {boolean} True if this is an Array type.\n     */\n    isArray(): this is ParamType & { arrayChildren: ParamType; arrayLength: number } {\n        return this.baseType === 'array';\n    }\n\n    /**\n     * This provides a type guard ensuring that {@link components | **components**} is non-null.\n     *\n     * @returns {boolean} True if this is a Tuple type.\n     */\n    isTuple(): this is ParamType & { components: ReadonlyArray<ParamType> } {\n        return this.baseType === 'tuple';\n    }\n\n    /**\n     * This provides a type guard ensuring that {@link indexed | **indexed**} is non-null.\n     *\n     * @returns {boolean} True if this is an Indexable type.\n     */\n    isIndexable(): this is ParamType & { indexed: boolean } {\n        return this.indexed != null;\n    }\n\n    /**\n     * Walks the **ParamType** with `value`, calling `process` on each type, destructing the `value` recursively.\n     */\n    walk(value: any, process: ParamTypeWalkFunc): any {\n        if (this.isArray()) {\n            if (!Array.isArray(value)) {\n                throw new Error('invalid array value');\n            }\n            if (this.arrayLength !== -1 && value.length !== this.arrayLength) {\n                throw new Error('array is wrong length');\n            }\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const _this = this;\n            return value.map((v) => _this.arrayChildren.walk(v, process));\n        }\n\n        if (this.isTuple()) {\n            if (!Array.isArray(value)) {\n                throw new Error('invalid tuple value');\n            }\n            if (value.length !== this.components.length) {\n                throw new Error('array is wrong length');\n            }\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const _this = this;\n            return value.map((v, i) => _this.components[i].walk(v, process));\n        }\n\n        return process(this.type, value);\n    }\n\n    /**\n     * @ignore\n     */\n    #walkAsync(\n        promises: Array<Promise<void>>,\n        value: any,\n        process: ParamTypeWalkAsyncFunc,\n        setValue: (value: any) => void,\n    ): void {\n        if (this.isArray()) {\n            if (!Array.isArray(value)) {\n                throw new Error('invalid array value');\n            }\n            if (this.arrayLength !== -1 && value.length !== this.arrayLength) {\n                throw new Error('array is wrong length');\n            }\n            const childType = this.arrayChildren;\n\n            const result = value.slice();\n            result.forEach((value, index) => {\n                childType.#walkAsync(promises, value, process, (value: any) => {\n                    result[index] = value;\n                });\n            });\n            setValue(result);\n            return;\n        }\n\n        if (this.isTuple()) {\n            const components = this.components;\n\n            // Convert the object into an array\n            let result: Array<any>;\n            if (Array.isArray(value)) {\n                result = value.slice();\n            } else {\n                if (value == null || typeof value !== 'object') {\n                    throw new Error('invalid tuple value');\n                }\n\n                result = components.map((param) => {\n                    if (!param.name) {\n                        throw new Error('cannot use object value with unnamed components');\n                    }\n                    if (!(param.name in value)) {\n                        throw new Error(`missing value for component ${param.name}`);\n                    }\n                    return value[param.name];\n                });\n            }\n\n            if (result.length !== this.components.length) {\n                throw new Error('array is wrong length');\n            }\n\n            result.forEach((value, index) => {\n                components[index].#walkAsync(promises, value, process, (value: any) => {\n                    result[index] = value;\n                });\n            });\n            setValue(result);\n            return;\n        }\n\n        const result = process(this.type, value);\n        if (result.then) {\n            promises.push(\n                (async function () {\n                    setValue(await result);\n                })(),\n            );\n        } else {\n            setValue(result);\n        }\n    }\n\n    /**\n     * Walks the **ParamType** with `value`, asynchronously calling `process` on each type, destructing the `value`\n     * recursively.\n     *\n     * This can be used to resolve ENS naes by walking and resolving each `\"address\"` type.\n     */\n    async walkAsync(value: any, process: ParamTypeWalkAsyncFunc): Promise<any> {\n        const promises: Array<Promise<void>> = [];\n        const result: [any] = [value];\n        this.#walkAsync(promises, value, process, (value: any) => {\n            result[0] = value;\n        });\n        if (promises.length) {\n            await Promise.all(promises);\n        }\n        return result[0];\n    }\n\n    /**\n     * Creates a new **ParamType** for `obj`.\n     *\n     * If `allowIndexed` then the `indexed` keyword is permitted, otherwise the `indexed` keyword will throw an error.\n     */\n    static from(obj: any, allowIndexed?: boolean): ParamType {\n        if (ParamType.isParamType(obj)) {\n            return obj;\n        }\n\n        if (typeof obj === 'string') {\n            try {\n                return ParamType.from(lex(obj), allowIndexed);\n            } catch (error) {\n                assertArgument(false, 'invalid param type', 'obj', obj);\n            }\n        } else if (obj instanceof TokenString) {\n            let type = '',\n                baseType = '';\n            let comps: null | Array<ParamType> = null;\n\n            if (consumeKeywords(obj, setify(['tuple'])).has('tuple') || obj.peekType('OPEN_PAREN')) {\n                // Tuple\n                baseType = 'tuple';\n                comps = obj.popParams().map((t) => ParamType.from(t));\n                type = `tuple(${comps.map((c) => c.format()).join(',')})`;\n            } else {\n                // Normal\n                type = verifyBasicType(obj.popType('TYPE'));\n                baseType = type;\n            }\n\n            // Check for Array\n            let arrayChildren: null | ParamType = null;\n            let arrayLength: null | number = null;\n\n            while (obj.length && obj.peekType('BRACKET')) {\n                const bracket = obj.pop(); //arrays[i];\n                arrayChildren = new ParamType(_guard, '', type, baseType, null, comps, arrayLength, arrayChildren);\n                arrayLength = bracket.value;\n                type += bracket.text;\n                baseType = 'array';\n                comps = null;\n            }\n\n            let indexed: null | boolean = null;\n            const keywords = consumeKeywords(obj, KwModifiers);\n            if (keywords.has('indexed')) {\n                if (!allowIndexed) {\n                    throw new Error('');\n                }\n                indexed = true;\n            }\n\n            const name = obj.peekType('ID') ? obj.pop().text : '';\n\n            if (obj.length) {\n                throw new Error('leftover tokens');\n            }\n\n            return new ParamType(_guard, name, type, baseType, indexed, comps, arrayLength, arrayChildren);\n        }\n\n        const name = obj.name;\n        assertArgument(!name || (typeof name === 'string' && name.match(regexId)), 'invalid name', 'obj.name', name);\n\n        let indexed = obj.indexed;\n        if (indexed != null) {\n            assertArgument(allowIndexed, 'parameter cannot be indexed', 'obj.indexed', obj.indexed);\n            indexed = !!indexed;\n        }\n\n        let type = obj.type;\n\n        const arrayMatch = type.match(regexArrayType);\n        if (arrayMatch) {\n            const arrayLength = parseInt(arrayMatch[2] || '-1');\n            const arrayChildren = ParamType.from({\n                type: arrayMatch[1],\n                components: obj.components,\n            });\n\n            return new ParamType(_guard, name || '', type, 'array', indexed, null, arrayLength, arrayChildren);\n        }\n\n        if (type === 'tuple' || type.startsWith('tuple(' /* fix: ) */) || type.startsWith('(' /* fix: ) */)) {\n            const comps = obj.components != null ? obj.components.map((c: any) => ParamType.from(c)) : null;\n            const tuple = new ParamType(_guard, name || '', type, 'tuple', indexed, comps, null, null);\n            // @TODO: use lexer to validate and normalize type\n            return tuple;\n        }\n\n        type = verifyBasicType(obj.type);\n\n        return new ParamType(_guard, name || '', type, type, indexed, null, null, null);\n    }\n\n    /**\n     * Returns true if `value` is a **ParamType**.\n     */\n    static isParamType(value: any): value is ParamType {\n        return value && value[internal] === ParamTypeInternal;\n    }\n}\n\n/**\n * The type of a {@link Fragment | **Fragment**}.\n *\n * @category Application Binary Interface\n */\nexport type FragmentType = 'constructor' | 'error' | 'event' | 'fallback' | 'function' | 'struct';\n\n/**\n * An abstract class to represent An individual fragment from a parse ABI.\n *\n * @category Application Binary Interface\n */\nexport abstract class Fragment {\n    /**\n     * The type of the fragment.\n     */\n    readonly type!: FragmentType;\n\n    /**\n     * The inputs for the fragment.\n     */\n    readonly inputs!: ReadonlyArray<ParamType>;\n\n    /**\n     * @ignore\n     */\n    constructor(guard: any, type: FragmentType, inputs: ReadonlyArray<ParamType>) {\n        assertPrivate(guard, _guard, 'Fragment');\n        inputs = Object.freeze(inputs.slice());\n        defineProperties<Fragment>(this, { type, inputs });\n    }\n\n    /**\n     * Returns a string representation of this fragment as `format`.\n     */\n    abstract format(format?: FormatType): string;\n\n    /**\n     * Creates a new **Fragment** for `obj`, wich can be any supported ABI frgament type.\n     */\n    static from(obj: any): Fragment {\n        if (typeof obj === 'string') {\n            // Try parsing JSON...\n            try {\n                Fragment.from(JSON.parse(obj));\n                // eslint-disable-next-line no-empty\n            } catch (e) {}\n\n            // ...otherwise, use the human-readable lexer\n            return Fragment.from(lex(obj));\n        }\n\n        if (obj instanceof TokenString) {\n            // Human-readable ABI (already lexed)\n\n            const type = obj.peekKeyword(KwTypes);\n\n            switch (type) {\n                case 'constructor':\n                    return ConstructorFragment.from(obj);\n                case 'error':\n                    return ErrorFragment.from(obj);\n                case 'event':\n                    return EventFragment.from(obj);\n                case 'fallback':\n                case 'receive':\n                    return FallbackFragment.from(obj);\n                case 'function':\n                    return FunctionFragment.from(obj);\n                case 'struct':\n                    return StructFragment.from(obj);\n            }\n        } else if (typeof obj === 'object') {\n            // JSON ABI\n\n            switch (obj.type) {\n                case 'constructor':\n                    return ConstructorFragment.from(obj);\n                case 'error':\n                    return ErrorFragment.from(obj);\n                case 'event':\n                    return EventFragment.from(obj);\n                case 'fallback':\n                case 'receive':\n                    return FallbackFragment.from(obj);\n                case 'function':\n                    return FunctionFragment.from(obj);\n                case 'struct':\n                    return StructFragment.from(obj);\n            }\n\n            assert(false, `unsupported type: ${obj.type}`, 'UNSUPPORTED_OPERATION', {\n                operation: 'Fragment.from',\n            });\n        }\n\n        assertArgument(false, 'unsupported frgament object', 'obj', obj);\n    }\n\n    /**\n     * Returns true if `value` is a {@link ConstructorFragment | **ConstructorFragment**}.\n     */\n    static isConstructor(value: any): value is ConstructorFragment {\n        return ConstructorFragment.isFragment(value);\n    }\n\n    /**\n     * Returns true if `value` is an {@link ErrorFragment | **ErrorFragment**}.\n     */\n    static isError(value: any): value is ErrorFragment {\n        return ErrorFragment.isFragment(value);\n    }\n\n    /**\n     * Returns true if `value` is an {@link EventFragment | **EventFragment**}.\n     */\n    static isEvent(value: any): value is EventFragment {\n        return EventFragment.isFragment(value);\n    }\n\n    /**\n     * Returns true if `value` is a {@link FunctionFragment | **FunctionFragment**}.\n     */\n    static isFunction(value: any): value is FunctionFragment {\n        return FunctionFragment.isFragment(value);\n    }\n\n    /**\n     * Returns true if `value` is a {@link StructFragment | **StructFragment**}.\n     */\n    static isStruct(value: any): value is StructFragment {\n        return StructFragment.isFragment(value);\n    }\n}\n\n/**\n * An abstract class to represent An individual fragment which has a name from a parse ABI.\n *\n * @category Application Binary Interface\n */\nexport abstract class NamedFragment extends Fragment {\n    /**\n     * The name of the fragment.\n     */\n    readonly name!: string;\n\n    /**\n     * @ignore\n     */\n    constructor(guard: any, type: FragmentType, name: string, inputs: ReadonlyArray<ParamType>) {\n        super(guard, type, inputs);\n        assertArgument(typeof name === 'string' && name.match(regexId), 'invalid identifier', 'name', name);\n        inputs = Object.freeze(inputs.slice());\n        defineProperties<NamedFragment>(this, { name });\n    }\n}\n\nfunction joinParams(format: FormatType, params: ReadonlyArray<ParamType>): string {\n    return '(' + params.map((p) => p.format(format)).join(format === 'full' ? ', ' : ',') + ')';\n}\n\n/**\n * A Fragment which represents a _Custom Error_.\n *\n * @category Application Binary Interface\n */\nexport class ErrorFragment extends NamedFragment {\n    /**\n     * @ignore\n     */\n    constructor(guard: any, name: string, inputs: ReadonlyArray<ParamType>) {\n        super(guard, 'error', name, inputs);\n        Object.defineProperty(this, internal, { value: ErrorFragmentInternal });\n    }\n\n    /**\n     * The Custom Error selector.\n     */\n    get selector(): string {\n        return id(this.format('sighash')).substring(0, 10);\n    }\n\n    /**\n     * Returns a string representation of this fragment as `format`.\n     */\n    format(format?: FormatType): string {\n        if (format == null) {\n            format = 'sighash';\n        }\n        if (format === 'json') {\n            return JSON.stringify({\n                type: 'error',\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n            });\n        }\n\n        const result: Array<string> = [];\n        if (format !== 'sighash') {\n            result.push('error');\n        }\n        result.push(this.name + joinParams(format, this.inputs));\n        return result.join(' ');\n    }\n\n    /**\n     * Returns a new **ErrorFragment** for `obj`.\n     */\n    static from(obj: any): ErrorFragment {\n        if (ErrorFragment.isFragment(obj)) {\n            return obj;\n        }\n\n        if (typeof obj === 'string') {\n            return ErrorFragment.from(lex(obj));\n        } else if (obj instanceof TokenString) {\n            const name = consumeName('error', obj);\n            const inputs = consumeParams(obj);\n            consumeEoi(obj);\n\n            return new ErrorFragment(_guard, name, inputs);\n        }\n\n        return new ErrorFragment(_guard, obj.name, obj.inputs ? obj.inputs.map(ParamType.from) : []);\n    }\n\n    /**\n     * Returns `true` and provides a type guard if `value` is an **ErrorFragment**.\n     */\n    static isFragment(value: any): value is ErrorFragment {\n        return value && value[internal] === ErrorFragmentInternal;\n    }\n}\n\n/**\n * A Fragment which represents an Event.\n *\n * @category Application Binary Interface\n */\nexport class EventFragment extends NamedFragment {\n    /**\n     * Whether this event is anonymous.\n     */\n    readonly anonymous!: boolean;\n\n    /**\n     * @ignore\n     */\n    constructor(guard: any, name: string, inputs: ReadonlyArray<ParamType>, anonymous: boolean) {\n        super(guard, 'event', name, inputs);\n        Object.defineProperty(this, internal, { value: EventFragmentInternal });\n        defineProperties<EventFragment>(this, { anonymous });\n    }\n\n    /**\n     * The Event topic hash.\n     */\n    get topicHash(): string {\n        return id(this.format('sighash'));\n    }\n\n    /**\n     * Returns a string representation of this event as `format`.\n     */\n    format(format?: FormatType): string {\n        if (format == null) {\n            format = 'sighash';\n        }\n        if (format === 'json') {\n            return JSON.stringify({\n                type: 'event',\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format))),\n            });\n        }\n\n        const result: Array<string> = [];\n        if (format !== 'sighash') {\n            result.push('event');\n        }\n        result.push(this.name + joinParams(format, this.inputs));\n        if (format !== 'sighash' && this.anonymous) {\n            result.push('anonymous');\n        }\n        return result.join(' ');\n    }\n\n    /**\n     * Return the topic hash for an event with `name` and `params`.\n     */\n    static getTopicHash(name: string, params?: Array<any>): string {\n        params = (params || []).map((p) => ParamType.from(p));\n        const fragment = new EventFragment(_guard, name, params, false);\n        return fragment.topicHash;\n    }\n\n    /**\n     * Returns a new **EventFragment** for `obj`.\n     */\n    static from(obj: any): EventFragment {\n        if (EventFragment.isFragment(obj)) {\n            return obj;\n        }\n\n        if (typeof obj === 'string') {\n            try {\n                return EventFragment.from(lex(obj));\n            } catch (error) {\n                assertArgument(false, 'invalid event fragment', 'obj', obj);\n            }\n        } else if (obj instanceof TokenString) {\n            const name = consumeName('event', obj);\n            const inputs = consumeParams(obj, true);\n            const anonymous = !!consumeKeywords(obj, setify(['anonymous'])).has('anonymous');\n            consumeEoi(obj);\n\n            return new EventFragment(_guard, name, inputs, anonymous);\n        }\n\n        return new EventFragment(\n            _guard,\n            obj.name,\n            obj.inputs ? obj.inputs.map((p: any) => ParamType.from(p, true)) : [],\n            !!obj.anonymous,\n        );\n    }\n\n    /**\n     * Returns `true` and provides a type guard if `value` is an **EventFragment**.\n     */\n    static isFragment(value: any): value is EventFragment {\n        return value && value[internal] === EventFragmentInternal;\n    }\n}\n\n/**\n * A Fragment which represents a constructor.\n *\n * @category Application Binary Interface\n */\nexport class ConstructorFragment extends Fragment {\n    /**\n     * Whether the constructor can receive an endowment.\n     */\n    readonly payable!: boolean;\n\n    /**\n     * The recommended gas limit for deployment or `null`.\n     */\n    readonly gas!: null | bigint;\n\n    /**\n     * @ignore\n     */\n    constructor(\n        guard: any,\n        type: FragmentType,\n        inputs: ReadonlyArray<ParamType>,\n        payable: boolean,\n        gas: null | bigint,\n    ) {\n        super(guard, type, inputs);\n        Object.defineProperty(this, internal, { value: ConstructorFragmentInternal });\n        defineProperties<ConstructorFragment>(this, { payable, gas });\n    }\n\n    /**\n     * Returns a string representation of this constructor as `format`.\n     */\n    format(format?: FormatType): string {\n        assert(\n            format != null && format !== 'sighash',\n            'cannot format a constructor for sighash',\n            'UNSUPPORTED_OPERATION',\n            { operation: 'format(sighash)' },\n        );\n\n        if (format === 'json') {\n            return JSON.stringify({\n                type: 'constructor',\n                stateMutability: this.payable ? 'payable' : 'undefined',\n                payable: this.payable,\n                gas: this.gas != null ? this.gas : undefined,\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format))),\n            });\n        }\n\n        const result = [`constructor${joinParams(format, this.inputs)}`];\n        if (this.payable) {\n            result.push('payable');\n        }\n        if (this.gas != null) {\n            result.push(`@${this.gas.toString()}`);\n        }\n        return result.join(' ');\n    }\n\n    /**\n     * Returns a new **ConstructorFragment** for `obj`.\n     */\n    static from(obj: any): ConstructorFragment {\n        if (ConstructorFragment.isFragment(obj)) {\n            return obj;\n        }\n\n        if (typeof obj === 'string') {\n            try {\n                return ConstructorFragment.from(lex(obj));\n            } catch (error) {\n                assertArgument(false, 'invalid constuctor fragment', 'obj', obj);\n            }\n        } else if (obj instanceof TokenString) {\n            consumeKeywords(obj, setify(['constructor']));\n            const inputs = consumeParams(obj);\n            const payable = !!consumeKeywords(obj, KwVisibDeploy).has('payable');\n            const gas = consumeGas(obj);\n            consumeEoi(obj);\n\n            return new ConstructorFragment(_guard, 'constructor', inputs, payable, gas);\n        }\n\n        return new ConstructorFragment(\n            _guard,\n            'constructor',\n            obj.inputs ? obj.inputs.map(ParamType.from) : [],\n            !!obj.payable,\n            obj.gas != null ? obj.gas : null,\n        );\n    }\n\n    /**\n     * Returns `true` and provides a type guard if `value` is a **ConstructorFragment**.\n     */\n    static isFragment(value: any): value is ConstructorFragment {\n        return value && value[internal] === ConstructorFragmentInternal;\n    }\n}\n\n/**\n * A Fragment which represents a method.\n *\n * @category Application Binary Interface\n */\nexport class FallbackFragment extends Fragment {\n    /**\n     * If the function can be sent value during invocation.\n     */\n    readonly payable!: boolean;\n\n    constructor(guard: any, inputs: ReadonlyArray<ParamType>, payable: boolean) {\n        super(guard, 'fallback', inputs);\n        Object.defineProperty(this, internal, { value: FallbackFragmentInternal });\n        defineProperties<FallbackFragment>(this, { payable });\n    }\n\n    /**\n     * Returns a string representation of this fallback as `format`.\n     */\n    format(format?: FormatType): string {\n        const type = this.inputs.length === 0 ? 'receive' : 'fallback';\n\n        if (format === 'json') {\n            const stateMutability = this.payable ? 'payable' : 'nonpayable';\n            return JSON.stringify({ type, stateMutability });\n        }\n\n        return `${type}()${this.payable ? ' payable' : ''}`;\n    }\n\n    /**\n     * Returns a new **FallbackFragment** for `obj`.\n     */\n    static from(obj: any): FallbackFragment {\n        if (FallbackFragment.isFragment(obj)) {\n            return obj;\n        }\n\n        if (typeof obj === 'string') {\n            try {\n                return FallbackFragment.from(lex(obj));\n            } catch (error) {\n                assertArgument(false, 'invalid fallback fragment', 'obj', obj);\n            }\n        } else if (obj instanceof TokenString) {\n            const errorObj = obj.toString();\n\n            const topIsValid = obj.peekKeyword(setify(['fallback', 'receive']));\n            assertArgument(topIsValid, 'type must be fallback or receive', 'obj', errorObj);\n\n            const type = obj.popKeyword(setify(['fallback', 'receive']));\n\n            // receive()\n            if (type === 'receive') {\n                const inputs = consumeParams(obj);\n                assertArgument(inputs.length === 0, `receive cannot have arguments`, 'obj.inputs', inputs);\n                consumeKeywords(obj, setify(['payable']));\n                consumeEoi(obj);\n                return new FallbackFragment(_guard, [], true);\n            }\n\n            // fallback() [payable]\n            // fallback(bytes) [payable] returns (bytes)\n            let inputs = consumeParams(obj);\n            if (inputs.length) {\n                assertArgument(\n                    inputs.length === 1 && inputs[0].type === 'bytes',\n                    'invalid fallback inputs',\n                    'obj.inputs',\n                    inputs.map((i) => i.format('minimal')).join(', '),\n                );\n            } else {\n                inputs = [ParamType.from('bytes')];\n            }\n\n            const mutability = consumeMutability(obj);\n            assertArgument(\n                mutability === 'nonpayable' || mutability === 'payable',\n                'fallback cannot be constants',\n                'obj.stateMutability',\n                mutability,\n            );\n\n            if (consumeKeywords(obj, setify(['returns'])).has('returns')) {\n                const outputs = consumeParams(obj);\n                assertArgument(\n                    outputs.length === 1 && outputs[0].type === 'bytes',\n                    'invalid fallback outputs',\n                    'obj.outputs',\n                    outputs.map((i) => i.format('minimal')).join(', '),\n                );\n            }\n\n            consumeEoi(obj);\n\n            return new FallbackFragment(_guard, inputs, mutability === 'payable');\n        }\n\n        if (obj.type === 'receive') {\n            return new FallbackFragment(_guard, [], true);\n        }\n\n        if (obj.type === 'fallback') {\n            const inputs = [ParamType.from('bytes')];\n            const payable = obj.stateMutability === 'payable';\n            return new FallbackFragment(_guard, inputs, payable);\n        }\n\n        assertArgument(false, 'invalid fallback description', 'obj', obj);\n    }\n\n    /**\n     * Returns `true` and provides a type guard if `value` is a **FallbackFragment**.\n     */\n    static isFragment(value: any): value is FallbackFragment {\n        return value && value[internal] === FallbackFragmentInternal;\n    }\n}\n\n/**\n * A Fragment which represents a method.\n *\n * @category Application Binary Interface\n */\nexport class FunctionFragment extends NamedFragment {\n    /**\n     * If the function is constant (e.g. `pure` or `view` functions).\n     */\n    readonly constant!: boolean;\n\n    /**\n     * The returned types for the result of calling this function.\n     */\n    readonly outputs!: ReadonlyArray<ParamType>;\n\n    /**\n     * The state mutability (e.g. `payable`, `nonpayable`, `view` or `pure`)\n     */\n    readonly stateMutability!: 'payable' | 'nonpayable' | 'view' | 'pure';\n\n    /**\n     * If the function can be sent value during invocation.\n     */\n    readonly payable!: boolean;\n\n    /**\n     * The recommended gas limit to send when calling this function.\n     */\n    readonly gas!: null | bigint;\n\n    /**\n     * @ignore\n     */\n    constructor(\n        guard: any,\n        name: string,\n        stateMutability: 'payable' | 'nonpayable' | 'view' | 'pure',\n        inputs: ReadonlyArray<ParamType>,\n        outputs: ReadonlyArray<ParamType>,\n        gas: null | bigint,\n    ) {\n        super(guard, 'function', name, inputs);\n        Object.defineProperty(this, internal, { value: FunctionFragmentInternal });\n        outputs = Object.freeze(outputs.slice());\n        const constant = stateMutability === 'view' || stateMutability === 'pure';\n        const payable = stateMutability === 'payable';\n        defineProperties<FunctionFragment>(this, { constant, gas, outputs, payable, stateMutability });\n    }\n\n    /**\n     * The Function selector.\n     */\n    get selector(): string {\n        return id(this.format('sighash')).substring(0, 10);\n    }\n\n    /**\n     * Returns a string representation of this function as `format`.\n     */\n    format(format?: FormatType): string {\n        if (format == null) {\n            format = 'sighash';\n        }\n        if (format === 'json') {\n            return JSON.stringify({\n                type: 'function',\n                name: this.name,\n                constant: this.constant,\n                stateMutability: this.stateMutability !== 'nonpayable' ? this.stateMutability : undefined,\n                payable: this.payable,\n                gas: this.gas != null ? this.gas : undefined,\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format))),\n                outputs: this.outputs.map((o) => JSON.parse(o.format(format))),\n            });\n        }\n\n        const result: Array<string> = [];\n\n        if (format !== 'sighash') {\n            result.push('function');\n        }\n\n        result.push(this.name + joinParams(format, this.inputs));\n\n        if (format !== 'sighash') {\n            if (this.stateMutability !== 'nonpayable') {\n                result.push(this.stateMutability);\n            }\n\n            if (this.outputs && this.outputs.length) {\n                result.push('returns');\n                result.push(joinParams(format, this.outputs));\n            }\n\n            if (this.gas != null) {\n                result.push(`@${this.gas.toString()}`);\n            }\n        }\n        return result.join(' ');\n    }\n\n    /**\n     * Return the selector for a function with `name` and `params`.\n     */\n    static getSelector(name: string, params?: Array<any>): string {\n        params = (params || []).map((p) => ParamType.from(p));\n        const fragment = new FunctionFragment(_guard, name, 'view', params, [], null);\n        return fragment.selector;\n    }\n\n    /**\n     * Returns a new **FunctionFragment** for `obj`.\n     */\n    static from(obj: any): FunctionFragment {\n        if (FunctionFragment.isFragment(obj)) {\n            return obj;\n        }\n\n        if (typeof obj === 'string') {\n            try {\n                return FunctionFragment.from(lex(obj));\n            } catch (error) {\n                assertArgument(false, 'invalid function fragment', 'obj', obj);\n            }\n        } else if (obj instanceof TokenString) {\n            const name = consumeName('function', obj);\n            const inputs = consumeParams(obj);\n            const mutability = consumeMutability(obj);\n\n            let outputs: Array<ParamType> = [];\n            if (consumeKeywords(obj, setify(['returns'])).has('returns')) {\n                outputs = consumeParams(obj);\n            }\n\n            const gas = consumeGas(obj);\n\n            consumeEoi(obj);\n\n            return new FunctionFragment(_guard, name, mutability, inputs, outputs, gas);\n        }\n\n        let stateMutability = obj.stateMutability;\n\n        // Use legacy Solidity ABI logic if stateMutability is missing\n        if (stateMutability == null) {\n            stateMutability = 'payable';\n\n            if (typeof obj.constant === 'boolean') {\n                stateMutability = 'view';\n                if (!obj.constant) {\n                    stateMutability = 'payable';\n                    if (typeof obj.payable === 'boolean' && !obj.payable) {\n                        stateMutability = 'nonpayable';\n                    }\n                }\n            } else if (typeof obj.payable === 'boolean' && !obj.payable) {\n                stateMutability = 'nonpayable';\n            }\n        }\n\n        // @TODO: verifyState for stateMutability (e.g. throw if\n        //        payable: false but stateMutability is \"nonpayable\")\n\n        return new FunctionFragment(\n            _guard,\n            obj.name,\n            stateMutability,\n            obj.inputs ? obj.inputs.map(ParamType.from) : [],\n            obj.outputs ? obj.outputs.map(ParamType.from) : [],\n            obj.gas != null ? obj.gas : null,\n        );\n    }\n\n    /**\n     * Returns `true` and provides a type guard if `value` is a **FunctionFragment**.\n     */\n    static isFragment(value: any): value is FunctionFragment {\n        return value && value[internal] === FunctionFragmentInternal;\n    }\n}\n\n/**\n * A Fragment which represents a structure.\n *\n * @category Application Binary Interface\n */\nexport class StructFragment extends NamedFragment {\n    /**\n     * @ignore\n     */\n    constructor(guard: any, name: string, inputs: ReadonlyArray<ParamType>) {\n        super(guard, 'struct', name, inputs);\n        Object.defineProperty(this, internal, { value: StructFragmentInternal });\n    }\n\n    /**\n     * Returns a string representation of this struct as `format`.\n     */\n    format(): string {\n        throw new Error('@TODO');\n    }\n\n    /**\n     * Returns a new **StructFragment** for `obj`.\n     */\n    static from(obj: any): StructFragment {\n        if (typeof obj === 'string') {\n            try {\n                return StructFragment.from(lex(obj));\n            } catch (error) {\n                assertArgument(false, 'invalid struct fragment', 'obj', obj);\n            }\n        } else if (obj instanceof TokenString) {\n            const name = consumeName('struct', obj);\n            const inputs = consumeParams(obj);\n            consumeEoi(obj);\n            return new StructFragment(_guard, name, inputs);\n        }\n\n        return new StructFragment(_guard, obj.name, obj.inputs ? obj.inputs.map(ParamType.from) : []);\n    }\n\n    // @TODO: fix this return type\n    /**\n     * Returns `true` and provides a type guard if `value` is a **StructFragment**.\n     */\n    static isFragment(value: any): value is FunctionFragment {\n        return value && value[internal] === StructFragmentInternal;\n    }\n}\n","/**\n * When sending values to or receiving values from a [Contract](../classes/Contract), the data is generally encoded\n * using the [ABI\n * Specification](https://docs.soliditylang.org/en/v0.8.19/abi-spec.html#formal-specification-of-the-encoding).\n *\n * The AbiCoder provides a utility to encode values to ABI data and decode values from ABI data.\n *\n * Most of the time, developers should favor the [Contract](../classes/Contract) class, which further abstracts the\n * finer details of ABI data.\n *\n * @category Application Binary Interface\n */\n\nimport { assertArgumentCount, assertArgument } from '../utils/index.js';\n\nimport { Coder, Reader, Result, Writer } from './coders/abstract-coder.js';\nimport { AddressCoder } from './coders/address.js';\nimport { ArrayCoder } from './coders/array.js';\nimport { BooleanCoder } from './coders/boolean.js';\nimport { BytesCoder } from './coders/bytes.js';\nimport { FixedBytesCoder } from './coders/fixed-bytes.js';\nimport { NullCoder } from './coders/null.js';\nimport { NumberCoder } from './coders/number.js';\nimport { StringCoder } from './coders/string.js';\nimport { TupleCoder } from './coders/tuple.js';\nimport { ParamType } from './fragments.js';\n\nimport { getAddress } from '../address/index.js';\nimport { getBytes, hexlify, makeError } from '../utils/index.js';\n\nimport type { BytesLike, CallExceptionAction, CallExceptionError, CallExceptionTransaction } from '../utils/index.js';\n\n// https://docs.soliditylang.org/en/v0.8.17/control-structures.html\nconst PanicReasons: Map<number, string> = new Map();\nPanicReasons.set(0x00, 'GENERIC_PANIC');\nPanicReasons.set(0x01, 'ASSERT_FALSE');\nPanicReasons.set(0x11, 'OVERFLOW');\nPanicReasons.set(0x12, 'DIVIDE_BY_ZERO');\nPanicReasons.set(0x21, 'ENUM_RANGE_ERROR');\nPanicReasons.set(0x22, 'BAD_STORAGE_DATA');\nPanicReasons.set(0x31, 'STACK_UNDERFLOW');\nPanicReasons.set(0x32, 'ARRAY_RANGE_ERROR');\nPanicReasons.set(0x41, 'OUT_OF_MEMORY');\nPanicReasons.set(0x51, 'UNINITIALIZED_FUNCTION_CALL');\n\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\n\nlet defaultCoder: null | AbiCoder = null;\nlet defaultMaxInflation = 1024;\n\nfunction getBuiltinCallException(\n    action: CallExceptionAction,\n    tx: { to?: null | string; from?: null | string; data?: string },\n    data: null | BytesLike,\n    abiCoder: AbiCoder,\n): CallExceptionError {\n    let message = 'missing revert data';\n\n    let reason: null | string = null;\n    const invocation = null;\n    let revert: null | { signature: string; name: string; args: Array<any> } = null;\n\n    if (data) {\n        message = 'execution reverted';\n\n        const bytes = getBytes(data);\n        data = hexlify(data);\n\n        if (bytes.length === 0) {\n            message += ' (no data present; likely require(false) occurred';\n            reason = 'require(false)';\n        } else if (bytes.length % 32 !== 4) {\n            message += ' (could not decode reason; invalid data length)';\n        } else if (hexlify(bytes.slice(0, 4)) === '0x08c379a0') {\n            // Error(string)\n            try {\n                reason = abiCoder.decode(['string'], bytes.slice(4))[0];\n                revert = {\n                    signature: 'Error(string)',\n                    name: 'Error',\n                    args: [reason],\n                };\n                message += `: ${JSON.stringify(reason)}`;\n            } catch (error) {\n                message += ' (could not decode reason; invalid string data)';\n            }\n        } else if (hexlify(bytes.slice(0, 4)) === '0x4e487b71') {\n            // Panic(uint256)\n            try {\n                const code = Number(abiCoder.decode(['uint256'], bytes.slice(4))[0]);\n                revert = {\n                    signature: 'Panic(uint256)',\n                    name: 'Panic',\n                    args: [code],\n                };\n                reason = `Panic due to ${PanicReasons.get(code) || 'UNKNOWN'}(${code})`;\n                message += `: ${reason}`;\n            } catch (error) {\n                message += ' (could not decode panic code)';\n            }\n        } else {\n            message += ' (unknown custom error)';\n        }\n    }\n\n    const transaction: CallExceptionTransaction = {\n        to: tx.to ? getAddress(tx.to) : null,\n        data: tx.data || '0x',\n    };\n    if (tx.from) {\n        transaction.from = getAddress(tx.from);\n    }\n\n    return makeError(message, 'CALL_EXCEPTION', {\n        action,\n        data,\n        reason,\n        transaction,\n        invocation,\n        revert,\n    });\n}\n\n/**\n * The **AbiCoder** is a low-level class responsible for encoding JavaScript values into binary data and decoding binary\n * data into JavaScript values.\n *\n * @category Application Binary Interface\n */\nexport class AbiCoder {\n    #getCoder(param: ParamType): Coder {\n        if (param.isArray()) {\n            return new ArrayCoder(this.#getCoder(param.arrayChildren), param.arrayLength, param.name);\n        }\n\n        if (param.isTuple()) {\n            return new TupleCoder(\n                param.components.map((c) => this.#getCoder(c)),\n                param.name,\n            );\n        }\n\n        switch (param.baseType) {\n            case 'address':\n                return new AddressCoder(param.name);\n            case 'bool':\n                return new BooleanCoder(param.name);\n            case 'string':\n                return new StringCoder(param.name);\n            case 'bytes':\n                return new BytesCoder(param.name);\n            case '':\n                return new NullCoder(param.name);\n        }\n\n        // u?int[0-9]*\n        let match = param.type.match(paramTypeNumber);\n        if (match) {\n            const size = parseInt(match[2] || '256');\n            assertArgument(\n                size !== 0 && size <= 256 && size % 8 === 0,\n                'invalid ' + match[1] + ' bit length',\n                'param',\n                param,\n            );\n            return new NumberCoder(size / 8, match[1] === 'int', param.name);\n        }\n\n        // bytes[0-9]+\n        match = param.type.match(paramTypeBytes);\n        if (match) {\n            const size = parseInt(match[1]);\n            assertArgument(size !== 0 && size <= 32, 'invalid bytes length', 'param', param);\n            return new FixedBytesCoder(size, param.name);\n        }\n\n        assertArgument(false, 'invalid type', 'type', param.type);\n    }\n\n    /**\n     * Get the default values for the given types. For example, a `uint` is by default `0` and `bool` is by default\n     * `false`.\n     *\n     * @param {(string | ParamType)[]} types - Array of parameter types to get default values for.\n     * @returns {Result} The default values corresponding to the given types.\n     */\n    getDefaultValue(types: ReadonlyArray<string | ParamType>): Result {\n        const coders: Array<Coder> = types.map((type) => this.#getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, '_');\n        return coder.defaultValue();\n    }\n\n    /**\n     * Encode the values as the specified types into ABI data.\n     *\n     * @param {(string | ParamType)[]} types - Array of parameter types.\n     * @param {any[]} values - Array of values to encode.\n     * @returns {string} The encoded data in hexadecimal format.\n     */\n    encode(types: ReadonlyArray<string | ParamType>, values: ReadonlyArray<any>): string {\n        assertArgumentCount(values.length, types.length, 'types/values length mismatch');\n\n        const coders = types.map((type) => this.#getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, '_');\n\n        const writer = new Writer();\n        coder.encode(writer, values);\n        return writer.data;\n    }\n\n    /**\n     * Decode the ABI data as the types into values.\n     *\n     * If loose decoding is enabled, then strict padding is not enforced. Some older versions of Solidity incorrectly\n     * padded event data emitted from `external` functions.\n     *\n     * @param {(string | ParamType)[]} types - Array of parameter types.\n     * @param {BytesLike} data - The ABI data to decode.\n     * @param {boolean} [loose=false] - Enable loose decoding. Default is `false`\n     * @returns {Result} The decoded values.\n     */\n    decode(types: ReadonlyArray<string | ParamType>, data: BytesLike, loose?: boolean): Result {\n        const coders: Array<Coder> = types.map((type) => this.#getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, '_');\n        return coder.decode(new Reader(data, loose, defaultMaxInflation));\n    }\n\n    /**\n     * Set the default maximum inflation factor.\n     *\n     * @ignore\n     * @param {number} value - The new inflation factor.\n     */\n    static _setDefaultMaxInflation(value: number): void {\n        assertArgument(\n            typeof value === 'number' && Number.isInteger(value),\n            'invalid defaultMaxInflation factor',\n            'value',\n            value,\n        );\n        defaultMaxInflation = value;\n    }\n\n    /**\n     * Returns the shared singleton instance of a default {@link AbiCoder | **AbiCoder**}.\n     *\n     * On the first call, the instance is created internally.\n     *\n     * @returns {AbiCoder} The default ABI coder instance.\n     */\n    static defaultAbiCoder(): AbiCoder {\n        if (defaultCoder == null) {\n            defaultCoder = new AbiCoder();\n        }\n        return defaultCoder;\n    }\n\n    /**\n     * Returns a quais-compatible {@link CallExceptionError | **CallExceptionError**} for the given result data.\n     *\n     * @param {CallExceptionAction} action - The action that triggered the exception.\n     * @param {Object} tx - The transaction information.\n     * @param {BytesLike | null} data - The data associated with the call exception.\n     * @returns {CallExceptionError} The corresponding call exception error.\n     */\n    static getBuiltinCallException(\n        action: CallExceptionAction,\n        tx: { to?: null | string; from?: null | string; data?: string },\n        data: null | BytesLike,\n    ): CallExceptionError {\n        return getBuiltinCallException(action, tx, data, AbiCoder.defaultAbiCoder());\n    }\n}\n","import { assertArgument } from '../utils/index.js';\n\nimport { formatMixedCaseChecksumAddress, getAddress } from './address.js';\n\nimport type { Addressable, AddressLike } from './index.js';\n\n/**\n * Returns true if `value` is an object which implements the [**Addressable**](../interfaces/Addressable) interface.\n *\n * @category Address\n * @example\n *\n * ```js\n * // Wallets and AbstractSigner sub-classes\n * isAddressable(Wallet.createRandom());\n *\n * // Contracts\n * contract = new Contract('0x643aA0A61eADCC9Cc202D1915D942d35D005400C', [], provider);\n * isAddressable(contract);\n * ```\n *\n * @param {any} value - The value to check.\n * @returns {boolean} True if the value is an Addressable.\n */\nexport function isAddressable(value: any): value is Addressable {\n    return value && typeof value.getAddress === 'function';\n}\n\n/**\n * Returns true if `value` is a valid address.\n *\n * @category Address\n * @example\n *\n * ```js\n * // Valid address\n * isAddress('0x8ba1f109551bD432803012645Ac136ddd64DBA72');\n *\n * // Invalid checksum\n * isAddress('0x8Ba1f109551bD432803012645Ac136ddd64DBa72');\n * ```\n *\n * @param {any} value - The value to check.\n * @returns {boolean} True if the value is a valid address.\n */\nexport function isAddress(value: any): value is string {\n    try {\n        getAddress(value);\n        return true;\n        // eslint-disable-next-line no-empty\n    } catch (error) {}\n    return false;\n}\n\nasync function checkAddress(target: any, promise: Promise<null | string>): Promise<string> {\n    const result = await promise;\n    if (result == null || result === '0x0000000000000000000000000000000000000000') {\n        assertArgument(false, 'invalid AddressLike value; did not resolve to a value address', 'target', target);\n    }\n    return result;\n}\n\n/**\n * Resolves to an address for the `target`, which may be any supported address type, an\n * [**Addressable**](../interfaces/Addressable) or a Promise which resolves to an address.\n *\n * @category Address\n * @example\n *\n * ```js\n * addr = '0x6B175474E89094C44Da98b954EedeAC495271d0F';\n *\n * // Addresses are return synchronously\n * resolveAddress(addr, provider);\n *\n * // Address promises are resolved asynchronously\n * resolveAddress(Promise.resolve(addr));\n *\n * // Addressable objects are resolved asynchronously\n * contract = new Contract(addr, []);\n * resolveAddress(contract, provider);\n * ```\n *\n * @param {AddressLike} target - The target to resolve to an address.\n * @returns {string | Promise<string>} The resolved address.\n */\nexport function resolveAddress(target: AddressLike): string | Promise<string> {\n    if (typeof target === 'string') {\n        if (target.match(/^0x[0-9a-f]{40}$/i)) {\n            return target;\n        }\n    } else if (isAddressable(target)) {\n        return checkAddress(target, target.getAddress());\n    } else if (target && typeof target.then === 'function') {\n        return checkAddress(target, target);\n    }\n\n    assertArgument(false, 'unsupported addressable value', 'target', target);\n}\n\n/**\n * Checks if the address is a valid mixed case checksummed address.\n *\n * @category Address\n * @param address - The address to validate.\n * @returns True if the address is a valid mixed case checksummed address.\n */\nexport function validateAddress(address: string): void {\n    assertArgument(typeof address === 'string', 'address must be string', 'address', address);\n    assertArgument(\n        Boolean(address.match(/^(0x)?[0-9a-fA-F]{40}$/)),\n        'invalid address string format',\n        'address',\n        address,\n    );\n    assertArgument(formatMixedCaseChecksumAddress(address) === address, 'invalid address checksum', 'address', address);\n}\n\n/**\n * Checks whether a given address is in the Qi ledger scope by checking the 9th bit of the address.\n *\n * @category Address\n * @param {string} address - The address to check\n * @returns {boolean} True if the address is in the Qi ledger scope, false otherwise.\n */\nexport function isQiAddress(address: string): boolean {\n    const secondByte = address.substring(4, 6);\n    const binaryString = parseInt(secondByte, 16).toString(2).padStart(8, '0');\n    const isUTXO = binaryString[0] === '1';\n\n    return isUTXO;\n}\n\n/**\n * Checks whether a given address is in the Quai ledger scope by checking the 9th bit of the address.\n *\n * @category Address\n * @param {string} address - The address to check\n * @returns {boolean} True if the address is in the Quai ledger scope, false otherwise.\n */\nexport function isQuaiAddress(address: string): boolean {\n    return !isQiAddress(address);\n}\n","import { validateAddress } from '../address/index.js';\nimport { getAddress, formatMixedCaseChecksumAddress } from '../address/index.js';\nimport { assertArgument, isHexString } from '../utils/index.js';\n\nimport type { AccessList, AccessListish } from './index.js';\n\n/**\n * Converts an address and storage keys into an access set.\n *\n * @param {string} addr - The address to validate and convert.\n * @param {string[]} storageKeys - The storage keys to validate and convert.\n * @returns {{ address: string; storageKeys: string[] }} The access set.\n */\nfunction accessSetify(addr: string, storageKeys: Array<string>): { address: string; storageKeys: Array<string> } {\n    validateAddress(addr);\n    return {\n        address: getAddress(addr),\n        storageKeys: storageKeys.map((storageKey, index) => {\n            assertArgument(isHexString(storageKey, 32), 'invalid slot', `storageKeys[${index}]`, storageKey);\n            return storageKey.toLowerCase();\n        }),\n    };\n}\n\n/**\n * Returns an {@link AccessList | **AccessList**} from any quasi-supported access-list structure.\n *\n * @category Transaction\n * @param {AccessListish} value - The value to convert to an access list.\n * @returns {AccessList} The access list.\n * @throws {Error} If the value is not a valid access list.\n */\nexport function accessListify(value: AccessListish): AccessList {\n    if (Array.isArray(value)) {\n        return (<Array<[string, Array<string>] | { address: string; storageKeys: Array<string> }>>value).map(\n            (set, index) => {\n                if (Array.isArray(set)) {\n                    assertArgument(set.length === 2, 'invalid slot set', `value[${index}]`, set);\n                    return accessSetify(formatMixedCaseChecksumAddress(set[0]), set[1]);\n                }\n                assertArgument(set != null && typeof set === 'object', 'invalid address-slot set', 'value', value);\n                return accessSetify(formatMixedCaseChecksumAddress(set.address), set.storageKeys);\n            },\n        );\n    }\n\n    assertArgument(value != null && typeof value === 'object', 'invalid access list', 'value', value);\n\n    const result: Array<{ address: string; storageKeys: Array<string> }> = Object.keys(value).map((addr) => {\n        const storageKeys: Record<string, true> = value[addr].reduce(\n            (accum, storageKey) => {\n                accum[storageKey] = true;\n                return accum;\n            },\n            <Record<string, true>>{},\n        );\n        return accessSetify(addr, Object.keys(storageKeys).sort());\n    });\n    result.sort((a, b) => a.address.localeCompare(b.address));\n    return result;\n}\n","import { assert } from './errors.js';\n\nimport type { FetchGetUrlFunc, FetchRequest, FetchCancelSignal, GetUrlResponse } from './fetch.js';\n\ndeclare global {\n    class Headers {\n        constructor(values: Array<[string, string]>);\n        forEach(func: (v: string, k: string) => void): void;\n    }\n\n    class Response {\n        status: number;\n        statusText: string;\n        headers: Headers;\n        arrayBuffer(): Promise<ArrayBuffer>;\n    }\n\n    type FetchInit = {\n        method?: string;\n        headers?: Headers;\n        body?: Uint8Array;\n    };\n\n    function fetch(url: string, init: FetchInit): Promise<Response>;\n}\n\n// @TODO: timeout is completely ignored; start a Promise.any with a reject?\n// TODO: `options` is not used; remove?\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function createGetUrl(options?: Record<string, any>): FetchGetUrlFunc {\n    async function getUrl(req: FetchRequest, _signal?: FetchCancelSignal): Promise<GetUrlResponse> {\n        const protocol = req.url.split(':')[0].toLowerCase();\n\n        assert(\n            protocol === 'http' || protocol === 'https',\n            `unsupported protocol ${protocol}`,\n            'UNSUPPORTED_OPERATION',\n            {\n                info: { protocol },\n                operation: 'request',\n            },\n        );\n\n        assert(\n            protocol === 'https' || !req.credentials || req.allowInsecureAuthentication,\n            'insecure authorized connections unsupported',\n            'UNSUPPORTED_OPERATION',\n            {\n                operation: 'request',\n            },\n        );\n\n        let signal: undefined | AbortSignal = undefined;\n        if (_signal) {\n            const controller = new AbortController();\n            signal = controller.signal;\n            _signal.addListener(() => {\n                controller.abort();\n            });\n        }\n\n        const init = {\n            method: req.method,\n            headers: new Headers(Array.from(req)),\n            body: req.body || undefined,\n            signal,\n        };\n\n        const resp = await fetch(req.url, init);\n\n        const headers: Record<string, string> = {};\n        resp.headers.forEach((value, key) => {\n            headers[key.toLowerCase()] = value;\n        });\n\n        const respBody = await resp.arrayBuffer();\n        const body = respBody == null ? null : new Uint8Array(respBody);\n\n        return {\n            statusCode: resp.status,\n            statusMessage: resp.statusText,\n            headers,\n            body,\n        };\n    }\n\n    return getUrl;\n}\n\n// @TODO: remove in v7; provided for backwards compat\nconst defaultGetUrl: FetchGetUrlFunc = createGetUrl({});\n\nexport async function getUrl(req: FetchRequest, _signal?: FetchCancelSignal): Promise<GetUrlResponse> {\n    return defaultGetUrl(req, _signal);\n}\n","/**\n * Fetching content from the web is environment-specific, so quais provides an abstraction that each environment can\n * implement to provide this service.\n *\n * On [Node.js](https://nodejs.org/), the `http` and `https` libs are used to create a request object, register event\n * listeners and process data and populate the {@link FetchResponse | **FetchResponse**}.\n *\n * In a browser, the [DOM fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) is used, and the resulting\n * `Promise` is waited on to retrieve the payload.\n *\n * The {@link FetchRequest | **FetchRequest**} is responsible for handling many common situations, such as redirects,\n * server throttling, authentication, etc.\n *\n * It also handles common gateways, such as IPFS and data URIs.\n */\nimport { decodeBase64, encodeBase64 } from '../encoding/base64.js';\nimport { hexlify } from './data.js';\nimport { assert, assertArgument } from './errors.js';\nimport { defineProperties } from './properties.js';\nimport { toUtf8Bytes, toUtf8String } from '../encoding/index.js';\n\nimport { createGetUrl } from './geturl.js';\n\n/**\n * An environment's implementation of `getUrl` must return this type.\n *\n * @category Utils\n */\nexport type GetUrlResponse = {\n    statusCode: number;\n    statusMessage: string;\n    headers: Record<string, string>;\n    body: null | Uint8Array;\n};\n\n/**\n * This can be used to control how throttling is handled in\n * {@link FetchRequest.setThrottleParams | **setThrottleParams**}.\n *\n * @category Utils\n */\nexport type FetchThrottleParams = {\n    maxAttempts?: number;\n    slotInterval?: number;\n};\n\n/**\n * Called before any network request, allowing updated headers (e.g. Bearer tokens), etc.\n *\n * @category Utils\n */\nexport type FetchPreflightFunc = (req: FetchRequest) => Promise<FetchRequest>;\n\n/**\n * Called on the response, allowing client-based throttling logic or post-processing.\n *\n * @category Utils\n */\nexport type FetchProcessFunc = (req: FetchRequest, resp: FetchResponse) => Promise<FetchResponse>;\n\n/**\n * Called prior to each retry; return true to retry, false to abort.\n *\n * @category Utils\n */\nexport type FetchRetryFunc = (req: FetchRequest, resp: FetchResponse, attempt: number) => Promise<boolean>;\n\n/**\n * Called on Gateway URLs.\n *\n * @category Utils\n */\nexport type FetchGatewayFunc = (url: string, signal?: FetchCancelSignal) => Promise<FetchRequest | FetchResponse>;\n\n/**\n * Used to perform a fetch; use this to override the underlying network fetch layer. In NodeJS, the default uses the\n * \"http\" and \"https\" libraries and in the browser `fetch` is used. If you wish to use Axios, this is how you would\n * register it.\n *\n * @category Utils\n */\nexport type FetchGetUrlFunc = (req: FetchRequest, signal?: FetchCancelSignal) => Promise<GetUrlResponse>;\n\nconst MAX_ATTEMPTS = 12;\nconst SLOT_INTERVAL = 250;\n\n// The global FetchGetUrlFunc implementation.\nlet defaultGetUrlFunc: FetchGetUrlFunc = createGetUrl();\n\nconst reData = new RegExp('^data:([^;:]*)?(;base64)?,(.*)$', 'i');\nconst reIpfs = new RegExp('^ipfs://(ipfs/)?(.*)$', 'i');\n\n// If locked, new Gateways cannot be added\nlet locked = false;\n\n// https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URLs\n// TODO: `signal` is not used; remove?\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nasync function dataGatewayFunc(url: string, signal?: FetchCancelSignal): Promise<FetchResponse> {\n    try {\n        const match = url.match(reData);\n        if (!match) {\n            throw new Error('invalid data');\n        }\n        return new FetchResponse(\n            200,\n            'OK',\n            {\n                'content-type': match[1] || 'text/plain',\n            },\n            match[2] ? decodeBase64(match[3]) : unpercent(match[3]),\n        );\n    } catch (error) {\n        return new FetchResponse(599, 'BAD REQUEST (invalid data: URI)', {}, null, new FetchRequest(url));\n    }\n}\n\n/**\n * Returns a {@link FetchGatewayFunc | **FetchGatewayFunc**} for fetching content from a standard IPFS gateway hosted at\n * `baseUrl`.\n *\n * @category Utils\n * @param {string} baseUrl - The base URL of the IPFS gateway.\n * @returns {FetchGatewayFunc} The gateway function.\n */\nfunction getIpfsGatewayFunc(baseUrl: string): FetchGatewayFunc {\n    // TODO: `signal` is not used; remove?\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async function gatewayIpfs(url: string, signal?: FetchCancelSignal): Promise<FetchRequest | FetchResponse> {\n        try {\n            const match = url.match(reIpfs);\n            if (!match) {\n                throw new Error('invalid link');\n            }\n            return new FetchRequest(`${baseUrl}${match[2]}`);\n        } catch (error) {\n            return new FetchResponse(599, 'BAD REQUEST (invalid IPFS URI)', {}, null, new FetchRequest(url));\n        }\n    }\n\n    return gatewayIpfs;\n}\n\nconst Gateways: Record<string, FetchGatewayFunc> = {\n    data: dataGatewayFunc,\n    ipfs: getIpfsGatewayFunc('https://gateway.ipfs.io/ipfs/'),\n};\n\nconst fetchSignals: WeakMap<FetchRequest, () => void> = new WeakMap();\n\n/**\n * @ignore\n */\nexport class FetchCancelSignal {\n    #listeners: Array<() => void>;\n    #cancelled: boolean;\n\n    constructor(request: FetchRequest) {\n        this.#listeners = [];\n        this.#cancelled = false;\n\n        fetchSignals.set(request, () => {\n            if (this.#cancelled) {\n                return;\n            }\n            this.#cancelled = true;\n\n            for (const listener of this.#listeners) {\n                setTimeout(() => {\n                    listener();\n                }, 0);\n            }\n            this.#listeners = [];\n        });\n    }\n\n    addListener(listener: () => void): void {\n        assert(!this.#cancelled, 'singal already cancelled', 'UNSUPPORTED_OPERATION', {\n            operation: 'fetchCancelSignal.addCancelListener',\n        });\n        this.#listeners.push(listener);\n    }\n\n    get cancelled(): boolean {\n        return this.#cancelled;\n    }\n\n    checkSignal(): void {\n        assert(!this.cancelled, 'cancelled', 'CANCELLED', {});\n    }\n}\n\n// Check the signal, throwing if it is cancelled\nfunction checkSignal(signal?: FetchCancelSignal): FetchCancelSignal {\n    if (signal == null) {\n        throw new Error('missing signal; should not happen');\n    }\n    signal.checkSignal();\n    return signal;\n}\n\n/**\n * Represents a request for a resource using a URI.\n *\n * By default, the supported schemes are `HTTP`, `HTTPS`, `data:`, and `IPFS:`.\n *\n * Additional schemes can be added globally using {@link registerGateway | **registerGateway**}.\n *\n * @category Utils\n * @example\n *\n * ```ts\n * req = new FetchRequest('https://www.ricmoo.com');\n * resp = await req.send();\n * resp.body.length;\n * ```\n */\nexport class FetchRequest implements Iterable<[key: string, value: string]> {\n    #allowInsecure: boolean;\n    #gzip: boolean;\n    #headers: Record<string, string>;\n    #method: string;\n    #timeout: number;\n    #url: string;\n\n    #body?: Uint8Array;\n    #bodyType?: string;\n    #creds?: string;\n\n    // Hooks\n    #preflight?: null | FetchPreflightFunc;\n    #process?: null | FetchProcessFunc;\n    #retry?: null | FetchRetryFunc;\n\n    #signal?: FetchCancelSignal;\n\n    #throttle: Required<FetchThrottleParams>;\n\n    #getUrlFunc: null | FetchGetUrlFunc;\n\n    /**\n     * The fetch URL to request.\n     */\n    get url(): string {\n        return this.#url;\n    }\n    set url(url: string) {\n        this.#url = String(url);\n    }\n\n    /**\n     * The fetch body, if any, to send as the request body. (default: null)\n     *\n     * When setting a body, the intrinsic `Content-Type` is automatically set and will be used if **not overridden** by\n     * setting a custom header.\n     *\n     * If `body` is null, the body is cleared (along with the intrinsic `Content-Type`).\n     *\n     * If `body` is a string, the intrinsic `Content-Type` is set to `text/plain`.\n     *\n     * If `body` is a Uint8Array, the intrinsic `Content-Type` is set to `application/octet-stream`.\n     *\n     * If `body` is any other object, the intrinsic `Content-Type` is set to `application/json`.\n     */\n    get body(): null | Uint8Array {\n        if (this.#body == null) {\n            return null;\n        }\n        return new Uint8Array(this.#body);\n    }\n    set body(body: null | string | Readonly<object> | Readonly<Uint8Array>) {\n        if (body == null) {\n            this.#body = undefined;\n            this.#bodyType = undefined;\n        } else if (typeof body === 'string') {\n            this.#body = toUtf8Bytes(body);\n            this.#bodyType = 'text/plain';\n        } else if (body instanceof Uint8Array) {\n            this.#body = body;\n            this.#bodyType = 'application/octet-stream';\n        } else if (typeof body === 'object') {\n            this.#body = toUtf8Bytes(JSON.stringify(body));\n            this.#bodyType = 'application/json';\n        } else {\n            throw new Error('invalid body');\n        }\n    }\n\n    /**\n     * Returns true if the request has a body.\n     */\n    hasBody(): this is FetchRequest & { body: Uint8Array } {\n        return this.#body != null;\n    }\n\n    /**\n     * The HTTP method to use when requesting the URI. If no method has been explicitly set, then `GET` is used if the\n     * body is null and `POST` otherwise.\n     */\n    get method(): string {\n        if (this.#method) {\n            return this.#method;\n        }\n        if (this.hasBody()) {\n            return 'POST';\n        }\n        return 'GET';\n    }\n    set method(method: null | string) {\n        if (method == null) {\n            method = '';\n        }\n        this.#method = String(method).toUpperCase();\n    }\n\n    /**\n     * The headers that will be used when requesting the URI. All keys are lower-case.\n     *\n     * This object is a copy, so any changes will **NOT** be reflected in the `FetchRequest`.\n     *\n     * To set a header entry, use the `setHeader` method.\n     */\n    get headers(): Record<string, string> {\n        const headers = Object.assign({}, this.#headers);\n\n        if (this.#creds) {\n            headers['authorization'] = `Basic ${encodeBase64(toUtf8Bytes(this.#creds))}`;\n        }\n\n        if (this.allowGzip) {\n            headers['accept-encoding'] = 'gzip';\n        }\n\n        if (headers['content-type'] == null && this.#bodyType) {\n            headers['content-type'] = this.#bodyType;\n        }\n        if (this.body) {\n            headers['content-length'] = String(this.body.length);\n        }\n\n        return headers;\n    }\n\n    /**\n     * Get the header for `key`, ignoring case.\n     *\n     * @param {string} key - The header key to retrieve.\n     * @returns {string} The header value.\n     */\n    getHeader(key: string): string {\n        return this.headers[key.toLowerCase()];\n    }\n\n    /**\n     * Set the header for `key` to `value`. All values are coerced to a string.\n     *\n     * @param {string} key - The header key to set.\n     * @param {string | number} value - The header value to set.\n     */\n    setHeader(key: string, value: string | number): void {\n        this.#headers[String(key).toLowerCase()] = String(value);\n    }\n\n    /**\n     * Clear all headers, resetting all intrinsic headers.\n     */\n    clearHeaders(): void {\n        this.#headers = {};\n    }\n\n    [Symbol.iterator](): Iterator<[key: string, value: string]> {\n        const headers = this.headers;\n        const keys = Object.keys(headers);\n        let index = 0;\n        return {\n            next: () => {\n                if (index < keys.length) {\n                    const key = keys[index++];\n                    return {\n                        value: [key, headers[key]],\n                        done: false,\n                    };\n                }\n                return { value: undefined, done: true };\n            },\n        };\n    }\n\n    /**\n     * The value that will be sent for the `Authorization` header.\n     *\n     * To set the credentials, use the `setCredentials` method.\n     */\n    get credentials(): null | string {\n        return this.#creds || null;\n    }\n\n    /**\n     * Sets an `Authorization` for `username` with `password`.\n     *\n     * @param {string} username - The username to use for basic authentication.\n     * @param {string} password - The password to use for basic authentication.\n     * @throws {Error} If the `username` contains a colon.\n     */\n    setCredentials(username: string, password: string): void {\n        assertArgument(!username.match(/:/), 'invalid basic authentication username', 'username', '[REDACTED]');\n        this.#creds = `${username}:${password}`;\n    }\n\n    /**\n     * Enable and request gzip-encoded responses. The response will automatically be decompressed. (default: true)\n     */\n    get allowGzip(): boolean {\n        return this.#gzip;\n    }\n    set allowGzip(value: boolean) {\n        this.#gzip = !!value;\n    }\n\n    /**\n     * Allow `Authentication` credentials to be sent over insecure channels. (default: false)\n     */\n    get allowInsecureAuthentication(): boolean {\n        return !!this.#allowInsecure;\n    }\n    set allowInsecureAuthentication(value: boolean) {\n        this.#allowInsecure = !!value;\n    }\n\n    /**\n     * The timeout (in milliseconds) to wait for a complete response. (default: 5 minutes)\n     */\n    get timeout(): number {\n        return this.#timeout;\n    }\n    set timeout(timeout: number) {\n        assertArgument(timeout >= 0, 'timeout must be non-zero', 'timeout', timeout);\n        this.#timeout = timeout;\n    }\n\n    /**\n     * This function is called prior to each request, for example during a redirection or retry in case of server\n     * throttling.\n     *\n     * This offers an opportunity to populate headers or update content before sending a request.\n     */\n    get preflightFunc(): null | FetchPreflightFunc {\n        return this.#preflight || null;\n    }\n    set preflightFunc(preflight: null | FetchPreflightFunc) {\n        this.#preflight = preflight;\n    }\n\n    /**\n     * This function is called after each response, offering an opportunity to provide client-level throttling or\n     * updating response data.\n     *\n     * Any error thrown in this causes the `send()` to throw.\n     *\n     * To schedule a retry attempt (assuming the maximum retry limit has not been reached), use\n     * {@link FetchResponse.throwThrottleError | **FetchResponse.throwThrottleError**}.\n     */\n    get processFunc(): null | FetchProcessFunc {\n        return this.#process || null;\n    }\n    set processFunc(process: null | FetchProcessFunc) {\n        this.#process = process;\n    }\n\n    /**\n     * This function is called on each retry attempt.\n     */\n    get retryFunc(): null | FetchRetryFunc {\n        return this.#retry || null;\n    }\n    set retryFunc(retry: null | FetchRetryFunc) {\n        this.#retry = retry;\n    }\n\n    /**\n     * This function is called to fetch content from HTTP and HTTPS URLs and is platform specific (e.g. nodejs vs\n     * browsers).\n     *\n     * This is by default the currently registered global getUrl function, which can be changed using\n     * {@link registerGetUrl | **registerGetUrl**}. If this has been set, setting is to `null` will cause this\n     * FetchRequest (and any future clones) to revert back to using the currently registered global getUrl function.\n     *\n     * Setting this is generally not necessary, but may be useful for developers that wish to intercept requests or to\n     * configurege a proxy or other agent.\n     */\n    get getUrlFunc(): FetchGetUrlFunc {\n        return this.#getUrlFunc || defaultGetUrlFunc;\n    }\n    set getUrlFunc(value: null | FetchGetUrlFunc) {\n        this.#getUrlFunc = value;\n    }\n\n    /**\n     * Create a new FetchRequest instance with default values.\n     *\n     * Once created, each property may be set before issuing a `.send()` to make the request.\n     */\n    constructor(url: string) {\n        this.#url = String(url);\n\n        this.#allowInsecure = false;\n        this.#gzip = true;\n        this.#headers = {};\n        this.#method = '';\n        this.#timeout = 300000;\n\n        this.#throttle = {\n            slotInterval: SLOT_INTERVAL,\n            maxAttempts: MAX_ATTEMPTS,\n        };\n\n        this.#getUrlFunc = null;\n    }\n\n    toString(): string {\n        return `<FetchRequest method=${JSON.stringify(this.method)} url=${JSON.stringify(this.url)} headers=${JSON.stringify(this.headers)} body=${this.#body ? hexlify(this.#body) : 'null'}>`;\n    }\n\n    /**\n     * Update the throttle parameters used to determine maximum attempts and exponential-backoff properties.\n     *\n     * @param {FetchThrottleParams} params - The throttle parameters to set.\n     * @throws {Error} If the `slotInterval` is not a positive integer.\n     */\n    setThrottleParams(params: FetchThrottleParams): void {\n        if (params.slotInterval != null) {\n            this.#throttle.slotInterval = params.slotInterval;\n        }\n        if (params.maxAttempts != null) {\n            this.#throttle.maxAttempts = params.maxAttempts;\n        }\n    }\n\n    async #send(\n        attempt: number,\n        expires: number,\n        delay: number,\n        _request: FetchRequest,\n        _response: FetchResponse,\n    ): Promise<FetchResponse> {\n        if (attempt >= this.#throttle.maxAttempts) {\n            return _response.makeServerError('exceeded maximum retry limit');\n        }\n\n        assert(getTime() <= expires, 'timeout', 'TIMEOUT', {\n            operation: 'request.send',\n            reason: 'timeout',\n            request: _request,\n        });\n\n        if (delay > 0) {\n            await wait(delay);\n        }\n\n        let req = this.clone();\n        const scheme = (req.url.split(':')[0] || '').toLowerCase();\n\n        // Process any Gateways\n        if (scheme in Gateways) {\n            const result = await Gateways[scheme](req.url, checkSignal(_request.#signal));\n            if (result instanceof FetchResponse) {\n                let response = result;\n\n                if (this.processFunc) {\n                    checkSignal(_request.#signal);\n                    try {\n                        response = await this.processFunc(req, response);\n                    } catch (error: any) {\n                        // Something went wrong during processing; throw a 5xx server error\n                        if (error.throttle == null || typeof error.stall !== 'number') {\n                            response.makeServerError('error in post-processing function', error).assertOk();\n                        }\n\n                        // Ignore throttling\n                    }\n                }\n\n                return response;\n            }\n            req = result;\n        }\n\n        // We have a preflight function; update the request\n        if (this.preflightFunc) {\n            req = await this.preflightFunc(req);\n        }\n\n        const resp = await this.getUrlFunc(req, checkSignal(_request.#signal));\n        let response = new FetchResponse(resp.statusCode, resp.statusMessage, resp.headers, resp.body, _request);\n\n        if (response.statusCode === 301 || response.statusCode === 302) {\n            // Redirect\n            try {\n                const location = response.headers.location || '';\n                return req.redirect(location).#send(attempt + 1, expires, 0, _request, response);\n                // eslint-disable-next-line no-empty\n            } catch (error) {}\n\n            // Things won't get any better on another attempt; abort\n            return response;\n        } else if (response.statusCode === 429) {\n            // Throttle\n            if (this.retryFunc == null || (await this.retryFunc(req, response, attempt))) {\n                const retryAfter = response.headers['retry-after'];\n                let delay = this.#throttle.slotInterval * Math.trunc(Math.random() * Math.pow(2, attempt));\n                if (typeof retryAfter === 'string' && retryAfter.match(/^[1-9][0-9]*$/)) {\n                    delay = parseInt(retryAfter);\n                }\n                return req.clone().#send(attempt + 1, expires, delay, _request, response);\n            }\n        }\n\n        if (this.processFunc) {\n            checkSignal(_request.#signal);\n            try {\n                response = await this.processFunc(req, response);\n            } catch (error: any) {\n                // Something went wrong during processing; throw a 5xx server error\n                if (error.throttle == null || typeof error.stall !== 'number') {\n                    response.makeServerError('error in post-processing function', error).assertOk();\n                }\n\n                // Throttle\n                let delay = this.#throttle.slotInterval * Math.trunc(Math.random() * Math.pow(2, attempt));\n                if (error.stall >= 0) {\n                    delay = error.stall;\n                }\n\n                return req.clone().#send(attempt + 1, expires, delay, _request, response);\n            }\n        }\n\n        return response;\n    }\n\n    /**\n     * Resolves to the response by sending the request.\n     */\n    send(): Promise<FetchResponse> {\n        assert(this.#signal == null, 'request already sent', 'UNSUPPORTED_OPERATION', {\n            operation: 'fetchRequest.send',\n        });\n        this.#signal = new FetchCancelSignal(this);\n        return this.#send(0, getTime() + this.timeout, 0, this, new FetchResponse(0, '', {}, null, this));\n    }\n\n    /**\n     * Cancels the inflight response, causing a `CANCELLED` error to be rejected from the\n     * {@link FetchRequest.send | **send**}.\n     */\n    cancel(): void {\n        assert(this.#signal != null, 'request has not been sent', 'UNSUPPORTED_OPERATION', {\n            operation: 'fetchRequest.cancel',\n        });\n        const signal = fetchSignals.get(this);\n        if (!signal) {\n            throw new Error('missing signal; should not happen');\n        }\n        signal();\n    }\n\n    /**\n     * Returns a new {@link FetchRequest | **FetchRequest**} that represents the redirection to `location`.\n     *\n     * @param {string} location - The location to redirect to.\n     * @returns {FetchRequest} The new request.\n     */\n    redirect(location: string): FetchRequest {\n        // Redirection; for now we only support absolute locations\n        const current = this.url.split(':')[0].toLowerCase();\n        const target = location.split(':')[0].toLowerCase();\n\n        // Don't allow redirecting:\n        // - non-GET requests\n        // - downgrading the security (e.g. https => http)\n        // - to non-HTTP (or non-HTTPS) protocols [this could be relaxed?]\n        assert(\n            this.method === 'GET' && (current !== 'https' || target !== 'http') && location.match(/^https?:/),\n            `unsupported redirect`,\n            'UNSUPPORTED_OPERATION',\n            {\n                operation: `redirect(${this.method} ${JSON.stringify(this.url)} => ${JSON.stringify(location)})`,\n            },\n        );\n\n        // Create a copy of this request, with a new URL\n        const req = new FetchRequest(location);\n        req.method = 'GET';\n        req.allowGzip = this.allowGzip;\n        req.timeout = this.timeout;\n        req.#headers = Object.assign({}, this.#headers);\n        if (this.#body) {\n            req.#body = new Uint8Array(this.#body);\n        }\n        req.#bodyType = this.#bodyType;\n        return req;\n    }\n\n    /**\n     * Create a new copy of this request.\n     *\n     * @returns {FetchRequest} The new request.\n     */\n    clone(): FetchRequest {\n        const clone = new FetchRequest(this.url);\n\n        // Preserve \"default method\" (i.e. null)\n        clone.#method = this.#method;\n\n        // Preserve \"default body\" with type, copying the Uint8Array is present\n        if (this.#body) {\n            clone.#body = this.#body;\n        }\n        clone.#bodyType = this.#bodyType;\n\n        // Preserve \"default headers\"\n        clone.#headers = Object.assign({}, this.#headers);\n\n        // Credentials is readonly, so we copy internally\n        clone.#creds = this.#creds;\n\n        if (this.allowGzip) {\n            clone.allowGzip = true;\n        }\n\n        clone.timeout = this.timeout;\n        if (this.allowInsecureAuthentication) {\n            clone.allowInsecureAuthentication = true;\n        }\n\n        clone.#preflight = this.#preflight;\n        clone.#process = this.#process;\n        clone.#retry = this.#retry;\n\n        clone.#getUrlFunc = this.#getUrlFunc;\n\n        return clone;\n    }\n\n    /**\n     * Locks all static configuration for gateways and FetchGetUrlFunc registration.\n     */\n    static lockConfig(): void {\n        locked = true;\n    }\n\n    /**\n     * Get the current Gateway function for `scheme`.\n     *\n     * @param {string} scheme - The scheme to get the gateway for.\n     * @returns {FetchGatewayFunc | null} The gateway function, or null if not found.\n     */\n    static getGateway(scheme: string): null | FetchGatewayFunc {\n        return Gateways[scheme.toLowerCase()] || null;\n    }\n\n    /**\n     * Use the `func` when fetching URIs using `scheme`.\n     *\n     * This method affects all requests globally.\n     *\n     * If {@link FetchRequest.lockConfig | **lockConfig**} has been called, no change is made and this throws.\n     *\n     * @param {string} scheme - The scheme to register the gateway for.\n     * @param {FetchGatewayFunc} func - The gateway function to use.\n     * @throws {Error} If the scheme is `http` or `https`.\n     */\n    static registerGateway(scheme: string, func: FetchGatewayFunc): void {\n        scheme = scheme.toLowerCase();\n        if (scheme === 'http' || scheme === 'https') {\n            throw new Error(`cannot intercept ${scheme}; use registerGetUrl`);\n        }\n        if (locked) {\n            throw new Error('gateways locked');\n        }\n        Gateways[scheme] = func;\n    }\n\n    /**\n     * Use `getUrl` when fetching URIs over HTTP and HTTPS requests.\n     *\n     * This method affects all requests globally.\n     *\n     * If {@link FetchRequest.lockConfig | **lockConfig**} has been called, no change is made and this throws.\n     *\n     * @param {FetchGetUrlFunc} getUrl - The function to use for fetching HTTP and HTTPS URIs.\n     * @throws {Error} If the gateways are locked.\n     */\n    static registerGetUrl(getUrl: FetchGetUrlFunc): void {\n        if (locked) {\n            throw new Error('gateways locked');\n        }\n        defaultGetUrlFunc = getUrl;\n    }\n\n    /**\n     * Creates a getUrl function that fetches content from HTTP and HTTPS URLs.\n     *\n     * The available `options` are dependent on the platform implementation of the default getUrl function.\n     *\n     * This is not generally something that is needed, but is useful when trying to customize simple behaviour when\n     * fetching HTTP content.\n     *\n     * @param {Record<string, any>} [options] - The options to use when creating the getUrl function.\n     * @returns {FetchGetUrlFunc} The getUrl function.\n     * @throws {Error} If the gateways are locked.\n     */\n    static createGetUrlFunc(options?: Record<string, any>): FetchGetUrlFunc {\n        return createGetUrl(options);\n    }\n\n    /**\n     * Creates a function that can \"fetch\" data URIs.\n     *\n     * Note that this is automatically done internally to support data URIs, so it is not necessary to register it.\n     *\n     * This is not generally something that is needed, but may be useful in a wrapper to perfom custom data URI\n     * functionality.\n     *\n     * @returns {FetchGatewayFunc} The gateway function.\n     */\n    static createDataGateway(): FetchGatewayFunc {\n        return dataGatewayFunc;\n    }\n\n    /**\n     * Creates a function that will fetch IPFS (unvalidated) from a custom gateway baseUrl.\n     *\n     * The default IPFS gateway used internally is `\"https:/\\/gateway.ipfs.io/ipfs/\"`.\n     *\n     * @param {string} baseUrl - The base URL of the IPFS gateway.\n     * @returns {FetchGatewayFunc} The gateway function.\n     */\n    static createIpfsGatewayFunc(baseUrl: string): FetchGatewayFunc {\n        return getIpfsGatewayFunc(baseUrl);\n    }\n}\n\ninterface ThrottleError extends Error {\n    stall: number;\n    throttle: true;\n}\n\n/**\n * The response for a FetchRequest.\n *\n * @category Utils\n */\nexport class FetchResponse implements Iterable<[key: string, value: string]> {\n    #statusCode: number;\n    #statusMessage: string;\n    #headers: Record<string, string>;\n    #body: null | Readonly<Uint8Array>;\n    #request: null | FetchRequest;\n\n    #error: { error?: Error; message: string };\n\n    toString(): string {\n        return `<FetchResponse status=${this.statusCode} body=${this.#body ? hexlify(this.#body) : 'null'}>`;\n    }\n\n    /**\n     * The response status code.\n     */\n    get statusCode(): number {\n        return this.#statusCode;\n    }\n\n    /**\n     * The response status message.\n     */\n    get statusMessage(): string {\n        return this.#statusMessage;\n    }\n\n    /**\n     * The response headers. All keys are lower-case.\n     */\n    get headers(): Record<string, string> {\n        return Object.assign({}, this.#headers);\n    }\n\n    /**\n     * The response body, or `null` if there was no body.\n     */\n    get body(): null | Readonly<Uint8Array> {\n        return this.#body == null ? null : new Uint8Array(this.#body);\n    }\n\n    /**\n     * The response body as a UTF-8 encoded string, or the empty string (i.e. `\"\"`) if there was no body.\n     *\n     * An error is thrown if the body is invalid UTF-8 data.\n     */\n    get bodyText(): string {\n        try {\n            return this.#body == null ? '' : toUtf8String(this.#body);\n        } catch (error) {\n            assert(false, 'response body is not valid UTF-8 data', 'UNSUPPORTED_OPERATION', {\n                operation: 'bodyText',\n                info: { response: this },\n            });\n        }\n    }\n\n    /**\n     * The response body, decoded as JSON.\n     *\n     * An error is thrown if the body is invalid JSON-encoded data or if there was no body.\n     */\n    get bodyJson(): any {\n        try {\n            return JSON.parse(this.bodyText);\n        } catch (error) {\n            assert(false, 'response body is not valid JSON', 'UNSUPPORTED_OPERATION', {\n                operation: 'bodyJson',\n                info: { response: this },\n            });\n        }\n    }\n\n    [Symbol.iterator](): Iterator<[key: string, value: string]> {\n        const headers = this.headers;\n        const keys = Object.keys(headers);\n        let index = 0;\n        return {\n            next: () => {\n                if (index < keys.length) {\n                    const key = keys[index++];\n                    return {\n                        value: [key, headers[key]],\n                        done: false,\n                    };\n                }\n                return { value: undefined, done: true };\n            },\n        };\n    }\n\n    constructor(\n        statusCode: number,\n        statusMessage: string,\n        headers: Readonly<Record<string, string>>,\n        body: null | Uint8Array,\n        request?: FetchRequest,\n    ) {\n        this.#statusCode = statusCode;\n        this.#statusMessage = statusMessage;\n        this.#headers = Object.keys(headers).reduce(\n            (accum, k) => {\n                accum[k.toLowerCase()] = String(headers[k]);\n                return accum;\n            },\n            <Record<string, string>>{},\n        );\n        this.#body = body == null ? null : new Uint8Array(body);\n        this.#request = request || null;\n\n        this.#error = { message: '' };\n    }\n\n    /**\n     * Return a Response with matching headers and body, but with an error status code (i.e. 599) and `message` with an\n     * optional `error`.\n     *\n     * @param {string} [message] - The error message to use.\n     * @param {Error} [error] - The error to use.\n     * @returns {FetchResponse} The error response.\n     */\n    makeServerError(message?: string, error?: Error): FetchResponse {\n        let statusMessage: string;\n        if (!message) {\n            message = `${this.statusCode} ${this.statusMessage}`;\n            statusMessage = `CLIENT ESCALATED SERVER ERROR (${message})`;\n        } else {\n            statusMessage = `CLIENT ESCALATED SERVER ERROR (${this.statusCode} ${this.statusMessage}; ${message})`;\n        }\n        const response = new FetchResponse(599, statusMessage, this.headers, this.body, this.#request || undefined);\n        response.#error = { message, error };\n        return response;\n    }\n\n    /**\n     * If called within a [request.processFunc](FetchRequest-processFunc) call, causes the request to retry as if\n     * throttled for `stall` milliseconds.\n     *\n     * @param {string} [message] - The error message to use.\n     * @param {number} [stall] - The number of milliseconds to stall before retrying.\n     * @throws {Error} If `stall` is not a non-negative integer.\n     */\n    throwThrottleError(message?: string, stall?: number): never {\n        if (stall == null) {\n            stall = -1;\n        } else {\n            assertArgument(Number.isInteger(stall) && stall >= 0, 'invalid stall timeout', 'stall', stall);\n        }\n\n        const error = new Error(message || 'throttling requests');\n\n        defineProperties(<ThrottleError>error, { stall, throttle: true });\n\n        throw error;\n    }\n\n    /**\n     * Get the header value for `key`, ignoring case.\n     *\n     * @param {string} key - The header key to retrieve.\n     * @returns {string} The header value.\n     */\n    getHeader(key: string): string {\n        return this.headers[key.toLowerCase()];\n    }\n\n    /**\n     * Returns true if the response has a body.\n     *\n     * @returns {boolean} True if the response has a body.\n     * @throws {Error} If the body is invalid UTF-8 data.\n     */\n    hasBody(): this is FetchResponse & { body: Uint8Array } {\n        return this.#body != null;\n    }\n\n    /**\n     * The request made for this response.\n     */\n    get request(): null | FetchRequest {\n        return this.#request;\n    }\n\n    /**\n     * Returns true if this response was a success statusCode.\n     */\n    ok(): boolean {\n        return this.#error.message === '' && this.statusCode >= 200 && this.statusCode < 300;\n    }\n\n    /**\n     * Throws a `SERVER_ERROR` if this response is not ok.\n     *\n     * @throws {Error} If the response is not ok.\n     */\n    assertOk(): void {\n        if (this.ok()) {\n            return;\n        }\n        // eslint-disable-next-line prefer-const\n        let { message, error } = this.#error;\n        if (message === '') {\n            message = `server response ${this.statusCode} ${this.statusMessage}`;\n        }\n        assert(false, message, 'SERVER_ERROR', {\n            request: this.request || 'unknown request',\n            response: this,\n            error,\n        });\n    }\n}\n\nfunction getTime(): number {\n    return new Date().getTime();\n}\n\nfunction unpercent(value: string): Uint8Array {\n    return toUtf8Bytes(\n        value.replace(/%([0-9a-f][0-9a-f])/gi, (all, code) => {\n            return String.fromCharCode(parseInt(code, 16));\n        }),\n    );\n}\n\nfunction wait(delay: number): Promise<void> {\n    return new Promise((resolve) => setTimeout(resolve, delay));\n}\n","import { getBytes } from '../utils/data.js';\n\nimport type { BytesLike } from '../utils/data.js';\n\nexport function decodeBase64(textData: string): Uint8Array {\n    textData = atob(textData);\n    const data = new Uint8Array(textData.length);\n    for (let i = 0; i < textData.length; i++) {\n        data[i] = textData.charCodeAt(i);\n    }\n    return getBytes(data);\n}\n\nexport function encodeBase64(_data: BytesLike): string {\n    const data = getBytes(_data);\n    let textData = '';\n    for (let i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\n","/**\n * A zone is the lowest level shard within the Quai network hierarchy. Zones are the only shards in the network that\n * accept user transactions. The value is a hexadecimal string representing the encoded value of the zone. Read more\n * [here](https://github.com/quai-network/qips/blob/master/qip-0002.md).\n *\n * @category Constants\n */\nexport enum Zone {\n    Cyprus1 = '0x00',\n    Cyprus2 = '0x01',\n    Cyprus3 = '0x02',\n    Paxos1 = '0x10',\n    Paxos2 = '0x11',\n    Paxos3 = '0x12',\n    Hydra1 = '0x20',\n    Hydra2 = '0x21',\n    Hydra3 = '0x22',\n}\n\nexport enum Ledger {\n    Quai = 0,\n    Qi = 1,\n}\n\nfunction zoneFromBytes(zone: string): Zone {\n    switch (zone) {\n        case '0x00':\n            return Zone.Cyprus1;\n        case '0x01':\n            return Zone.Cyprus2;\n        case '0x02':\n            return Zone.Cyprus3;\n        case '0x10':\n            return Zone.Paxos1;\n        case '0x11':\n            return Zone.Paxos2;\n        case '0x12':\n            return Zone.Paxos3;\n        case '0x20':\n            return Zone.Hydra1;\n        case '0x21':\n            return Zone.Hydra2;\n        case '0x22':\n            return Zone.Hydra3;\n        default:\n            throw new Error(`Invalid zone: ${zone}`);\n    }\n}\n\nexport const ZoneData = [\n    {\n        name: 'Cyprus One',\n        nickname: 'cyprus1',\n        shard: 'zone-0-0',\n        context: 2,\n        byte: '0x00', //0000 0000 region-0 zone-0\n    },\n    {\n        name: 'Cyprus Two',\n        nickname: 'cyprus2',\n        shard: 'zone-0-1',\n        context: 2,\n        byte: '0x01', // 0000 0001 region-0 zone-1\n    },\n    {\n        name: 'Cyprus Three',\n        nickname: 'cyprus3',\n        shard: 'zone-0-2',\n        context: 2,\n        byte: '0x02', // 0000 0010 region-0 zone-2\n    },\n    {\n        name: 'Paxos One',\n        nickname: 'paxos1',\n        shard: 'zone-1-0',\n        context: 2,\n        byte: '0x10', // 0001 0000 region-1 zone-0\n    },\n    {\n        name: 'Paxos Two',\n        nickname: 'paxos2',\n        shard: 'zone-1-1',\n        context: 2,\n        byte: '0x11', // 0001 0001 region-1 zone-1\n    },\n    {\n        name: 'Paxos Three',\n        nickname: 'paxos3',\n        shard: 'zone-1-2',\n        context: 2,\n        byte: '0x12', // 0001 0010 region-1 zone-2\n    },\n    {\n        name: 'Hydra One',\n        nickname: 'hydra1',\n        shard: 'zone-2-0',\n        context: 2,\n        byte: '0x20', // 0010 0000 region-2 zone-0\n    },\n    {\n        name: 'Hydra Two',\n        nickname: 'hydra2',\n        shard: 'zone-2-1',\n        context: 2,\n        byte: '0x21', // 0010 0001 region-2 zone-1\n    },\n    {\n        name: 'Hydra Three',\n        nickname: 'hydra3',\n        shard: 'zone-2-2',\n        context: 2,\n        byte: '0x22', // 0010 0010 region-2 zone-2\n    },\n];\n\nexport function toZone(shard: string): Zone {\n    return zoneFromBytes(\n        ZoneData.find((it) => it.name == shard || it.byte == shard || it.nickname == shard || it.shard == shard)\n            ?.byte || '',\n    );\n}\nexport function fromZone(zone: Zone, key: 'name' | 'nickname' | 'shard' | 'byte'): string {\n    return ZoneData.find((it) => it.byte == zone)?.[key] || '';\n}\n","import { ZoneData } from './zones.js';\n\n/**\n * A shard represents a chain within the Quai network hierarchy. A shard refer to the Prime chain, a region under the\n * Prime chain, or a Zone within a region. The value is a hexadecimal string representing the encoded value of the\n * shard. Read more [here](https://github.com/quai-network/qips/blob/master/qip-0002.md).\n *\n * @category Constants\n */\nexport enum Shard {\n    Cyprus = '0x0',\n    Cyprus1 = '0x00',\n    Cyprus2 = '0x01',\n    Cyprus3 = '0x02',\n    Paxos = '0x1',\n    Paxos1 = '0x10',\n    Paxos2 = '0x11',\n    Paxos3 = '0x12',\n    Hydra = '0x2',\n    Hydra1 = '0x20',\n    Hydra2 = '0x21',\n    Hydra3 = '0x22',\n    Prime = '0x',\n}\n\nfunction shardFromBytes(shard: string): Shard {\n    switch (shard) {\n        case '0x':\n            return Shard.Prime;\n        case '0x0':\n            return Shard.Cyprus;\n        case '0x1':\n            return Shard.Paxos;\n        case '0x2':\n            return Shard.Hydra;\n        case '0x00':\n            return Shard.Cyprus1;\n        case '0x01':\n            return Shard.Cyprus2;\n        case '0x02':\n            return Shard.Cyprus3;\n        case '0x10':\n            return Shard.Paxos1;\n        case '0x11':\n            return Shard.Paxos2;\n        case '0x12':\n            return Shard.Paxos3;\n        case '0x20':\n            return Shard.Hydra1;\n        case '0x21':\n            return Shard.Hydra2;\n        case '0x22':\n            return Shard.Hydra3;\n        default:\n            throw new Error('Invalid shard');\n    }\n}\n/**\n * Constant data that defines each shard within the network.\n *\n * @category Constants\n */\nexport const ShardData = [\n    ...ZoneData,\n    {\n        name: 'Cyprus',\n        nickname: 'cyprus',\n        shard: 'region-0',\n        context: 2,\n        byte: '0x0',\n    },\n    {\n        name: 'Paxos',\n        nickname: 'paxos',\n        shard: 'region-1',\n        context: 2,\n        byte: '0x1',\n    },\n    {\n        name: 'Hydra',\n        nickname: 'hydra',\n        shard: 'region-2',\n        context: 2,\n        byte: '0x2',\n    },\n    {\n        name: 'Prime',\n        nickname: 'prime',\n        shard: 'prime',\n        context: 2,\n        byte: '0x',\n    },\n];\n\nexport function toShard(shard: string): Shard {\n    return shardFromBytes(\n        ShardData.find((it) => it.name == shard || it.byte == shard || it.nickname == shard || it.shard == shard)\n            ?.byte || '',\n    );\n}\n\nexport function fromShard(shard: Shard, key: 'name' | 'nickname' | 'shard' | 'byte'): string {\n    return ShardData.find((it) => it.byte == shard)?.[key] || '';\n}\n","/**\n * Events allow for applications to use the observer pattern, which allows subscribing and publishing events, outside\n * the normal execution paths.\n */\nimport { Zone } from '../constants/zones.js';\nimport { defineProperties } from './properties.js';\n\n/**\n * A callback function called when a an event is triggered.\n *\n * @category Utils\n */\nexport type Listener = (...args: Array<any>) => void;\n\n/**\n * An **EventEmitterable** behaves similar to an EventEmitter except provides async access to its methods.\n *\n * An EventEmitter implements the observer pattern.\n *\n * @category Utils\n */\nexport interface EventEmitterable<T> {\n    /**\n     * Registers a `listener` that is called whenever the `event` occurs until unregistered.\n     */\n    on(event: T, listener: Listener, zone?: Zone): Promise<this>;\n\n    /**\n     * Registers a `listener` that is called the next time `event` occurs.\n     */\n    once(event: T, listener: Listener, zone?: Zone): Promise<this>;\n\n    /**\n     * Triggers each listener for `event` with the `args`.\n     */\n    emit(event: T, zone?: Zone, ...args: Array<any>): Promise<boolean>;\n\n    /**\n     * Resolves to the number of listeners for `event`.\n     */\n    listenerCount(event?: T): Promise<number>;\n\n    /**\n     * Resolves to the listeners for `event`.\n     */\n    listeners(event?: T): Promise<Array<Listener>>;\n\n    /**\n     * Unregister the `listener` for `event`. If `listener` is unspecified, all listeners are unregistered.\n     */\n    off(event: T, listener?: Listener, zone?: Zone): Promise<this>;\n\n    /**\n     * Unregister all listeners for `event`.\n     */\n    removeAllListeners(event?: T): Promise<this>;\n\n    /**\n     * Alias for {@link EventEmitterable.on | **on**}.\n     */\n    addListener(event: T, listener: Listener, zone?: Zone): Promise<this>;\n\n    /**\n     * Alias for {@link EventEmitterable.off | **off**}.\n     */\n    removeListener(event: T, listener: Listener, zone?: Zone): Promise<this>;\n}\n\n/**\n * When an {@link EventEmitterable | **EventEmitterable**} triggers a Listener, the callback always ahas one additional\n * argument passed, which is an **EventPayload**.\n *\n * @category Utils\n */\nexport class EventPayload<T> {\n    /**\n     * The event filter.\n     */\n    readonly filter!: T;\n\n    /**\n     * The **EventEmitterable**.\n     */\n    readonly emitter!: EventEmitterable<T>;\n\n    readonly #listener: null | Listener;\n\n    /**\n     * Create a new **EventPayload** for `emitter` with the `listener` and for `filter`.\n     */\n    constructor(emitter: EventEmitterable<T>, listener: null | Listener, filter: T) {\n        this.#listener = listener;\n        defineProperties<EventPayload<any>>(this, { emitter, filter });\n    }\n\n    /**\n     * Unregister the triggered listener for future events.\n     */\n    async removeListener(): Promise<void> {\n        if (this.#listener == null) {\n            return;\n        }\n        await this.emitter.off(this.filter, this.#listener);\n    }\n}\n","/* eslint-disable */\n\n/**\n * Generated by the protoc-gen-ts. DO NOT EDIT! compiler version: 5.28.2 source: proto_common.proto git:\n * https://github.com/thesayyn/protoc-gen-ts\n */\nimport * as pb_1 from 'google-protobuf';\nexport namespace common {\n    export class ProtoLocation extends pb_1.Message {\n        #one_of_decls: number[][] = [];\n        constructor(\n            data?:\n                | any[]\n                | {\n                      value?: Uint8Array;\n                  },\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('value' in data && data.value != undefined) {\n                    this.value = data.value;\n                }\n            }\n        }\n        get value() {\n            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0)) as Uint8Array;\n        }\n        set value(value: Uint8Array) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        static fromObject(data: { value?: Uint8Array }): ProtoLocation {\n            const message = new ProtoLocation({});\n            if (data.value != null) {\n                message.value = data.value;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                value?: Uint8Array;\n            } = {};\n            if (this.value != null) {\n                data.value = this.value;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.value.length) writer.writeBytes(1, this.value);\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoLocation {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoLocation();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.value = reader.readBytes();\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoLocation {\n            return ProtoLocation.deserialize(bytes);\n        }\n    }\n    export class ProtoHash extends pb_1.Message {\n        #one_of_decls: number[][] = [];\n        constructor(\n            data?:\n                | any[]\n                | {\n                      value?: Uint8Array;\n                  },\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('value' in data && data.value != undefined) {\n                    this.value = data.value;\n                }\n            }\n        }\n        get value() {\n            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0)) as Uint8Array;\n        }\n        set value(value: Uint8Array) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        static fromObject(data: { value?: Uint8Array }): ProtoHash {\n            const message = new ProtoHash({});\n            if (data.value != null) {\n                message.value = data.value;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                value?: Uint8Array;\n            } = {};\n            if (this.value != null) {\n                data.value = this.value;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.value.length) writer.writeBytes(1, this.value);\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoHash {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoHash();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.value = reader.readBytes();\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoHash {\n            return ProtoHash.deserialize(bytes);\n        }\n    }\n    export class ProtoHashes extends pb_1.Message {\n        #one_of_decls: number[][] = [];\n        constructor(\n            data?:\n                | any[]\n                | {\n                      hashes?: ProtoHash[];\n                  },\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('hashes' in data && data.hashes != undefined) {\n                    this.hashes = data.hashes;\n                }\n            }\n        }\n        get hashes() {\n            return pb_1.Message.getRepeatedWrapperField(this, ProtoHash, 1) as ProtoHash[];\n        }\n        set hashes(value: ProtoHash[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        static fromObject(data: { hashes?: ReturnType<typeof ProtoHash.prototype.toObject>[] }): ProtoHashes {\n            const message = new ProtoHashes({});\n            if (data.hashes != null) {\n                message.hashes = data.hashes.map((item) => ProtoHash.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                hashes?: ReturnType<typeof ProtoHash.prototype.toObject>[];\n            } = {};\n            if (this.hashes != null) {\n                data.hashes = this.hashes.map((item: ProtoHash) => item.toObject());\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.hashes.length)\n                writer.writeRepeatedMessage(1, this.hashes, (item: ProtoHash) => item.serialize(writer));\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoHashes {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoHashes();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.hashes, () =>\n                            pb_1.Message.addToRepeatedWrapperField(\n                                message,\n                                1,\n                                ProtoHash.deserialize(reader),\n                                ProtoHash,\n                            ),\n                        );\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoHashes {\n            return ProtoHashes.deserialize(bytes);\n        }\n    }\n    export class ProtoAddress extends pb_1.Message {\n        #one_of_decls: number[][] = [];\n        constructor(\n            data?:\n                | any[]\n                | {\n                      value?: Uint8Array;\n                  },\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('value' in data && data.value != undefined) {\n                    this.value = data.value;\n                }\n            }\n        }\n        get value() {\n            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0)) as Uint8Array;\n        }\n        set value(value: Uint8Array) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        static fromObject(data: { value?: Uint8Array }): ProtoAddress {\n            const message = new ProtoAddress({});\n            if (data.value != null) {\n                message.value = data.value;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                value?: Uint8Array;\n            } = {};\n            if (this.value != null) {\n                data.value = this.value;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.value.length) writer.writeBytes(1, this.value);\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoAddress {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoAddress();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.value = reader.readBytes();\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoAddress {\n            return ProtoAddress.deserialize(bytes);\n        }\n    }\n    export class ProtoNumber extends pb_1.Message {\n        #one_of_decls: number[][] = [];\n        constructor(\n            data?:\n                | any[]\n                | {\n                      value?: number;\n                  },\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('value' in data && data.value != undefined) {\n                    this.value = data.value;\n                }\n            }\n        }\n        get value() {\n            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;\n        }\n        set value(value: number) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        static fromObject(data: { value?: number }): ProtoNumber {\n            const message = new ProtoNumber({});\n            if (data.value != null) {\n                message.value = data.value;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                value?: number;\n            } = {};\n            if (this.value != null) {\n                data.value = this.value;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.value != 0) writer.writeUint64(1, this.value);\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoNumber {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoNumber();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.value = reader.readUint64();\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoNumber {\n            return ProtoNumber.deserialize(bytes);\n        }\n    }\n    export class ProtoLocations extends pb_1.Message {\n        #one_of_decls: number[][] = [];\n        constructor(\n            data?:\n                | any[]\n                | {\n                      locations?: ProtoLocation[];\n                  },\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('locations' in data && data.locations != undefined) {\n                    this.locations = data.locations;\n                }\n            }\n        }\n        get locations() {\n            return pb_1.Message.getRepeatedWrapperField(this, ProtoLocation, 1) as ProtoLocation[];\n        }\n        set locations(value: ProtoLocation[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        static fromObject(data: { locations?: ReturnType<typeof ProtoLocation.prototype.toObject>[] }): ProtoLocations {\n            const message = new ProtoLocations({});\n            if (data.locations != null) {\n                message.locations = data.locations.map((item) => ProtoLocation.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                locations?: ReturnType<typeof ProtoLocation.prototype.toObject>[];\n            } = {};\n            if (this.locations != null) {\n                data.locations = this.locations.map((item: ProtoLocation) => item.toObject());\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.locations.length)\n                writer.writeRepeatedMessage(1, this.locations, (item: ProtoLocation) => item.serialize(writer));\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoLocations {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoLocations();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.locations, () =>\n                            pb_1.Message.addToRepeatedWrapperField(\n                                message,\n                                1,\n                                ProtoLocation.deserialize(reader),\n                                ProtoLocation,\n                            ),\n                        );\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoLocations {\n            return ProtoLocations.deserialize(bytes);\n        }\n    }\n}\n","/* eslint-disable */\n\n/**\n * Generated by the protoc-gen-ts. DO NOT EDIT! compiler version: 5.28.2 source: proto_block.proto git:\n * https://github.com/thesayyn/protoc-gen-ts\n */\nimport * as dependency_1 from './proto_common.js';\nimport * as pb_1 from 'google-protobuf';\nexport namespace block {\n    export class ProtoHeader extends pb_1.Message {\n        #one_of_decls: number[][] = [\n            [2],\n            [3],\n            [4],\n            [5],\n            [6],\n            [8],\n            [9],\n            [13],\n            [15],\n            [16],\n            [17],\n            [18],\n            [19],\n            [20],\n            [21],\n            [22],\n            [23],\n            [24],\n            [25],\n            [26],\n            [27],\n            [28],\n            [29],\n            [30],\n            [31],\n            [32],\n            [33],\n            [34],\n            [35],\n            [36],\n        ];\n        constructor(\n            data?:\n                | any[]\n                | ({\n                      parent_hash?: dependency_1.common.ProtoHash[];\n                      manifest_hash?: dependency_1.common.ProtoHash[];\n                      parent_entropy?: Uint8Array[];\n                      parent_delta_entropy?: Uint8Array[];\n                      parent_uncled_delta_entropy?: Uint8Array[];\n                      number?: Uint8Array[];\n                  } & (\n                      | {\n                            uncle_hash?: dependency_1.common.ProtoHash;\n                        }\n                      | {\n                            evm_root?: dependency_1.common.ProtoHash;\n                        }\n                      | {\n                            tx_hash?: dependency_1.common.ProtoHash;\n                        }\n                      | {\n                            outbound_etx_hash?: dependency_1.common.ProtoHash;\n                        }\n                      | {\n                            etx_rollup_hash?: dependency_1.common.ProtoHash;\n                        }\n                      | {\n                            receipt_hash?: dependency_1.common.ProtoHash;\n                        }\n                      | {\n                            difficulty?: Uint8Array;\n                        }\n                      | {\n                            uncled_entropy?: Uint8Array;\n                        }\n                      | {\n                            gas_limit?: number;\n                        }\n                      | {\n                            gas_used?: number;\n                        }\n                      | {\n                            base_fee?: Uint8Array;\n                        }\n                      | {\n                            location?: dependency_1.common.ProtoLocation;\n                        }\n                      | {\n                            extra?: Uint8Array;\n                        }\n                      | {\n                            mix_hash?: dependency_1.common.ProtoHash;\n                        }\n                      | {\n                            nonce?: number;\n                        }\n                      | {\n                            utxo_root?: dependency_1.common.ProtoHash;\n                        }\n                      | {\n                            etx_set_root?: dependency_1.common.ProtoHash;\n                        }\n                      | {\n                            efficiency_score?: number;\n                        }\n                      | {\n                            threshold_count?: number;\n                        }\n                      | {\n                            expansion_number?: number;\n                        }\n                      | {\n                            etx_eligible_slices?: dependency_1.common.ProtoHash;\n                        }\n                      | {\n                            prime_terminus_hash?: dependency_1.common.ProtoHash;\n                        }\n                      | {\n                            interlink_root_hash?: dependency_1.common.ProtoHash;\n                        }\n                      | {\n                            state_limit?: number;\n                        }\n                      | {\n                            state_used?: number;\n                        }\n                      | {\n                            quai_state_size?: Uint8Array;\n                        }\n                      | {\n                            secondary_coinbase?: Uint8Array;\n                        }\n                      | {\n                            exchange_rate?: Uint8Array;\n                        }\n                      | {\n                            quai_to_qi?: Uint8Array;\n                        }\n                      | {\n                            qi_to_quai?: Uint8Array;\n                        }\n                  )),\n        ) {\n            super();\n            pb_1.Message.initialize(\n                this,\n                Array.isArray(data) ? data : [],\n                0,\n                -1,\n                [1, 7, 10, 11, 12, 14],\n                this.#one_of_decls,\n            );\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('parent_hash' in data && data.parent_hash != undefined) {\n                    this.parent_hash = data.parent_hash;\n                }\n                if ('uncle_hash' in data && data.uncle_hash != undefined) {\n                    this.uncle_hash = data.uncle_hash;\n                }\n                if ('evm_root' in data && data.evm_root != undefined) {\n                    this.evm_root = data.evm_root;\n                }\n                if ('tx_hash' in data && data.tx_hash != undefined) {\n                    this.tx_hash = data.tx_hash;\n                }\n                if ('outbound_etx_hash' in data && data.outbound_etx_hash != undefined) {\n                    this.outbound_etx_hash = data.outbound_etx_hash;\n                }\n                if ('etx_rollup_hash' in data && data.etx_rollup_hash != undefined) {\n                    this.etx_rollup_hash = data.etx_rollup_hash;\n                }\n                if ('manifest_hash' in data && data.manifest_hash != undefined) {\n                    this.manifest_hash = data.manifest_hash;\n                }\n                if ('receipt_hash' in data && data.receipt_hash != undefined) {\n                    this.receipt_hash = data.receipt_hash;\n                }\n                if ('difficulty' in data && data.difficulty != undefined) {\n                    this.difficulty = data.difficulty;\n                }\n                if ('parent_entropy' in data && data.parent_entropy != undefined) {\n                    this.parent_entropy = data.parent_entropy;\n                }\n                if ('parent_delta_entropy' in data && data.parent_delta_entropy != undefined) {\n                    this.parent_delta_entropy = data.parent_delta_entropy;\n                }\n                if ('parent_uncled_delta_entropy' in data && data.parent_uncled_delta_entropy != undefined) {\n                    this.parent_uncled_delta_entropy = data.parent_uncled_delta_entropy;\n                }\n                if ('uncled_entropy' in data && data.uncled_entropy != undefined) {\n                    this.uncled_entropy = data.uncled_entropy;\n                }\n                if ('number' in data && data.number != undefined) {\n                    this.number = data.number;\n                }\n                if ('gas_limit' in data && data.gas_limit != undefined) {\n                    this.gas_limit = data.gas_limit;\n                }\n                if ('gas_used' in data && data.gas_used != undefined) {\n                    this.gas_used = data.gas_used;\n                }\n                if ('base_fee' in data && data.base_fee != undefined) {\n                    this.base_fee = data.base_fee;\n                }\n                if ('location' in data && data.location != undefined) {\n                    this.location = data.location;\n                }\n                if ('extra' in data && data.extra != undefined) {\n                    this.extra = data.extra;\n                }\n                if ('mix_hash' in data && data.mix_hash != undefined) {\n                    this.mix_hash = data.mix_hash;\n                }\n                if ('nonce' in data && data.nonce != undefined) {\n                    this.nonce = data.nonce;\n                }\n                if ('utxo_root' in data && data.utxo_root != undefined) {\n                    this.utxo_root = data.utxo_root;\n                }\n                if ('etx_set_root' in data && data.etx_set_root != undefined) {\n                    this.etx_set_root = data.etx_set_root;\n                }\n                if ('efficiency_score' in data && data.efficiency_score != undefined) {\n                    this.efficiency_score = data.efficiency_score;\n                }\n                if ('threshold_count' in data && data.threshold_count != undefined) {\n                    this.threshold_count = data.threshold_count;\n                }\n                if ('expansion_number' in data && data.expansion_number != undefined) {\n                    this.expansion_number = data.expansion_number;\n                }\n                if ('etx_eligible_slices' in data && data.etx_eligible_slices != undefined) {\n                    this.etx_eligible_slices = data.etx_eligible_slices;\n                }\n                if ('prime_terminus_hash' in data && data.prime_terminus_hash != undefined) {\n                    this.prime_terminus_hash = data.prime_terminus_hash;\n                }\n                if ('interlink_root_hash' in data && data.interlink_root_hash != undefined) {\n                    this.interlink_root_hash = data.interlink_root_hash;\n                }\n                if ('state_limit' in data && data.state_limit != undefined) {\n                    this.state_limit = data.state_limit;\n                }\n                if ('state_used' in data && data.state_used != undefined) {\n                    this.state_used = data.state_used;\n                }\n                if ('quai_state_size' in data && data.quai_state_size != undefined) {\n                    this.quai_state_size = data.quai_state_size;\n                }\n                if ('secondary_coinbase' in data && data.secondary_coinbase != undefined) {\n                    this.secondary_coinbase = data.secondary_coinbase;\n                }\n                if ('exchange_rate' in data && data.exchange_rate != undefined) {\n                    this.exchange_rate = data.exchange_rate;\n                }\n                if ('quai_to_qi' in data && data.quai_to_qi != undefined) {\n                    this.quai_to_qi = data.quai_to_qi;\n                }\n                if ('qi_to_quai' in data && data.qi_to_quai != undefined) {\n                    this.qi_to_quai = data.qi_to_quai;\n                }\n            }\n        }\n        get parent_hash() {\n            return pb_1.Message.getRepeatedWrapperField(\n                this,\n                dependency_1.common.ProtoHash,\n                1,\n            ) as dependency_1.common.ProtoHash[];\n        }\n        set parent_hash(value: dependency_1.common.ProtoHash[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        get uncle_hash() {\n            return pb_1.Message.getWrapperField(\n                this,\n                dependency_1.common.ProtoHash,\n                2,\n            ) as dependency_1.common.ProtoHash;\n        }\n        set uncle_hash(value: dependency_1.common.ProtoHash) {\n            pb_1.Message.setOneofWrapperField(this, 2, this.#one_of_decls[0], value);\n        }\n        get has_uncle_hash() {\n            return pb_1.Message.getField(this, 2) != null;\n        }\n        get evm_root() {\n            return pb_1.Message.getWrapperField(\n                this,\n                dependency_1.common.ProtoHash,\n                3,\n            ) as dependency_1.common.ProtoHash;\n        }\n        set evm_root(value: dependency_1.common.ProtoHash) {\n            pb_1.Message.setOneofWrapperField(this, 3, this.#one_of_decls[1], value);\n        }\n        get has_evm_root() {\n            return pb_1.Message.getField(this, 3) != null;\n        }\n        get tx_hash() {\n            return pb_1.Message.getWrapperField(\n                this,\n                dependency_1.common.ProtoHash,\n                4,\n            ) as dependency_1.common.ProtoHash;\n        }\n        set tx_hash(value: dependency_1.common.ProtoHash) {\n            pb_1.Message.setOneofWrapperField(this, 4, this.#one_of_decls[2], value);\n        }\n        get has_tx_hash() {\n            return pb_1.Message.getField(this, 4) != null;\n        }\n        get outbound_etx_hash() {\n            return pb_1.Message.getWrapperField(\n                this,\n                dependency_1.common.ProtoHash,\n                5,\n            ) as dependency_1.common.ProtoHash;\n        }\n        set outbound_etx_hash(value: dependency_1.common.ProtoHash) {\n            pb_1.Message.setOneofWrapperField(this, 5, this.#one_of_decls[3], value);\n        }\n        get has_outbound_etx_hash() {\n            return pb_1.Message.getField(this, 5) != null;\n        }\n        get etx_rollup_hash() {\n            return pb_1.Message.getWrapperField(\n                this,\n                dependency_1.common.ProtoHash,\n                6,\n            ) as dependency_1.common.ProtoHash;\n        }\n        set etx_rollup_hash(value: dependency_1.common.ProtoHash) {\n            pb_1.Message.setOneofWrapperField(this, 6, this.#one_of_decls[4], value);\n        }\n        get has_etx_rollup_hash() {\n            return pb_1.Message.getField(this, 6) != null;\n        }\n        get manifest_hash() {\n            return pb_1.Message.getRepeatedWrapperField(\n                this,\n                dependency_1.common.ProtoHash,\n                7,\n            ) as dependency_1.common.ProtoHash[];\n        }\n        set manifest_hash(value: dependency_1.common.ProtoHash[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 7, value);\n        }\n        get receipt_hash() {\n            return pb_1.Message.getWrapperField(\n                this,\n                dependency_1.common.ProtoHash,\n                8,\n            ) as dependency_1.common.ProtoHash;\n        }\n        set receipt_hash(value: dependency_1.common.ProtoHash) {\n            pb_1.Message.setOneofWrapperField(this, 8, this.#one_of_decls[5], value);\n        }\n        get has_receipt_hash() {\n            return pb_1.Message.getField(this, 8) != null;\n        }\n        get difficulty() {\n            return pb_1.Message.getFieldWithDefault(this, 9, new Uint8Array(0)) as Uint8Array;\n        }\n        set difficulty(value: Uint8Array) {\n            pb_1.Message.setOneofField(this, 9, this.#one_of_decls[6], value);\n        }\n        get has_difficulty() {\n            return pb_1.Message.getField(this, 9) != null;\n        }\n        get parent_entropy() {\n            return pb_1.Message.getFieldWithDefault(this, 10, []) as Uint8Array[];\n        }\n        set parent_entropy(value: Uint8Array[]) {\n            pb_1.Message.setField(this, 10, value);\n        }\n        get parent_delta_entropy() {\n            return pb_1.Message.getFieldWithDefault(this, 11, []) as Uint8Array[];\n        }\n        set parent_delta_entropy(value: Uint8Array[]) {\n            pb_1.Message.setField(this, 11, value);\n        }\n        get parent_uncled_delta_entropy() {\n            return pb_1.Message.getFieldWithDefault(this, 12, []) as Uint8Array[];\n        }\n        set parent_uncled_delta_entropy(value: Uint8Array[]) {\n            pb_1.Message.setField(this, 12, value);\n        }\n        get uncled_entropy() {\n            return pb_1.Message.getFieldWithDefault(this, 13, new Uint8Array(0)) as Uint8Array;\n        }\n        set uncled_entropy(value: Uint8Array) {\n            pb_1.Message.setOneofField(this, 13, this.#one_of_decls[7], value);\n        }\n        get has_uncled_entropy() {\n            return pb_1.Message.getField(this, 13) != null;\n        }\n        get number() {\n            return pb_1.Message.getFieldWithDefault(this, 14, []) as Uint8Array[];\n        }\n        set number(value: Uint8Array[]) {\n            pb_1.Message.setField(this, 14, value);\n        }\n        get gas_limit() {\n            return pb_1.Message.getFieldWithDefault(this, 15, 0) as number;\n        }\n        set gas_limit(value: number) {\n            pb_1.Message.setOneofField(this, 15, this.#one_of_decls[8], value);\n        }\n        get has_gas_limit() {\n            return pb_1.Message.getField(this, 15) != null;\n        }\n        get gas_used() {\n            return pb_1.Message.getFieldWithDefault(this, 16, 0) as number;\n        }\n        set gas_used(value: number) {\n            pb_1.Message.setOneofField(this, 16, this.#one_of_decls[9], value);\n        }\n        get has_gas_used() {\n            return pb_1.Message.getField(this, 16) != null;\n        }\n        get base_fee() {\n            return pb_1.Message.getFieldWithDefault(this, 17, new Uint8Array(0)) as Uint8Array;\n        }\n        set base_fee(value: Uint8Array) {\n            pb_1.Message.setOneofField(this, 17, this.#one_of_decls[10], value);\n        }\n        get has_base_fee() {\n            return pb_1.Message.getField(this, 17) != null;\n        }\n        get location() {\n            return pb_1.Message.getWrapperField(\n                this,\n                dependency_1.common.ProtoLocation,\n                18,\n            ) as dependency_1.common.ProtoLocation;\n        }\n        set location(value: dependency_1.common.ProtoLocation) {\n            pb_1.Message.setOneofWrapperField(this, 18, this.#one_of_decls[11], value);\n        }\n        get has_location() {\n            return pb_1.Message.getField(this, 18) != null;\n        }\n        get extra() {\n            return pb_1.Message.getFieldWithDefault(this, 19, new Uint8Array(0)) as Uint8Array;\n        }\n        set extra(value: Uint8Array) {\n            pb_1.Message.setOneofField(this, 19, this.#one_of_decls[12], value);\n        }\n        get has_extra() {\n            return pb_1.Message.getField(this, 19) != null;\n        }\n        get mix_hash() {\n            return pb_1.Message.getWrapperField(\n                this,\n                dependency_1.common.ProtoHash,\n                20,\n            ) as dependency_1.common.ProtoHash;\n        }\n        set mix_hash(value: dependency_1.common.ProtoHash) {\n            pb_1.Message.setOneofWrapperField(this, 20, this.#one_of_decls[13], value);\n        }\n        get has_mix_hash() {\n            return pb_1.Message.getField(this, 20) != null;\n        }\n        get nonce() {\n            return pb_1.Message.getFieldWithDefault(this, 21, 0) as number;\n        }\n        set nonce(value: number) {\n            pb_1.Message.setOneofField(this, 21, this.#one_of_decls[14], value);\n        }\n        get has_nonce() {\n            return pb_1.Message.getField(this, 21) != null;\n        }\n        get utxo_root() {\n            return pb_1.Message.getWrapperField(\n                this,\n                dependency_1.common.ProtoHash,\n                22,\n            ) as dependency_1.common.ProtoHash;\n        }\n        set utxo_root(value: dependency_1.common.ProtoHash) {\n            pb_1.Message.setOneofWrapperField(this, 22, this.#one_of_decls[15], value);\n        }\n        get has_utxo_root() {\n            return pb_1.Message.getField(this, 22) != null;\n        }\n        get etx_set_root() {\n            return pb_1.Message.getWrapperField(\n                this,\n                dependency_1.common.ProtoHash,\n                23,\n            ) as dependency_1.common.ProtoHash;\n        }\n        set etx_set_root(value: dependency_1.common.ProtoHash) {\n            pb_1.Message.setOneofWrapperField(this, 23, this.#one_of_decls[16], value);\n        }\n        get has_etx_set_root() {\n            return pb_1.Message.getField(this, 23) != null;\n        }\n        get efficiency_score() {\n            return pb_1.Message.getFieldWithDefault(this, 24, 0) as number;\n        }\n        set efficiency_score(value: number) {\n            pb_1.Message.setOneofField(this, 24, this.#one_of_decls[17], value);\n        }\n        get has_efficiency_score() {\n            return pb_1.Message.getField(this, 24) != null;\n        }\n        get threshold_count() {\n            return pb_1.Message.getFieldWithDefault(this, 25, 0) as number;\n        }\n        set threshold_count(value: number) {\n            pb_1.Message.setOneofField(this, 25, this.#one_of_decls[18], value);\n        }\n        get has_threshold_count() {\n            return pb_1.Message.getField(this, 25) != null;\n        }\n        get expansion_number() {\n            return pb_1.Message.getFieldWithDefault(this, 26, 0) as number;\n        }\n        set expansion_number(value: number) {\n            pb_1.Message.setOneofField(this, 26, this.#one_of_decls[19], value);\n        }\n        get has_expansion_number() {\n            return pb_1.Message.getField(this, 26) != null;\n        }\n        get etx_eligible_slices() {\n            return pb_1.Message.getWrapperField(\n                this,\n                dependency_1.common.ProtoHash,\n                27,\n            ) as dependency_1.common.ProtoHash;\n        }\n        set etx_eligible_slices(value: dependency_1.common.ProtoHash) {\n            pb_1.Message.setOneofWrapperField(this, 27, this.#one_of_decls[20], value);\n        }\n        get has_etx_eligible_slices() {\n            return pb_1.Message.getField(this, 27) != null;\n        }\n        get prime_terminus_hash() {\n            return pb_1.Message.getWrapperField(\n                this,\n                dependency_1.common.ProtoHash,\n                28,\n            ) as dependency_1.common.ProtoHash;\n        }\n        set prime_terminus_hash(value: dependency_1.common.ProtoHash) {\n            pb_1.Message.setOneofWrapperField(this, 28, this.#one_of_decls[21], value);\n        }\n        get has_prime_terminus_hash() {\n            return pb_1.Message.getField(this, 28) != null;\n        }\n        get interlink_root_hash() {\n            return pb_1.Message.getWrapperField(\n                this,\n                dependency_1.common.ProtoHash,\n                29,\n            ) as dependency_1.common.ProtoHash;\n        }\n        set interlink_root_hash(value: dependency_1.common.ProtoHash) {\n            pb_1.Message.setOneofWrapperField(this, 29, this.#one_of_decls[22], value);\n        }\n        get has_interlink_root_hash() {\n            return pb_1.Message.getField(this, 29) != null;\n        }\n        get state_limit() {\n            return pb_1.Message.getFieldWithDefault(this, 30, 0) as number;\n        }\n        set state_limit(value: number) {\n            pb_1.Message.setOneofField(this, 30, this.#one_of_decls[23], value);\n        }\n        get has_state_limit() {\n            return pb_1.Message.getField(this, 30) != null;\n        }\n        get state_used() {\n            return pb_1.Message.getFieldWithDefault(this, 31, 0) as number;\n        }\n        set state_used(value: number) {\n            pb_1.Message.setOneofField(this, 31, this.#one_of_decls[24], value);\n        }\n        get has_state_used() {\n            return pb_1.Message.getField(this, 31) != null;\n        }\n        get quai_state_size() {\n            return pb_1.Message.getFieldWithDefault(this, 32, new Uint8Array(0)) as Uint8Array;\n        }\n        set quai_state_size(value: Uint8Array) {\n            pb_1.Message.setOneofField(this, 32, this.#one_of_decls[25], value);\n        }\n        get has_quai_state_size() {\n            return pb_1.Message.getField(this, 32) != null;\n        }\n        get secondary_coinbase() {\n            return pb_1.Message.getFieldWithDefault(this, 33, new Uint8Array(0)) as Uint8Array;\n        }\n        set secondary_coinbase(value: Uint8Array) {\n            pb_1.Message.setOneofField(this, 33, this.#one_of_decls[26], value);\n        }\n        get has_secondary_coinbase() {\n            return pb_1.Message.getField(this, 33) != null;\n        }\n        get exchange_rate() {\n            return pb_1.Message.getFieldWithDefault(this, 34, new Uint8Array(0)) as Uint8Array;\n        }\n        set exchange_rate(value: Uint8Array) {\n            pb_1.Message.setOneofField(this, 34, this.#one_of_decls[27], value);\n        }\n        get has_exchange_rate() {\n            return pb_1.Message.getField(this, 34) != null;\n        }\n        get quai_to_qi() {\n            return pb_1.Message.getFieldWithDefault(this, 35, new Uint8Array(0)) as Uint8Array;\n        }\n        set quai_to_qi(value: Uint8Array) {\n            pb_1.Message.setOneofField(this, 35, this.#one_of_decls[28], value);\n        }\n        get has_quai_to_qi() {\n            return pb_1.Message.getField(this, 35) != null;\n        }\n        get qi_to_quai() {\n            return pb_1.Message.getFieldWithDefault(this, 36, new Uint8Array(0)) as Uint8Array;\n        }\n        set qi_to_quai(value: Uint8Array) {\n            pb_1.Message.setOneofField(this, 36, this.#one_of_decls[29], value);\n        }\n        get has_qi_to_quai() {\n            return pb_1.Message.getField(this, 36) != null;\n        }\n        get _uncle_hash() {\n            const cases: {\n                [index: number]: 'none' | 'uncle_hash';\n            } = {\n                0: 'none',\n                2: 'uncle_hash',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [2])];\n        }\n        get _evm_root() {\n            const cases: {\n                [index: number]: 'none' | 'evm_root';\n            } = {\n                0: 'none',\n                3: 'evm_root',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [3])];\n        }\n        get _tx_hash() {\n            const cases: {\n                [index: number]: 'none' | 'tx_hash';\n            } = {\n                0: 'none',\n                4: 'tx_hash',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [4])];\n        }\n        get _outbound_etx_hash() {\n            const cases: {\n                [index: number]: 'none' | 'outbound_etx_hash';\n            } = {\n                0: 'none',\n                5: 'outbound_etx_hash',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [5])];\n        }\n        get _etx_rollup_hash() {\n            const cases: {\n                [index: number]: 'none' | 'etx_rollup_hash';\n            } = {\n                0: 'none',\n                6: 'etx_rollup_hash',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [6])];\n        }\n        get _receipt_hash() {\n            const cases: {\n                [index: number]: 'none' | 'receipt_hash';\n            } = {\n                0: 'none',\n                8: 'receipt_hash',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [8])];\n        }\n        get _difficulty() {\n            const cases: {\n                [index: number]: 'none' | 'difficulty';\n            } = {\n                0: 'none',\n                9: 'difficulty',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [9])];\n        }\n        get _uncled_entropy() {\n            const cases: {\n                [index: number]: 'none' | 'uncled_entropy';\n            } = {\n                0: 'none',\n                13: 'uncled_entropy',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [13])];\n        }\n        get _gas_limit() {\n            const cases: {\n                [index: number]: 'none' | 'gas_limit';\n            } = {\n                0: 'none',\n                15: 'gas_limit',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [15])];\n        }\n        get _gas_used() {\n            const cases: {\n                [index: number]: 'none' | 'gas_used';\n            } = {\n                0: 'none',\n                16: 'gas_used',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [16])];\n        }\n        get _base_fee() {\n            const cases: {\n                [index: number]: 'none' | 'base_fee';\n            } = {\n                0: 'none',\n                17: 'base_fee',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [17])];\n        }\n        get _location() {\n            const cases: {\n                [index: number]: 'none' | 'location';\n            } = {\n                0: 'none',\n                18: 'location',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [18])];\n        }\n        get _extra() {\n            const cases: {\n                [index: number]: 'none' | 'extra';\n            } = {\n                0: 'none',\n                19: 'extra',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [19])];\n        }\n        get _mix_hash() {\n            const cases: {\n                [index: number]: 'none' | 'mix_hash';\n            } = {\n                0: 'none',\n                20: 'mix_hash',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [20])];\n        }\n        get _nonce() {\n            const cases: {\n                [index: number]: 'none' | 'nonce';\n            } = {\n                0: 'none',\n                21: 'nonce',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [21])];\n        }\n        get _utxo_root() {\n            const cases: {\n                [index: number]: 'none' | 'utxo_root';\n            } = {\n                0: 'none',\n                22: 'utxo_root',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [22])];\n        }\n        get _etx_set_root() {\n            const cases: {\n                [index: number]: 'none' | 'etx_set_root';\n            } = {\n                0: 'none',\n                23: 'etx_set_root',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [23])];\n        }\n        get _efficiency_score() {\n            const cases: {\n                [index: number]: 'none' | 'efficiency_score';\n            } = {\n                0: 'none',\n                24: 'efficiency_score',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [24])];\n        }\n        get _threshold_count() {\n            const cases: {\n                [index: number]: 'none' | 'threshold_count';\n            } = {\n                0: 'none',\n                25: 'threshold_count',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [25])];\n        }\n        get _expansion_number() {\n            const cases: {\n                [index: number]: 'none' | 'expansion_number';\n            } = {\n                0: 'none',\n                26: 'expansion_number',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [26])];\n        }\n        get _etx_eligible_slices() {\n            const cases: {\n                [index: number]: 'none' | 'etx_eligible_slices';\n            } = {\n                0: 'none',\n                27: 'etx_eligible_slices',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [27])];\n        }\n        get _prime_terminus_hash() {\n            const cases: {\n                [index: number]: 'none' | 'prime_terminus_hash';\n            } = {\n                0: 'none',\n                28: 'prime_terminus_hash',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [28])];\n        }\n        get _interlink_root_hash() {\n            const cases: {\n                [index: number]: 'none' | 'interlink_root_hash';\n            } = {\n                0: 'none',\n                29: 'interlink_root_hash',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [29])];\n        }\n        get _state_limit() {\n            const cases: {\n                [index: number]: 'none' | 'state_limit';\n            } = {\n                0: 'none',\n                30: 'state_limit',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [30])];\n        }\n        get _state_used() {\n            const cases: {\n                [index: number]: 'none' | 'state_used';\n            } = {\n                0: 'none',\n                31: 'state_used',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [31])];\n        }\n        get _quai_state_size() {\n            const cases: {\n                [index: number]: 'none' | 'quai_state_size';\n            } = {\n                0: 'none',\n                32: 'quai_state_size',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [32])];\n        }\n        get _secondary_coinbase() {\n            const cases: {\n                [index: number]: 'none' | 'secondary_coinbase';\n            } = {\n                0: 'none',\n                33: 'secondary_coinbase',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [33])];\n        }\n        get _exchange_rate() {\n            const cases: {\n                [index: number]: 'none' | 'exchange_rate';\n            } = {\n                0: 'none',\n                34: 'exchange_rate',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [34])];\n        }\n        get _quai_to_qi() {\n            const cases: {\n                [index: number]: 'none' | 'quai_to_qi';\n            } = {\n                0: 'none',\n                35: 'quai_to_qi',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [35])];\n        }\n        get _qi_to_quai() {\n            const cases: {\n                [index: number]: 'none' | 'qi_to_quai';\n            } = {\n                0: 'none',\n                36: 'qi_to_quai',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [36])];\n        }\n        static fromObject(data: {\n            parent_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>[];\n            uncle_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n            evm_root?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n            tx_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n            outbound_etx_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n            etx_rollup_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n            manifest_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>[];\n            receipt_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n            difficulty?: Uint8Array;\n            parent_entropy?: Uint8Array[];\n            parent_delta_entropy?: Uint8Array[];\n            parent_uncled_delta_entropy?: Uint8Array[];\n            uncled_entropy?: Uint8Array;\n            number?: Uint8Array[];\n            gas_limit?: number;\n            gas_used?: number;\n            base_fee?: Uint8Array;\n            location?: ReturnType<typeof dependency_1.common.ProtoLocation.prototype.toObject>;\n            extra?: Uint8Array;\n            mix_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n            nonce?: number;\n            utxo_root?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n            etx_set_root?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n            efficiency_score?: number;\n            threshold_count?: number;\n            expansion_number?: number;\n            etx_eligible_slices?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n            prime_terminus_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n            interlink_root_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n            state_limit?: number;\n            state_used?: number;\n            quai_state_size?: Uint8Array;\n            secondary_coinbase?: Uint8Array;\n            exchange_rate?: Uint8Array;\n            quai_to_qi?: Uint8Array;\n            qi_to_quai?: Uint8Array;\n        }): ProtoHeader {\n            const message = new ProtoHeader({});\n            if (data.parent_hash != null) {\n                message.parent_hash = data.parent_hash.map((item) => dependency_1.common.ProtoHash.fromObject(item));\n            }\n            if (data.uncle_hash != null) {\n                message.uncle_hash = dependency_1.common.ProtoHash.fromObject(data.uncle_hash);\n            }\n            if (data.evm_root != null) {\n                message.evm_root = dependency_1.common.ProtoHash.fromObject(data.evm_root);\n            }\n            if (data.tx_hash != null) {\n                message.tx_hash = dependency_1.common.ProtoHash.fromObject(data.tx_hash);\n            }\n            if (data.outbound_etx_hash != null) {\n                message.outbound_etx_hash = dependency_1.common.ProtoHash.fromObject(data.outbound_etx_hash);\n            }\n            if (data.etx_rollup_hash != null) {\n                message.etx_rollup_hash = dependency_1.common.ProtoHash.fromObject(data.etx_rollup_hash);\n            }\n            if (data.manifest_hash != null) {\n                message.manifest_hash = data.manifest_hash.map((item) =>\n                    dependency_1.common.ProtoHash.fromObject(item),\n                );\n            }\n            if (data.receipt_hash != null) {\n                message.receipt_hash = dependency_1.common.ProtoHash.fromObject(data.receipt_hash);\n            }\n            if (data.difficulty != null) {\n                message.difficulty = data.difficulty;\n            }\n            if (data.parent_entropy != null) {\n                message.parent_entropy = data.parent_entropy;\n            }\n            if (data.parent_delta_entropy != null) {\n                message.parent_delta_entropy = data.parent_delta_entropy;\n            }\n            if (data.parent_uncled_delta_entropy != null) {\n                message.parent_uncled_delta_entropy = data.parent_uncled_delta_entropy;\n            }\n            if (data.uncled_entropy != null) {\n                message.uncled_entropy = data.uncled_entropy;\n            }\n            if (data.number != null) {\n                message.number = data.number;\n            }\n            if (data.gas_limit != null) {\n                message.gas_limit = data.gas_limit;\n            }\n            if (data.gas_used != null) {\n                message.gas_used = data.gas_used;\n            }\n            if (data.base_fee != null) {\n                message.base_fee = data.base_fee;\n            }\n            if (data.location != null) {\n                message.location = dependency_1.common.ProtoLocation.fromObject(data.location);\n            }\n            if (data.extra != null) {\n                message.extra = data.extra;\n            }\n            if (data.mix_hash != null) {\n                message.mix_hash = dependency_1.common.ProtoHash.fromObject(data.mix_hash);\n            }\n            if (data.nonce != null) {\n                message.nonce = data.nonce;\n            }\n            if (data.utxo_root != null) {\n                message.utxo_root = dependency_1.common.ProtoHash.fromObject(data.utxo_root);\n            }\n            if (data.etx_set_root != null) {\n                message.etx_set_root = dependency_1.common.ProtoHash.fromObject(data.etx_set_root);\n            }\n            if (data.efficiency_score != null) {\n                message.efficiency_score = data.efficiency_score;\n            }\n            if (data.threshold_count != null) {\n                message.threshold_count = data.threshold_count;\n            }\n            if (data.expansion_number != null) {\n                message.expansion_number = data.expansion_number;\n            }\n            if (data.etx_eligible_slices != null) {\n                message.etx_eligible_slices = dependency_1.common.ProtoHash.fromObject(data.etx_eligible_slices);\n            }\n            if (data.prime_terminus_hash != null) {\n                message.prime_terminus_hash = dependency_1.common.ProtoHash.fromObject(data.prime_terminus_hash);\n            }\n            if (data.interlink_root_hash != null) {\n                message.interlink_root_hash = dependency_1.common.ProtoHash.fromObject(data.interlink_root_hash);\n            }\n            if (data.state_limit != null) {\n                message.state_limit = data.state_limit;\n            }\n            if (data.state_used != null) {\n                message.state_used = data.state_used;\n            }\n            if (data.quai_state_size != null) {\n                message.quai_state_size = data.quai_state_size;\n            }\n            if (data.secondary_coinbase != null) {\n                message.secondary_coinbase = data.secondary_coinbase;\n            }\n            if (data.exchange_rate != null) {\n                message.exchange_rate = data.exchange_rate;\n            }\n            if (data.quai_to_qi != null) {\n                message.quai_to_qi = data.quai_to_qi;\n            }\n            if (data.qi_to_quai != null) {\n                message.qi_to_quai = data.qi_to_quai;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                parent_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>[];\n                uncle_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n                evm_root?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n                tx_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n                outbound_etx_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n                etx_rollup_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n                manifest_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>[];\n                receipt_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n                difficulty?: Uint8Array;\n                parent_entropy?: Uint8Array[];\n                parent_delta_entropy?: Uint8Array[];\n                parent_uncled_delta_entropy?: Uint8Array[];\n                uncled_entropy?: Uint8Array;\n                number?: Uint8Array[];\n                gas_limit?: number;\n                gas_used?: number;\n                base_fee?: Uint8Array;\n                location?: ReturnType<typeof dependency_1.common.ProtoLocation.prototype.toObject>;\n                extra?: Uint8Array;\n                mix_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n                nonce?: number;\n                utxo_root?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n                etx_set_root?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n                efficiency_score?: number;\n                threshold_count?: number;\n                expansion_number?: number;\n                etx_eligible_slices?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n                prime_terminus_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n                interlink_root_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n                state_limit?: number;\n                state_used?: number;\n                quai_state_size?: Uint8Array;\n                secondary_coinbase?: Uint8Array;\n                exchange_rate?: Uint8Array;\n                quai_to_qi?: Uint8Array;\n                qi_to_quai?: Uint8Array;\n            } = {};\n            if (this.parent_hash != null) {\n                data.parent_hash = this.parent_hash.map((item: dependency_1.common.ProtoHash) => item.toObject());\n            }\n            if (this.uncle_hash != null) {\n                data.uncle_hash = this.uncle_hash.toObject();\n            }\n            if (this.evm_root != null) {\n                data.evm_root = this.evm_root.toObject();\n            }\n            if (this.tx_hash != null) {\n                data.tx_hash = this.tx_hash.toObject();\n            }\n            if (this.outbound_etx_hash != null) {\n                data.outbound_etx_hash = this.outbound_etx_hash.toObject();\n            }\n            if (this.etx_rollup_hash != null) {\n                data.etx_rollup_hash = this.etx_rollup_hash.toObject();\n            }\n            if (this.manifest_hash != null) {\n                data.manifest_hash = this.manifest_hash.map((item: dependency_1.common.ProtoHash) => item.toObject());\n            }\n            if (this.receipt_hash != null) {\n                data.receipt_hash = this.receipt_hash.toObject();\n            }\n            if (this.difficulty != null) {\n                data.difficulty = this.difficulty;\n            }\n            if (this.parent_entropy != null) {\n                data.parent_entropy = this.parent_entropy;\n            }\n            if (this.parent_delta_entropy != null) {\n                data.parent_delta_entropy = this.parent_delta_entropy;\n            }\n            if (this.parent_uncled_delta_entropy != null) {\n                data.parent_uncled_delta_entropy = this.parent_uncled_delta_entropy;\n            }\n            if (this.uncled_entropy != null) {\n                data.uncled_entropy = this.uncled_entropy;\n            }\n            if (this.number != null) {\n                data.number = this.number;\n            }\n            if (this.gas_limit != null) {\n                data.gas_limit = this.gas_limit;\n            }\n            if (this.gas_used != null) {\n                data.gas_used = this.gas_used;\n            }\n            if (this.base_fee != null) {\n                data.base_fee = this.base_fee;\n            }\n            if (this.location != null) {\n                data.location = this.location.toObject();\n            }\n            if (this.extra != null) {\n                data.extra = this.extra;\n            }\n            if (this.mix_hash != null) {\n                data.mix_hash = this.mix_hash.toObject();\n            }\n            if (this.nonce != null) {\n                data.nonce = this.nonce;\n            }\n            if (this.utxo_root != null) {\n                data.utxo_root = this.utxo_root.toObject();\n            }\n            if (this.etx_set_root != null) {\n                data.etx_set_root = this.etx_set_root.toObject();\n            }\n            if (this.efficiency_score != null) {\n                data.efficiency_score = this.efficiency_score;\n            }\n            if (this.threshold_count != null) {\n                data.threshold_count = this.threshold_count;\n            }\n            if (this.expansion_number != null) {\n                data.expansion_number = this.expansion_number;\n            }\n            if (this.etx_eligible_slices != null) {\n                data.etx_eligible_slices = this.etx_eligible_slices.toObject();\n            }\n            if (this.prime_terminus_hash != null) {\n                data.prime_terminus_hash = this.prime_terminus_hash.toObject();\n            }\n            if (this.interlink_root_hash != null) {\n                data.interlink_root_hash = this.interlink_root_hash.toObject();\n            }\n            if (this.state_limit != null) {\n                data.state_limit = this.state_limit;\n            }\n            if (this.state_used != null) {\n                data.state_used = this.state_used;\n            }\n            if (this.quai_state_size != null) {\n                data.quai_state_size = this.quai_state_size;\n            }\n            if (this.secondary_coinbase != null) {\n                data.secondary_coinbase = this.secondary_coinbase;\n            }\n            if (this.exchange_rate != null) {\n                data.exchange_rate = this.exchange_rate;\n            }\n            if (this.quai_to_qi != null) {\n                data.quai_to_qi = this.quai_to_qi;\n            }\n            if (this.qi_to_quai != null) {\n                data.qi_to_quai = this.qi_to_quai;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.parent_hash.length)\n                writer.writeRepeatedMessage(1, this.parent_hash, (item: dependency_1.common.ProtoHash) =>\n                    item.serialize(writer),\n                );\n            if (this.has_uncle_hash) writer.writeMessage(2, this.uncle_hash, () => this.uncle_hash.serialize(writer));\n            if (this.has_evm_root) writer.writeMessage(3, this.evm_root, () => this.evm_root.serialize(writer));\n            if (this.has_tx_hash) writer.writeMessage(4, this.tx_hash, () => this.tx_hash.serialize(writer));\n            if (this.has_outbound_etx_hash)\n                writer.writeMessage(5, this.outbound_etx_hash, () => this.outbound_etx_hash.serialize(writer));\n            if (this.has_etx_rollup_hash)\n                writer.writeMessage(6, this.etx_rollup_hash, () => this.etx_rollup_hash.serialize(writer));\n            if (this.manifest_hash.length)\n                writer.writeRepeatedMessage(7, this.manifest_hash, (item: dependency_1.common.ProtoHash) =>\n                    item.serialize(writer),\n                );\n            if (this.has_receipt_hash)\n                writer.writeMessage(8, this.receipt_hash, () => this.receipt_hash.serialize(writer));\n            if (this.has_difficulty) writer.writeBytes(9, this.difficulty);\n            if (this.parent_entropy.length) writer.writeRepeatedBytes(10, this.parent_entropy);\n            if (this.parent_delta_entropy.length) writer.writeRepeatedBytes(11, this.parent_delta_entropy);\n            if (this.parent_uncled_delta_entropy.length)\n                writer.writeRepeatedBytes(12, this.parent_uncled_delta_entropy);\n            if (this.has_uncled_entropy) writer.writeBytes(13, this.uncled_entropy);\n            if (this.number.length) writer.writeRepeatedBytes(14, this.number);\n            if (this.has_gas_limit) writer.writeUint64(15, this.gas_limit);\n            if (this.has_gas_used) writer.writeUint64(16, this.gas_used);\n            if (this.has_base_fee) writer.writeBytes(17, this.base_fee);\n            if (this.has_location) writer.writeMessage(18, this.location, () => this.location.serialize(writer));\n            if (this.has_extra) writer.writeBytes(19, this.extra);\n            if (this.has_mix_hash) writer.writeMessage(20, this.mix_hash, () => this.mix_hash.serialize(writer));\n            if (this.has_nonce) writer.writeUint64(21, this.nonce);\n            if (this.has_utxo_root) writer.writeMessage(22, this.utxo_root, () => this.utxo_root.serialize(writer));\n            if (this.has_etx_set_root)\n                writer.writeMessage(23, this.etx_set_root, () => this.etx_set_root.serialize(writer));\n            if (this.has_efficiency_score) writer.writeUint64(24, this.efficiency_score);\n            if (this.has_threshold_count) writer.writeUint64(25, this.threshold_count);\n            if (this.has_expansion_number) writer.writeUint64(26, this.expansion_number);\n            if (this.has_etx_eligible_slices)\n                writer.writeMessage(27, this.etx_eligible_slices, () => this.etx_eligible_slices.serialize(writer));\n            if (this.has_prime_terminus_hash)\n                writer.writeMessage(28, this.prime_terminus_hash, () => this.prime_terminus_hash.serialize(writer));\n            if (this.has_interlink_root_hash)\n                writer.writeMessage(29, this.interlink_root_hash, () => this.interlink_root_hash.serialize(writer));\n            if (this.has_state_limit) writer.writeUint64(30, this.state_limit);\n            if (this.has_state_used) writer.writeUint64(31, this.state_used);\n            if (this.has_quai_state_size) writer.writeBytes(32, this.quai_state_size);\n            if (this.has_secondary_coinbase) writer.writeBytes(33, this.secondary_coinbase);\n            if (this.has_exchange_rate) writer.writeBytes(34, this.exchange_rate);\n            if (this.has_quai_to_qi) writer.writeBytes(35, this.quai_to_qi);\n            if (this.has_qi_to_quai) writer.writeBytes(36, this.qi_to_quai);\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoHeader {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoHeader();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.parent_hash, () =>\n                            pb_1.Message.addToRepeatedWrapperField(\n                                message,\n                                1,\n                                dependency_1.common.ProtoHash.deserialize(reader),\n                                dependency_1.common.ProtoHash,\n                            ),\n                        );\n                        break;\n                    case 2:\n                        reader.readMessage(\n                            message.uncle_hash,\n                            () => (message.uncle_hash = dependency_1.common.ProtoHash.deserialize(reader)),\n                        );\n                        break;\n                    case 3:\n                        reader.readMessage(\n                            message.evm_root,\n                            () => (message.evm_root = dependency_1.common.ProtoHash.deserialize(reader)),\n                        );\n                        break;\n                    case 4:\n                        reader.readMessage(\n                            message.tx_hash,\n                            () => (message.tx_hash = dependency_1.common.ProtoHash.deserialize(reader)),\n                        );\n                        break;\n                    case 5:\n                        reader.readMessage(\n                            message.outbound_etx_hash,\n                            () => (message.outbound_etx_hash = dependency_1.common.ProtoHash.deserialize(reader)),\n                        );\n                        break;\n                    case 6:\n                        reader.readMessage(\n                            message.etx_rollup_hash,\n                            () => (message.etx_rollup_hash = dependency_1.common.ProtoHash.deserialize(reader)),\n                        );\n                        break;\n                    case 7:\n                        reader.readMessage(message.manifest_hash, () =>\n                            pb_1.Message.addToRepeatedWrapperField(\n                                message,\n                                7,\n                                dependency_1.common.ProtoHash.deserialize(reader),\n                                dependency_1.common.ProtoHash,\n                            ),\n                        );\n                        break;\n                    case 8:\n                        reader.readMessage(\n                            message.receipt_hash,\n                            () => (message.receipt_hash = dependency_1.common.ProtoHash.deserialize(reader)),\n                        );\n                        break;\n                    case 9:\n                        message.difficulty = reader.readBytes();\n                        break;\n                    case 10:\n                        pb_1.Message.addToRepeatedField(message, 10, reader.readBytes());\n                        break;\n                    case 11:\n                        pb_1.Message.addToRepeatedField(message, 11, reader.readBytes());\n                        break;\n                    case 12:\n                        pb_1.Message.addToRepeatedField(message, 12, reader.readBytes());\n                        break;\n                    case 13:\n                        message.uncled_entropy = reader.readBytes();\n                        break;\n                    case 14:\n                        pb_1.Message.addToRepeatedField(message, 14, reader.readBytes());\n                        break;\n                    case 15:\n                        message.gas_limit = reader.readUint64();\n                        break;\n                    case 16:\n                        message.gas_used = reader.readUint64();\n                        break;\n                    case 17:\n                        message.base_fee = reader.readBytes();\n                        break;\n                    case 18:\n                        reader.readMessage(\n                            message.location,\n                            () => (message.location = dependency_1.common.ProtoLocation.deserialize(reader)),\n                        );\n                        break;\n                    case 19:\n                        message.extra = reader.readBytes();\n                        break;\n                    case 20:\n                        reader.readMessage(\n                            message.mix_hash,\n                            () => (message.mix_hash = dependency_1.common.ProtoHash.deserialize(reader)),\n                        );\n                        break;\n                    case 21:\n                        message.nonce = reader.readUint64();\n                        break;\n                    case 22:\n                        reader.readMessage(\n                            message.utxo_root,\n                            () => (message.utxo_root = dependency_1.common.ProtoHash.deserialize(reader)),\n                        );\n                        break;\n                    case 23:\n                        reader.readMessage(\n                            message.etx_set_root,\n                            () => (message.etx_set_root = dependency_1.common.ProtoHash.deserialize(reader)),\n                        );\n                        break;\n                    case 24:\n                        message.efficiency_score = reader.readUint64();\n                        break;\n                    case 25:\n                        message.threshold_count = reader.readUint64();\n                        break;\n                    case 26:\n                        message.expansion_number = reader.readUint64();\n                        break;\n                    case 27:\n                        reader.readMessage(\n                            message.etx_eligible_slices,\n                            () => (message.etx_eligible_slices = dependency_1.common.ProtoHash.deserialize(reader)),\n                        );\n                        break;\n                    case 28:\n                        reader.readMessage(\n                            message.prime_terminus_hash,\n                            () => (message.prime_terminus_hash = dependency_1.common.ProtoHash.deserialize(reader)),\n                        );\n                        break;\n                    case 29:\n                        reader.readMessage(\n                            message.interlink_root_hash,\n                            () => (message.interlink_root_hash = dependency_1.common.ProtoHash.deserialize(reader)),\n                        );\n                        break;\n                    case 30:\n                        message.state_limit = reader.readUint64();\n                        break;\n                    case 31:\n                        message.state_used = reader.readUint64();\n                        break;\n                    case 32:\n                        message.quai_state_size = reader.readBytes();\n                        break;\n                    case 33:\n                        message.secondary_coinbase = reader.readBytes();\n                        break;\n                    case 34:\n                        message.exchange_rate = reader.readBytes();\n                        break;\n                    case 35:\n                        message.quai_to_qi = reader.readBytes();\n                        break;\n                    case 36:\n                        message.qi_to_quai = reader.readBytes();\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoHeader {\n            return ProtoHeader.deserialize(bytes);\n        }\n    }\n    export class ProtoTransaction extends pb_1.Message {\n        #one_of_decls: number[][] = [\n            [1],\n            [2],\n            [3],\n            [4],\n            [5],\n            [6],\n            [7],\n            [8],\n            [9],\n            [10],\n            [11],\n            [12],\n            [13],\n            [14],\n            [15],\n            [16],\n            [17],\n            [18],\n            [19],\n            [20],\n            [21],\n            [22],\n            [23],\n        ];\n        constructor(\n            data?:\n                | any[]\n                | ({} & (\n                      | {\n                            type?: number;\n                        }\n                      | {\n                            to?: Uint8Array;\n                        }\n                      | {\n                            nonce?: number;\n                        }\n                      | {\n                            value?: Uint8Array;\n                        }\n                      | {\n                            gas?: number;\n                        }\n                      | {\n                            data?: Uint8Array;\n                        }\n                      | {\n                            chain_id?: Uint8Array;\n                        }\n                      | {\n                            miner_tip?: Uint8Array;\n                        }\n                      | {\n                            gas_price?: Uint8Array;\n                        }\n                      | {\n                            access_list?: ProtoAccessList;\n                        }\n                      | {\n                            v?: Uint8Array;\n                        }\n                      | {\n                            r?: Uint8Array;\n                        }\n                      | {\n                            s?: Uint8Array;\n                        }\n                      | {\n                            originating_tx_hash?: dependency_1.common.ProtoHash;\n                        }\n                      | {\n                            etx_index?: number;\n                        }\n                      | {\n                            tx_ins?: ProtoTxIns;\n                        }\n                      | {\n                            tx_outs?: ProtoTxOuts;\n                        }\n                      | {\n                            signature?: Uint8Array;\n                        }\n                      | {\n                            etx_sender?: Uint8Array;\n                        }\n                      | {\n                            parent_hash?: dependency_1.common.ProtoHash;\n                        }\n                      | {\n                            mix_hash?: dependency_1.common.ProtoHash;\n                        }\n                      | {\n                            work_nonce?: number;\n                        }\n                      | {\n                            etx_type?: number;\n                        }\n                  )),\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('type' in data && data.type != undefined) {\n                    this.type = data.type;\n                }\n                if ('to' in data && data.to != undefined) {\n                    this.to = data.to;\n                }\n                if ('nonce' in data && data.nonce != undefined) {\n                    this.nonce = data.nonce;\n                }\n                if ('value' in data && data.value != undefined) {\n                    this.value = data.value;\n                }\n                if ('gas' in data && data.gas != undefined) {\n                    this.gas = data.gas;\n                }\n                if ('data' in data && data.data != undefined) {\n                    this.data = data.data;\n                }\n                if ('chain_id' in data && data.chain_id != undefined) {\n                    this.chain_id = data.chain_id;\n                }\n                if ('miner_tip' in data && data.miner_tip != undefined) {\n                    this.miner_tip = data.miner_tip;\n                }\n                if ('gas_price' in data && data.gas_price != undefined) {\n                    this.gas_price = data.gas_price;\n                }\n                if ('access_list' in data && data.access_list != undefined) {\n                    this.access_list = data.access_list;\n                }\n                if ('v' in data && data.v != undefined) {\n                    this.v = data.v;\n                }\n                if ('r' in data && data.r != undefined) {\n                    this.r = data.r;\n                }\n                if ('s' in data && data.s != undefined) {\n                    this.s = data.s;\n                }\n                if ('originating_tx_hash' in data && data.originating_tx_hash != undefined) {\n                    this.originating_tx_hash = data.originating_tx_hash;\n                }\n                if ('etx_index' in data && data.etx_index != undefined) {\n                    this.etx_index = data.etx_index;\n                }\n                if ('tx_ins' in data && data.tx_ins != undefined) {\n                    this.tx_ins = data.tx_ins;\n                }\n                if ('tx_outs' in data && data.tx_outs != undefined) {\n                    this.tx_outs = data.tx_outs;\n                }\n                if ('signature' in data && data.signature != undefined) {\n                    this.signature = data.signature;\n                }\n                if ('etx_sender' in data && data.etx_sender != undefined) {\n                    this.etx_sender = data.etx_sender;\n                }\n                if ('parent_hash' in data && data.parent_hash != undefined) {\n                    this.parent_hash = data.parent_hash;\n                }\n                if ('mix_hash' in data && data.mix_hash != undefined) {\n                    this.mix_hash = data.mix_hash;\n                }\n                if ('work_nonce' in data && data.work_nonce != undefined) {\n                    this.work_nonce = data.work_nonce;\n                }\n                if ('etx_type' in data && data.etx_type != undefined) {\n                    this.etx_type = data.etx_type;\n                }\n            }\n        }\n        get type() {\n            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;\n        }\n        set type(value: number) {\n            pb_1.Message.setOneofField(this, 1, this.#one_of_decls[0], value);\n        }\n        get has_type() {\n            return pb_1.Message.getField(this, 1) != null;\n        }\n        get to() {\n            return pb_1.Message.getFieldWithDefault(this, 2, new Uint8Array(0)) as Uint8Array;\n        }\n        set to(value: Uint8Array) {\n            pb_1.Message.setOneofField(this, 2, this.#one_of_decls[1], value);\n        }\n        get has_to() {\n            return pb_1.Message.getField(this, 2) != null;\n        }\n        get nonce() {\n            return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;\n        }\n        set nonce(value: number) {\n            pb_1.Message.setOneofField(this, 3, this.#one_of_decls[2], value);\n        }\n        get has_nonce() {\n            return pb_1.Message.getField(this, 3) != null;\n        }\n        get value() {\n            return pb_1.Message.getFieldWithDefault(this, 4, new Uint8Array(0)) as Uint8Array;\n        }\n        set value(value: Uint8Array) {\n            pb_1.Message.setOneofField(this, 4, this.#one_of_decls[3], value);\n        }\n        get has_value() {\n            return pb_1.Message.getField(this, 4) != null;\n        }\n        get gas() {\n            return pb_1.Message.getFieldWithDefault(this, 5, 0) as number;\n        }\n        set gas(value: number) {\n            pb_1.Message.setOneofField(this, 5, this.#one_of_decls[4], value);\n        }\n        get has_gas() {\n            return pb_1.Message.getField(this, 5) != null;\n        }\n        get data() {\n            return pb_1.Message.getFieldWithDefault(this, 6, new Uint8Array(0)) as Uint8Array;\n        }\n        set data(value: Uint8Array) {\n            pb_1.Message.setOneofField(this, 6, this.#one_of_decls[5], value);\n        }\n        get has_data() {\n            return pb_1.Message.getField(this, 6) != null;\n        }\n        get chain_id() {\n            return pb_1.Message.getFieldWithDefault(this, 7, new Uint8Array(0)) as Uint8Array;\n        }\n        set chain_id(value: Uint8Array) {\n            pb_1.Message.setOneofField(this, 7, this.#one_of_decls[6], value);\n        }\n        get has_chain_id() {\n            return pb_1.Message.getField(this, 7) != null;\n        }\n        get miner_tip() {\n            return pb_1.Message.getFieldWithDefault(this, 8, new Uint8Array(0)) as Uint8Array;\n        }\n        set miner_tip(value: Uint8Array) {\n            pb_1.Message.setOneofField(this, 8, this.#one_of_decls[7], value);\n        }\n        get has_miner_tip() {\n            return pb_1.Message.getField(this, 8) != null;\n        }\n        get gas_price() {\n            return pb_1.Message.getFieldWithDefault(this, 9, new Uint8Array(0)) as Uint8Array;\n        }\n        set gas_price(value: Uint8Array) {\n            pb_1.Message.setOneofField(this, 9, this.#one_of_decls[8], value);\n        }\n        get has_gas_price() {\n            return pb_1.Message.getField(this, 9) != null;\n        }\n        get access_list() {\n            return pb_1.Message.getWrapperField(this, ProtoAccessList, 10) as ProtoAccessList;\n        }\n        set access_list(value: ProtoAccessList) {\n            pb_1.Message.setOneofWrapperField(this, 10, this.#one_of_decls[9], value);\n        }\n        get has_access_list() {\n            return pb_1.Message.getField(this, 10) != null;\n        }\n        get v() {\n            return pb_1.Message.getFieldWithDefault(this, 11, new Uint8Array(0)) as Uint8Array;\n        }\n        set v(value: Uint8Array) {\n            pb_1.Message.setOneofField(this, 11, this.#one_of_decls[10], value);\n        }\n        get has_v() {\n            return pb_1.Message.getField(this, 11) != null;\n        }\n        get r() {\n            return pb_1.Message.getFieldWithDefault(this, 12, new Uint8Array(0)) as Uint8Array;\n        }\n        set r(value: Uint8Array) {\n            pb_1.Message.setOneofField(this, 12, this.#one_of_decls[11], value);\n        }\n        get has_r() {\n            return pb_1.Message.getField(this, 12) != null;\n        }\n        get s() {\n            return pb_1.Message.getFieldWithDefault(this, 13, new Uint8Array(0)) as Uint8Array;\n        }\n        set s(value: Uint8Array) {\n            pb_1.Message.setOneofField(this, 13, this.#one_of_decls[12], value);\n        }\n        get has_s() {\n            return pb_1.Message.getField(this, 13) != null;\n        }\n        get originating_tx_hash() {\n            return pb_1.Message.getWrapperField(\n                this,\n                dependency_1.common.ProtoHash,\n                14,\n            ) as dependency_1.common.ProtoHash;\n        }\n        set originating_tx_hash(value: dependency_1.common.ProtoHash) {\n            pb_1.Message.setOneofWrapperField(this, 14, this.#one_of_decls[13], value);\n        }\n        get has_originating_tx_hash() {\n            return pb_1.Message.getField(this, 14) != null;\n        }\n        get etx_index() {\n            return pb_1.Message.getFieldWithDefault(this, 15, 0) as number;\n        }\n        set etx_index(value: number) {\n            pb_1.Message.setOneofField(this, 15, this.#one_of_decls[14], value);\n        }\n        get has_etx_index() {\n            return pb_1.Message.getField(this, 15) != null;\n        }\n        get tx_ins() {\n            return pb_1.Message.getWrapperField(this, ProtoTxIns, 16) as ProtoTxIns;\n        }\n        set tx_ins(value: ProtoTxIns) {\n            pb_1.Message.setOneofWrapperField(this, 16, this.#one_of_decls[15], value);\n        }\n        get has_tx_ins() {\n            return pb_1.Message.getField(this, 16) != null;\n        }\n        get tx_outs() {\n            return pb_1.Message.getWrapperField(this, ProtoTxOuts, 17) as ProtoTxOuts;\n        }\n        set tx_outs(value: ProtoTxOuts) {\n            pb_1.Message.setOneofWrapperField(this, 17, this.#one_of_decls[16], value);\n        }\n        get has_tx_outs() {\n            return pb_1.Message.getField(this, 17) != null;\n        }\n        get signature() {\n            return pb_1.Message.getFieldWithDefault(this, 18, new Uint8Array(0)) as Uint8Array;\n        }\n        set signature(value: Uint8Array) {\n            pb_1.Message.setOneofField(this, 18, this.#one_of_decls[17], value);\n        }\n        get has_signature() {\n            return pb_1.Message.getField(this, 18) != null;\n        }\n        get etx_sender() {\n            return pb_1.Message.getFieldWithDefault(this, 19, new Uint8Array(0)) as Uint8Array;\n        }\n        set etx_sender(value: Uint8Array) {\n            pb_1.Message.setOneofField(this, 19, this.#one_of_decls[18], value);\n        }\n        get has_etx_sender() {\n            return pb_1.Message.getField(this, 19) != null;\n        }\n        get parent_hash() {\n            return pb_1.Message.getWrapperField(\n                this,\n                dependency_1.common.ProtoHash,\n                20,\n            ) as dependency_1.common.ProtoHash;\n        }\n        set parent_hash(value: dependency_1.common.ProtoHash) {\n            pb_1.Message.setOneofWrapperField(this, 20, this.#one_of_decls[19], value);\n        }\n        get has_parent_hash() {\n            return pb_1.Message.getField(this, 20) != null;\n        }\n        get mix_hash() {\n            return pb_1.Message.getWrapperField(\n                this,\n                dependency_1.common.ProtoHash,\n                21,\n            ) as dependency_1.common.ProtoHash;\n        }\n        set mix_hash(value: dependency_1.common.ProtoHash) {\n            pb_1.Message.setOneofWrapperField(this, 21, this.#one_of_decls[20], value);\n        }\n        get has_mix_hash() {\n            return pb_1.Message.getField(this, 21) != null;\n        }\n        get work_nonce() {\n            return pb_1.Message.getFieldWithDefault(this, 22, 0) as number;\n        }\n        set work_nonce(value: number) {\n            pb_1.Message.setOneofField(this, 22, this.#one_of_decls[21], value);\n        }\n        get has_work_nonce() {\n            return pb_1.Message.getField(this, 22) != null;\n        }\n        get etx_type() {\n            return pb_1.Message.getFieldWithDefault(this, 23, 0) as number;\n        }\n        set etx_type(value: number) {\n            pb_1.Message.setOneofField(this, 23, this.#one_of_decls[22], value);\n        }\n        get has_etx_type() {\n            return pb_1.Message.getField(this, 23) != null;\n        }\n        get _type() {\n            const cases: {\n                [index: number]: 'none' | 'type';\n            } = {\n                0: 'none',\n                1: 'type',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [1])];\n        }\n        get _to() {\n            const cases: {\n                [index: number]: 'none' | 'to';\n            } = {\n                0: 'none',\n                2: 'to',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [2])];\n        }\n        get _nonce() {\n            const cases: {\n                [index: number]: 'none' | 'nonce';\n            } = {\n                0: 'none',\n                3: 'nonce',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [3])];\n        }\n        get _value() {\n            const cases: {\n                [index: number]: 'none' | 'value';\n            } = {\n                0: 'none',\n                4: 'value',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [4])];\n        }\n        get _gas() {\n            const cases: {\n                [index: number]: 'none' | 'gas';\n            } = {\n                0: 'none',\n                5: 'gas',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [5])];\n        }\n        get _data() {\n            const cases: {\n                [index: number]: 'none' | 'data';\n            } = {\n                0: 'none',\n                6: 'data',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [6])];\n        }\n        get _chain_id() {\n            const cases: {\n                [index: number]: 'none' | 'chain_id';\n            } = {\n                0: 'none',\n                7: 'chain_id',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [7])];\n        }\n        get _miner_tip() {\n            const cases: {\n                [index: number]: 'none' | 'miner_tip';\n            } = {\n                0: 'none',\n                8: 'miner_tip',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [8])];\n        }\n        get _gas_price() {\n            const cases: {\n                [index: number]: 'none' | 'gas_price';\n            } = {\n                0: 'none',\n                9: 'gas_price',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [9])];\n        }\n        get _access_list() {\n            const cases: {\n                [index: number]: 'none' | 'access_list';\n            } = {\n                0: 'none',\n                10: 'access_list',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [10])];\n        }\n        get _v() {\n            const cases: {\n                [index: number]: 'none' | 'v';\n            } = {\n                0: 'none',\n                11: 'v',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [11])];\n        }\n        get _r() {\n            const cases: {\n                [index: number]: 'none' | 'r';\n            } = {\n                0: 'none',\n                12: 'r',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [12])];\n        }\n        get _s() {\n            const cases: {\n                [index: number]: 'none' | 's';\n            } = {\n                0: 'none',\n                13: 's',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [13])];\n        }\n        get _originating_tx_hash() {\n            const cases: {\n                [index: number]: 'none' | 'originating_tx_hash';\n            } = {\n                0: 'none',\n                14: 'originating_tx_hash',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [14])];\n        }\n        get _etx_index() {\n            const cases: {\n                [index: number]: 'none' | 'etx_index';\n            } = {\n                0: 'none',\n                15: 'etx_index',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [15])];\n        }\n        get _tx_ins() {\n            const cases: {\n                [index: number]: 'none' | 'tx_ins';\n            } = {\n                0: 'none',\n                16: 'tx_ins',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [16])];\n        }\n        get _tx_outs() {\n            const cases: {\n                [index: number]: 'none' | 'tx_outs';\n            } = {\n                0: 'none',\n                17: 'tx_outs',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [17])];\n        }\n        get _signature() {\n            const cases: {\n                [index: number]: 'none' | 'signature';\n            } = {\n                0: 'none',\n                18: 'signature',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [18])];\n        }\n        get _etx_sender() {\n            const cases: {\n                [index: number]: 'none' | 'etx_sender';\n            } = {\n                0: 'none',\n                19: 'etx_sender',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [19])];\n        }\n        get _parent_hash() {\n            const cases: {\n                [index: number]: 'none' | 'parent_hash';\n            } = {\n                0: 'none',\n                20: 'parent_hash',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [20])];\n        }\n        get _mix_hash() {\n            const cases: {\n                [index: number]: 'none' | 'mix_hash';\n            } = {\n                0: 'none',\n                21: 'mix_hash',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [21])];\n        }\n        get _work_nonce() {\n            const cases: {\n                [index: number]: 'none' | 'work_nonce';\n            } = {\n                0: 'none',\n                22: 'work_nonce',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [22])];\n        }\n        get _etx_type() {\n            const cases: {\n                [index: number]: 'none' | 'etx_type';\n            } = {\n                0: 'none',\n                23: 'etx_type',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [23])];\n        }\n        static fromObject(data: {\n            type?: number;\n            to?: Uint8Array;\n            nonce?: number;\n            value?: Uint8Array;\n            gas?: number;\n            data?: Uint8Array;\n            chain_id?: Uint8Array;\n            miner_tip?: Uint8Array;\n            gas_price?: Uint8Array;\n            access_list?: ReturnType<typeof ProtoAccessList.prototype.toObject>;\n            v?: Uint8Array;\n            r?: Uint8Array;\n            s?: Uint8Array;\n            originating_tx_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n            etx_index?: number;\n            tx_ins?: ReturnType<typeof ProtoTxIns.prototype.toObject>;\n            tx_outs?: ReturnType<typeof ProtoTxOuts.prototype.toObject>;\n            signature?: Uint8Array;\n            etx_sender?: Uint8Array;\n            parent_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n            mix_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n            work_nonce?: number;\n            etx_type?: number;\n        }): ProtoTransaction {\n            const message = new ProtoTransaction({});\n            if (data.type != null) {\n                message.type = data.type;\n            }\n            if (data.to != null) {\n                message.to = data.to;\n            }\n            if (data.nonce != null) {\n                message.nonce = data.nonce;\n            }\n            if (data.value != null) {\n                message.value = data.value;\n            }\n            if (data.gas != null) {\n                message.gas = data.gas;\n            }\n            if (data.data != null) {\n                message.data = data.data;\n            }\n            if (data.chain_id != null) {\n                message.chain_id = data.chain_id;\n            }\n            if (data.miner_tip != null) {\n                message.miner_tip = data.miner_tip;\n            }\n            if (data.gas_price != null) {\n                message.gas_price = data.gas_price;\n            }\n            if (data.access_list != null) {\n                message.access_list = ProtoAccessList.fromObject(data.access_list);\n            }\n            if (data.v != null) {\n                message.v = data.v;\n            }\n            if (data.r != null) {\n                message.r = data.r;\n            }\n            if (data.s != null) {\n                message.s = data.s;\n            }\n            if (data.originating_tx_hash != null) {\n                message.originating_tx_hash = dependency_1.common.ProtoHash.fromObject(data.originating_tx_hash);\n            }\n            if (data.etx_index != null) {\n                message.etx_index = data.etx_index;\n            }\n            if (data.tx_ins != null) {\n                message.tx_ins = ProtoTxIns.fromObject(data.tx_ins);\n            }\n            if (data.tx_outs != null) {\n                message.tx_outs = ProtoTxOuts.fromObject(data.tx_outs);\n            }\n            if (data.signature != null) {\n                message.signature = data.signature;\n            }\n            if (data.etx_sender != null) {\n                message.etx_sender = data.etx_sender;\n            }\n            if (data.parent_hash != null) {\n                message.parent_hash = dependency_1.common.ProtoHash.fromObject(data.parent_hash);\n            }\n            if (data.mix_hash != null) {\n                message.mix_hash = dependency_1.common.ProtoHash.fromObject(data.mix_hash);\n            }\n            if (data.work_nonce != null) {\n                message.work_nonce = data.work_nonce;\n            }\n            if (data.etx_type != null) {\n                message.etx_type = data.etx_type;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                type?: number;\n                to?: Uint8Array;\n                nonce?: number;\n                value?: Uint8Array;\n                gas?: number;\n                data?: Uint8Array;\n                chain_id?: Uint8Array;\n                miner_tip?: Uint8Array;\n                gas_price?: Uint8Array;\n                access_list?: ReturnType<typeof ProtoAccessList.prototype.toObject>;\n                v?: Uint8Array;\n                r?: Uint8Array;\n                s?: Uint8Array;\n                originating_tx_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n                etx_index?: number;\n                tx_ins?: ReturnType<typeof ProtoTxIns.prototype.toObject>;\n                tx_outs?: ReturnType<typeof ProtoTxOuts.prototype.toObject>;\n                signature?: Uint8Array;\n                etx_sender?: Uint8Array;\n                parent_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n                mix_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n                work_nonce?: number;\n                etx_type?: number;\n            } = {};\n            if (this.type != null) {\n                data.type = this.type;\n            }\n            if (this.to != null) {\n                data.to = this.to;\n            }\n            if (this.nonce != null) {\n                data.nonce = this.nonce;\n            }\n            if (this.value != null) {\n                data.value = this.value;\n            }\n            if (this.gas != null) {\n                data.gas = this.gas;\n            }\n            if (this.data != null) {\n                data.data = this.data;\n            }\n            if (this.chain_id != null) {\n                data.chain_id = this.chain_id;\n            }\n            if (this.miner_tip != null) {\n                data.miner_tip = this.miner_tip;\n            }\n            if (this.gas_price != null) {\n                data.gas_price = this.gas_price;\n            }\n            if (this.access_list != null) {\n                data.access_list = this.access_list.toObject();\n            }\n            if (this.v != null) {\n                data.v = this.v;\n            }\n            if (this.r != null) {\n                data.r = this.r;\n            }\n            if (this.s != null) {\n                data.s = this.s;\n            }\n            if (this.originating_tx_hash != null) {\n                data.originating_tx_hash = this.originating_tx_hash.toObject();\n            }\n            if (this.etx_index != null) {\n                data.etx_index = this.etx_index;\n            }\n            if (this.tx_ins != null) {\n                data.tx_ins = this.tx_ins.toObject();\n            }\n            if (this.tx_outs != null) {\n                data.tx_outs = this.tx_outs.toObject();\n            }\n            if (this.signature != null) {\n                data.signature = this.signature;\n            }\n            if (this.etx_sender != null) {\n                data.etx_sender = this.etx_sender;\n            }\n            if (this.parent_hash != null) {\n                data.parent_hash = this.parent_hash.toObject();\n            }\n            if (this.mix_hash != null) {\n                data.mix_hash = this.mix_hash.toObject();\n            }\n            if (this.work_nonce != null) {\n                data.work_nonce = this.work_nonce;\n            }\n            if (this.etx_type != null) {\n                data.etx_type = this.etx_type;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.has_type) writer.writeUint64(1, this.type);\n            if (this.has_to) writer.writeBytes(2, this.to);\n            if (this.has_nonce) writer.writeUint64(3, this.nonce);\n            if (this.has_value) writer.writeBytes(4, this.value);\n            if (this.has_gas) writer.writeUint64(5, this.gas);\n            if (this.has_data) writer.writeBytes(6, this.data);\n            if (this.has_chain_id) writer.writeBytes(7, this.chain_id);\n            if (this.has_miner_tip) writer.writeBytes(8, this.miner_tip);\n            if (this.has_gas_price) writer.writeBytes(9, this.gas_price);\n            if (this.has_access_list)\n                writer.writeMessage(10, this.access_list, () => this.access_list.serialize(writer));\n            if (this.has_v) writer.writeBytes(11, this.v);\n            if (this.has_r) writer.writeBytes(12, this.r);\n            if (this.has_s) writer.writeBytes(13, this.s);\n            if (this.has_originating_tx_hash)\n                writer.writeMessage(14, this.originating_tx_hash, () => this.originating_tx_hash.serialize(writer));\n            if (this.has_etx_index) writer.writeUint32(15, this.etx_index);\n            if (this.has_tx_ins) writer.writeMessage(16, this.tx_ins, () => this.tx_ins.serialize(writer));\n            if (this.has_tx_outs) writer.writeMessage(17, this.tx_outs, () => this.tx_outs.serialize(writer));\n            if (this.has_signature) writer.writeBytes(18, this.signature);\n            if (this.has_etx_sender) writer.writeBytes(19, this.etx_sender);\n            if (this.has_parent_hash)\n                writer.writeMessage(20, this.parent_hash, () => this.parent_hash.serialize(writer));\n            if (this.has_mix_hash) writer.writeMessage(21, this.mix_hash, () => this.mix_hash.serialize(writer));\n            if (this.has_work_nonce) writer.writeUint64(22, this.work_nonce);\n            if (this.has_etx_type) writer.writeUint64(23, this.etx_type);\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoTransaction {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoTransaction();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.type = reader.readUint64();\n                        break;\n                    case 2:\n                        message.to = reader.readBytes();\n                        break;\n                    case 3:\n                        message.nonce = reader.readUint64();\n                        break;\n                    case 4:\n                        message.value = reader.readBytes();\n                        break;\n                    case 5:\n                        message.gas = reader.readUint64();\n                        break;\n                    case 6:\n                        message.data = reader.readBytes();\n                        break;\n                    case 7:\n                        message.chain_id = reader.readBytes();\n                        break;\n                    case 8:\n                        message.miner_tip = reader.readBytes();\n                        break;\n                    case 9:\n                        message.gas_price = reader.readBytes();\n                        break;\n                    case 10:\n                        reader.readMessage(\n                            message.access_list,\n                            () => (message.access_list = ProtoAccessList.deserialize(reader)),\n                        );\n                        break;\n                    case 11:\n                        message.v = reader.readBytes();\n                        break;\n                    case 12:\n                        message.r = reader.readBytes();\n                        break;\n                    case 13:\n                        message.s = reader.readBytes();\n                        break;\n                    case 14:\n                        reader.readMessage(\n                            message.originating_tx_hash,\n                            () => (message.originating_tx_hash = dependency_1.common.ProtoHash.deserialize(reader)),\n                        );\n                        break;\n                    case 15:\n                        message.etx_index = reader.readUint32();\n                        break;\n                    case 16:\n                        reader.readMessage(message.tx_ins, () => (message.tx_ins = ProtoTxIns.deserialize(reader)));\n                        break;\n                    case 17:\n                        reader.readMessage(message.tx_outs, () => (message.tx_outs = ProtoTxOuts.deserialize(reader)));\n                        break;\n                    case 18:\n                        message.signature = reader.readBytes();\n                        break;\n                    case 19:\n                        message.etx_sender = reader.readBytes();\n                        break;\n                    case 20:\n                        reader.readMessage(\n                            message.parent_hash,\n                            () => (message.parent_hash = dependency_1.common.ProtoHash.deserialize(reader)),\n                        );\n                        break;\n                    case 21:\n                        reader.readMessage(\n                            message.mix_hash,\n                            () => (message.mix_hash = dependency_1.common.ProtoHash.deserialize(reader)),\n                        );\n                        break;\n                    case 22:\n                        message.work_nonce = reader.readUint64();\n                        break;\n                    case 23:\n                        message.etx_type = reader.readUint64();\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoTransaction {\n            return ProtoTransaction.deserialize(bytes);\n        }\n    }\n    export class ProtoTransactions extends pb_1.Message {\n        #one_of_decls: number[][] = [];\n        constructor(\n            data?:\n                | any[]\n                | {\n                      transactions?: ProtoTransaction[];\n                  },\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('transactions' in data && data.transactions != undefined) {\n                    this.transactions = data.transactions;\n                }\n            }\n        }\n        get transactions() {\n            return pb_1.Message.getRepeatedWrapperField(this, ProtoTransaction, 1) as ProtoTransaction[];\n        }\n        set transactions(value: ProtoTransaction[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        static fromObject(data: {\n            transactions?: ReturnType<typeof ProtoTransaction.prototype.toObject>[];\n        }): ProtoTransactions {\n            const message = new ProtoTransactions({});\n            if (data.transactions != null) {\n                message.transactions = data.transactions.map((item) => ProtoTransaction.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                transactions?: ReturnType<typeof ProtoTransaction.prototype.toObject>[];\n            } = {};\n            if (this.transactions != null) {\n                data.transactions = this.transactions.map((item: ProtoTransaction) => item.toObject());\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.transactions.length)\n                writer.writeRepeatedMessage(1, this.transactions, (item: ProtoTransaction) => item.serialize(writer));\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoTransactions {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoTransactions();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.transactions, () =>\n                            pb_1.Message.addToRepeatedWrapperField(\n                                message,\n                                1,\n                                ProtoTransaction.deserialize(reader),\n                                ProtoTransaction,\n                            ),\n                        );\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoTransactions {\n            return ProtoTransactions.deserialize(bytes);\n        }\n    }\n    export class ProtoHeaders extends pb_1.Message {\n        #one_of_decls: number[][] = [];\n        constructor(\n            data?:\n                | any[]\n                | {\n                      headers?: ProtoHeader[];\n                  },\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('headers' in data && data.headers != undefined) {\n                    this.headers = data.headers;\n                }\n            }\n        }\n        get headers() {\n            return pb_1.Message.getRepeatedWrapperField(this, ProtoHeader, 1) as ProtoHeader[];\n        }\n        set headers(value: ProtoHeader[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        static fromObject(data: { headers?: ReturnType<typeof ProtoHeader.prototype.toObject>[] }): ProtoHeaders {\n            const message = new ProtoHeaders({});\n            if (data.headers != null) {\n                message.headers = data.headers.map((item) => ProtoHeader.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                headers?: ReturnType<typeof ProtoHeader.prototype.toObject>[];\n            } = {};\n            if (this.headers != null) {\n                data.headers = this.headers.map((item: ProtoHeader) => item.toObject());\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.headers.length)\n                writer.writeRepeatedMessage(1, this.headers, (item: ProtoHeader) => item.serialize(writer));\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoHeaders {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoHeaders();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.headers, () =>\n                            pb_1.Message.addToRepeatedWrapperField(\n                                message,\n                                1,\n                                ProtoHeader.deserialize(reader),\n                                ProtoHeader,\n                            ),\n                        );\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoHeaders {\n            return ProtoHeaders.deserialize(bytes);\n        }\n    }\n    export class ProtoManifest extends pb_1.Message {\n        #one_of_decls: number[][] = [];\n        constructor(\n            data?:\n                | any[]\n                | {\n                      manifest?: dependency_1.common.ProtoHash[];\n                  },\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('manifest' in data && data.manifest != undefined) {\n                    this.manifest = data.manifest;\n                }\n            }\n        }\n        get manifest() {\n            return pb_1.Message.getRepeatedWrapperField(\n                this,\n                dependency_1.common.ProtoHash,\n                1,\n            ) as dependency_1.common.ProtoHash[];\n        }\n        set manifest(value: dependency_1.common.ProtoHash[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        static fromObject(data: {\n            manifest?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>[];\n        }): ProtoManifest {\n            const message = new ProtoManifest({});\n            if (data.manifest != null) {\n                message.manifest = data.manifest.map((item) => dependency_1.common.ProtoHash.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                manifest?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>[];\n            } = {};\n            if (this.manifest != null) {\n                data.manifest = this.manifest.map((item: dependency_1.common.ProtoHash) => item.toObject());\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.manifest.length)\n                writer.writeRepeatedMessage(1, this.manifest, (item: dependency_1.common.ProtoHash) =>\n                    item.serialize(writer),\n                );\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoManifest {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoManifest();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.manifest, () =>\n                            pb_1.Message.addToRepeatedWrapperField(\n                                message,\n                                1,\n                                dependency_1.common.ProtoHash.deserialize(reader),\n                                dependency_1.common.ProtoHash,\n                            ),\n                        );\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoManifest {\n            return ProtoManifest.deserialize(bytes);\n        }\n    }\n    export class ProtoAccessList extends pb_1.Message {\n        #one_of_decls: number[][] = [];\n        constructor(\n            data?:\n                | any[]\n                | {\n                      access_tuples?: ProtoAccessTuple[];\n                  },\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('access_tuples' in data && data.access_tuples != undefined) {\n                    this.access_tuples = data.access_tuples;\n                }\n            }\n        }\n        get access_tuples() {\n            return pb_1.Message.getRepeatedWrapperField(this, ProtoAccessTuple, 1) as ProtoAccessTuple[];\n        }\n        set access_tuples(value: ProtoAccessTuple[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        static fromObject(data: {\n            access_tuples?: ReturnType<typeof ProtoAccessTuple.prototype.toObject>[];\n        }): ProtoAccessList {\n            const message = new ProtoAccessList({});\n            if (data.access_tuples != null) {\n                message.access_tuples = data.access_tuples.map((item) => ProtoAccessTuple.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                access_tuples?: ReturnType<typeof ProtoAccessTuple.prototype.toObject>[];\n            } = {};\n            if (this.access_tuples != null) {\n                data.access_tuples = this.access_tuples.map((item: ProtoAccessTuple) => item.toObject());\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.access_tuples.length)\n                writer.writeRepeatedMessage(1, this.access_tuples, (item: ProtoAccessTuple) => item.serialize(writer));\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoAccessList {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoAccessList();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.access_tuples, () =>\n                            pb_1.Message.addToRepeatedWrapperField(\n                                message,\n                                1,\n                                ProtoAccessTuple.deserialize(reader),\n                                ProtoAccessTuple,\n                            ),\n                        );\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoAccessList {\n            return ProtoAccessList.deserialize(bytes);\n        }\n    }\n    export class ProtoWorkObjectHeader extends pb_1.Message {\n        #one_of_decls: number[][] = [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12]];\n        constructor(\n            data?:\n                | any[]\n                | ({} & (\n                      | {\n                            header_hash?: dependency_1.common.ProtoHash;\n                        }\n                      | {\n                            parent_hash?: dependency_1.common.ProtoHash;\n                        }\n                      | {\n                            number?: Uint8Array;\n                        }\n                      | {\n                            difficulty?: Uint8Array;\n                        }\n                      | {\n                            tx_hash?: dependency_1.common.ProtoHash;\n                        }\n                      | {\n                            nonce?: number;\n                        }\n                      | {\n                            location?: dependency_1.common.ProtoLocation;\n                        }\n                      | {\n                            mix_hash?: dependency_1.common.ProtoHash;\n                        }\n                      | {\n                            time?: number;\n                        }\n                      | {\n                            prime_terminus_number?: Uint8Array;\n                        }\n                      | {\n                            lock?: number;\n                        }\n                      | {\n                            primary_coinbase?: dependency_1.common.ProtoAddress;\n                        }\n                  )),\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('header_hash' in data && data.header_hash != undefined) {\n                    this.header_hash = data.header_hash;\n                }\n                if ('parent_hash' in data && data.parent_hash != undefined) {\n                    this.parent_hash = data.parent_hash;\n                }\n                if ('number' in data && data.number != undefined) {\n                    this.number = data.number;\n                }\n                if ('difficulty' in data && data.difficulty != undefined) {\n                    this.difficulty = data.difficulty;\n                }\n                if ('tx_hash' in data && data.tx_hash != undefined) {\n                    this.tx_hash = data.tx_hash;\n                }\n                if ('nonce' in data && data.nonce != undefined) {\n                    this.nonce = data.nonce;\n                }\n                if ('location' in data && data.location != undefined) {\n                    this.location = data.location;\n                }\n                if ('mix_hash' in data && data.mix_hash != undefined) {\n                    this.mix_hash = data.mix_hash;\n                }\n                if ('time' in data && data.time != undefined) {\n                    this.time = data.time;\n                }\n                if ('prime_terminus_number' in data && data.prime_terminus_number != undefined) {\n                    this.prime_terminus_number = data.prime_terminus_number;\n                }\n                if ('lock' in data && data.lock != undefined) {\n                    this.lock = data.lock;\n                }\n                if ('primary_coinbase' in data && data.primary_coinbase != undefined) {\n                    this.primary_coinbase = data.primary_coinbase;\n                }\n            }\n        }\n        get header_hash() {\n            return pb_1.Message.getWrapperField(\n                this,\n                dependency_1.common.ProtoHash,\n                1,\n            ) as dependency_1.common.ProtoHash;\n        }\n        set header_hash(value: dependency_1.common.ProtoHash) {\n            pb_1.Message.setOneofWrapperField(this, 1, this.#one_of_decls[0], value);\n        }\n        get has_header_hash() {\n            return pb_1.Message.getField(this, 1) != null;\n        }\n        get parent_hash() {\n            return pb_1.Message.getWrapperField(\n                this,\n                dependency_1.common.ProtoHash,\n                2,\n            ) as dependency_1.common.ProtoHash;\n        }\n        set parent_hash(value: dependency_1.common.ProtoHash) {\n            pb_1.Message.setOneofWrapperField(this, 2, this.#one_of_decls[1], value);\n        }\n        get has_parent_hash() {\n            return pb_1.Message.getField(this, 2) != null;\n        }\n        get number() {\n            return pb_1.Message.getFieldWithDefault(this, 3, new Uint8Array(0)) as Uint8Array;\n        }\n        set number(value: Uint8Array) {\n            pb_1.Message.setOneofField(this, 3, this.#one_of_decls[2], value);\n        }\n        get has_number() {\n            return pb_1.Message.getField(this, 3) != null;\n        }\n        get difficulty() {\n            return pb_1.Message.getFieldWithDefault(this, 4, new Uint8Array(0)) as Uint8Array;\n        }\n        set difficulty(value: Uint8Array) {\n            pb_1.Message.setOneofField(this, 4, this.#one_of_decls[3], value);\n        }\n        get has_difficulty() {\n            return pb_1.Message.getField(this, 4) != null;\n        }\n        get tx_hash() {\n            return pb_1.Message.getWrapperField(\n                this,\n                dependency_1.common.ProtoHash,\n                5,\n            ) as dependency_1.common.ProtoHash;\n        }\n        set tx_hash(value: dependency_1.common.ProtoHash) {\n            pb_1.Message.setOneofWrapperField(this, 5, this.#one_of_decls[4], value);\n        }\n        get has_tx_hash() {\n            return pb_1.Message.getField(this, 5) != null;\n        }\n        get nonce() {\n            return pb_1.Message.getFieldWithDefault(this, 6, 0) as number;\n        }\n        set nonce(value: number) {\n            pb_1.Message.setOneofField(this, 6, this.#one_of_decls[5], value);\n        }\n        get has_nonce() {\n            return pb_1.Message.getField(this, 6) != null;\n        }\n        get location() {\n            return pb_1.Message.getWrapperField(\n                this,\n                dependency_1.common.ProtoLocation,\n                7,\n            ) as dependency_1.common.ProtoLocation;\n        }\n        set location(value: dependency_1.common.ProtoLocation) {\n            pb_1.Message.setOneofWrapperField(this, 7, this.#one_of_decls[6], value);\n        }\n        get has_location() {\n            return pb_1.Message.getField(this, 7) != null;\n        }\n        get mix_hash() {\n            return pb_1.Message.getWrapperField(\n                this,\n                dependency_1.common.ProtoHash,\n                8,\n            ) as dependency_1.common.ProtoHash;\n        }\n        set mix_hash(value: dependency_1.common.ProtoHash) {\n            pb_1.Message.setOneofWrapperField(this, 8, this.#one_of_decls[7], value);\n        }\n        get has_mix_hash() {\n            return pb_1.Message.getField(this, 8) != null;\n        }\n        get time() {\n            return pb_1.Message.getFieldWithDefault(this, 9, 0) as number;\n        }\n        set time(value: number) {\n            pb_1.Message.setOneofField(this, 9, this.#one_of_decls[8], value);\n        }\n        get has_time() {\n            return pb_1.Message.getField(this, 9) != null;\n        }\n        get prime_terminus_number() {\n            return pb_1.Message.getFieldWithDefault(this, 10, new Uint8Array(0)) as Uint8Array;\n        }\n        set prime_terminus_number(value: Uint8Array) {\n            pb_1.Message.setOneofField(this, 10, this.#one_of_decls[9], value);\n        }\n        get has_prime_terminus_number() {\n            return pb_1.Message.getField(this, 10) != null;\n        }\n        get lock() {\n            return pb_1.Message.getFieldWithDefault(this, 11, 0) as number;\n        }\n        set lock(value: number) {\n            pb_1.Message.setOneofField(this, 11, this.#one_of_decls[10], value);\n        }\n        get has_lock() {\n            return pb_1.Message.getField(this, 11) != null;\n        }\n        get primary_coinbase() {\n            return pb_1.Message.getWrapperField(\n                this,\n                dependency_1.common.ProtoAddress,\n                12,\n            ) as dependency_1.common.ProtoAddress;\n        }\n        set primary_coinbase(value: dependency_1.common.ProtoAddress) {\n            pb_1.Message.setOneofWrapperField(this, 12, this.#one_of_decls[11], value);\n        }\n        get has_primary_coinbase() {\n            return pb_1.Message.getField(this, 12) != null;\n        }\n        get _header_hash() {\n            const cases: {\n                [index: number]: 'none' | 'header_hash';\n            } = {\n                0: 'none',\n                1: 'header_hash',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [1])];\n        }\n        get _parent_hash() {\n            const cases: {\n                [index: number]: 'none' | 'parent_hash';\n            } = {\n                0: 'none',\n                2: 'parent_hash',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [2])];\n        }\n        get _number() {\n            const cases: {\n                [index: number]: 'none' | 'number';\n            } = {\n                0: 'none',\n                3: 'number',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [3])];\n        }\n        get _difficulty() {\n            const cases: {\n                [index: number]: 'none' | 'difficulty';\n            } = {\n                0: 'none',\n                4: 'difficulty',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [4])];\n        }\n        get _tx_hash() {\n            const cases: {\n                [index: number]: 'none' | 'tx_hash';\n            } = {\n                0: 'none',\n                5: 'tx_hash',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [5])];\n        }\n        get _nonce() {\n            const cases: {\n                [index: number]: 'none' | 'nonce';\n            } = {\n                0: 'none',\n                6: 'nonce',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [6])];\n        }\n        get _location() {\n            const cases: {\n                [index: number]: 'none' | 'location';\n            } = {\n                0: 'none',\n                7: 'location',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [7])];\n        }\n        get _mix_hash() {\n            const cases: {\n                [index: number]: 'none' | 'mix_hash';\n            } = {\n                0: 'none',\n                8: 'mix_hash',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [8])];\n        }\n        get _time() {\n            const cases: {\n                [index: number]: 'none' | 'time';\n            } = {\n                0: 'none',\n                9: 'time',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [9])];\n        }\n        get _prime_terminus_number() {\n            const cases: {\n                [index: number]: 'none' | 'prime_terminus_number';\n            } = {\n                0: 'none',\n                10: 'prime_terminus_number',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [10])];\n        }\n        get _lock() {\n            const cases: {\n                [index: number]: 'none' | 'lock';\n            } = {\n                0: 'none',\n                11: 'lock',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [11])];\n        }\n        get _primary_coinbase() {\n            const cases: {\n                [index: number]: 'none' | 'primary_coinbase';\n            } = {\n                0: 'none',\n                12: 'primary_coinbase',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [12])];\n        }\n        static fromObject(data: {\n            header_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n            parent_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n            number?: Uint8Array;\n            difficulty?: Uint8Array;\n            tx_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n            nonce?: number;\n            location?: ReturnType<typeof dependency_1.common.ProtoLocation.prototype.toObject>;\n            mix_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n            time?: number;\n            prime_terminus_number?: Uint8Array;\n            lock?: number;\n            primary_coinbase?: ReturnType<typeof dependency_1.common.ProtoAddress.prototype.toObject>;\n        }): ProtoWorkObjectHeader {\n            const message = new ProtoWorkObjectHeader({});\n            if (data.header_hash != null) {\n                message.header_hash = dependency_1.common.ProtoHash.fromObject(data.header_hash);\n            }\n            if (data.parent_hash != null) {\n                message.parent_hash = dependency_1.common.ProtoHash.fromObject(data.parent_hash);\n            }\n            if (data.number != null) {\n                message.number = data.number;\n            }\n            if (data.difficulty != null) {\n                message.difficulty = data.difficulty;\n            }\n            if (data.tx_hash != null) {\n                message.tx_hash = dependency_1.common.ProtoHash.fromObject(data.tx_hash);\n            }\n            if (data.nonce != null) {\n                message.nonce = data.nonce;\n            }\n            if (data.location != null) {\n                message.location = dependency_1.common.ProtoLocation.fromObject(data.location);\n            }\n            if (data.mix_hash != null) {\n                message.mix_hash = dependency_1.common.ProtoHash.fromObject(data.mix_hash);\n            }\n            if (data.time != null) {\n                message.time = data.time;\n            }\n            if (data.prime_terminus_number != null) {\n                message.prime_terminus_number = data.prime_terminus_number;\n            }\n            if (data.lock != null) {\n                message.lock = data.lock;\n            }\n            if (data.primary_coinbase != null) {\n                message.primary_coinbase = dependency_1.common.ProtoAddress.fromObject(data.primary_coinbase);\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                header_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n                parent_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n                number?: Uint8Array;\n                difficulty?: Uint8Array;\n                tx_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n                nonce?: number;\n                location?: ReturnType<typeof dependency_1.common.ProtoLocation.prototype.toObject>;\n                mix_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n                time?: number;\n                prime_terminus_number?: Uint8Array;\n                lock?: number;\n                primary_coinbase?: ReturnType<typeof dependency_1.common.ProtoAddress.prototype.toObject>;\n            } = {};\n            if (this.header_hash != null) {\n                data.header_hash = this.header_hash.toObject();\n            }\n            if (this.parent_hash != null) {\n                data.parent_hash = this.parent_hash.toObject();\n            }\n            if (this.number != null) {\n                data.number = this.number;\n            }\n            if (this.difficulty != null) {\n                data.difficulty = this.difficulty;\n            }\n            if (this.tx_hash != null) {\n                data.tx_hash = this.tx_hash.toObject();\n            }\n            if (this.nonce != null) {\n                data.nonce = this.nonce;\n            }\n            if (this.location != null) {\n                data.location = this.location.toObject();\n            }\n            if (this.mix_hash != null) {\n                data.mix_hash = this.mix_hash.toObject();\n            }\n            if (this.time != null) {\n                data.time = this.time;\n            }\n            if (this.prime_terminus_number != null) {\n                data.prime_terminus_number = this.prime_terminus_number;\n            }\n            if (this.lock != null) {\n                data.lock = this.lock;\n            }\n            if (this.primary_coinbase != null) {\n                data.primary_coinbase = this.primary_coinbase.toObject();\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.has_header_hash)\n                writer.writeMessage(1, this.header_hash, () => this.header_hash.serialize(writer));\n            if (this.has_parent_hash)\n                writer.writeMessage(2, this.parent_hash, () => this.parent_hash.serialize(writer));\n            if (this.has_number) writer.writeBytes(3, this.number);\n            if (this.has_difficulty) writer.writeBytes(4, this.difficulty);\n            if (this.has_tx_hash) writer.writeMessage(5, this.tx_hash, () => this.tx_hash.serialize(writer));\n            if (this.has_nonce) writer.writeUint64(6, this.nonce);\n            if (this.has_location) writer.writeMessage(7, this.location, () => this.location.serialize(writer));\n            if (this.has_mix_hash) writer.writeMessage(8, this.mix_hash, () => this.mix_hash.serialize(writer));\n            if (this.has_time) writer.writeUint64(9, this.time);\n            if (this.has_prime_terminus_number) writer.writeBytes(10, this.prime_terminus_number);\n            if (this.has_lock) writer.writeUint32(11, this.lock);\n            if (this.has_primary_coinbase)\n                writer.writeMessage(12, this.primary_coinbase, () => this.primary_coinbase.serialize(writer));\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoWorkObjectHeader {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoWorkObjectHeader();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(\n                            message.header_hash,\n                            () => (message.header_hash = dependency_1.common.ProtoHash.deserialize(reader)),\n                        );\n                        break;\n                    case 2:\n                        reader.readMessage(\n                            message.parent_hash,\n                            () => (message.parent_hash = dependency_1.common.ProtoHash.deserialize(reader)),\n                        );\n                        break;\n                    case 3:\n                        message.number = reader.readBytes();\n                        break;\n                    case 4:\n                        message.difficulty = reader.readBytes();\n                        break;\n                    case 5:\n                        reader.readMessage(\n                            message.tx_hash,\n                            () => (message.tx_hash = dependency_1.common.ProtoHash.deserialize(reader)),\n                        );\n                        break;\n                    case 6:\n                        message.nonce = reader.readUint64();\n                        break;\n                    case 7:\n                        reader.readMessage(\n                            message.location,\n                            () => (message.location = dependency_1.common.ProtoLocation.deserialize(reader)),\n                        );\n                        break;\n                    case 8:\n                        reader.readMessage(\n                            message.mix_hash,\n                            () => (message.mix_hash = dependency_1.common.ProtoHash.deserialize(reader)),\n                        );\n                        break;\n                    case 9:\n                        message.time = reader.readUint64();\n                        break;\n                    case 10:\n                        message.prime_terminus_number = reader.readBytes();\n                        break;\n                    case 11:\n                        message.lock = reader.readUint32();\n                        break;\n                    case 12:\n                        reader.readMessage(\n                            message.primary_coinbase,\n                            () => (message.primary_coinbase = dependency_1.common.ProtoAddress.deserialize(reader)),\n                        );\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoWorkObjectHeader {\n            return ProtoWorkObjectHeader.deserialize(bytes);\n        }\n    }\n    export class ProtoWorkObjectHeaders extends pb_1.Message {\n        #one_of_decls: number[][] = [];\n        constructor(\n            data?:\n                | any[]\n                | {\n                      wo_headers?: ProtoWorkObjectHeader[];\n                  },\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('wo_headers' in data && data.wo_headers != undefined) {\n                    this.wo_headers = data.wo_headers;\n                }\n            }\n        }\n        get wo_headers() {\n            return pb_1.Message.getRepeatedWrapperField(this, ProtoWorkObjectHeader, 1) as ProtoWorkObjectHeader[];\n        }\n        set wo_headers(value: ProtoWorkObjectHeader[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        static fromObject(data: {\n            wo_headers?: ReturnType<typeof ProtoWorkObjectHeader.prototype.toObject>[];\n        }): ProtoWorkObjectHeaders {\n            const message = new ProtoWorkObjectHeaders({});\n            if (data.wo_headers != null) {\n                message.wo_headers = data.wo_headers.map((item) => ProtoWorkObjectHeader.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                wo_headers?: ReturnType<typeof ProtoWorkObjectHeader.prototype.toObject>[];\n            } = {};\n            if (this.wo_headers != null) {\n                data.wo_headers = this.wo_headers.map((item: ProtoWorkObjectHeader) => item.toObject());\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.wo_headers.length)\n                writer.writeRepeatedMessage(1, this.wo_headers, (item: ProtoWorkObjectHeader) =>\n                    item.serialize(writer),\n                );\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoWorkObjectHeaders {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoWorkObjectHeaders();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.wo_headers, () =>\n                            pb_1.Message.addToRepeatedWrapperField(\n                                message,\n                                1,\n                                ProtoWorkObjectHeader.deserialize(reader),\n                                ProtoWorkObjectHeader,\n                            ),\n                        );\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoWorkObjectHeaders {\n            return ProtoWorkObjectHeaders.deserialize(bytes);\n        }\n    }\n    export class ProtoWorkObjectBody extends pb_1.Message {\n        #one_of_decls: number[][] = [[1], [2], [3], [4], [5], [6]];\n        constructor(\n            data?:\n                | any[]\n                | ({} & (\n                      | {\n                            header?: ProtoHeader;\n                        }\n                      | {\n                            transactions?: ProtoTransactions;\n                        }\n                      | {\n                            uncles?: ProtoWorkObjectHeaders;\n                        }\n                      | {\n                            outbound_etxs?: ProtoTransactions;\n                        }\n                      | {\n                            manifest?: ProtoManifest;\n                        }\n                      | {\n                            interlink_hashes?: dependency_1.common.ProtoHashes;\n                        }\n                  )),\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('header' in data && data.header != undefined) {\n                    this.header = data.header;\n                }\n                if ('transactions' in data && data.transactions != undefined) {\n                    this.transactions = data.transactions;\n                }\n                if ('uncles' in data && data.uncles != undefined) {\n                    this.uncles = data.uncles;\n                }\n                if ('outbound_etxs' in data && data.outbound_etxs != undefined) {\n                    this.outbound_etxs = data.outbound_etxs;\n                }\n                if ('manifest' in data && data.manifest != undefined) {\n                    this.manifest = data.manifest;\n                }\n                if ('interlink_hashes' in data && data.interlink_hashes != undefined) {\n                    this.interlink_hashes = data.interlink_hashes;\n                }\n            }\n        }\n        get header() {\n            return pb_1.Message.getWrapperField(this, ProtoHeader, 1) as ProtoHeader;\n        }\n        set header(value: ProtoHeader) {\n            pb_1.Message.setOneofWrapperField(this, 1, this.#one_of_decls[0], value);\n        }\n        get has_header() {\n            return pb_1.Message.getField(this, 1) != null;\n        }\n        get transactions() {\n            return pb_1.Message.getWrapperField(this, ProtoTransactions, 2) as ProtoTransactions;\n        }\n        set transactions(value: ProtoTransactions) {\n            pb_1.Message.setOneofWrapperField(this, 2, this.#one_of_decls[1], value);\n        }\n        get has_transactions() {\n            return pb_1.Message.getField(this, 2) != null;\n        }\n        get uncles() {\n            return pb_1.Message.getWrapperField(this, ProtoWorkObjectHeaders, 3) as ProtoWorkObjectHeaders;\n        }\n        set uncles(value: ProtoWorkObjectHeaders) {\n            pb_1.Message.setOneofWrapperField(this, 3, this.#one_of_decls[2], value);\n        }\n        get has_uncles() {\n            return pb_1.Message.getField(this, 3) != null;\n        }\n        get outbound_etxs() {\n            return pb_1.Message.getWrapperField(this, ProtoTransactions, 4) as ProtoTransactions;\n        }\n        set outbound_etxs(value: ProtoTransactions) {\n            pb_1.Message.setOneofWrapperField(this, 4, this.#one_of_decls[3], value);\n        }\n        get has_outbound_etxs() {\n            return pb_1.Message.getField(this, 4) != null;\n        }\n        get manifest() {\n            return pb_1.Message.getWrapperField(this, ProtoManifest, 5) as ProtoManifest;\n        }\n        set manifest(value: ProtoManifest) {\n            pb_1.Message.setOneofWrapperField(this, 5, this.#one_of_decls[4], value);\n        }\n        get has_manifest() {\n            return pb_1.Message.getField(this, 5) != null;\n        }\n        get interlink_hashes() {\n            return pb_1.Message.getWrapperField(\n                this,\n                dependency_1.common.ProtoHashes,\n                6,\n            ) as dependency_1.common.ProtoHashes;\n        }\n        set interlink_hashes(value: dependency_1.common.ProtoHashes) {\n            pb_1.Message.setOneofWrapperField(this, 6, this.#one_of_decls[5], value);\n        }\n        get has_interlink_hashes() {\n            return pb_1.Message.getField(this, 6) != null;\n        }\n        get _header() {\n            const cases: {\n                [index: number]: 'none' | 'header';\n            } = {\n                0: 'none',\n                1: 'header',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [1])];\n        }\n        get _transactions() {\n            const cases: {\n                [index: number]: 'none' | 'transactions';\n            } = {\n                0: 'none',\n                2: 'transactions',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [2])];\n        }\n        get _uncles() {\n            const cases: {\n                [index: number]: 'none' | 'uncles';\n            } = {\n                0: 'none',\n                3: 'uncles',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [3])];\n        }\n        get _outbound_etxs() {\n            const cases: {\n                [index: number]: 'none' | 'outbound_etxs';\n            } = {\n                0: 'none',\n                4: 'outbound_etxs',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [4])];\n        }\n        get _manifest() {\n            const cases: {\n                [index: number]: 'none' | 'manifest';\n            } = {\n                0: 'none',\n                5: 'manifest',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [5])];\n        }\n        get _interlink_hashes() {\n            const cases: {\n                [index: number]: 'none' | 'interlink_hashes';\n            } = {\n                0: 'none',\n                6: 'interlink_hashes',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [6])];\n        }\n        static fromObject(data: {\n            header?: ReturnType<typeof ProtoHeader.prototype.toObject>;\n            transactions?: ReturnType<typeof ProtoTransactions.prototype.toObject>;\n            uncles?: ReturnType<typeof ProtoWorkObjectHeaders.prototype.toObject>;\n            outbound_etxs?: ReturnType<typeof ProtoTransactions.prototype.toObject>;\n            manifest?: ReturnType<typeof ProtoManifest.prototype.toObject>;\n            interlink_hashes?: ReturnType<typeof dependency_1.common.ProtoHashes.prototype.toObject>;\n        }): ProtoWorkObjectBody {\n            const message = new ProtoWorkObjectBody({});\n            if (data.header != null) {\n                message.header = ProtoHeader.fromObject(data.header);\n            }\n            if (data.transactions != null) {\n                message.transactions = ProtoTransactions.fromObject(data.transactions);\n            }\n            if (data.uncles != null) {\n                message.uncles = ProtoWorkObjectHeaders.fromObject(data.uncles);\n            }\n            if (data.outbound_etxs != null) {\n                message.outbound_etxs = ProtoTransactions.fromObject(data.outbound_etxs);\n            }\n            if (data.manifest != null) {\n                message.manifest = ProtoManifest.fromObject(data.manifest);\n            }\n            if (data.interlink_hashes != null) {\n                message.interlink_hashes = dependency_1.common.ProtoHashes.fromObject(data.interlink_hashes);\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                header?: ReturnType<typeof ProtoHeader.prototype.toObject>;\n                transactions?: ReturnType<typeof ProtoTransactions.prototype.toObject>;\n                uncles?: ReturnType<typeof ProtoWorkObjectHeaders.prototype.toObject>;\n                outbound_etxs?: ReturnType<typeof ProtoTransactions.prototype.toObject>;\n                manifest?: ReturnType<typeof ProtoManifest.prototype.toObject>;\n                interlink_hashes?: ReturnType<typeof dependency_1.common.ProtoHashes.prototype.toObject>;\n            } = {};\n            if (this.header != null) {\n                data.header = this.header.toObject();\n            }\n            if (this.transactions != null) {\n                data.transactions = this.transactions.toObject();\n            }\n            if (this.uncles != null) {\n                data.uncles = this.uncles.toObject();\n            }\n            if (this.outbound_etxs != null) {\n                data.outbound_etxs = this.outbound_etxs.toObject();\n            }\n            if (this.manifest != null) {\n                data.manifest = this.manifest.toObject();\n            }\n            if (this.interlink_hashes != null) {\n                data.interlink_hashes = this.interlink_hashes.toObject();\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.has_header) writer.writeMessage(1, this.header, () => this.header.serialize(writer));\n            if (this.has_transactions)\n                writer.writeMessage(2, this.transactions, () => this.transactions.serialize(writer));\n            if (this.has_uncles) writer.writeMessage(3, this.uncles, () => this.uncles.serialize(writer));\n            if (this.has_outbound_etxs)\n                writer.writeMessage(4, this.outbound_etxs, () => this.outbound_etxs.serialize(writer));\n            if (this.has_manifest) writer.writeMessage(5, this.manifest, () => this.manifest.serialize(writer));\n            if (this.has_interlink_hashes)\n                writer.writeMessage(6, this.interlink_hashes, () => this.interlink_hashes.serialize(writer));\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoWorkObjectBody {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoWorkObjectBody();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.header, () => (message.header = ProtoHeader.deserialize(reader)));\n                        break;\n                    case 2:\n                        reader.readMessage(\n                            message.transactions,\n                            () => (message.transactions = ProtoTransactions.deserialize(reader)),\n                        );\n                        break;\n                    case 3:\n                        reader.readMessage(\n                            message.uncles,\n                            () => (message.uncles = ProtoWorkObjectHeaders.deserialize(reader)),\n                        );\n                        break;\n                    case 4:\n                        reader.readMessage(\n                            message.outbound_etxs,\n                            () => (message.outbound_etxs = ProtoTransactions.deserialize(reader)),\n                        );\n                        break;\n                    case 5:\n                        reader.readMessage(\n                            message.manifest,\n                            () => (message.manifest = ProtoManifest.deserialize(reader)),\n                        );\n                        break;\n                    case 6:\n                        reader.readMessage(\n                            message.interlink_hashes,\n                            () => (message.interlink_hashes = dependency_1.common.ProtoHashes.deserialize(reader)),\n                        );\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoWorkObjectBody {\n            return ProtoWorkObjectBody.deserialize(bytes);\n        }\n    }\n    export class ProtoWorkObject extends pb_1.Message {\n        #one_of_decls: number[][] = [[1], [2], [3]];\n        constructor(\n            data?:\n                | any[]\n                | ({} & (\n                      | {\n                            wo_header?: ProtoWorkObjectHeader;\n                        }\n                      | {\n                            wo_body?: ProtoWorkObjectBody;\n                        }\n                      | {\n                            tx?: ProtoTransaction;\n                        }\n                  )),\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('wo_header' in data && data.wo_header != undefined) {\n                    this.wo_header = data.wo_header;\n                }\n                if ('wo_body' in data && data.wo_body != undefined) {\n                    this.wo_body = data.wo_body;\n                }\n                if ('tx' in data && data.tx != undefined) {\n                    this.tx = data.tx;\n                }\n            }\n        }\n        get wo_header() {\n            return pb_1.Message.getWrapperField(this, ProtoWorkObjectHeader, 1) as ProtoWorkObjectHeader;\n        }\n        set wo_header(value: ProtoWorkObjectHeader) {\n            pb_1.Message.setOneofWrapperField(this, 1, this.#one_of_decls[0], value);\n        }\n        get has_wo_header() {\n            return pb_1.Message.getField(this, 1) != null;\n        }\n        get wo_body() {\n            return pb_1.Message.getWrapperField(this, ProtoWorkObjectBody, 2) as ProtoWorkObjectBody;\n        }\n        set wo_body(value: ProtoWorkObjectBody) {\n            pb_1.Message.setOneofWrapperField(this, 2, this.#one_of_decls[1], value);\n        }\n        get has_wo_body() {\n            return pb_1.Message.getField(this, 2) != null;\n        }\n        get tx() {\n            return pb_1.Message.getWrapperField(this, ProtoTransaction, 3) as ProtoTransaction;\n        }\n        set tx(value: ProtoTransaction) {\n            pb_1.Message.setOneofWrapperField(this, 3, this.#one_of_decls[2], value);\n        }\n        get has_tx() {\n            return pb_1.Message.getField(this, 3) != null;\n        }\n        get _wo_header() {\n            const cases: {\n                [index: number]: 'none' | 'wo_header';\n            } = {\n                0: 'none',\n                1: 'wo_header',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [1])];\n        }\n        get _wo_body() {\n            const cases: {\n                [index: number]: 'none' | 'wo_body';\n            } = {\n                0: 'none',\n                2: 'wo_body',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [2])];\n        }\n        get _tx() {\n            const cases: {\n                [index: number]: 'none' | 'tx';\n            } = {\n                0: 'none',\n                3: 'tx',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [3])];\n        }\n        static fromObject(data: {\n            wo_header?: ReturnType<typeof ProtoWorkObjectHeader.prototype.toObject>;\n            wo_body?: ReturnType<typeof ProtoWorkObjectBody.prototype.toObject>;\n            tx?: ReturnType<typeof ProtoTransaction.prototype.toObject>;\n        }): ProtoWorkObject {\n            const message = new ProtoWorkObject({});\n            if (data.wo_header != null) {\n                message.wo_header = ProtoWorkObjectHeader.fromObject(data.wo_header);\n            }\n            if (data.wo_body != null) {\n                message.wo_body = ProtoWorkObjectBody.fromObject(data.wo_body);\n            }\n            if (data.tx != null) {\n                message.tx = ProtoTransaction.fromObject(data.tx);\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                wo_header?: ReturnType<typeof ProtoWorkObjectHeader.prototype.toObject>;\n                wo_body?: ReturnType<typeof ProtoWorkObjectBody.prototype.toObject>;\n                tx?: ReturnType<typeof ProtoTransaction.prototype.toObject>;\n            } = {};\n            if (this.wo_header != null) {\n                data.wo_header = this.wo_header.toObject();\n            }\n            if (this.wo_body != null) {\n                data.wo_body = this.wo_body.toObject();\n            }\n            if (this.tx != null) {\n                data.tx = this.tx.toObject();\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.has_wo_header) writer.writeMessage(1, this.wo_header, () => this.wo_header.serialize(writer));\n            if (this.has_wo_body) writer.writeMessage(2, this.wo_body, () => this.wo_body.serialize(writer));\n            if (this.has_tx) writer.writeMessage(3, this.tx, () => this.tx.serialize(writer));\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoWorkObject {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoWorkObject();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(\n                            message.wo_header,\n                            () => (message.wo_header = ProtoWorkObjectHeader.deserialize(reader)),\n                        );\n                        break;\n                    case 2:\n                        reader.readMessage(\n                            message.wo_body,\n                            () => (message.wo_body = ProtoWorkObjectBody.deserialize(reader)),\n                        );\n                        break;\n                    case 3:\n                        reader.readMessage(message.tx, () => (message.tx = ProtoTransaction.deserialize(reader)));\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoWorkObject {\n            return ProtoWorkObject.deserialize(bytes);\n        }\n    }\n    export class ProtoWorkObjects extends pb_1.Message {\n        #one_of_decls: number[][] = [];\n        constructor(\n            data?:\n                | any[]\n                | {\n                      work_objects?: ProtoWorkObject[];\n                  },\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('work_objects' in data && data.work_objects != undefined) {\n                    this.work_objects = data.work_objects;\n                }\n            }\n        }\n        get work_objects() {\n            return pb_1.Message.getRepeatedWrapperField(this, ProtoWorkObject, 1) as ProtoWorkObject[];\n        }\n        set work_objects(value: ProtoWorkObject[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        static fromObject(data: {\n            work_objects?: ReturnType<typeof ProtoWorkObject.prototype.toObject>[];\n        }): ProtoWorkObjects {\n            const message = new ProtoWorkObjects({});\n            if (data.work_objects != null) {\n                message.work_objects = data.work_objects.map((item) => ProtoWorkObject.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                work_objects?: ReturnType<typeof ProtoWorkObject.prototype.toObject>[];\n            } = {};\n            if (this.work_objects != null) {\n                data.work_objects = this.work_objects.map((item: ProtoWorkObject) => item.toObject());\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.work_objects.length)\n                writer.writeRepeatedMessage(1, this.work_objects, (item: ProtoWorkObject) => item.serialize(writer));\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoWorkObjects {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoWorkObjects();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.work_objects, () =>\n                            pb_1.Message.addToRepeatedWrapperField(\n                                message,\n                                1,\n                                ProtoWorkObject.deserialize(reader),\n                                ProtoWorkObject,\n                            ),\n                        );\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoWorkObjects {\n            return ProtoWorkObjects.deserialize(bytes);\n        }\n    }\n    export class ProtoWorkObjectBlockView extends pb_1.Message {\n        #one_of_decls: number[][] = [[1]];\n        constructor(\n            data?:\n                | any[]\n                | ({} & {\n                      work_object?: ProtoWorkObject;\n                  }),\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('work_object' in data && data.work_object != undefined) {\n                    this.work_object = data.work_object;\n                }\n            }\n        }\n        get work_object() {\n            return pb_1.Message.getWrapperField(this, ProtoWorkObject, 1) as ProtoWorkObject;\n        }\n        set work_object(value: ProtoWorkObject) {\n            pb_1.Message.setOneofWrapperField(this, 1, this.#one_of_decls[0], value);\n        }\n        get has_work_object() {\n            return pb_1.Message.getField(this, 1) != null;\n        }\n        get _work_object() {\n            const cases: {\n                [index: number]: 'none' | 'work_object';\n            } = {\n                0: 'none',\n                1: 'work_object',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [1])];\n        }\n        static fromObject(data: {\n            work_object?: ReturnType<typeof ProtoWorkObject.prototype.toObject>;\n        }): ProtoWorkObjectBlockView {\n            const message = new ProtoWorkObjectBlockView({});\n            if (data.work_object != null) {\n                message.work_object = ProtoWorkObject.fromObject(data.work_object);\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                work_object?: ReturnType<typeof ProtoWorkObject.prototype.toObject>;\n            } = {};\n            if (this.work_object != null) {\n                data.work_object = this.work_object.toObject();\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.has_work_object)\n                writer.writeMessage(1, this.work_object, () => this.work_object.serialize(writer));\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoWorkObjectBlockView {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoWorkObjectBlockView();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(\n                            message.work_object,\n                            () => (message.work_object = ProtoWorkObject.deserialize(reader)),\n                        );\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoWorkObjectBlockView {\n            return ProtoWorkObjectBlockView.deserialize(bytes);\n        }\n    }\n    export class ProtoWorkObjectBlocksView extends pb_1.Message {\n        #one_of_decls: number[][] = [];\n        constructor(\n            data?:\n                | any[]\n                | {\n                      work_objects?: ProtoWorkObjectBlockView[];\n                  },\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('work_objects' in data && data.work_objects != undefined) {\n                    this.work_objects = data.work_objects;\n                }\n            }\n        }\n        get work_objects() {\n            return pb_1.Message.getRepeatedWrapperField(\n                this,\n                ProtoWorkObjectBlockView,\n                1,\n            ) as ProtoWorkObjectBlockView[];\n        }\n        set work_objects(value: ProtoWorkObjectBlockView[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        static fromObject(data: {\n            work_objects?: ReturnType<typeof ProtoWorkObjectBlockView.prototype.toObject>[];\n        }): ProtoWorkObjectBlocksView {\n            const message = new ProtoWorkObjectBlocksView({});\n            if (data.work_objects != null) {\n                message.work_objects = data.work_objects.map((item) => ProtoWorkObjectBlockView.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                work_objects?: ReturnType<typeof ProtoWorkObjectBlockView.prototype.toObject>[];\n            } = {};\n            if (this.work_objects != null) {\n                data.work_objects = this.work_objects.map((item: ProtoWorkObjectBlockView) => item.toObject());\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.work_objects.length)\n                writer.writeRepeatedMessage(1, this.work_objects, (item: ProtoWorkObjectBlockView) =>\n                    item.serialize(writer),\n                );\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoWorkObjectBlocksView {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoWorkObjectBlocksView();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.work_objects, () =>\n                            pb_1.Message.addToRepeatedWrapperField(\n                                message,\n                                1,\n                                ProtoWorkObjectBlockView.deserialize(reader),\n                                ProtoWorkObjectBlockView,\n                            ),\n                        );\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoWorkObjectBlocksView {\n            return ProtoWorkObjectBlocksView.deserialize(bytes);\n        }\n    }\n    export class ProtoWorkObjectHeaderView extends pb_1.Message {\n        #one_of_decls: number[][] = [[1]];\n        constructor(\n            data?:\n                | any[]\n                | ({} & {\n                      work_object?: ProtoWorkObject;\n                  }),\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('work_object' in data && data.work_object != undefined) {\n                    this.work_object = data.work_object;\n                }\n            }\n        }\n        get work_object() {\n            return pb_1.Message.getWrapperField(this, ProtoWorkObject, 1) as ProtoWorkObject;\n        }\n        set work_object(value: ProtoWorkObject) {\n            pb_1.Message.setOneofWrapperField(this, 1, this.#one_of_decls[0], value);\n        }\n        get has_work_object() {\n            return pb_1.Message.getField(this, 1) != null;\n        }\n        get _work_object() {\n            const cases: {\n                [index: number]: 'none' | 'work_object';\n            } = {\n                0: 'none',\n                1: 'work_object',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [1])];\n        }\n        static fromObject(data: {\n            work_object?: ReturnType<typeof ProtoWorkObject.prototype.toObject>;\n        }): ProtoWorkObjectHeaderView {\n            const message = new ProtoWorkObjectHeaderView({});\n            if (data.work_object != null) {\n                message.work_object = ProtoWorkObject.fromObject(data.work_object);\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                work_object?: ReturnType<typeof ProtoWorkObject.prototype.toObject>;\n            } = {};\n            if (this.work_object != null) {\n                data.work_object = this.work_object.toObject();\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.has_work_object)\n                writer.writeMessage(1, this.work_object, () => this.work_object.serialize(writer));\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoWorkObjectHeaderView {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoWorkObjectHeaderView();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(\n                            message.work_object,\n                            () => (message.work_object = ProtoWorkObject.deserialize(reader)),\n                        );\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoWorkObjectHeaderView {\n            return ProtoWorkObjectHeaderView.deserialize(bytes);\n        }\n    }\n    export class ProtoWorkObjectShareView extends pb_1.Message {\n        #one_of_decls: number[][] = [[1]];\n        constructor(\n            data?:\n                | any[]\n                | ({} & {\n                      work_object?: ProtoWorkObject;\n                  }),\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('work_object' in data && data.work_object != undefined) {\n                    this.work_object = data.work_object;\n                }\n            }\n        }\n        get work_object() {\n            return pb_1.Message.getWrapperField(this, ProtoWorkObject, 1) as ProtoWorkObject;\n        }\n        set work_object(value: ProtoWorkObject) {\n            pb_1.Message.setOneofWrapperField(this, 1, this.#one_of_decls[0], value);\n        }\n        get has_work_object() {\n            return pb_1.Message.getField(this, 1) != null;\n        }\n        get _work_object() {\n            const cases: {\n                [index: number]: 'none' | 'work_object';\n            } = {\n                0: 'none',\n                1: 'work_object',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [1])];\n        }\n        static fromObject(data: {\n            work_object?: ReturnType<typeof ProtoWorkObject.prototype.toObject>;\n        }): ProtoWorkObjectShareView {\n            const message = new ProtoWorkObjectShareView({});\n            if (data.work_object != null) {\n                message.work_object = ProtoWorkObject.fromObject(data.work_object);\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                work_object?: ReturnType<typeof ProtoWorkObject.prototype.toObject>;\n            } = {};\n            if (this.work_object != null) {\n                data.work_object = this.work_object.toObject();\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.has_work_object)\n                writer.writeMessage(1, this.work_object, () => this.work_object.serialize(writer));\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoWorkObjectShareView {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoWorkObjectShareView();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(\n                            message.work_object,\n                            () => (message.work_object = ProtoWorkObject.deserialize(reader)),\n                        );\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoWorkObjectShareView {\n            return ProtoWorkObjectShareView.deserialize(bytes);\n        }\n    }\n    export class ProtoAccessTuple extends pb_1.Message {\n        #one_of_decls: number[][] = [];\n        constructor(\n            data?:\n                | any[]\n                | {\n                      address?: Uint8Array;\n                      storage_key?: dependency_1.common.ProtoHash[];\n                  },\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('address' in data && data.address != undefined) {\n                    this.address = data.address;\n                }\n                if ('storage_key' in data && data.storage_key != undefined) {\n                    this.storage_key = data.storage_key;\n                }\n            }\n        }\n        get address() {\n            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0)) as Uint8Array;\n        }\n        set address(value: Uint8Array) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        get storage_key() {\n            return pb_1.Message.getRepeatedWrapperField(\n                this,\n                dependency_1.common.ProtoHash,\n                2,\n            ) as dependency_1.common.ProtoHash[];\n        }\n        set storage_key(value: dependency_1.common.ProtoHash[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 2, value);\n        }\n        static fromObject(data: {\n            address?: Uint8Array;\n            storage_key?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>[];\n        }): ProtoAccessTuple {\n            const message = new ProtoAccessTuple({});\n            if (data.address != null) {\n                message.address = data.address;\n            }\n            if (data.storage_key != null) {\n                message.storage_key = data.storage_key.map((item) => dependency_1.common.ProtoHash.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                address?: Uint8Array;\n                storage_key?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>[];\n            } = {};\n            if (this.address != null) {\n                data.address = this.address;\n            }\n            if (this.storage_key != null) {\n                data.storage_key = this.storage_key.map((item: dependency_1.common.ProtoHash) => item.toObject());\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.address.length) writer.writeBytes(1, this.address);\n            if (this.storage_key.length)\n                writer.writeRepeatedMessage(2, this.storage_key, (item: dependency_1.common.ProtoHash) =>\n                    item.serialize(writer),\n                );\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoAccessTuple {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoAccessTuple();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.address = reader.readBytes();\n                        break;\n                    case 2:\n                        reader.readMessage(message.storage_key, () =>\n                            pb_1.Message.addToRepeatedWrapperField(\n                                message,\n                                2,\n                                dependency_1.common.ProtoHash.deserialize(reader),\n                                dependency_1.common.ProtoHash,\n                            ),\n                        );\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoAccessTuple {\n            return ProtoAccessTuple.deserialize(bytes);\n        }\n    }\n    export class ProtoReceiptForStorage extends pb_1.Message {\n        #one_of_decls: number[][] = [];\n        constructor(\n            data?:\n                | any[]\n                | {\n                      post_state_or_status?: Uint8Array;\n                      cumulative_gas_used?: number;\n                      logs?: ProtoLogsForStorage;\n                      tx_hash?: dependency_1.common.ProtoHash;\n                      contract_address?: dependency_1.common.ProtoAddress;\n                      gas_used?: number;\n                      outbound_etxs?: ProtoTransactions;\n                  },\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('post_state_or_status' in data && data.post_state_or_status != undefined) {\n                    this.post_state_or_status = data.post_state_or_status;\n                }\n                if ('cumulative_gas_used' in data && data.cumulative_gas_used != undefined) {\n                    this.cumulative_gas_used = data.cumulative_gas_used;\n                }\n                if ('logs' in data && data.logs != undefined) {\n                    this.logs = data.logs;\n                }\n                if ('tx_hash' in data && data.tx_hash != undefined) {\n                    this.tx_hash = data.tx_hash;\n                }\n                if ('contract_address' in data && data.contract_address != undefined) {\n                    this.contract_address = data.contract_address;\n                }\n                if ('gas_used' in data && data.gas_used != undefined) {\n                    this.gas_used = data.gas_used;\n                }\n                if ('outbound_etxs' in data && data.outbound_etxs != undefined) {\n                    this.outbound_etxs = data.outbound_etxs;\n                }\n            }\n        }\n        get post_state_or_status() {\n            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0)) as Uint8Array;\n        }\n        set post_state_or_status(value: Uint8Array) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        get cumulative_gas_used() {\n            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;\n        }\n        set cumulative_gas_used(value: number) {\n            pb_1.Message.setField(this, 2, value);\n        }\n        get logs() {\n            return pb_1.Message.getWrapperField(this, ProtoLogsForStorage, 3) as ProtoLogsForStorage;\n        }\n        set logs(value: ProtoLogsForStorage) {\n            pb_1.Message.setWrapperField(this, 3, value);\n        }\n        get has_logs() {\n            return pb_1.Message.getField(this, 3) != null;\n        }\n        get tx_hash() {\n            return pb_1.Message.getWrapperField(\n                this,\n                dependency_1.common.ProtoHash,\n                4,\n            ) as dependency_1.common.ProtoHash;\n        }\n        set tx_hash(value: dependency_1.common.ProtoHash) {\n            pb_1.Message.setWrapperField(this, 4, value);\n        }\n        get has_tx_hash() {\n            return pb_1.Message.getField(this, 4) != null;\n        }\n        get contract_address() {\n            return pb_1.Message.getWrapperField(\n                this,\n                dependency_1.common.ProtoAddress,\n                5,\n            ) as dependency_1.common.ProtoAddress;\n        }\n        set contract_address(value: dependency_1.common.ProtoAddress) {\n            pb_1.Message.setWrapperField(this, 5, value);\n        }\n        get has_contract_address() {\n            return pb_1.Message.getField(this, 5) != null;\n        }\n        get gas_used() {\n            return pb_1.Message.getFieldWithDefault(this, 6, 0) as number;\n        }\n        set gas_used(value: number) {\n            pb_1.Message.setField(this, 6, value);\n        }\n        get outbound_etxs() {\n            return pb_1.Message.getWrapperField(this, ProtoTransactions, 7) as ProtoTransactions;\n        }\n        set outbound_etxs(value: ProtoTransactions) {\n            pb_1.Message.setWrapperField(this, 7, value);\n        }\n        get has_outbound_etxs() {\n            return pb_1.Message.getField(this, 7) != null;\n        }\n        static fromObject(data: {\n            post_state_or_status?: Uint8Array;\n            cumulative_gas_used?: number;\n            logs?: ReturnType<typeof ProtoLogsForStorage.prototype.toObject>;\n            tx_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n            contract_address?: ReturnType<typeof dependency_1.common.ProtoAddress.prototype.toObject>;\n            gas_used?: number;\n            outbound_etxs?: ReturnType<typeof ProtoTransactions.prototype.toObject>;\n        }): ProtoReceiptForStorage {\n            const message = new ProtoReceiptForStorage({});\n            if (data.post_state_or_status != null) {\n                message.post_state_or_status = data.post_state_or_status;\n            }\n            if (data.cumulative_gas_used != null) {\n                message.cumulative_gas_used = data.cumulative_gas_used;\n            }\n            if (data.logs != null) {\n                message.logs = ProtoLogsForStorage.fromObject(data.logs);\n            }\n            if (data.tx_hash != null) {\n                message.tx_hash = dependency_1.common.ProtoHash.fromObject(data.tx_hash);\n            }\n            if (data.contract_address != null) {\n                message.contract_address = dependency_1.common.ProtoAddress.fromObject(data.contract_address);\n            }\n            if (data.gas_used != null) {\n                message.gas_used = data.gas_used;\n            }\n            if (data.outbound_etxs != null) {\n                message.outbound_etxs = ProtoTransactions.fromObject(data.outbound_etxs);\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                post_state_or_status?: Uint8Array;\n                cumulative_gas_used?: number;\n                logs?: ReturnType<typeof ProtoLogsForStorage.prototype.toObject>;\n                tx_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n                contract_address?: ReturnType<typeof dependency_1.common.ProtoAddress.prototype.toObject>;\n                gas_used?: number;\n                outbound_etxs?: ReturnType<typeof ProtoTransactions.prototype.toObject>;\n            } = {};\n            if (this.post_state_or_status != null) {\n                data.post_state_or_status = this.post_state_or_status;\n            }\n            if (this.cumulative_gas_used != null) {\n                data.cumulative_gas_used = this.cumulative_gas_used;\n            }\n            if (this.logs != null) {\n                data.logs = this.logs.toObject();\n            }\n            if (this.tx_hash != null) {\n                data.tx_hash = this.tx_hash.toObject();\n            }\n            if (this.contract_address != null) {\n                data.contract_address = this.contract_address.toObject();\n            }\n            if (this.gas_used != null) {\n                data.gas_used = this.gas_used;\n            }\n            if (this.outbound_etxs != null) {\n                data.outbound_etxs = this.outbound_etxs.toObject();\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.post_state_or_status.length) writer.writeBytes(1, this.post_state_or_status);\n            if (this.cumulative_gas_used != 0) writer.writeUint64(2, this.cumulative_gas_used);\n            if (this.has_logs) writer.writeMessage(3, this.logs, () => this.logs.serialize(writer));\n            if (this.has_tx_hash) writer.writeMessage(4, this.tx_hash, () => this.tx_hash.serialize(writer));\n            if (this.has_contract_address)\n                writer.writeMessage(5, this.contract_address, () => this.contract_address.serialize(writer));\n            if (this.gas_used != 0) writer.writeUint64(6, this.gas_used);\n            if (this.has_outbound_etxs)\n                writer.writeMessage(7, this.outbound_etxs, () => this.outbound_etxs.serialize(writer));\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoReceiptForStorage {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoReceiptForStorage();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.post_state_or_status = reader.readBytes();\n                        break;\n                    case 2:\n                        message.cumulative_gas_used = reader.readUint64();\n                        break;\n                    case 3:\n                        reader.readMessage(\n                            message.logs,\n                            () => (message.logs = ProtoLogsForStorage.deserialize(reader)),\n                        );\n                        break;\n                    case 4:\n                        reader.readMessage(\n                            message.tx_hash,\n                            () => (message.tx_hash = dependency_1.common.ProtoHash.deserialize(reader)),\n                        );\n                        break;\n                    case 5:\n                        reader.readMessage(\n                            message.contract_address,\n                            () => (message.contract_address = dependency_1.common.ProtoAddress.deserialize(reader)),\n                        );\n                        break;\n                    case 6:\n                        message.gas_used = reader.readUint64();\n                        break;\n                    case 7:\n                        reader.readMessage(\n                            message.outbound_etxs,\n                            () => (message.outbound_etxs = ProtoTransactions.deserialize(reader)),\n                        );\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoReceiptForStorage {\n            return ProtoReceiptForStorage.deserialize(bytes);\n        }\n    }\n    export class ProtoReceiptsForStorage extends pb_1.Message {\n        #one_of_decls: number[][] = [];\n        constructor(\n            data?:\n                | any[]\n                | {\n                      receipts?: ProtoReceiptForStorage[];\n                  },\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('receipts' in data && data.receipts != undefined) {\n                    this.receipts = data.receipts;\n                }\n            }\n        }\n        get receipts() {\n            return pb_1.Message.getRepeatedWrapperField(this, ProtoReceiptForStorage, 1) as ProtoReceiptForStorage[];\n        }\n        set receipts(value: ProtoReceiptForStorage[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        static fromObject(data: {\n            receipts?: ReturnType<typeof ProtoReceiptForStorage.prototype.toObject>[];\n        }): ProtoReceiptsForStorage {\n            const message = new ProtoReceiptsForStorage({});\n            if (data.receipts != null) {\n                message.receipts = data.receipts.map((item) => ProtoReceiptForStorage.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                receipts?: ReturnType<typeof ProtoReceiptForStorage.prototype.toObject>[];\n            } = {};\n            if (this.receipts != null) {\n                data.receipts = this.receipts.map((item: ProtoReceiptForStorage) => item.toObject());\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.receipts.length)\n                writer.writeRepeatedMessage(1, this.receipts, (item: ProtoReceiptForStorage) => item.serialize(writer));\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoReceiptsForStorage {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoReceiptsForStorage();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.receipts, () =>\n                            pb_1.Message.addToRepeatedWrapperField(\n                                message,\n                                1,\n                                ProtoReceiptForStorage.deserialize(reader),\n                                ProtoReceiptForStorage,\n                            ),\n                        );\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoReceiptsForStorage {\n            return ProtoReceiptsForStorage.deserialize(bytes);\n        }\n    }\n    export class ProtoLogForStorage extends pb_1.Message {\n        #one_of_decls: number[][] = [];\n        constructor(\n            data?:\n                | any[]\n                | {\n                      address?: dependency_1.common.ProtoAddress;\n                      topics?: dependency_1.common.ProtoHash[];\n                      data?: Uint8Array;\n                  },\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('address' in data && data.address != undefined) {\n                    this.address = data.address;\n                }\n                if ('topics' in data && data.topics != undefined) {\n                    this.topics = data.topics;\n                }\n                if ('data' in data && data.data != undefined) {\n                    this.data = data.data;\n                }\n            }\n        }\n        get address() {\n            return pb_1.Message.getWrapperField(\n                this,\n                dependency_1.common.ProtoAddress,\n                1,\n            ) as dependency_1.common.ProtoAddress;\n        }\n        set address(value: dependency_1.common.ProtoAddress) {\n            pb_1.Message.setWrapperField(this, 1, value);\n        }\n        get has_address() {\n            return pb_1.Message.getField(this, 1) != null;\n        }\n        get topics() {\n            return pb_1.Message.getRepeatedWrapperField(\n                this,\n                dependency_1.common.ProtoHash,\n                2,\n            ) as dependency_1.common.ProtoHash[];\n        }\n        set topics(value: dependency_1.common.ProtoHash[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 2, value);\n        }\n        get data() {\n            return pb_1.Message.getFieldWithDefault(this, 3, new Uint8Array(0)) as Uint8Array;\n        }\n        set data(value: Uint8Array) {\n            pb_1.Message.setField(this, 3, value);\n        }\n        static fromObject(data: {\n            address?: ReturnType<typeof dependency_1.common.ProtoAddress.prototype.toObject>;\n            topics?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>[];\n            data?: Uint8Array;\n        }): ProtoLogForStorage {\n            const message = new ProtoLogForStorage({});\n            if (data.address != null) {\n                message.address = dependency_1.common.ProtoAddress.fromObject(data.address);\n            }\n            if (data.topics != null) {\n                message.topics = data.topics.map((item) => dependency_1.common.ProtoHash.fromObject(item));\n            }\n            if (data.data != null) {\n                message.data = data.data;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                address?: ReturnType<typeof dependency_1.common.ProtoAddress.prototype.toObject>;\n                topics?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>[];\n                data?: Uint8Array;\n            } = {};\n            if (this.address != null) {\n                data.address = this.address.toObject();\n            }\n            if (this.topics != null) {\n                data.topics = this.topics.map((item: dependency_1.common.ProtoHash) => item.toObject());\n            }\n            if (this.data != null) {\n                data.data = this.data;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.has_address) writer.writeMessage(1, this.address, () => this.address.serialize(writer));\n            if (this.topics.length)\n                writer.writeRepeatedMessage(2, this.topics, (item: dependency_1.common.ProtoHash) =>\n                    item.serialize(writer),\n                );\n            if (this.data.length) writer.writeBytes(3, this.data);\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoLogForStorage {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoLogForStorage();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(\n                            message.address,\n                            () => (message.address = dependency_1.common.ProtoAddress.deserialize(reader)),\n                        );\n                        break;\n                    case 2:\n                        reader.readMessage(message.topics, () =>\n                            pb_1.Message.addToRepeatedWrapperField(\n                                message,\n                                2,\n                                dependency_1.common.ProtoHash.deserialize(reader),\n                                dependency_1.common.ProtoHash,\n                            ),\n                        );\n                        break;\n                    case 3:\n                        message.data = reader.readBytes();\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoLogForStorage {\n            return ProtoLogForStorage.deserialize(bytes);\n        }\n    }\n    export class ProtoLogsForStorage extends pb_1.Message {\n        #one_of_decls: number[][] = [];\n        constructor(\n            data?:\n                | any[]\n                | {\n                      logs?: ProtoLogForStorage[];\n                  },\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('logs' in data && data.logs != undefined) {\n                    this.logs = data.logs;\n                }\n            }\n        }\n        get logs() {\n            return pb_1.Message.getRepeatedWrapperField(this, ProtoLogForStorage, 1) as ProtoLogForStorage[];\n        }\n        set logs(value: ProtoLogForStorage[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        static fromObject(data: {\n            logs?: ReturnType<typeof ProtoLogForStorage.prototype.toObject>[];\n        }): ProtoLogsForStorage {\n            const message = new ProtoLogsForStorage({});\n            if (data.logs != null) {\n                message.logs = data.logs.map((item) => ProtoLogForStorage.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                logs?: ReturnType<typeof ProtoLogForStorage.prototype.toObject>[];\n            } = {};\n            if (this.logs != null) {\n                data.logs = this.logs.map((item: ProtoLogForStorage) => item.toObject());\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.logs.length)\n                writer.writeRepeatedMessage(1, this.logs, (item: ProtoLogForStorage) => item.serialize(writer));\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoLogsForStorage {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoLogsForStorage();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.logs, () =>\n                            pb_1.Message.addToRepeatedWrapperField(\n                                message,\n                                1,\n                                ProtoLogForStorage.deserialize(reader),\n                                ProtoLogForStorage,\n                            ),\n                        );\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoLogsForStorage {\n            return ProtoLogsForStorage.deserialize(bytes);\n        }\n    }\n    export class ProtoPendingHeader extends pb_1.Message {\n        #one_of_decls: number[][] = [[1], [2]];\n        constructor(\n            data?:\n                | any[]\n                | ({} & (\n                      | {\n                            wo?: ProtoWorkObject;\n                        }\n                      | {\n                            termini?: ProtoTermini;\n                        }\n                  )),\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('wo' in data && data.wo != undefined) {\n                    this.wo = data.wo;\n                }\n                if ('termini' in data && data.termini != undefined) {\n                    this.termini = data.termini;\n                }\n            }\n        }\n        get wo() {\n            return pb_1.Message.getWrapperField(this, ProtoWorkObject, 1) as ProtoWorkObject;\n        }\n        set wo(value: ProtoWorkObject) {\n            pb_1.Message.setOneofWrapperField(this, 1, this.#one_of_decls[0], value);\n        }\n        get has_wo() {\n            return pb_1.Message.getField(this, 1) != null;\n        }\n        get termini() {\n            return pb_1.Message.getWrapperField(this, ProtoTermini, 2) as ProtoTermini;\n        }\n        set termini(value: ProtoTermini) {\n            pb_1.Message.setOneofWrapperField(this, 2, this.#one_of_decls[1], value);\n        }\n        get has_termini() {\n            return pb_1.Message.getField(this, 2) != null;\n        }\n        get _wo() {\n            const cases: {\n                [index: number]: 'none' | 'wo';\n            } = {\n                0: 'none',\n                1: 'wo',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [1])];\n        }\n        get _termini() {\n            const cases: {\n                [index: number]: 'none' | 'termini';\n            } = {\n                0: 'none',\n                2: 'termini',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [2])];\n        }\n        static fromObject(data: {\n            wo?: ReturnType<typeof ProtoWorkObject.prototype.toObject>;\n            termini?: ReturnType<typeof ProtoTermini.prototype.toObject>;\n        }): ProtoPendingHeader {\n            const message = new ProtoPendingHeader({});\n            if (data.wo != null) {\n                message.wo = ProtoWorkObject.fromObject(data.wo);\n            }\n            if (data.termini != null) {\n                message.termini = ProtoTermini.fromObject(data.termini);\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                wo?: ReturnType<typeof ProtoWorkObject.prototype.toObject>;\n                termini?: ReturnType<typeof ProtoTermini.prototype.toObject>;\n            } = {};\n            if (this.wo != null) {\n                data.wo = this.wo.toObject();\n            }\n            if (this.termini != null) {\n                data.termini = this.termini.toObject();\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.has_wo) writer.writeMessage(1, this.wo, () => this.wo.serialize(writer));\n            if (this.has_termini) writer.writeMessage(2, this.termini, () => this.termini.serialize(writer));\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoPendingHeader {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoPendingHeader();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.wo, () => (message.wo = ProtoWorkObject.deserialize(reader)));\n                        break;\n                    case 2:\n                        reader.readMessage(message.termini, () => (message.termini = ProtoTermini.deserialize(reader)));\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoPendingHeader {\n            return ProtoPendingHeader.deserialize(bytes);\n        }\n    }\n    export class ProtoTermini extends pb_1.Message {\n        #one_of_decls: number[][] = [];\n        constructor(\n            data?:\n                | any[]\n                | {\n                      dom_termini?: dependency_1.common.ProtoHash[];\n                      sub_termini?: dependency_1.common.ProtoHash[];\n                  },\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1, 2], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('dom_termini' in data && data.dom_termini != undefined) {\n                    this.dom_termini = data.dom_termini;\n                }\n                if ('sub_termini' in data && data.sub_termini != undefined) {\n                    this.sub_termini = data.sub_termini;\n                }\n            }\n        }\n        get dom_termini() {\n            return pb_1.Message.getRepeatedWrapperField(\n                this,\n                dependency_1.common.ProtoHash,\n                1,\n            ) as dependency_1.common.ProtoHash[];\n        }\n        set dom_termini(value: dependency_1.common.ProtoHash[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        get sub_termini() {\n            return pb_1.Message.getRepeatedWrapperField(\n                this,\n                dependency_1.common.ProtoHash,\n                2,\n            ) as dependency_1.common.ProtoHash[];\n        }\n        set sub_termini(value: dependency_1.common.ProtoHash[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 2, value);\n        }\n        static fromObject(data: {\n            dom_termini?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>[];\n            sub_termini?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>[];\n        }): ProtoTermini {\n            const message = new ProtoTermini({});\n            if (data.dom_termini != null) {\n                message.dom_termini = data.dom_termini.map((item) => dependency_1.common.ProtoHash.fromObject(item));\n            }\n            if (data.sub_termini != null) {\n                message.sub_termini = data.sub_termini.map((item) => dependency_1.common.ProtoHash.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                dom_termini?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>[];\n                sub_termini?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>[];\n            } = {};\n            if (this.dom_termini != null) {\n                data.dom_termini = this.dom_termini.map((item: dependency_1.common.ProtoHash) => item.toObject());\n            }\n            if (this.sub_termini != null) {\n                data.sub_termini = this.sub_termini.map((item: dependency_1.common.ProtoHash) => item.toObject());\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.dom_termini.length)\n                writer.writeRepeatedMessage(1, this.dom_termini, (item: dependency_1.common.ProtoHash) =>\n                    item.serialize(writer),\n                );\n            if (this.sub_termini.length)\n                writer.writeRepeatedMessage(2, this.sub_termini, (item: dependency_1.common.ProtoHash) =>\n                    item.serialize(writer),\n                );\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoTermini {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoTermini();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.dom_termini, () =>\n                            pb_1.Message.addToRepeatedWrapperField(\n                                message,\n                                1,\n                                dependency_1.common.ProtoHash.deserialize(reader),\n                                dependency_1.common.ProtoHash,\n                            ),\n                        );\n                        break;\n                    case 2:\n                        reader.readMessage(message.sub_termini, () =>\n                            pb_1.Message.addToRepeatedWrapperField(\n                                message,\n                                2,\n                                dependency_1.common.ProtoHash.deserialize(reader),\n                                dependency_1.common.ProtoHash,\n                            ),\n                        );\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoTermini {\n            return ProtoTermini.deserialize(bytes);\n        }\n    }\n    export class ProtoEtxSet extends pb_1.Message {\n        #one_of_decls: number[][] = [[1]];\n        constructor(\n            data?:\n                | any[]\n                | ({} & {\n                      etx_hashes?: Uint8Array;\n                  }),\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('etx_hashes' in data && data.etx_hashes != undefined) {\n                    this.etx_hashes = data.etx_hashes;\n                }\n            }\n        }\n        get etx_hashes() {\n            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0)) as Uint8Array;\n        }\n        set etx_hashes(value: Uint8Array) {\n            pb_1.Message.setOneofField(this, 1, this.#one_of_decls[0], value);\n        }\n        get has_etx_hashes() {\n            return pb_1.Message.getField(this, 1) != null;\n        }\n        get _etx_hashes() {\n            const cases: {\n                [index: number]: 'none' | 'etx_hashes';\n            } = {\n                0: 'none',\n                1: 'etx_hashes',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [1])];\n        }\n        static fromObject(data: { etx_hashes?: Uint8Array }): ProtoEtxSet {\n            const message = new ProtoEtxSet({});\n            if (data.etx_hashes != null) {\n                message.etx_hashes = data.etx_hashes;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                etx_hashes?: Uint8Array;\n            } = {};\n            if (this.etx_hashes != null) {\n                data.etx_hashes = this.etx_hashes;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.has_etx_hashes) writer.writeBytes(1, this.etx_hashes);\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoEtxSet {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoEtxSet();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.etx_hashes = reader.readBytes();\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoEtxSet {\n            return ProtoEtxSet.deserialize(bytes);\n        }\n    }\n    export class ProtoPendingEtxs extends pb_1.Message {\n        #one_of_decls: number[][] = [[1], [2]];\n        constructor(\n            data?:\n                | any[]\n                | ({} & (\n                      | {\n                            header?: ProtoWorkObject;\n                        }\n                      | {\n                            outbound_etxs?: ProtoTransactions;\n                        }\n                  )),\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('header' in data && data.header != undefined) {\n                    this.header = data.header;\n                }\n                if ('outbound_etxs' in data && data.outbound_etxs != undefined) {\n                    this.outbound_etxs = data.outbound_etxs;\n                }\n            }\n        }\n        get header() {\n            return pb_1.Message.getWrapperField(this, ProtoWorkObject, 1) as ProtoWorkObject;\n        }\n        set header(value: ProtoWorkObject) {\n            pb_1.Message.setOneofWrapperField(this, 1, this.#one_of_decls[0], value);\n        }\n        get has_header() {\n            return pb_1.Message.getField(this, 1) != null;\n        }\n        get outbound_etxs() {\n            return pb_1.Message.getWrapperField(this, ProtoTransactions, 2) as ProtoTransactions;\n        }\n        set outbound_etxs(value: ProtoTransactions) {\n            pb_1.Message.setOneofWrapperField(this, 2, this.#one_of_decls[1], value);\n        }\n        get has_outbound_etxs() {\n            return pb_1.Message.getField(this, 2) != null;\n        }\n        get _header() {\n            const cases: {\n                [index: number]: 'none' | 'header';\n            } = {\n                0: 'none',\n                1: 'header',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [1])];\n        }\n        get _outbound_etxs() {\n            const cases: {\n                [index: number]: 'none' | 'outbound_etxs';\n            } = {\n                0: 'none',\n                2: 'outbound_etxs',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [2])];\n        }\n        static fromObject(data: {\n            header?: ReturnType<typeof ProtoWorkObject.prototype.toObject>;\n            outbound_etxs?: ReturnType<typeof ProtoTransactions.prototype.toObject>;\n        }): ProtoPendingEtxs {\n            const message = new ProtoPendingEtxs({});\n            if (data.header != null) {\n                message.header = ProtoWorkObject.fromObject(data.header);\n            }\n            if (data.outbound_etxs != null) {\n                message.outbound_etxs = ProtoTransactions.fromObject(data.outbound_etxs);\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                header?: ReturnType<typeof ProtoWorkObject.prototype.toObject>;\n                outbound_etxs?: ReturnType<typeof ProtoTransactions.prototype.toObject>;\n            } = {};\n            if (this.header != null) {\n                data.header = this.header.toObject();\n            }\n            if (this.outbound_etxs != null) {\n                data.outbound_etxs = this.outbound_etxs.toObject();\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.has_header) writer.writeMessage(1, this.header, () => this.header.serialize(writer));\n            if (this.has_outbound_etxs)\n                writer.writeMessage(2, this.outbound_etxs, () => this.outbound_etxs.serialize(writer));\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoPendingEtxs {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoPendingEtxs();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(\n                            message.header,\n                            () => (message.header = ProtoWorkObject.deserialize(reader)),\n                        );\n                        break;\n                    case 2:\n                        reader.readMessage(\n                            message.outbound_etxs,\n                            () => (message.outbound_etxs = ProtoTransactions.deserialize(reader)),\n                        );\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoPendingEtxs {\n            return ProtoPendingEtxs.deserialize(bytes);\n        }\n    }\n    export class ProtoPendingEtxsRollup extends pb_1.Message {\n        #one_of_decls: number[][] = [[1], [2]];\n        constructor(\n            data?:\n                | any[]\n                | ({} & (\n                      | {\n                            header?: ProtoWorkObject;\n                        }\n                      | {\n                            etxs_rollup?: ProtoTransactions;\n                        }\n                  )),\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('header' in data && data.header != undefined) {\n                    this.header = data.header;\n                }\n                if ('etxs_rollup' in data && data.etxs_rollup != undefined) {\n                    this.etxs_rollup = data.etxs_rollup;\n                }\n            }\n        }\n        get header() {\n            return pb_1.Message.getWrapperField(this, ProtoWorkObject, 1) as ProtoWorkObject;\n        }\n        set header(value: ProtoWorkObject) {\n            pb_1.Message.setOneofWrapperField(this, 1, this.#one_of_decls[0], value);\n        }\n        get has_header() {\n            return pb_1.Message.getField(this, 1) != null;\n        }\n        get etxs_rollup() {\n            return pb_1.Message.getWrapperField(this, ProtoTransactions, 2) as ProtoTransactions;\n        }\n        set etxs_rollup(value: ProtoTransactions) {\n            pb_1.Message.setOneofWrapperField(this, 2, this.#one_of_decls[1], value);\n        }\n        get has_etxs_rollup() {\n            return pb_1.Message.getField(this, 2) != null;\n        }\n        get _header() {\n            const cases: {\n                [index: number]: 'none' | 'header';\n            } = {\n                0: 'none',\n                1: 'header',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [1])];\n        }\n        get _etxs_rollup() {\n            const cases: {\n                [index: number]: 'none' | 'etxs_rollup';\n            } = {\n                0: 'none',\n                2: 'etxs_rollup',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [2])];\n        }\n        static fromObject(data: {\n            header?: ReturnType<typeof ProtoWorkObject.prototype.toObject>;\n            etxs_rollup?: ReturnType<typeof ProtoTransactions.prototype.toObject>;\n        }): ProtoPendingEtxsRollup {\n            const message = new ProtoPendingEtxsRollup({});\n            if (data.header != null) {\n                message.header = ProtoWorkObject.fromObject(data.header);\n            }\n            if (data.etxs_rollup != null) {\n                message.etxs_rollup = ProtoTransactions.fromObject(data.etxs_rollup);\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                header?: ReturnType<typeof ProtoWorkObject.prototype.toObject>;\n                etxs_rollup?: ReturnType<typeof ProtoTransactions.prototype.toObject>;\n            } = {};\n            if (this.header != null) {\n                data.header = this.header.toObject();\n            }\n            if (this.etxs_rollup != null) {\n                data.etxs_rollup = this.etxs_rollup.toObject();\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.has_header) writer.writeMessage(1, this.header, () => this.header.serialize(writer));\n            if (this.has_etxs_rollup)\n                writer.writeMessage(2, this.etxs_rollup, () => this.etxs_rollup.serialize(writer));\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoPendingEtxsRollup {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoPendingEtxsRollup();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(\n                            message.header,\n                            () => (message.header = ProtoWorkObject.deserialize(reader)),\n                        );\n                        break;\n                    case 2:\n                        reader.readMessage(\n                            message.etxs_rollup,\n                            () => (message.etxs_rollup = ProtoTransactions.deserialize(reader)),\n                        );\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoPendingEtxsRollup {\n            return ProtoPendingEtxsRollup.deserialize(bytes);\n        }\n    }\n    export class ProtoTxIns extends pb_1.Message {\n        #one_of_decls: number[][] = [];\n        constructor(\n            data?:\n                | any[]\n                | {\n                      tx_ins?: ProtoTxIn[];\n                  },\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('tx_ins' in data && data.tx_ins != undefined) {\n                    this.tx_ins = data.tx_ins;\n                }\n            }\n        }\n        get tx_ins() {\n            return pb_1.Message.getRepeatedWrapperField(this, ProtoTxIn, 1) as ProtoTxIn[];\n        }\n        set tx_ins(value: ProtoTxIn[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        static fromObject(data: { tx_ins?: ReturnType<typeof ProtoTxIn.prototype.toObject>[] }): ProtoTxIns {\n            const message = new ProtoTxIns({});\n            if (data.tx_ins != null) {\n                message.tx_ins = data.tx_ins.map((item) => ProtoTxIn.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                tx_ins?: ReturnType<typeof ProtoTxIn.prototype.toObject>[];\n            } = {};\n            if (this.tx_ins != null) {\n                data.tx_ins = this.tx_ins.map((item: ProtoTxIn) => item.toObject());\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.tx_ins.length)\n                writer.writeRepeatedMessage(1, this.tx_ins, (item: ProtoTxIn) => item.serialize(writer));\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoTxIns {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoTxIns();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.tx_ins, () =>\n                            pb_1.Message.addToRepeatedWrapperField(\n                                message,\n                                1,\n                                ProtoTxIn.deserialize(reader),\n                                ProtoTxIn,\n                            ),\n                        );\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoTxIns {\n            return ProtoTxIns.deserialize(bytes);\n        }\n    }\n    export class ProtoTxOuts extends pb_1.Message {\n        #one_of_decls: number[][] = [];\n        constructor(\n            data?:\n                | any[]\n                | {\n                      tx_outs?: ProtoTxOut[];\n                  },\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('tx_outs' in data && data.tx_outs != undefined) {\n                    this.tx_outs = data.tx_outs;\n                }\n            }\n        }\n        get tx_outs() {\n            return pb_1.Message.getRepeatedWrapperField(this, ProtoTxOut, 1) as ProtoTxOut[];\n        }\n        set tx_outs(value: ProtoTxOut[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        static fromObject(data: { tx_outs?: ReturnType<typeof ProtoTxOut.prototype.toObject>[] }): ProtoTxOuts {\n            const message = new ProtoTxOuts({});\n            if (data.tx_outs != null) {\n                message.tx_outs = data.tx_outs.map((item) => ProtoTxOut.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                tx_outs?: ReturnType<typeof ProtoTxOut.prototype.toObject>[];\n            } = {};\n            if (this.tx_outs != null) {\n                data.tx_outs = this.tx_outs.map((item: ProtoTxOut) => item.toObject());\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.tx_outs.length)\n                writer.writeRepeatedMessage(1, this.tx_outs, (item: ProtoTxOut) => item.serialize(writer));\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoTxOuts {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoTxOuts();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.tx_outs, () =>\n                            pb_1.Message.addToRepeatedWrapperField(\n                                message,\n                                1,\n                                ProtoTxOut.deserialize(reader),\n                                ProtoTxOut,\n                            ),\n                        );\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoTxOuts {\n            return ProtoTxOuts.deserialize(bytes);\n        }\n    }\n    export class ProtoTxIn extends pb_1.Message {\n        #one_of_decls: number[][] = [[1], [2]];\n        constructor(\n            data?:\n                | any[]\n                | ({} & (\n                      | {\n                            previous_out_point?: ProtoOutPoint;\n                        }\n                      | {\n                            pub_key?: Uint8Array;\n                        }\n                  )),\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('previous_out_point' in data && data.previous_out_point != undefined) {\n                    this.previous_out_point = data.previous_out_point;\n                }\n                if ('pub_key' in data && data.pub_key != undefined) {\n                    this.pub_key = data.pub_key;\n                }\n            }\n        }\n        get previous_out_point() {\n            return pb_1.Message.getWrapperField(this, ProtoOutPoint, 1) as ProtoOutPoint;\n        }\n        set previous_out_point(value: ProtoOutPoint) {\n            pb_1.Message.setOneofWrapperField(this, 1, this.#one_of_decls[0], value);\n        }\n        get has_previous_out_point() {\n            return pb_1.Message.getField(this, 1) != null;\n        }\n        get pub_key() {\n            return pb_1.Message.getFieldWithDefault(this, 2, new Uint8Array(0)) as Uint8Array;\n        }\n        set pub_key(value: Uint8Array) {\n            pb_1.Message.setOneofField(this, 2, this.#one_of_decls[1], value);\n        }\n        get has_pub_key() {\n            return pb_1.Message.getField(this, 2) != null;\n        }\n        get _previous_out_point() {\n            const cases: {\n                [index: number]: 'none' | 'previous_out_point';\n            } = {\n                0: 'none',\n                1: 'previous_out_point',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [1])];\n        }\n        get _pub_key() {\n            const cases: {\n                [index: number]: 'none' | 'pub_key';\n            } = {\n                0: 'none',\n                2: 'pub_key',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [2])];\n        }\n        static fromObject(data: {\n            previous_out_point?: ReturnType<typeof ProtoOutPoint.prototype.toObject>;\n            pub_key?: Uint8Array;\n        }): ProtoTxIn {\n            const message = new ProtoTxIn({});\n            if (data.previous_out_point != null) {\n                message.previous_out_point = ProtoOutPoint.fromObject(data.previous_out_point);\n            }\n            if (data.pub_key != null) {\n                message.pub_key = data.pub_key;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                previous_out_point?: ReturnType<typeof ProtoOutPoint.prototype.toObject>;\n                pub_key?: Uint8Array;\n            } = {};\n            if (this.previous_out_point != null) {\n                data.previous_out_point = this.previous_out_point.toObject();\n            }\n            if (this.pub_key != null) {\n                data.pub_key = this.pub_key;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.has_previous_out_point)\n                writer.writeMessage(1, this.previous_out_point, () => this.previous_out_point.serialize(writer));\n            if (this.has_pub_key) writer.writeBytes(2, this.pub_key);\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoTxIn {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoTxIn();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(\n                            message.previous_out_point,\n                            () => (message.previous_out_point = ProtoOutPoint.deserialize(reader)),\n                        );\n                        break;\n                    case 2:\n                        message.pub_key = reader.readBytes();\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoTxIn {\n            return ProtoTxIn.deserialize(bytes);\n        }\n    }\n    export class ProtoOutPoint extends pb_1.Message {\n        #one_of_decls: number[][] = [[1], [2]];\n        constructor(\n            data?:\n                | any[]\n                | ({} & (\n                      | {\n                            hash?: dependency_1.common.ProtoHash;\n                        }\n                      | {\n                            index?: number;\n                        }\n                  )),\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('hash' in data && data.hash != undefined) {\n                    this.hash = data.hash;\n                }\n                if ('index' in data && data.index != undefined) {\n                    this.index = data.index;\n                }\n            }\n        }\n        get hash() {\n            return pb_1.Message.getWrapperField(\n                this,\n                dependency_1.common.ProtoHash,\n                1,\n            ) as dependency_1.common.ProtoHash;\n        }\n        set hash(value: dependency_1.common.ProtoHash) {\n            pb_1.Message.setOneofWrapperField(this, 1, this.#one_of_decls[0], value);\n        }\n        get has_hash() {\n            return pb_1.Message.getField(this, 1) != null;\n        }\n        get index() {\n            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;\n        }\n        set index(value: number) {\n            pb_1.Message.setOneofField(this, 2, this.#one_of_decls[1], value);\n        }\n        get has_index() {\n            return pb_1.Message.getField(this, 2) != null;\n        }\n        get _hash() {\n            const cases: {\n                [index: number]: 'none' | 'hash';\n            } = {\n                0: 'none',\n                1: 'hash',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [1])];\n        }\n        get _index() {\n            const cases: {\n                [index: number]: 'none' | 'index';\n            } = {\n                0: 'none',\n                2: 'index',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [2])];\n        }\n        static fromObject(data: {\n            hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n            index?: number;\n        }): ProtoOutPoint {\n            const message = new ProtoOutPoint({});\n            if (data.hash != null) {\n                message.hash = dependency_1.common.ProtoHash.fromObject(data.hash);\n            }\n            if (data.index != null) {\n                message.index = data.index;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n                index?: number;\n            } = {};\n            if (this.hash != null) {\n                data.hash = this.hash.toObject();\n            }\n            if (this.index != null) {\n                data.index = this.index;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.has_hash) writer.writeMessage(1, this.hash, () => this.hash.serialize(writer));\n            if (this.has_index) writer.writeUint32(2, this.index);\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoOutPoint {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoOutPoint();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(\n                            message.hash,\n                            () => (message.hash = dependency_1.common.ProtoHash.deserialize(reader)),\n                        );\n                        break;\n                    case 2:\n                        message.index = reader.readUint32();\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoOutPoint {\n            return ProtoOutPoint.deserialize(bytes);\n        }\n    }\n    export class ProtoTxOut extends pb_1.Message {\n        #one_of_decls: number[][] = [[1], [2], [3]];\n        constructor(\n            data?:\n                | any[]\n                | ({} & (\n                      | {\n                            denomination?: number;\n                        }\n                      | {\n                            address?: Uint8Array;\n                        }\n                      | {\n                            lock?: Uint8Array;\n                        }\n                  )),\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('denomination' in data && data.denomination != undefined) {\n                    this.denomination = data.denomination;\n                }\n                if ('address' in data && data.address != undefined) {\n                    this.address = data.address;\n                }\n                if ('lock' in data && data.lock != undefined) {\n                    this.lock = data.lock;\n                }\n            }\n        }\n        get denomination() {\n            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;\n        }\n        set denomination(value: number) {\n            pb_1.Message.setOneofField(this, 1, this.#one_of_decls[0], value);\n        }\n        get has_denomination() {\n            return pb_1.Message.getField(this, 1) != null;\n        }\n        get address() {\n            return pb_1.Message.getFieldWithDefault(this, 2, new Uint8Array(0)) as Uint8Array;\n        }\n        set address(value: Uint8Array) {\n            pb_1.Message.setOneofField(this, 2, this.#one_of_decls[1], value);\n        }\n        get has_address() {\n            return pb_1.Message.getField(this, 2) != null;\n        }\n        get lock() {\n            return pb_1.Message.getFieldWithDefault(this, 3, new Uint8Array(0)) as Uint8Array;\n        }\n        set lock(value: Uint8Array) {\n            pb_1.Message.setOneofField(this, 3, this.#one_of_decls[2], value);\n        }\n        get has_lock() {\n            return pb_1.Message.getField(this, 3) != null;\n        }\n        get _denomination() {\n            const cases: {\n                [index: number]: 'none' | 'denomination';\n            } = {\n                0: 'none',\n                1: 'denomination',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [1])];\n        }\n        get _address() {\n            const cases: {\n                [index: number]: 'none' | 'address';\n            } = {\n                0: 'none',\n                2: 'address',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [2])];\n        }\n        get _lock() {\n            const cases: {\n                [index: number]: 'none' | 'lock';\n            } = {\n                0: 'none',\n                3: 'lock',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [3])];\n        }\n        static fromObject(data: { denomination?: number; address?: Uint8Array; lock?: Uint8Array }): ProtoTxOut {\n            const message = new ProtoTxOut({});\n            if (data.denomination != null) {\n                message.denomination = data.denomination;\n            }\n            if (data.address != null) {\n                message.address = data.address;\n            }\n            if (data.lock != null) {\n                message.lock = data.lock;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                denomination?: number;\n                address?: Uint8Array;\n                lock?: Uint8Array;\n            } = {};\n            if (this.denomination != null) {\n                data.denomination = this.denomination;\n            }\n            if (this.address != null) {\n                data.address = this.address;\n            }\n            if (this.lock != null) {\n                data.lock = this.lock;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.has_denomination) writer.writeUint32(1, this.denomination);\n            if (this.has_address) writer.writeBytes(2, this.address);\n            if (this.has_lock) writer.writeBytes(3, this.lock);\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoTxOut {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoTxOut();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.denomination = reader.readUint32();\n                        break;\n                    case 2:\n                        message.address = reader.readBytes();\n                        break;\n                    case 3:\n                        message.lock = reader.readBytes();\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoTxOut {\n            return ProtoTxOut.deserialize(bytes);\n        }\n    }\n    export class ProtoOutPointAndDenomination extends pb_1.Message {\n        #one_of_decls: number[][] = [[1], [2], [3]];\n        constructor(\n            data?:\n                | any[]\n                | ({} & (\n                      | {\n                            hash?: dependency_1.common.ProtoHash;\n                        }\n                      | {\n                            index?: number;\n                        }\n                      | {\n                            denomination?: number;\n                        }\n                  )),\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('hash' in data && data.hash != undefined) {\n                    this.hash = data.hash;\n                }\n                if ('index' in data && data.index != undefined) {\n                    this.index = data.index;\n                }\n                if ('denomination' in data && data.denomination != undefined) {\n                    this.denomination = data.denomination;\n                }\n            }\n        }\n        get hash() {\n            return pb_1.Message.getWrapperField(\n                this,\n                dependency_1.common.ProtoHash,\n                1,\n            ) as dependency_1.common.ProtoHash;\n        }\n        set hash(value: dependency_1.common.ProtoHash) {\n            pb_1.Message.setOneofWrapperField(this, 1, this.#one_of_decls[0], value);\n        }\n        get has_hash() {\n            return pb_1.Message.getField(this, 1) != null;\n        }\n        get index() {\n            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;\n        }\n        set index(value: number) {\n            pb_1.Message.setOneofField(this, 2, this.#one_of_decls[1], value);\n        }\n        get has_index() {\n            return pb_1.Message.getField(this, 2) != null;\n        }\n        get denomination() {\n            return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;\n        }\n        set denomination(value: number) {\n            pb_1.Message.setOneofField(this, 3, this.#one_of_decls[2], value);\n        }\n        get has_denomination() {\n            return pb_1.Message.getField(this, 3) != null;\n        }\n        get _hash() {\n            const cases: {\n                [index: number]: 'none' | 'hash';\n            } = {\n                0: 'none',\n                1: 'hash',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [1])];\n        }\n        get _index() {\n            const cases: {\n                [index: number]: 'none' | 'index';\n            } = {\n                0: 'none',\n                2: 'index',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [2])];\n        }\n        get _denomination() {\n            const cases: {\n                [index: number]: 'none' | 'denomination';\n            } = {\n                0: 'none',\n                3: 'denomination',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [3])];\n        }\n        static fromObject(data: {\n            hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n            index?: number;\n            denomination?: number;\n        }): ProtoOutPointAndDenomination {\n            const message = new ProtoOutPointAndDenomination({});\n            if (data.hash != null) {\n                message.hash = dependency_1.common.ProtoHash.fromObject(data.hash);\n            }\n            if (data.index != null) {\n                message.index = data.index;\n            }\n            if (data.denomination != null) {\n                message.denomination = data.denomination;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;\n                index?: number;\n                denomination?: number;\n            } = {};\n            if (this.hash != null) {\n                data.hash = this.hash.toObject();\n            }\n            if (this.index != null) {\n                data.index = this.index;\n            }\n            if (this.denomination != null) {\n                data.denomination = this.denomination;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.has_hash) writer.writeMessage(1, this.hash, () => this.hash.serialize(writer));\n            if (this.has_index) writer.writeUint32(2, this.index);\n            if (this.has_denomination) writer.writeUint32(3, this.denomination);\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoOutPointAndDenomination {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoOutPointAndDenomination();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(\n                            message.hash,\n                            () => (message.hash = dependency_1.common.ProtoHash.deserialize(reader)),\n                        );\n                        break;\n                    case 2:\n                        message.index = reader.readUint32();\n                        break;\n                    case 3:\n                        message.denomination = reader.readUint32();\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoOutPointAndDenomination {\n            return ProtoOutPointAndDenomination.deserialize(bytes);\n        }\n    }\n    export class ProtoAddressOutPoints extends pb_1.Message {\n        #one_of_decls: number[][] = [];\n        constructor(\n            data?:\n                | any[]\n                | {\n                      out_points?: Map<string, ProtoOutPointAndDenomination>;\n                  },\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('out_points' in data && data.out_points != undefined) {\n                    this.out_points = data.out_points;\n                }\n            }\n            if (!this.out_points) this.out_points = new Map();\n        }\n        get out_points() {\n            return pb_1.Message.getField(this, 1) as any as Map<string, ProtoOutPointAndDenomination>;\n        }\n        set out_points(value: Map<string, ProtoOutPointAndDenomination>) {\n            pb_1.Message.setField(this, 1, value as any);\n        }\n        static fromObject(data: {\n            out_points?: {\n                [key: string]: ReturnType<typeof ProtoOutPointAndDenomination.prototype.toObject>;\n            };\n        }): ProtoAddressOutPoints {\n            const message = new ProtoAddressOutPoints({});\n            if (typeof data.out_points == 'object') {\n                message.out_points = new Map(\n                    Object.entries(data.out_points).map(([key, value]) => [\n                        key,\n                        ProtoOutPointAndDenomination.fromObject(value),\n                    ]),\n                );\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                out_points?: {\n                    [key: string]: ReturnType<typeof ProtoOutPointAndDenomination.prototype.toObject>;\n                };\n            } = {};\n            if (this.out_points != null) {\n                data.out_points = Object.fromEntries(\n                    Array.from(this.out_points).map(([key, value]) => [key, value.toObject()]),\n                );\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            for (const [key, value] of this.out_points) {\n                writer.writeMessage(1, this.out_points, () => {\n                    writer.writeString(1, key);\n                    writer.writeMessage(2, value, () => value.serialize(writer));\n                });\n            }\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoAddressOutPoints {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoAddressOutPoints();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message, () =>\n                            pb_1.Map.deserializeBinary(message.out_points as any, reader, reader.readString, () => {\n                                let value;\n                                reader.readMessage(\n                                    message,\n                                    () => (value = ProtoOutPointAndDenomination.deserialize(reader)),\n                                );\n                                return value;\n                            }),\n                        );\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoAddressOutPoints {\n            return ProtoAddressOutPoints.deserialize(bytes);\n        }\n    }\n    export class ProtoOutPointsMap extends pb_1.Message {\n        #one_of_decls: number[][] = [];\n        constructor(\n            data?:\n                | any[]\n                | {\n                      entries?: Map<string, ProtoAddressOutPoints>;\n                  },\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('entries' in data && data.entries != undefined) {\n                    this.entries = data.entries;\n                }\n            }\n            if (!this.entries) this.entries = new Map();\n        }\n        get entries() {\n            return pb_1.Message.getField(this, 1) as any as Map<string, ProtoAddressOutPoints>;\n        }\n        set entries(value: Map<string, ProtoAddressOutPoints>) {\n            pb_1.Message.setField(this, 1, value as any);\n        }\n        static fromObject(data: {\n            entries?: {\n                [key: string]: ReturnType<typeof ProtoAddressOutPoints.prototype.toObject>;\n            };\n        }): ProtoOutPointsMap {\n            const message = new ProtoOutPointsMap({});\n            if (typeof data.entries == 'object') {\n                message.entries = new Map(\n                    Object.entries(data.entries).map(([key, value]) => [key, ProtoAddressOutPoints.fromObject(value)]),\n                );\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                entries?: {\n                    [key: string]: ReturnType<typeof ProtoAddressOutPoints.prototype.toObject>;\n                };\n            } = {};\n            if (this.entries != null) {\n                data.entries = Object.fromEntries(\n                    Array.from(this.entries).map(([key, value]) => [key, value.toObject()]),\n                );\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            for (const [key, value] of this.entries) {\n                writer.writeMessage(1, this.entries, () => {\n                    writer.writeString(1, key);\n                    writer.writeMessage(2, value, () => value.serialize(writer));\n                });\n            }\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoOutPointsMap {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoOutPointsMap();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message, () =>\n                            pb_1.Map.deserializeBinary(message.entries as any, reader, reader.readString, () => {\n                                let value;\n                                reader.readMessage(message, () => (value = ProtoAddressOutPoints.deserialize(reader)));\n                                return value;\n                            }),\n                        );\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoOutPointsMap {\n            return ProtoOutPointsMap.deserialize(bytes);\n        }\n    }\n    export class ProtoSpentUTXO extends pb_1.Message {\n        #one_of_decls: number[][] = [[1], [2]];\n        constructor(\n            data?:\n                | any[]\n                | ({} & (\n                      | {\n                            outpoint?: ProtoOutPoint;\n                        }\n                      | {\n                            sutxo?: ProtoTxOut;\n                        }\n                  )),\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('outpoint' in data && data.outpoint != undefined) {\n                    this.outpoint = data.outpoint;\n                }\n                if ('sutxo' in data && data.sutxo != undefined) {\n                    this.sutxo = data.sutxo;\n                }\n            }\n        }\n        get outpoint() {\n            return pb_1.Message.getWrapperField(this, ProtoOutPoint, 1) as ProtoOutPoint;\n        }\n        set outpoint(value: ProtoOutPoint) {\n            pb_1.Message.setOneofWrapperField(this, 1, this.#one_of_decls[0], value);\n        }\n        get has_outpoint() {\n            return pb_1.Message.getField(this, 1) != null;\n        }\n        get sutxo() {\n            return pb_1.Message.getWrapperField(this, ProtoTxOut, 2) as ProtoTxOut;\n        }\n        set sutxo(value: ProtoTxOut) {\n            pb_1.Message.setOneofWrapperField(this, 2, this.#one_of_decls[1], value);\n        }\n        get has_sutxo() {\n            return pb_1.Message.getField(this, 2) != null;\n        }\n        get _outpoint() {\n            const cases: {\n                [index: number]: 'none' | 'outpoint';\n            } = {\n                0: 'none',\n                1: 'outpoint',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [1])];\n        }\n        get _sutxo() {\n            const cases: {\n                [index: number]: 'none' | 'sutxo';\n            } = {\n                0: 'none',\n                2: 'sutxo',\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [2])];\n        }\n        static fromObject(data: {\n            outpoint?: ReturnType<typeof ProtoOutPoint.prototype.toObject>;\n            sutxo?: ReturnType<typeof ProtoTxOut.prototype.toObject>;\n        }): ProtoSpentUTXO {\n            const message = new ProtoSpentUTXO({});\n            if (data.outpoint != null) {\n                message.outpoint = ProtoOutPoint.fromObject(data.outpoint);\n            }\n            if (data.sutxo != null) {\n                message.sutxo = ProtoTxOut.fromObject(data.sutxo);\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                outpoint?: ReturnType<typeof ProtoOutPoint.prototype.toObject>;\n                sutxo?: ReturnType<typeof ProtoTxOut.prototype.toObject>;\n            } = {};\n            if (this.outpoint != null) {\n                data.outpoint = this.outpoint.toObject();\n            }\n            if (this.sutxo != null) {\n                data.sutxo = this.sutxo.toObject();\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.has_outpoint) writer.writeMessage(1, this.outpoint, () => this.outpoint.serialize(writer));\n            if (this.has_sutxo) writer.writeMessage(2, this.sutxo, () => this.sutxo.serialize(writer));\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoSpentUTXO {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoSpentUTXO();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(\n                            message.outpoint,\n                            () => (message.outpoint = ProtoOutPoint.deserialize(reader)),\n                        );\n                        break;\n                    case 2:\n                        reader.readMessage(message.sutxo, () => (message.sutxo = ProtoTxOut.deserialize(reader)));\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoSpentUTXO {\n            return ProtoSpentUTXO.deserialize(bytes);\n        }\n    }\n    export class ProtoSpentUTXOs extends pb_1.Message {\n        #one_of_decls: number[][] = [];\n        constructor(\n            data?:\n                | any[]\n                | {\n                      sutxos?: ProtoSpentUTXO[];\n                  },\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('sutxos' in data && data.sutxos != undefined) {\n                    this.sutxos = data.sutxos;\n                }\n            }\n        }\n        get sutxos() {\n            return pb_1.Message.getRepeatedWrapperField(this, ProtoSpentUTXO, 1) as ProtoSpentUTXO[];\n        }\n        set sutxos(value: ProtoSpentUTXO[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        static fromObject(data: { sutxos?: ReturnType<typeof ProtoSpentUTXO.prototype.toObject>[] }): ProtoSpentUTXOs {\n            const message = new ProtoSpentUTXOs({});\n            if (data.sutxos != null) {\n                message.sutxos = data.sutxos.map((item) => ProtoSpentUTXO.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                sutxos?: ReturnType<typeof ProtoSpentUTXO.prototype.toObject>[];\n            } = {};\n            if (this.sutxos != null) {\n                data.sutxos = this.sutxos.map((item: ProtoSpentUTXO) => item.toObject());\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.sutxos.length)\n                writer.writeRepeatedMessage(1, this.sutxos, (item: ProtoSpentUTXO) => item.serialize(writer));\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoSpentUTXOs {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoSpentUTXOs();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.sutxos, () =>\n                            pb_1.Message.addToRepeatedWrapperField(\n                                message,\n                                1,\n                                ProtoSpentUTXO.deserialize(reader),\n                                ProtoSpentUTXO,\n                            ),\n                        );\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoSpentUTXOs {\n            return ProtoSpentUTXOs.deserialize(bytes);\n        }\n    }\n    export class ProtoKeys extends pb_1.Message {\n        #one_of_decls: number[][] = [];\n        constructor(\n            data?:\n                | any[]\n                | {\n                      keys?: Uint8Array[];\n                  },\n        ) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == 'object') {\n                if ('keys' in data && data.keys != undefined) {\n                    this.keys = data.keys;\n                }\n            }\n        }\n        get keys() {\n            return pb_1.Message.getFieldWithDefault(this, 1, []) as Uint8Array[];\n        }\n        set keys(value: Uint8Array[]) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        static fromObject(data: { keys?: Uint8Array[] }): ProtoKeys {\n            const message = new ProtoKeys({});\n            if (data.keys != null) {\n                message.keys = data.keys;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                keys?: Uint8Array[];\n            } = {};\n            if (this.keys != null) {\n                data.keys = this.keys;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.keys.length) writer.writeRepeatedBytes(1, this.keys);\n            if (!w) return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoKeys {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes),\n                message = new ProtoKeys();\n            while (reader.nextField()) {\n                if (reader.isEndGroup()) break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        pb_1.Message.addToRepeatedField(message, 1, reader.readBytes());\n                        break;\n                    default:\n                        reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ProtoKeys {\n            return ProtoKeys.deserialize(bytes);\n        }\n    }\n}\n","import { ProtoTransaction } from '../transaction/abstract-transaction.js';\nimport { ProtoWorkObject } from '../transaction/work-object.js';\nimport * as Proto from './protoc/proto_block.js';\n\n/**\n * @category Encoding\n * @param {Uint8Array} bytes - The Protobuf encoded transaction\n * @returns {ProtoTransaction} - The decoded transaction\n */\nexport function decodeProtoTransaction(bytes: Uint8Array): ProtoTransaction {\n    const tx = Proto.block.ProtoTransaction.deserialize(bytes);\n    const result = tx.toObject() as ProtoTransaction;\n    if (result.to?.length == 0) {\n        result.to = null;\n    }\n    return result;\n}\n\n/**\n * @category Encoding\n * @param {Uint8Array} bytes - The Protobuf encoded work object\n * @returns {ProtoWorkObject} - The decoded work object\n */\nexport function decodeProtoWorkObject(bytes: Uint8Array): ProtoWorkObject {\n    const wo = Proto.block.ProtoWorkObject.deserialize(bytes);\n    return wo.toObject() as ProtoWorkObject;\n}\n","/**\n * @ignore\n */\nimport { getAddress } from '../address/index.js';\nimport { Signature } from '../crypto/index.js';\nimport { accessListify } from '../transaction/index.js';\nimport { Outpoint, OutpointDeltas } from '../transaction/utxo.js';\nimport { hexlify } from '../utils/data.js';\nimport {\n    getBigInt,\n    getNumber,\n    isHexString,\n    zeroPadValue,\n    assert,\n    assertArgument,\n    BigNumberish,\n    toBeArray,\n} from '../utils/index.js';\n\nimport type {\n    BlockParams,\n    LogParams,\n    TransactionReceiptParams,\n    TransactionResponseParams,\n    EtxParams,\n    QiTransactionResponseParams,\n    QuaiTransactionResponseParams,\n    ExternalTransactionResponseParams,\n    OutpointResponseParams,\n    OutpointDeltaResponseParams,\n} from './formatting.js';\n\nconst BN_0 = BigInt(0);\n\nexport type FormatFunc = (value: any) => any;\n\nexport function allowNull(format: FormatFunc, nullValue?: any): FormatFunc {\n    return function (value: any) {\n        if (value == null) {\n            return nullValue;\n        }\n        return format(value);\n    };\n}\n\nexport function arrayOf(format: FormatFunc): FormatFunc {\n    return (array: any) => {\n        if (!Array.isArray(array)) {\n            throw new Error('not an array');\n        }\n        return array.map((i) => format(i));\n    };\n}\n\n// Requires an object which matches a fleet of other formatters\n// Any FormatFunc may return `undefined` to have the value omitted\n// from the result object. Calls preserve `this`.\nexport function object(format: Record<string, FormatFunc>, altNames?: Record<string, Array<string>>): FormatFunc {\n    return (value: any) => {\n        const result: any = {};\n        for (const key in format) {\n            let srcKey = key;\n            if (altNames && key in altNames && !(srcKey in value)) {\n                for (const altKey of altNames[key]) {\n                    if (altKey in value) {\n                        srcKey = altKey;\n                        break;\n                    }\n                }\n            }\n\n            try {\n                const nv = format[key](value[srcKey]);\n                if (nv !== undefined) {\n                    result[key] = nv;\n                }\n            } catch (error) {\n                const message = error instanceof Error ? error.message : 'not-an-error';\n                assert(false, `invalid value for value.${key} (${message})`, 'BAD_DATA', { value });\n            }\n        }\n        return result;\n    };\n}\n\nexport function formatBoolean(value: any): boolean {\n    switch (value) {\n        case true:\n        case 'true':\n            return true;\n        case false:\n        case 'false':\n            return false;\n    }\n    assertArgument(false, `invalid boolean; ${JSON.stringify(value)}`, 'value', value);\n}\n\nexport function formatData(value: string): string {\n    assertArgument(isHexString(value), 'invalid data', 'value', value);\n    return value;\n}\n\nexport function formatHash(value: any): string {\n    assertArgument(isHexString(value, 32), 'invalid hash', 'value', value);\n    return value;\n}\n\nexport function formatUint256(value: any): string {\n    if (!isHexString(value)) {\n        throw new Error('invalid uint256');\n    }\n    return zeroPadValue(value, 32);\n}\n\nexport function handleNumber(_value: string, param: string): number {\n    if (_value === '0x') {\n        return 0;\n    }\n    return getNumber(_value, param);\n}\n\nexport function formatNumber(_value: BigNumberish, name: string): Uint8Array {\n    const value = getBigInt(_value, 'value');\n    const result = toBeArray(value);\n    assertArgument(result.length <= 32, `value too large`, `tx.${name}`, value);\n    return result;\n}\n\nconst _formatLog = object(\n    {\n        address: getAddress,\n        blockHash: formatHash,\n        blockNumber: getNumber,\n        data: formatData,\n        index: getNumber,\n        removed: allowNull(formatBoolean, false),\n        topics: arrayOf(formatHash),\n        transactionHash: formatHash,\n        transactionIndex: getNumber,\n    },\n    {\n        index: ['logIndex'],\n    },\n);\n\nexport function formatLog(value: any): LogParams {\n    return _formatLog(value);\n}\n\nconst _formatHeader = object({\n    baseFeePerGas: getBigInt,\n    efficiencyScore: getBigInt,\n    etxEligibleSlices: formatHash,\n    etxSetRoot: formatHash,\n    evmRoot: formatHash,\n    expansionNumber: getNumber,\n    etxRollupRoot: formatHash,\n    outboundEtxsRoot: formatHash,\n    extraData: formatData,\n    gasLimit: getBigInt,\n    gasUsed: getBigInt,\n    interlinkRootHash: formatHash,\n    manifestHash: arrayOf(formatHash),\n    number: arrayOf(getNumber),\n    parentDeltaEntropy: arrayOf(getBigInt),\n    parentEntropy: arrayOf(getBigInt),\n    parentHash: arrayOf(formatHash),\n    parentUncledDeltaEntropy: arrayOf(getBigInt),\n    primeTerminusHash: formatHash,\n    quaiStateSize: getBigInt,\n    receiptsRoot: formatHash,\n    uncleHash: formatHash,\n    size: getBigInt,\n    stateLimit: getBigInt,\n    stateUsed: getBigInt,\n    thresholdCount: getBigInt,\n    transactionsRoot: formatHash,\n    uncledEntropy: getBigInt,\n    utxoRoot: formatHash,\n    secondaryCoinbase: allowNull(getAddress),\n    exchangeRate: getBigInt,\n    quaiToQi: getBigInt,\n    qiToQuai: getBigInt,\n});\n\nconst _formatUncle = object({\n    primaryCoinbase: allowNull(getAddress),\n    difficulty: getNumber,\n    headerHash: formatHash,\n    location: formatData,\n    mixHash: formatHash,\n    nonce: formatData,\n    number: getNumber,\n    parentHash: formatHash,\n    primeTerminusNumber: getNumber,\n    timestamp: getNumber,\n    txHash: formatHash,\n    lock: getNumber,\n});\n\nconst _formatBlock = object({\n    outboundEtxs: arrayOf((tx: any) => {\n        if (typeof tx === 'string') {\n            return formatHash(tx);\n        }\n        return formatExternalTransactionResponse(tx);\n    }),\n    hash: formatHash,\n    header: _formatHeader,\n    interlinkHashes: arrayOf(formatHash),\n    size: getBigInt,\n    subManifest: arrayOf(formatData),\n    totalEntropy: getBigInt,\n    transactions: arrayOf((tx: any) => {\n        if (typeof tx === 'string') {\n            return formatHash(tx);\n        }\n        return formatTransactionResponse(tx);\n    }),\n    uncles: arrayOf(_formatUncle),\n    woHeader: _formatUncle,\n    workShares: allowNull(arrayOf(_formatUncle), []),\n});\n\nexport function formatBlock(value: any): BlockParams {\n    const result = _formatBlock(value);\n    result.transactions = value.transactions.map(\n        (tx: string | TransactionResponseParams | ExternalTransactionResponseParams) => {\n            if (typeof tx === 'string') {\n                return tx;\n            }\n            if ('originatingTxHash' in tx) {\n                return formatExternalTransactionResponse(tx);\n            }\n            return formatTransactionResponse(tx);\n        },\n    );\n    result.outboundEtxs = value.outboundEtxs.map((tx: string | ExternalTransactionResponseParams) => {\n        if (typeof tx === 'string') {\n            return tx;\n        }\n        return formatExternalTransactionResponse(tx);\n    });\n    return result;\n}\n\nconst _formatReceiptLog = object(\n    {\n        transactionIndex: getNumber,\n        blockNumber: getNumber,\n        transactionHash: formatHash,\n        address: getAddress,\n        topics: arrayOf(formatHash),\n        data: formatData,\n        index: getNumber,\n        blockHash: formatHash,\n    },\n    {\n        index: ['logIndex'],\n    },\n);\n\nexport function formatReceiptLog(value: any): LogParams {\n    return _formatReceiptLog(value);\n}\n\nconst _formatEtx = object(\n    {\n        type: allowNull(getNumber, 0),\n        nonce: allowNull(getNumber),\n        gasPrice: allowNull(getBigInt),\n        minerTip: allowNull(getBigInt),\n        gas: allowNull(getBigInt),\n        value: allowNull(getBigInt, BN_0),\n        input: allowNull(formatData),\n        to: allowNull(getAddress, null),\n        accessList: allowNull(accessListify, null),\n        from: getAddress,\n        originatingTxHash: formatHash,\n        etxIndex: getNumber,\n        chainId: allowNull(getBigInt, null),\n        etxType: getNumber,\n        hash: formatHash,\n    },\n    {\n        from: ['from'],\n    },\n);\n\nexport function formatEtx(value: any): EtxParams {\n    return _formatEtx(value);\n}\n\nconst _formatTransactionReceipt = object(\n    {\n        to: allowNull(getAddress, null),\n        from: allowNull(getAddress, null),\n        contractAddress: allowNull(getAddress, null),\n        index: getNumber,\n        gasUsed: getBigInt,\n        logsBloom: allowNull(formatData),\n        blockHash: formatHash,\n        hash: formatHash,\n        logs: arrayOf(formatReceiptLog),\n        blockNumber: getNumber,\n        cumulativeGasUsed: getBigInt,\n        effectiveGasPrice: allowNull(getBigInt),\n        status: allowNull(getNumber),\n        type: allowNull(getNumber, 0),\n        outboundEtxs: (value) => (value ? arrayOf(formatEtx)(value) : value),\n        originatingTxHash: allowNull(formatHash),\n        etxType: allowNull(getNumber),\n    },\n    {\n        hash: ['transactionHash'],\n        index: ['transactionIndex'],\n    },\n);\n\nexport function formatTransactionReceipt(value: any): TransactionReceiptParams {\n    const result = _formatTransactionReceipt(value);\n    return result;\n}\n\nexport function formatTransactionResponse(value: any): TransactionResponseParams | ExternalTransactionResponseParams {\n    // Determine if it is a Quai or Qi transaction based on the type\n    const transactionType = parseInt(value.type, 16);\n\n    switch (transactionType) {\n        case 0x0:\n            return formatQuaiTransactionResponse(value);\n        case 0x1:\n            return formatExternalTransactionResponse(value);\n        case 0x2:\n            return formatQiTransactionResponse(value);\n        default:\n            throw new Error('Unknown transaction type');\n    }\n}\n\nexport function formatExternalTransactionResponse(value: any): ExternalTransactionResponseParams {\n    const result = object(\n        {\n            hash: formatHash,\n            type: (value: any) => {\n                if (value === '0x' || value == null) {\n                    return 0;\n                }\n                return parseInt(value, 16);\n            },\n            accessList: allowNull(accessListify, null),\n            blockHash: allowNull(formatHash, null),\n            blockNumber: allowNull((value: any) => (value ? parseInt(value, 16) : null), null),\n            index: allowNull((value: any) => (value ? BigInt(value) : null), null),\n            from: allowNull(getAddress, null),\n            minerTip: allowNull((value: any) => (value ? BigInt(value) : null)),\n            gasPrice: allowNull((value: any) => (value ? BigInt(value) : null)),\n            gasLimit: allowNull((value: any) => (value ? BigInt(value) : null), null),\n            to: allowNull(getAddress, null),\n            value: allowNull((value: any) => (value ? BigInt(value) : null), null),\n            nonce: allowNull((value: any) => (value ? parseInt(value, 10) : null), null),\n            creates: allowNull(getAddress, null),\n            chainId: allowNull((value: any) => (value ? BigInt(value) : null), null),\n            originatingTxHash: allowNull(formatHash, null),\n            etxIndex: allowNull((value: any) => (value ? parseInt(value, 10) : null), null),\n            etxType: allowNull((value: any) => value, null),\n            data: (value: any) => value,\n        },\n        {\n            data: ['input'],\n            gasLimit: ['gas'],\n            index: ['transactionIndex'],\n        },\n    )(value) as ExternalTransactionResponseParams;\n\n    // 0x0000... should actually be null\n    if (result.blockHash && getBigInt(result.blockHash) === BN_0) {\n        result.blockHash = null;\n    }\n\n    return result;\n}\n\nfunction formatQuaiTransactionResponse(value: any): QuaiTransactionResponseParams {\n    const result = object(\n        {\n            hash: formatHash,\n            type: (value: any) => {\n                if (value === '0x' || value == null) {\n                    return 0;\n                }\n                return parseInt(value, 16);\n            },\n            accessList: allowNull(accessListify, null),\n            blockHash: allowNull(formatHash, null),\n            blockNumber: allowNull((value: any) => (value ? parseInt(value, 16) : null), null),\n            index: allowNull((value: any) => (value ? BigInt(value) : null), null),\n            from: allowNull(getAddress, null),\n            minerTip: allowNull((value: any) => (value ? BigInt(value) : null)),\n            gasPrice: allowNull((value: any) => (value ? BigInt(value) : null)),\n            gasLimit: allowNull((value: any) => (value ? BigInt(value) : null), null),\n            to: allowNull(getAddress, null),\n            value: allowNull((value: any) => (value ? BigInt(value) : null), null),\n            nonce: allowNull((value: any) => (value ? parseInt(value, 10) : null), null),\n            creates: allowNull(getAddress, null),\n            chainId: allowNull((value: any) => (value ? BigInt(value) : null), null),\n            etxType: allowNull((value: any) => parseInt(value, 16), null),\n            data: (value: any) => value,\n        },\n        {\n            data: ['input'],\n            gasLimit: ['gas'],\n            index: ['transactionIndex'],\n        },\n    )(value) as QuaiTransactionResponseParams;\n\n    // Add an access list if missing\n    if (value.accessList == null) {\n        result.accessList = [];\n    }\n\n    // Compute the signature\n    if (value.signature) {\n        result.signature = Signature.from(value.signature);\n        // Some backends omit ChainId on legacy transactions, but we can compute it\n        if (result.chainId == null) {\n            const chainId = result.signature.legacyChainId;\n            if (chainId != null) {\n                result.chainId = chainId;\n            }\n        }\n    }\n\n    // 0x0000... should actually be null\n    if (result.blockHash && getBigInt(result.blockHash) === BN_0) {\n        result.blockHash = null;\n    }\n\n    return result;\n}\n\nfunction formatQiTransactionResponse(value: any): QiTransactionResponseParams {\n    return object(\n        {\n            hash: formatHash,\n            type: (value: any) => {\n                if (value === '0x' || value == null) {\n                    return 0;\n                }\n                return parseInt(value, 16);\n            },\n            blockHash: allowNull(formatHash, null),\n            blockNumber: allowNull((value: any) => (value ? parseInt(value, 16) : null), null),\n            chainId: allowNull((value: any) => (value ? BigInt(value) : null), null),\n            signature: (value: any) => value,\n            txInputs: allowNull(formatTxInputs, []),\n            txOutputs: allowNull(formatTxOutputs, []),\n        },\n        {\n            index: ['transactionIndex'],\n            signature: ['utxoSignature'],\n            txInputs: ['inputs'],\n            txOutputs: ['outputs'],\n        },\n    )(value) as QiTransactionResponseParams;\n}\n\nconst formatTxInputs = (value: any) => {\n    return value?.map(_formatTxInput);\n};\n\nconst _formatTxInput = (value: any) => {\n    return {\n        txhash: formatHash(value.previousOutPoint.txHash),\n        index: getNumber(value.previousOutPoint.index),\n        pubkey: hexlify(value.pubKey),\n    };\n};\n\nconst formatTxOutputs = (value: any) => {\n    return value?.map(_formatTxOutput);\n};\n\nconst _formatTxOutput = (value: any) => {\n    return {\n        denomination: getNumber(value.denomination),\n        lock: getNumber(value.lock),\n        address: getAddress(value.address),\n    };\n};\n\nconst _formatOutpoint = object(\n    {\n        denomination: (value: string) => getNumber(value),\n        index: (value: string) => getNumber(value),\n        lock: (value: string) => getNumber(value),\n        txhash: formatHash,\n    },\n    {\n        txhash: ['txHash'],\n    },\n);\n\nexport function formatOutpoints(outpoints: OutpointResponseParams[]): Outpoint[] {\n    return outpoints.map(_formatOutpoint);\n}\n\nexport function formatOutpointDeltas(deltas: OutpointDeltaResponseParams): OutpointDeltas {\n    const result: OutpointDeltas = {};\n\n    for (const [address, delta] of Object.entries(deltas)) {\n        const created: OutpointResponseParams[] = [];\n        const deleted: OutpointResponseParams[] = [];\n\n        // Process created outpoints\n        for (const [txHash, outputs] of Object.entries(delta.created)) {\n            outputs.forEach((output) => {\n                created.push({\n                    txHash,\n                    index: output.index,\n                    denomination: output.denomination,\n                    lock: output.lock,\n                });\n            });\n        }\n\n        // Process deleted outpoints\n        for (const [txHash, outputs] of Object.entries(delta.deleted)) {\n            outputs.forEach((output) => {\n                deleted.push({\n                    txHash,\n                    index: output.index,\n                    denomination: output.denomination,\n                    lock: output.lock,\n                });\n            });\n        }\n\n        result[address] = {\n            created: formatOutpoints(created),\n            deleted: formatOutpoints(deleted),\n        };\n    }\n\n    return result;\n}\n","/**\n * A **Network** encapsulates the various properties required to interact with a specific chain.\n *\n * @category Providers\n */\n\nimport { getBigInt, assertArgument } from '../utils/index.js';\n\nimport type { BigNumberish } from '../utils/index.js';\n\n/**\n * A Networkish can be used to allude to a Network, by specifying:\n *\n * - A {@link Network} object\n * - A well-known (or registered) network name\n * - A well-known (or registered) chain ID\n * - An object with sufficient details to describe a network\n *\n * @category Providers\n */\nexport type Networkish =\n    | Network\n    | number\n    | bigint\n    | string\n    | {\n          name?: string;\n          chainId?: number;\n      };\n\nconst Networks: Map<string | bigint, () => Network> = new Map();\n\n/**\n * A **Network** provides access to a chain's properties and allows for plug-ins to extend functionality.\n *\n * @category Providers\n */\nexport class Network {\n    #name: string;\n    #chainId: bigint;\n\n    /**\n     * Creates a new **Network** for `name` and `chainId`.\n     *\n     * @param {string} name - The network name.\n     * @param {BigNumberish} chainId - The network chain ID.\n     */\n    constructor(name: string, chainId: BigNumberish) {\n        this.#name = name;\n        this.#chainId = getBigInt(chainId);\n    }\n\n    /**\n     * Returns a JSON-compatible representation of a Network.\n     *\n     * @returns {Object} The JSON representation of the network.\n     */\n    toJSON(): any {\n        return { name: this.name, chainId: String(this.chainId) };\n    }\n\n    /**\n     * The network common name.\n     *\n     * This is the canonical name, as networks might have multiple names.\n     *\n     * @returns {string} The network name.\n     */\n    get name(): string {\n        return this.#name;\n    }\n\n    /**\n     * Sets the network name.\n     *\n     * @param {string} value - The new network name.\n     */\n    set name(value: string) {\n        this.#name = value;\n    }\n\n    /**\n     * The network chain ID.\n     *\n     * @returns {bigint} The network chain ID.\n     */\n    get chainId(): bigint {\n        return this.#chainId;\n    }\n\n    /**\n     * Sets the network chain ID.\n     *\n     * @param {BigNumberish} value - The new network chain ID.\n     */\n    set chainId(value: BigNumberish) {\n        this.#chainId = getBigInt(value, 'chainId');\n    }\n\n    /**\n     * Returns true if `other` matches this network. Any chain ID must match, and if no chain ID is present, the name\n     * must match.\n     *\n     * This method does not currently check for additional properties, such as plug-in compatibility.\n     *\n     * @ignore\n     * @param {Networkish} other - The network to compare.\n     * @returns {boolean} True if the networks match.\n     */\n    matches(other: Networkish): boolean {\n        if (other == null) {\n            return false;\n        }\n\n        if (typeof other === 'string') {\n            try {\n                return this.chainId === getBigInt(other);\n                // eslint-disable-next-line no-empty\n            } catch (error) {}\n            return this.name === other;\n        }\n\n        if (typeof other === 'number' || typeof other === 'bigint') {\n            try {\n                return this.chainId === getBigInt(other);\n                // eslint-disable-next-line no-empty\n            } catch (error) {}\n            return false;\n        }\n\n        if (typeof other === 'object') {\n            if (other.chainId != null) {\n                try {\n                    return this.chainId === getBigInt(other.chainId);\n                    // eslint-disable-next-line no-empty\n                } catch (error) {}\n                return false;\n            }\n            if (other.name != null) {\n                return this.name === other.name;\n            }\n            return false;\n        }\n\n        return false;\n    }\n\n    /**\n     * Create a copy of this Network.\n     *\n     * @returns {Network} A new Network instance.\n     */\n    clone(): Network {\n        const clone = new Network(this.name, this.chainId);\n        return clone;\n    }\n\n    /**\n     * Returns a new Network for the `network` name or chainId.\n     *\n     * @param {Networkish} [network] - The network to get.\n     * @returns {Network} The Network instance.\n     * @throws {Error} If the network is invalid.\n     */\n    static from(network?: Networkish): Network {\n        // Default network\n        if (network == null) {\n            return Network.from('mainnet');\n        }\n\n        // Canonical name or chain ID\n        if (typeof network === 'number') {\n            network = BigInt(network);\n        }\n        if (typeof network === 'string' || typeof network === 'bigint') {\n            const networkFunc = Networks.get(network);\n            if (networkFunc) {\n                return networkFunc();\n            }\n            if (typeof network === 'bigint') {\n                return new Network('unknown', network);\n            }\n\n            assertArgument(false, 'unknown network', 'network', network);\n        }\n\n        // Clonable with network-like abilities\n        if (typeof (<Network>network).clone === 'function') {\n            const clone = (<Network>network).clone();\n            return clone;\n        }\n\n        // Networkish\n        if (typeof network === 'object') {\n            assertArgument(\n                typeof network.name === 'string' && typeof network.chainId === 'number',\n                'invalid network object name or chainId',\n                'network',\n                network,\n            );\n\n            const custom = new Network(<string>network.name, <number>network.chainId);\n\n            return custom;\n        }\n\n        assertArgument(false, 'invalid network', 'network', network);\n    }\n\n    /**\n     * Register `nameOrChainId` with a function which returns an instance of a Network representing that chain.\n     *\n     * @param {string | number | bigint} nameOrChainId - The name or chain ID to register.\n     * @param {() => Network} networkFunc - The function to create the Network.\n     * @throws {Error} If a network is already registered for `nameOrChainId`.\n     */\n    static register(nameOrChainId: string | number | bigint, networkFunc: () => Network): void {\n        if (typeof nameOrChainId === 'number') {\n            nameOrChainId = BigInt(nameOrChainId);\n        }\n        const existing = Networks.get(nameOrChainId);\n        if (existing) {\n            assertArgument(\n                false,\n                `conflicting network for ${JSON.stringify(existing.name)}`,\n                'nameOrChainId',\n                nameOrChainId,\n            );\n        }\n        Networks.set(nameOrChainId, networkFunc);\n    }\n}\n","import { Ledger, toZone, Zone } from '../constants/zones.js';\nimport { NodeLocation } from '../providers/provider.js';\nimport { isQiAddress } from '../address/checks.js';\n\n/**\n * Retrieves the shard information for a given address based on its byte prefix. The function parses the address to\n * extract its byte prefix, then filters the ShardData to find a matching shard entry. If no matching shard is found, it\n * returns null.\n *\n * @category Utils\n * @param {string} address - The blockchain address to be analyzed. The address should start with \"0x\" followed by the\n *   hexadecimal representation.\n * @returns {Object | null} An object containing the shard information, or null if no\n */\nexport function getZoneForAddress(address: string): Zone | null {\n    try {\n        return toZone(address.slice(0, 4));\n    } catch (error) {\n        return null;\n    }\n}\n\ntype AddressDetails = {\n    zone: Zone;\n    ledger: Ledger;\n};\n\n/**\n * Extracts both zone and UTXO information from a given blockchain address. This function first determines the address's\n * zone by its byte prefix, then checks the 9th bit of the address to ascertain if it's a UTXO or non-UTXO address.\n *\n * @category Utils\n * @param {string} address - The blockchain address to be analyzed, expected to start with \"0x\" followed by its\n *   hexadecimal representation.\n * @returns {Object | null} An object containing the zone and UTXO information, or null if no address is found.\n */\nexport function getAddressDetails(address: string): AddressDetails | null {\n    const isQiLedger = (parseInt(address.substring(4, 5), 16) & 0x1) === Ledger.Qi;\n\n    return { zone: toZone(address.substring(0, 4)), ledger: isQiLedger ? Ledger.Qi : Ledger.Quai };\n}\n\n/**\n * Determines the transaction type based on the sender and recipient addresses. The function checks if both addresses\n * are UTXO addresses, in which case it returns 2. If only the sender address is a UTXO address, it returns 1.\n * Otherwise, it returns 0.\n *\n * @category Utils\n * @param {string | null} from - The sender address. If null, the function returns 0.\n * @param {string | null} to - The recipient address. If null, the function returns 0.\n * @returns {number} The transaction type based on the addresses.\n */\nexport function getTxType(from: string | null, to: string | null): number {\n    if (from === null || to === null) return 0;\n    const senderAddressIsQi = isQiAddress(from);\n    const recipientAddressIsQi = isQiAddress(to);\n\n    switch (true) {\n        case senderAddressIsQi && recipientAddressIsQi:\n            return 2;\n        case senderAddressIsQi && !recipientAddressIsQi:\n            return 1;\n        default:\n            return 0;\n    }\n}\n\n/**\n * Location of a chain within the Quai hierarchy\n *\n * Prime = [] region[0] = [0] zone[1,2] = [1, 2]\n *\n * @param shard - The shard to get the location for\n * @returns The location of the chain within the Quai hierarchy\n */\nexport function getNodeLocationFromZone(zone: Zone): NodeLocation {\n    const zoneId = zone.slice(2);\n    if (zoneId.length > 2) {\n        throw new Error(`Invalid zone: ${zone}`);\n    } else if (zoneId.length === 0) {\n        return [];\n    }\n    return zoneId.split('').map(Number);\n}\n\nexport function getZoneFromNodeLocation(location: NodeLocation): Zone {\n    if (location.length > 2) {\n        throw new Error('Invalid location');\n    }\n    return toZone(`0x${location.join('')}`);\n}\n","import {\n    defineProperties,\n    getBigInt,\n    getNumber,\n    hexlify,\n    resolveProperties,\n    assert,\n    assertArgument,\n    isError,\n    makeError,\n} from '../utils/index.js';\nimport { computeAddress } from '../address/index.js';\nimport { accessListify } from '../transaction/index.js';\n\nimport type { AddressLike } from '../address/index.js';\nimport type { BigNumberish, EventEmitterable } from '../utils/index.js';\nimport type { Signature } from '../crypto/index.js';\nimport type { AccessList, AccessListish } from '../transaction/index.js';\n\nimport type { ContractRunner } from '../contract/index.js';\nimport type { Network } from './network.js';\nimport type { Outpoint, OutpointDeltas, TxInputJson } from '../transaction/utxo.js';\nimport type { TxInput, TxOutput } from '../transaction/utxo.js';\nimport type { Zone, Shard } from '../constants/index.js';\nimport type { txpoolContentResponse, txpoolInspectResponse } from './txpool.js';\nimport { EtxParams, UncleParams } from './formatting.js';\n\nconst BN_0 = BigInt(0);\n\n/**\n * A **BlockTag** specifies a specific block.\n *\n * **numeric value** - specifies the block height, where the genesis block is block 0; many operations accept a negative\n * value which indicates the block number should be deducted from the most recent block. A numeric value may be a\n * `number`, `bigint`, or a decimal of hex string.\n *\n * **blockhash** - specifies a specific block by its blockhash; this allows potentially orphaned blocks to be specifed,\n * without ambiguity, but many backends do not support this for some operations.\n *\n * @category Providers\n */\nexport type BlockTag = BigNumberish | string;\n\nimport {\n    BlockHeaderParams,\n    BlockParams,\n    ExternalTransactionResponseParams,\n    LogParams,\n    QiTransactionResponseParams,\n    QuaiTransactionResponseParams,\n    TransactionReceiptParams,\n    WoHeaderParams,\n} from './formatting.js';\nimport { WorkObjectLike } from '../transaction/work-object.js';\nimport { QiTransactionLike } from '../transaction/qi-transaction.js';\nimport { QuaiTransactionLike } from '../transaction/quai-transaction.js';\nimport { toShard, toZone } from '../constants/index.js';\nimport { getZoneFromNodeLocation, getZoneForAddress } from '../utils/shards.js';\nimport { QiPerformActionTransaction } from './abstract-provider.js';\n\n/**\n * Get the value if it is not null or undefined.\n *\n * @ignore\n * @param {undefined | null | T} value - The value to check.\n * @returns {null | T} The value if not null or undefined, otherwise null.\n */\nfunction getValue<T>(value: undefined | null | T): null | T {\n    if (value == null) {\n        return null;\n    }\n    return value;\n}\n\n/**\n * Convert a value to a JSON-friendly string.\n *\n * @ignore\n * @param {null | bigint | string} value - The value to convert.\n * @returns {null | string} The JSON-friendly string or null.\n */\nfunction toJson(value: null | bigint | string): null | string {\n    if (value == null) {\n        return null;\n    }\n    return value.toString();\n}\n\n/**\n * A **FeeData** wraps all the fee-related values associated with the network.\n *\n * @category Providers\n */\nexport class FeeData {\n    /**\n     * The gas price for legacy networks.\n     */\n    readonly gasPrice!: null | bigint;\n\n    /**\n     * The additional amount to pay per gas to encourage a validator to include the transaction.\n     *\n     * The purpose of this is to compensate the validator for the adjusted risk for including a given transaction.\n     *\n     * This will be `null` on legacy networks (i.e. [pre-EIP-1559](https://eips.ethereum.org/EIPS/eip-1559))\n     */\n    readonly minerTip!: null | bigint;\n\n    /**\n     * Creates a new FeeData for `gasPrice`, `gasPrice` and `minerTip`.\n     *\n     * @param {null | bigint} [gasPrice] - The gas price.\n     * @param {null | bigint} [gasPrice] - The maximum fee per gas.\n     * @param {null | bigint} [minerTip] - The maximum priority fee per gas.\n     */\n    constructor(gasPrice?: null | bigint, minerTip?: null | bigint) {\n        defineProperties<FeeData>(this, {\n            gasPrice: getValue(gasPrice),\n            minerTip: getValue(minerTip),\n        });\n    }\n\n    /**\n     * Returns a JSON-friendly value.\n     *\n     * @returns {any} The JSON-friendly value.\n     */\n    toJSON(): any {\n        const { gasPrice, minerTip } = this;\n        return {\n            _type: 'FeeData',\n            gasPrice: toJson(gasPrice),\n            minerTip: toJson(minerTip),\n        };\n    }\n}\n\n/**\n * Determines the address from a transaction request.\n *\n * @param {TransactionRequest} tx - The transaction request.\n * @returns {AddressLike} The address from the transaction request.\n * @throws {Error} If unable to determine the address.\n */\nexport function addressFromTransactionRequest(tx: TransactionRequest): AddressLike {\n    if ('from' in tx && !!tx.from) {\n        return tx.from;\n    }\n    if ('txInputs' in tx && !!tx.txInputs) {\n        const inputs = tx.txInputs as TxInput[];\n        return computeAddress(inputs[0].pubkey);\n    }\n    if ('txIn' in tx && !!tx.txIn) {\n        const inputs = tx.txIn as TxInputJson[];\n        return computeAddress(inputs[0].pubkey);\n    }\n    if ('to' in tx && !!tx.to) {\n        return tx.to as AddressLike;\n    }\n    throw new Error('Unable to determine address from transaction inputs, from or to field');\n}\n\n/**\n * A **TransactionRequest** is a transactions with potentially various properties not defined, or with less strict types\n * for its values.\n *\n * This is used to pass to various operations, which will internally coerce any types and populate any necessary values.\n *\n * @category Providers\n */\nexport type TransactionRequest = QuaiTransactionRequest | QiTransactionRequest;\n\n/**\n * A **QuaiTransactionRequest** is a Quai transaction with potentially various properties not defined, or with less\n * strict types for its values.\n *\n * @category Providers\n */\nexport interface QuaiTransactionRequest {\n    /**\n     * The transaction type. Quai transactions are always type 0.\n     */\n    type?: null | number;\n\n    /**\n     * The target of the transaction.\n     */\n    to?: null | AddressLike;\n\n    /**\n     * The sender of the transaction.\n     */\n    from: AddressLike;\n\n    /**\n     * The nonce of the transaction, used to prevent replay attacks.\n     */\n    nonce?: null | number;\n\n    /**\n     * The maximum amount of gas to allow this transaction to consume.\n     */\n    gasLimit?: null | BigNumberish;\n\n    /**\n     * The gas price to use for the transaction.\n     */\n    gasPrice?: null | BigNumberish;\n\n    /**\n     * The tip to paid directly to the miner of the transaction.\n     */\n    minerTip?: null | BigNumberish;\n\n    /**\n     * The transaction data.\n     */\n    data?: null | string;\n\n    /**\n     * The transaction value (in wei).\n     */\n    value?: null | BigNumberish;\n\n    /**\n     * The chain ID for the network this transaction is valid on.\n     */\n    chainId?: null | BigNumberish;\n\n    /**\n     * The [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930) access list. Storage slots included in the access list\n     * are warmed by pre-loading them, so their initial cost to fetch is guaranteed, but then each additional access is\n     * cheaper.\n     */\n    accessList?: null | AccessListish;\n\n    /**\n     * A custom object, which can be passed along for network-specific values.\n     */\n    customData?: any;\n\n    /**\n     * When using `call` or `estimateGas`, this allows a specific block to be queried. Many backends do not support this\n     * and when unsupported errors are silently squelched and `\"latest\"` is used.\n     */\n    blockTag?: BlockTag;\n}\n\n/**\n * A **QiTransactionRequest** is a Qi UTXO transaction with potentially various properties not defined, or with less\n * strict types for its values.\n *\n * @category Providers\n */\nexport interface QiTransactionRequest {\n    /**\n     * The transaction type.\n     */\n    type?: null | number;\n\n    /**\n     * The chain ID for the network this transaction is valid on.\n     */\n    chainId?: null | BigNumberish;\n\n    /**\n     * The inputs for the transaction.\n     */\n    txInputs?: null | Array<TxInput>;\n\n    /**\n     * The outputs for the transaction.\n     */\n    txOutputs?: null | Array<TxOutput>;\n}\n\n/**\n * A **PreparedTransactionRequest** is identical to a {@link TransactionRequest | **TransactionRequest**} except all the\n * property types are strictly enforced.\n *\n * @category Providers\n */\nexport type PreparedTransactionRequest = QuaiPreparedTransactionRequest | QiPreparedTransactionRequest;\n\n/**\n * A **QuaiPreparedTransactionRequest** is a Quai transaction with potentially all properties strictly enforced.\n *\n * @category Providers\n */\nexport interface QuaiPreparedTransactionRequest {\n    /**\n     * The transaction type.\n     */\n    type?: number;\n\n    /**\n     * The target of the transaction.\n     */\n    to?: AddressLike;\n\n    /**\n     * The sender of the transaction.\n     */\n    from: AddressLike;\n\n    /**\n     * The nonce of the transaction, used to prevent replay attacks.\n     */\n    nonce?: number;\n\n    /**\n     * The maximum amount of gas to allow this transaction to consume.\n     */\n    gasLimit?: bigint;\n\n    /**\n     * The gas price to use for the transaction.\n     */\n    gasPrice?: bigint;\n\n    /**\n     * The fee paid directly to the miner of the transaction.\n     */\n    minerTip?: bigint;\n\n    /**\n     * The transaction data.\n     */\n    data?: string;\n\n    /**\n     * The transaction value (in wei).\n     */\n    value?: bigint;\n\n    /**\n     * The chain ID for the network this transaction is valid on.\n     */\n    chainId?: bigint;\n\n    /**\n     * The [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930) access list. Storage slots included in the access list\n     * are warmed by pre-loading them, so their initial cost to fetch is guaranteed, but then each additional access is\n     * cheaper.\n     */\n    accessList?: AccessList;\n\n    /**\n     * A custom object, which can be passed along for network-specific values.\n     */\n    customData?: any;\n\n    /**\n     * When using `call` or `estimateGas`, this allows a specific block to be queried. Many backends do not support this\n     * and when unsupported errors are silently squelched and `\"latest\"` is used.\n     */\n    blockTag?: BlockTag;\n}\n\n/**\n * A **QiPreparedTransactionRequest** is a Qi UTXO transaction with all properties strictly enforced.\n *\n * @category Providers\n */\nexport interface QiPreparedTransactionRequest {\n    /**\n     * The transaction type.\n     */\n    type?: number;\n\n    /**\n     * The chain ID for the network this transaction is valid on.\n     */\n    chainId?: bigint;\n\n    /**\n     * The inputs for the transaction.\n     */\n    txInputs?: null | Array<TxInput>;\n\n    /**\n     * The outputs for the transaction.\n     */\n    txOutputs?: null | Array<TxOutput>;\n}\n\n/**\n * Returns a copy of `req` with all properties coerced to their strict types.\n *\n * @category Providers\n * @param {TransactionRequest} req - The transaction request to copy.\n * @returns {PreparedTransactionRequest} The prepared transaction request.\n * @throws {Error} If the request is invalid.\n */\nexport function copyRequest(req: TransactionRequest): PreparedTransactionRequest {\n    const result: any = {};\n\n    // These could be addresses or Addressables\n    if ('to' in req && req.to) {\n        result.to = req.to;\n    }\n    if ('from' in req && req.from) {\n        result.from = req.from;\n    }\n\n    if ('data' in req && req.data) {\n        result.data = hexlify(req.data);\n    }\n\n    const bigIntKeys = 'chainId,gasLimit,gasPrice,minerTip,value'.split(/,/);\n    for (const key of bigIntKeys) {\n        if (!(key in req) || (<any>req)[key] == null) {\n            continue;\n        }\n        result[key] = getBigInt((<any>req)[key], `request.${key}`);\n    }\n\n    const numberKeys = 'type,nonce'.split(/,/);\n    for (const key of numberKeys) {\n        if (!(key in req) || (<any>req)[key] == null) {\n            continue;\n        }\n        result[key] = getNumber((<any>req)[key], `request.${key}`);\n    }\n\n    if ('accessList' in req && req.accessList) {\n        result.accessList = accessListify(req.accessList);\n    }\n\n    if ('blockTag' in req) {\n        result.blockTag = req.blockTag;\n    }\n\n    if ('customData' in req) {\n        result.customData = req.customData;\n    }\n\n    if ('txInputs' in req && req.txInputs) {\n        result.txInputs = req.txInputs.map((entry) => ({ ...entry }));\n    }\n\n    if ('txOutputs' in req && req.txOutputs) {\n        result.txOutputs = req.txOutputs.map((entry) => ({ ...entry }));\n    }\n\n    return result;\n}\n\n/**\n * An Interface to indicate a {@link Block | **Block**} has been included in the blockchain. This asserts a Type Guard\n * that necessary properties are non-null.\n *\n * Before a block is included, it is a pending block.\n *\n * @category Providers\n */\nexport interface MinedBlock extends Block {}\n\n/**\n * Represents the header of a block.\n *\n * @category Providers\n */\nexport class BlockHeader implements BlockHeaderParams {\n    readonly baseFeePerGas!: null | bigint;\n    readonly efficiencyScore: bigint;\n    readonly etxEligibleSlices: string;\n    readonly etxSetRoot: string;\n    readonly evmRoot!: string;\n    readonly expansionNumber: number;\n    readonly etxRollupRoot!: string;\n    readonly outboundEtxsRoot!: string;\n    readonly extraData!: string;\n    readonly gasLimit!: bigint;\n    readonly gasUsed!: bigint;\n    readonly interlinkRootHash: string;\n    readonly manifestHash!: Array<string>;\n    readonly number!: Array<number>;\n    readonly parentDeltaEntropy!: Array<bigint>;\n    readonly parentEntropy!: Array<bigint>;\n    readonly parentHash!: Array<string>;\n    readonly parentUncledDeltaEntropy: Array<bigint>;\n    readonly primeTerminusHash: string;\n    readonly quaiStateSize!: bigint;\n    readonly receiptsRoot!: string;\n    readonly uncleHash!: string;\n    readonly size!: bigint;\n    readonly stateLimit!: bigint;\n    readonly stateUsed!: bigint;\n    readonly thresholdCount: bigint;\n    readonly transactionsRoot!: string;\n    readonly uncledEntropy: bigint;\n    readonly utxoRoot!: string;\n    readonly exchangeRate!: bigint;\n    readonly quaiToQi!: bigint;\n    readonly qiToQuai!: bigint;\n    readonly secondaryCoinbase!: string;\n\n    constructor(params: BlockHeaderParams) {\n        this.baseFeePerGas = params.baseFeePerGas;\n        this.efficiencyScore = params.efficiencyScore;\n        this.etxEligibleSlices = params.etxEligibleSlices;\n        this.etxSetRoot = params.etxSetRoot;\n        this.evmRoot = params.evmRoot;\n        this.expansionNumber = params.expansionNumber;\n        this.etxRollupRoot = params.etxRollupRoot;\n        this.outboundEtxsRoot = params.outboundEtxsRoot;\n        this.extraData = params.extraData;\n        this.gasLimit = params.gasLimit;\n        this.gasUsed = params.gasUsed;\n        this.interlinkRootHash = params.interlinkRootHash;\n        this.manifestHash = params.manifestHash;\n        this.number = params.number;\n        this.parentDeltaEntropy = params.parentDeltaEntropy;\n        this.parentEntropy = params.parentEntropy;\n        this.parentHash = params.parentHash;\n        this.parentUncledDeltaEntropy = params.parentUncledDeltaEntropy;\n        this.primeTerminusHash = params.primeTerminusHash;\n        this.quaiStateSize = params.quaiStateSize;\n        this.receiptsRoot = params.receiptsRoot;\n        this.uncleHash = params.uncleHash;\n        this.size = params.size;\n        this.stateLimit = params.stateLimit;\n        this.stateUsed = params.stateUsed;\n        this.thresholdCount = params.thresholdCount;\n        this.transactionsRoot = params.transactionsRoot;\n        this.uncledEntropy = params.uncledEntropy;\n        this.utxoRoot = params.utxoRoot;\n        this.exchangeRate = params.exchangeRate;\n        this.quaiToQi = params.quaiToQi;\n        this.qiToQuai = params.qiToQuai;\n        this.secondaryCoinbase = params.secondaryCoinbase;\n    }\n\n    toJSON(): BlockHeaderParams {\n        return {\n            ...this,\n        };\n    }\n}\n\n/**\n * Represents the header of a work object.\n *\n * @category Providers\n */\nexport class Uncle implements UncleParams {\n    readonly primaryCoinbase: string;\n    readonly difficulty!: string;\n    readonly headerHash!: string;\n    readonly location!: string;\n    readonly mixHash!: string;\n    readonly nonce!: string;\n    readonly number!: number;\n    readonly parentHash!: string;\n    readonly timestamp!: string;\n    readonly txHash!: string;\n    readonly lock!: number;\n\n    /**\n     * Creates a new Uncle instance.\n     *\n     * @param {UncleParams} params - The parameters for the Uncle.\n     */\n    constructor(params: WoHeaderParams) {\n        this.primaryCoinbase = params.primaryCoinbase;\n        this.difficulty = params.difficulty;\n        this.headerHash = params.headerHash;\n        this.location = params.location;\n        this.mixHash = params.mixHash;\n        this.nonce = params.nonce;\n        this.number = params.number;\n        this.parentHash = params.parentHash;\n        this.timestamp = params.timestamp;\n        this.txHash = params.txHash;\n        this.lock = params.lock;\n    }\n\n    toJSON(): WoHeaderParams {\n        return {\n            primaryCoinbase: this.primaryCoinbase,\n            difficulty: this.difficulty,\n            headerHash: this.headerHash,\n            location: this.location,\n            mixHash: this.mixHash,\n            nonce: this.nonce,\n            number: this.number,\n            parentHash: this.parentHash,\n            timestamp: this.timestamp,\n            txHash: this.txHash,\n            lock: this.lock,\n        };\n    }\n}\n\n/**\n * A **Block** represents the data associated with a full block on Ethereum.\n *\n * @category Providers\n */\nexport class Block implements BlockParams, Iterable<string> {\n    readonly #outboundEtxs!: Array<string | ExternalTransactionResponse>;\n    readonly hash: string;\n    readonly header: BlockHeader;\n    readonly interlinkHashes: Array<string>; // New parameter\n    readonly size!: bigint;\n    readonly subManifest!: Array<string>;\n    readonly totalEntropy!: bigint;\n    readonly #transactions!: Array<\n        string | QuaiTransactionResponse | QiTransactionResponse | ExternalTransactionResponse\n    >;\n    readonly uncles!: Array<Uncle | string>;\n    readonly woHeader: Uncle;\n    readonly workShares!: Array<Uncle | string>;\n    /**\n     * The provider connected to the block used to fetch additional details if necessary.\n     */\n    readonly provider!: Provider;\n\n    /**\n     * Create a new **Block** object.\n     *\n     * This should generally not be necessary as the unless implementing a low-level library.\n     *\n     * @param {BlockParams} block - The block parameters.\n     * @param {Provider} provider - The provider.\n     */\n    constructor(block: BlockParams, provider: Provider) {\n        this.#transactions = block.transactions.map((tx) => {\n            if (typeof tx === 'string') {\n                return tx;\n            }\n            if ('originatingTxHash' in tx) {\n                return new ExternalTransactionResponse(tx as ExternalTransactionResponseParams, provider);\n            }\n            if ('from' in tx) {\n                return new QuaiTransactionResponse(tx, provider);\n            }\n            return new QiTransactionResponse(tx as QiTransactionResponseParams, provider);\n        });\n\n        this.#outboundEtxs = block.outboundEtxs.map((tx) => {\n            if (typeof tx !== 'string') {\n                return new ExternalTransactionResponse(tx, provider);\n            }\n            return tx;\n        });\n\n        this.hash = block.hash;\n        this.header = new BlockHeader(block.header);\n        this.interlinkHashes = block.interlinkHashes;\n        this.size = block.size;\n        this.subManifest = block.subManifest;\n        this.totalEntropy = block.totalEntropy;\n        this.uncles = block.uncles.map((uncle) => {\n            if (typeof uncle === 'string') {\n                return uncle;\n            }\n            return new Uncle(uncle);\n        });\n        this.woHeader = new Uncle(block.woHeader);\n        this.workShares = block.workShares.map((workShare) => {\n            if (typeof workShare === 'string') {\n                return workShare;\n            }\n            return new Uncle(workShare);\n        });\n        this.provider = provider;\n    }\n\n    /**\n     * Returns the list of transaction hashes, in the order they were executed within the block.\n     *\n     * @returns {ReadonlyArray<string>} The list of transaction hashes.\n     */\n    get transactions(): ReadonlyArray<string> {\n        return this.#transactions.map((tx) => {\n            if (typeof tx === 'string') {\n                return tx;\n            }\n            return tx.hash;\n        });\n    }\n\n    /**\n     * Returns the list of extended transaction hashes, in the order they were executed within the block.\n     *\n     * @returns {ReadonlyArray<string>} The list of extended transaction hashes.\n     */\n    get outboundEtxs(): ReadonlyArray<string> {\n        return this.#outboundEtxs.map((tx) => {\n            if (typeof tx === 'string') {\n                return tx;\n            }\n            return tx.hash;\n        });\n    }\n\n    /**\n     * Returns the complete transactions, in the order they were executed within the block.\n     *\n     * This is only available for blocks which prefetched transactions, by passing `true` to `prefetchTxs` into\n     * {@link Provider.getBlock | **getBlock**}.\n     *\n     * @returns {TransactionResponse[]} The list of prefetched transactions.\n     * @throws {Error} If the transactions were not prefetched.\n     */\n    get prefetchedTransactions(): Array<TransactionResponse> {\n        const txs = this.#transactions.slice();\n\n        // Doesn't matter...\n        if (txs.length === 0) {\n            return [];\n        }\n\n        // Make sure we prefetched the transactions\n        assert(\n            typeof txs[0] === 'object',\n            'transactions were not prefetched with block request',\n            'UNSUPPORTED_OPERATION',\n            {\n                operation: 'transactionResponses()',\n            },\n        );\n\n        return <Array<TransactionResponse>>txs;\n    }\n\n    /**\n     * Returns the complete extended transactions, in the order they were executed within the block.\n     *\n     * This is only available for blocks which prefetched transactions, by passing `true` to `prefetchTxs` into\n     * {@link Provider.getBlock | **getBlock**}.\n     *\n     * @returns {TransactionResponse[]} The list of prefetched extended transactions.\n     * @throws {Error} If the transactions were not prefetched.\n     */\n    get prefetchedExtTransactions(): Array<ExternalTransactionResponse> {\n        const txs = this.#outboundEtxs.slice();\n\n        // Doesn't matter...\n        if (txs.length === 0) {\n            return [];\n        }\n\n        // Make sure we prefetched the transactions\n        assert(\n            typeof txs[0] === 'object',\n            'transactions were not prefetched with block request',\n            'UNSUPPORTED_OPERATION',\n            {\n                operation: 'transactionResponses()',\n            },\n        );\n\n        return <Array<ExternalTransactionResponse>>txs;\n    }\n\n    /**\n     * Returns a JSON-friendly value.\n     *\n     * @returns {any} The JSON-friendly value.\n     */\n    toJSON(): BlockParams {\n        const { hash, header, interlinkHashes, size, subManifest, totalEntropy, uncles, woHeader, workShares } = this;\n\n        // Using getters to retrieve the transactions and extTransactions\n        const transactions = this.transactions;\n        const outboundEtxs = this.outboundEtxs;\n\n        return {\n            outboundEtxs, // Includes the extended transaction hashes or full transactions based on the prefetched data\n            hash,\n            header: header.toJSON(),\n            interlinkHashes,\n            transactions, // Includes the transaction hashes or full transactions based on the prefetched data\n            size: size,\n            subManifest,\n            totalEntropy: totalEntropy,\n            uncles: uncles.map((uncle) => {\n                if (typeof uncle === 'string') {\n                    return uncle;\n                }\n                return uncle.toJSON();\n            }),\n            woHeader: woHeader.toJSON(),\n            workShares: workShares.map((workShare) => {\n                if (typeof workShare === 'string') {\n                    return workShare;\n                }\n                return workShare.toJSON();\n            }),\n        };\n    }\n\n    [Symbol.iterator](): Iterator<string> {\n        let index = 0;\n        const txs = this.transactions;\n        return {\n            next: () => {\n                if (index < this.length) {\n                    return {\n                        value: txs[index++],\n                        done: false,\n                    };\n                }\n                return { value: undefined, done: true };\n            },\n        };\n    }\n\n    /**\n     * The number of transactions in this block.\n     *\n     * @returns {number} The number of transactions.\n     */\n    get length(): number {\n        return this.#transactions.length;\n    }\n\n    /**\n     * The [Date](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date) this block was\n     * included at.\n     *\n     * @returns {null | Date} The date this block was included at, or null if the timestamp is not available.\n     */\n    get date(): null | Date {\n        const timestampHex = this.woHeader.timestamp;\n        if (!timestampHex) {\n            return null;\n        }\n        const timestamp = parseInt(timestampHex, 16);\n        return new Date(timestamp * 1000);\n    }\n\n    /**\n     * Get the transaction at `index` within this block.\n     *\n     * @param {number | string} indexOrHash - The index or hash of the transaction.\n     * @returns {Promise<TransactionResponse>} A promise resolving to the transaction.\n     * @throws {Error} If the transaction is not found.\n     */\n    async getTransaction(indexOrHash: number | string): Promise<TransactionResponse | ExternalTransactionResponse> {\n        // Find the internal value by its index or hash\n        let tx: string | TransactionResponse | ExternalTransactionResponse | undefined = undefined;\n        if (typeof indexOrHash === 'number') {\n            tx = this.#transactions[indexOrHash];\n        } else {\n            const hash = indexOrHash.toLowerCase();\n            for (const v of this.#transactions) {\n                if (typeof v === 'string') {\n                    if (v !== hash) {\n                        continue;\n                    }\n                    tx = v;\n                    break;\n                } else {\n                    if (v.hash === hash) {\n                        continue;\n                    }\n                    tx = v;\n                    break;\n                }\n            }\n        }\n        if (tx == null) {\n            throw new Error('no such tx');\n        }\n\n        if (typeof tx === 'string') {\n            return <TransactionResponse>await this.provider.getTransaction(tx);\n        } else {\n            return tx;\n        }\n    }\n\n    /**\n     * Get the extended transaction at `index` within this block.\n     *\n     * @param {number | string} indexOrHash - The index or hash of the extended transaction.\n     * @returns {Promise<TransactionResponse>} A promise resolving to the extended transaction.\n     * @throws {Error} If the extended transaction is not found.\n     */\n    async getExtTransaction(indexOrHash: number | string): Promise<ExternalTransactionResponse> {\n        // Find the internal value by its index or hash\n        let tx: string | ExternalTransactionResponse | undefined = undefined;\n        if (typeof indexOrHash === 'number') {\n            tx = this.#outboundEtxs[indexOrHash];\n        } else {\n            const hash = indexOrHash.toLowerCase();\n            for (const v of this.#outboundEtxs) {\n                if (typeof v === 'string') {\n                    if (v !== hash) {\n                        continue;\n                    }\n                    tx = v;\n                    break;\n                } else {\n                    if (v.hash === hash) {\n                        continue;\n                    }\n                    tx = v;\n                    break;\n                }\n            }\n        }\n        if (tx == null) {\n            throw new Error('no such tx');\n        }\n\n        if (typeof tx === 'string') {\n            throw new Error(\"External Transaction isn't prefetched\");\n        } else {\n            return tx;\n        }\n    }\n\n    /**\n     * If a **Block** was fetched with a request to include the transactions this will allow synchronous access to those\n     * transactions.\n     *\n     * If the transactions were not prefetched, this will throw.\n     *\n     * @param {number | string} indexOrHash - The index or hash of the transaction.\n     * @returns {TransactionResponse} The transaction.\n     * @throws {Error} If the transaction is not found.\n     */\n    getPrefetchedTransaction(indexOrHash: number | string): TransactionResponse {\n        const txs = this.prefetchedTransactions;\n        if (typeof indexOrHash === 'number') {\n            return txs[indexOrHash];\n        }\n\n        indexOrHash = indexOrHash.toLowerCase();\n        for (const tx of txs) {\n            if (tx.hash === indexOrHash) {\n                return tx;\n            }\n        }\n\n        assertArgument(false, 'no matching transaction', 'indexOrHash', indexOrHash);\n    }\n\n    /**\n     * Returns true if this block been mined. This provides a type guard for all properties on a\n     * {@link MinedBlock | **MinedBlock**}.\n     *\n     * @returns {boolean} True if the block has been mined.\n     */\n    isMined(): this is MinedBlock {\n        return !!this.hash;\n    }\n\n    /**\n     * @ignore\n     */\n    orphanedEvent(): OrphanFilter {\n        if (!this.isMined() || !this.woHeader.number) {\n            throw new Error('');\n        }\n        return createOrphanedBlockFilter({\n            hash: this.hash!,\n            number: this.woHeader.number!,\n        });\n    }\n}\n\n//////////////////////\n// Log\n\n/**\n * A **Log** in Ethereum represents an event that has been included in a transaction using the `LOG*` opcodes, which are\n * most commonly used by Solidity's emit for announcing events.\n *\n * @category Providers\n */\nexport class Log implements LogParams {\n    /**\n     * The provider connected to the log used to fetch additional details if necessary.\n     */\n    readonly provider: Provider;\n\n    /**\n     * The transaction hash of the transaction this log occurred in. Use the\n     * {@link Log.getTransaction | **Log.getTransaction**} to get the\n     * {@link TransactionResponse | **TransactionResponse}.\n     */\n    readonly transactionHash!: string;\n\n    /**\n     * The block hash of the block this log occurred in. Use the {@link Log.getBlock | **Log.getBlock**} to get the\n     * {@link Block | **Block**}.\n     */\n    readonly blockHash!: string;\n\n    /**\n     * The block number of the block this log occurred in. It is preferred to use the {@link Block.hash | **Block.hash**}\n     * when fetching the related {@link Block | **Block**}, since in the case of an orphaned block, the block at that\n     * height may have changed.\n     */\n    readonly blockNumber!: number;\n\n    /**\n     * If the **Log** represents a block that was removed due to an orphaned block, this will be true.\n     *\n     * This can only happen within an orphan event listener.\n     */\n    readonly removed!: boolean;\n\n    /**\n     * The address of the contract that emitted this log.\n     */\n    readonly address!: string;\n\n    /**\n     * The data included in this log when it was emitted.\n     */\n    readonly data!: string;\n\n    /**\n     * The indexed topics included in this log when it was emitted.\n     *\n     * All topics are included in the bloom filters, so they can be efficiently filtered using the\n     * {@link Provider.getLogs | **Provider.getLogs**} method.\n     */\n    readonly topics!: ReadonlyArray<string>;\n\n    /**\n     * The index within the block this log occurred at. This is generally not useful to developers, but can be used with\n     * the various roots to proof inclusion within a block.\n     */\n    readonly index!: number;\n\n    /**\n     * The index within the transaction of this log.\n     */\n    readonly transactionIndex!: number;\n\n    /**\n     * @ignore\n     */\n    constructor(log: LogParams, provider: Provider) {\n        this.provider = provider;\n\n        const topics = Object.freeze(log.topics.slice());\n        defineProperties<Log>(this, {\n            transactionHash: log.transactionHash,\n            blockHash: log.blockHash,\n            blockNumber: log.blockNumber,\n\n            removed: log.removed,\n\n            address: log.address,\n            data: log.data,\n\n            topics,\n\n            index: log.index,\n            transactionIndex: log.transactionIndex,\n        });\n    }\n\n    /**\n     * Returns a JSON-compatible object.\n     */\n    toJSON(): any {\n        const { address, blockHash, blockNumber, data, index, removed, topics, transactionHash, transactionIndex } =\n            this;\n\n        return {\n            _type: 'log',\n            address,\n            blockHash,\n            blockNumber,\n            data,\n            index,\n            removed,\n            topics,\n            transactionHash,\n            transactionIndex,\n        };\n    }\n\n    /**\n     * Returns the block that this log occurred in.\n     *\n     * @param {Shard} shard - The shard to fetch the block from.\n     * @returns {Promise<Block>} A promise resolving to the block.\n     */\n    async getBlock(shard: Shard): Promise<Block> {\n        const block = await this.provider.getBlock(shard, this.blockHash);\n        assert(!!block, 'failed to find transaction', 'UNKNOWN_ERROR', {});\n        return block;\n    }\n\n    /**\n     * Returns the transaction that this log occurred in.\n     *\n     * @returns {Promise<TransactionResponse>} A promise resolving to the transaction.\n     */\n    async getTransaction(): Promise<TransactionResponse> {\n        const tx = await this.provider.getTransaction(this.transactionHash);\n        assert(!!tx, 'failed to find transaction', 'UNKNOWN_ERROR', {});\n        return tx as TransactionResponse;\n    }\n\n    /**\n     * Returns the transaction receipt fot the transaction that this log occurred in.\n     *\n     * @returns {Promise<TransactionReceipt>} A promise resolving to the transaction receipt.\n     */\n    async getTransactionReceipt(): Promise<TransactionReceipt> {\n        const receipt = await this.provider.getTransactionReceipt(this.transactionHash);\n        assert(!!receipt, 'failed to find transaction receipt', 'UNKNOWN_ERROR', {});\n        return receipt;\n    }\n\n    /**\n     * @ignore\n     */\n    removedEvent(): OrphanFilter {\n        return createRemovedLogFilter(this);\n    }\n}\n\n//////////////////////\n// Transaction Receipt\n\nexport function zoneFromHash(hash: string): Zone {\n    return toZone(hash.slice(0, 4));\n}\n\n/**\n * A **TransactionReceipt** includes additional information about a transaction that is only available after it has been\n * mined.\n *\n * @category Providers\n */\nexport class TransactionReceipt implements TransactionReceiptParams, Iterable<Log> {\n    /**\n     * The provider connected to the log used to fetch additional details if necessary.\n     */\n    readonly provider!: Provider;\n\n    /**\n     * The address the transaction was sent to.\n     */\n    readonly to!: null | string;\n\n    /**\n     * The sender of the transaction.\n     */\n    readonly from!: string;\n\n    /**\n     * The address of the contract if the transaction was directly responsible for deploying one.\n     *\n     * This is non-null **only** if the `to` is empty and the `data` was successfully executed as initcode.\n     */\n    readonly contractAddress!: null | string;\n\n    /**\n     * The transaction hash.\n     */\n    readonly hash!: string;\n\n    /**\n     * The index of this transaction within the block transactions.\n     */\n    readonly index!: number;\n\n    /**\n     * The block hash of the {@link Block | **Block**} this transaction was included in.\n     */\n    readonly blockHash!: string;\n\n    /**\n     * The block number of the {@link Block | **Block**} this transaction was included in.\n     */\n    readonly blockNumber!: number;\n\n    /**\n     * The bloom filter bytes that represent all logs that occurred within this transaction. This is generally not\n     * useful for most developers, but can be used to validate the included logs.\n     */\n    readonly logsBloom!: string;\n\n    /**\n     * The actual amount of gas used by this transaction.\n     *\n     * When creating a transaction, the amount of gas that will be used can only be approximated, but the sender must\n     * pay the gas fee for the entire gas limit. After the transaction, the difference is refunded.\n     */\n    readonly gasUsed!: bigint;\n\n    /**\n     * The amount of gas used by all transactions within the block for this and all transactions with a lower `index`.\n     *\n     * This is generally not useful for developers but can be used to validate certain aspects of execution.\n     */\n    readonly cumulativeGasUsed!: bigint;\n\n    /**\n     * The actual gas price used during execution.\n     *\n     * Due to the complexity of [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559) this value can only be caluclated\n     * after the transaction has been mined, snce the base fee is protocol-enforced.\n     */\n    readonly gasPrice!: bigint;\n\n    /**\n     * The [EIP-2718](https://eips.ethereum.org/EIPS/eip-2718) transaction type.\n     */\n    readonly type!: number;\n    //readonly byzantium!: boolean;\n\n    /**\n     * The status of this transaction, indicating success (i.e. `1`) or a revert (i.e. `0`).\n     *\n     * This is available in post-byzantium blocks, but some backends may backfill this value.\n     */\n    readonly status!: null | number;\n\n    /**\n     * The root hash of this transaction.\n     *\n     * This is no present and was only included in pre-byzantium blocks, but could be used to validate certain parts of\n     * the receipt.\n     */\n\n    readonly #logs: ReadonlyArray<Log>;\n\n    readonly outboundEtxs: ReadonlyArray<EtxParams> = [];\n\n    readonly etxType?: null | number;\n\n    readonly originatingTxHash?: null | string;\n\n    /**\n     * @ignore\n     */\n    constructor(tx: TransactionReceiptParams, provider: Provider) {\n        this.#logs = Object.freeze(Array.isArray(tx.logs) ? tx.logs.map((log) => new Log(log, provider)) : []);\n\n        let gasPrice = BN_0;\n        if (tx.effectiveGasPrice != null) {\n            gasPrice = tx.effectiveGasPrice;\n        } else if (tx.gasPrice != null) {\n            gasPrice = tx.gasPrice;\n        }\n        const outboundEtxs: EtxParams[] = tx.outboundEtxs\n            ? tx.outboundEtxs.map((etx) => {\n                  const safeConvert = (value: any, name: string) => {\n                      try {\n                          if (value != null) {\n                              return BigInt(value);\n                          }\n                          return null;\n                      } catch (error) {\n                          console.error(`Conversion to BigInt failed for ${name}: ${value}, error: ${error}`);\n                          return null;\n                      }\n                  };\n\n                  return {\n                      type: etx.type,\n                      nonce: etx.nonce,\n                      gasPrice: safeConvert(etx.gasPrice, 'gasPrice'),\n                      minerTip: safeConvert(etx.minerTip, 'minerTip'),\n                      gas: safeConvert(etx.gas, 'gas'),\n                      value: safeConvert(etx.value, 'value'),\n                      input: etx.input,\n                      to: etx.to,\n                      accessList: etx.accessList,\n                      chainId: safeConvert(etx.chainId, 'chainId'),\n                      from: etx.from,\n                      hash: etx.hash,\n                      originatingTxHash: etx.originatingTxHash,\n                      etxIndex: etx.etxIndex,\n                  };\n              })\n            : [];\n\n        defineProperties<TransactionReceipt>(this, {\n            provider,\n\n            to: tx.to,\n            from: tx.from,\n            contractAddress: tx.contractAddress,\n\n            hash: tx.hash,\n            index: tx.index,\n\n            blockHash: tx.blockHash,\n            blockNumber: tx.blockNumber,\n\n            logsBloom: tx.logsBloom,\n\n            gasUsed: tx.gasUsed,\n            cumulativeGasUsed: tx.cumulativeGasUsed,\n            gasPrice,\n\n            outboundEtxs: outboundEtxs,\n            type: tx.type,\n            status: tx.status,\n            etxType: tx.etxType,\n            originatingTxHash: tx.originatingTxHash,\n        });\n    }\n\n    /**\n     * The logs for this transaction.\n     */\n    get logs(): ReadonlyArray<Log> {\n        return this.#logs;\n    }\n\n    /**\n     * Returns a JSON-compatible representation.\n     */\n    toJSON(): any {\n        const {\n            to,\n            from,\n            contractAddress,\n            hash,\n            index,\n            blockHash,\n            blockNumber,\n            logsBloom,\n            logs, //byzantium,\n            status,\n            outboundEtxs,\n        } = this;\n\n        return {\n            _type: 'TransactionReceipt',\n            blockHash,\n            blockNumber,\n            contractAddress,\n            cumulativeGasUsed: toJson(this.cumulativeGasUsed),\n            from,\n            gasPrice: toJson(this.gasPrice),\n            gasUsed: toJson(this.gasUsed),\n            hash,\n            index,\n            logs,\n            logsBloom,\n            status,\n            to,\n            outboundEtxs: outboundEtxs ?? [],\n        };\n    }\n\n    /**\n     * @ignore\n     */\n    get length(): number {\n        return this.logs.length;\n    }\n\n    [Symbol.iterator](): Iterator<Log> {\n        let index = 0;\n        return {\n            next: () => {\n                if (index < this.length) {\n                    return { value: this.logs[index++], done: false };\n                }\n                return { value: undefined, done: true };\n            },\n        };\n    }\n\n    /**\n     * The total fee for this transaction, in wei.\n     */\n    get fee(): bigint {\n        return this.gasUsed * this.gasPrice;\n    }\n\n    /**\n     * Resolves to the block this transaction occurred in.\n     *\n     * @param {Shard} shard - The shard to fetch the block from.\n     * @returns {Promise<Block>} A promise resolving to the block.\n     * @throws {Error} If the block is not found.\n     */\n    async getBlock(shard: Shard): Promise<Block> {\n        const block = await this.provider.getBlock(shard, this.blockHash);\n        if (block == null) {\n            throw new Error('TODO');\n        }\n        return block;\n    }\n\n    /**\n     * Resolves to the transaction this transaction occurred in.\n     *\n     * @returns {Promise<TransactionResponse>} A promise resolving to the transaction.\n     * @throws {Error} If the transaction is not found.\n     */\n    async getTransaction(): Promise<TransactionResponse | ExternalTransactionResponse> {\n        const tx = await this.provider.getTransaction(this.hash);\n        if (tx == null) {\n            throw new Error('TODO');\n        }\n        return tx;\n    }\n\n    /**\n     * Resolves to the return value of the execution of this transaction.\n     *\n     * Support for this feature is limited, as it requires an archive node with the `debug_` or `trace_` API enabled.\n     *\n     * @returns {Promise<string>} A promise resolving to the return value of the transaction.\n     * @throws {Error} If the transaction is not found.\n     */\n    async getResult(): Promise<string> {\n        return <string>await this.provider.getTransactionResult(this.hash);\n    }\n\n    /**\n     * Resolves to the number of confirmations this transaction has.\n     *\n     * @returns {Promise<number>} A promise resolving to the number of confirmations.\n     * @throws {Error} If the block is not found.\n     */\n    async confirmations(): Promise<number> {\n        const zone = zoneFromHash(this.hash);\n        return (await this.provider.getBlockNumber(toShard(zone))) - this.blockNumber + 1;\n    }\n\n    /**\n     * @ignore\n     */\n    removedEvent(): OrphanFilter {\n        return createRemovedTransactionFilter(this);\n    }\n\n    /**\n     * @ignore\n     */\n    reorderedEvent(other?: TransactionResponse): OrphanFilter {\n        assert(!other || other.isMined(), \"unmined 'other' transction cannot be orphaned\", 'UNSUPPORTED_OPERATION', {\n            operation: 'reorderedEvent(other)',\n        });\n        return createReorderedTransactionFilter(this, other);\n    }\n}\n\n//////////////////////\n// Transaction Response\n\n/**\n * A **MinedTransactionResponse** is an interface representing a transaction which has been mined and allows for a type\n * guard for its property values being defined.\n *\n * @category Providers\n */\nexport type MinedTransactionResponse = QuaiMinedTransactionResponse | QiMinedTransactionResponse;\n\n/**\n * A **QuaiMinedTransactionResponse** is an interface representing Quai a transaction which has been mined.\n *\n * @category Providers\n */\nexport interface QuaiMinedTransactionResponse extends QuaiTransactionResponse {\n    /**\n     * The block number this transaction occurred in.\n     */\n    blockNumber: number;\n\n    /**\n     * The block hash this transaction occurred in.\n     */\n    blockHash: string;\n\n    /**\n     * The date this transaction occurred on.\n     */\n    date: Date;\n}\n\n/**\n * A **QiMinedTransactionResponse** is an interface representing Qi a transaction which has been mined.\n *\n * @category Providers\n */\nexport interface QiMinedTransactionResponse extends QiTransactionResponse {\n    /**\n     * The block number this transaction occurred in.\n     */\n    blockNumber: number;\n\n    /**\n     * The block hash this transaction occurred in.\n     */\n    blockHash: string;\n\n    /**\n     * The date this transaction occurred on.\n     */\n    date: Date;\n}\n\nexport class ExternalTransactionResponse implements QuaiTransactionLike, ExternalTransactionResponseParams {\n    /**\n     * The provider this is connected to, which will influence how its methods will resolve its async inspection\n     * methods.\n     */\n    readonly provider: Provider;\n\n    /**\n     * The block number of the block that this transaction was included in.\n     *\n     * This is `null` for pending transactions.\n     */\n    readonly blockNumber: null | number;\n\n    /**\n     * The blockHash of the block that this transaction was included in.\n     *\n     * This is `null` for pending transactions.\n     */\n    readonly blockHash: null | string;\n\n    /**\n     * The index within the block that this transaction resides at.\n     */\n    readonly index!: bigint;\n\n    /**\n     * The transaction hash.\n     */\n    readonly hash!: string;\n\n    /**\n     * The [EIP-2718](https://eips.ethereum.org/EIPS/eip-2718) transaction envelope type. This is `0` for legacy\n     * transactions types.\n     */\n    readonly type!: number;\n\n    /**\n     * The receiver of this transaction.\n     *\n     * If `null`, then the transaction is an initcode transaction. This means the result of executing the\n     * {@link ExternalTransactionResponse.data | **data** } will be deployed as a new contract on chain (assuming it does\n     * not revert) and the address may be computed using [getCreateAddress](../functions/getCreateAddress).\n     */\n    readonly to!: null | string;\n\n    /**\n     * The sender of this transaction. It is implicitly computed from the transaction pre-image hash (as the digest) and\n     * the {@link QuaiTransactionResponse.signature | **signature** } using ecrecover.\n     */\n    readonly from!: string;\n\n    /**\n     * The nonce, which is used to prevent replay attacks and offer a method to ensure transactions from a given sender\n     * are explicitly ordered.\n     *\n     * When sending a transaction, this must be equal to the number of transactions ever sent by\n     * {@link ExternalTransactionResponse.from | **from** }.\n     */\n    readonly nonce!: number;\n\n    /**\n     * The maximum units of gas this transaction can consume. If execution exceeds this, the entries transaction is\n     * reverted and the sender is charged for the full amount, despite not state changes being made.\n     */\n    readonly gasLimit!: bigint;\n\n    /**\n     * The data.\n     */\n    readonly data!: string;\n\n    /**\n     * The value, in wei. Use [formatEther](../functions/formatEther) to format this value as ether.\n     */\n    readonly value!: bigint;\n\n    /**\n     * The chain ID.\n     */\n    readonly chainId!: bigint;\n\n    /**\n     * The signature.\n     */\n    readonly signature!: Signature;\n\n    /**\n     * The [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930) access list for transaction types that support it,\n     * otherwise `null`.\n     */\n    readonly accessList!: null | AccessList;\n\n    readonly etxType!: null | number;\n\n    readonly originatingTxHash!: null | string;\n\n    readonly sender!: string;\n\n    readonly etxIndex!: number;\n\n    protected startBlock: number;\n\n    /**\n     * @ignore\n     */\n    constructor(tx: ExternalTransactionResponseParams, provider: Provider) {\n        this.provider = provider;\n\n        this.blockNumber = tx.blockNumber != null ? tx.blockNumber : null;\n        this.blockHash = tx.blockHash != null ? tx.blockHash : null;\n\n        this.hash = tx.hash;\n        this.index = tx.index;\n\n        this.type = tx.type;\n\n        this.from = tx.from;\n        this.to = tx.to || null;\n\n        this.gasLimit = tx.gasLimit;\n        this.nonce = tx.nonce;\n        this.data = tx.data;\n        this.value = tx.value;\n\n        this.chainId = tx.chainId;\n        this.signature = tx.signature;\n\n        this.accessList = tx.accessList != null ? tx.accessList : null;\n        this.startBlock = -1;\n        this.originatingTxHash = tx.originatingTxHash != null ? tx.originatingTxHash : null;\n        this.etxType = tx.etxType != null ? tx.etxType : null;\n        this.etxIndex = tx.etxIndex;\n    }\n\n    /**\n     * Returns a JSON-compatible representation of this transaction.\n     */\n    toJSON(): any {\n        const {\n            blockNumber,\n            blockHash,\n            index,\n            hash,\n            type,\n            to,\n            from,\n            nonce,\n            data,\n            signature,\n            accessList,\n            etxType,\n            originatingTxHash,\n            etxIndex,\n        } = this;\n        const result = {\n            _type: 'TransactionReceipt',\n            accessList,\n            blockNumber,\n            blockHash,\n            chainId: toJson(this.chainId),\n            data,\n            from,\n            gasLimit: toJson(this.gasLimit),\n            hash,\n            nonce,\n            signature,\n            to,\n            index,\n            type,\n            etxType,\n            originatingTxHash,\n            etxIndex,\n            value: toJson(this.value),\n        };\n\n        return result;\n    }\n\n    replaceableTransaction(startBlock: number): ExternalTransactionResponse {\n        assertArgument(Number.isInteger(startBlock) && startBlock >= 0, 'invalid startBlock', 'startBlock', startBlock);\n        const tx = new ExternalTransactionResponse(this, this.provider);\n        tx.startBlock = startBlock;\n        return tx;\n    }\n}\n\n/**\n * A **TransactionResponse** is an interface representing either a Quai or Qi transaction that has been mined into a\n * block.\n *\n * @category Providers\n */\nexport type TransactionResponse = QuaiTransactionResponse | QiTransactionResponse;\n\n/**\n * A **QuaiTransactionResponse** includes all properties about a Quai transaction that was sent to the network, which\n * may or may not be included in a block.\n *\n * The {@link TransactionResponse.isMined | **TransactionResponse.isMined**} can be used to check if the transaction has\n * been mined as well as type guard that the otherwise possibly `null` properties are defined.\n *\n * @category Providers\n */\nexport class QuaiTransactionResponse implements QuaiTransactionLike, QuaiTransactionResponseParams {\n    /**\n     * The provider this is connected to, which will influence how its methods will resolve its async inspection\n     * methods.\n     */\n    readonly provider: Provider;\n\n    /**\n     * The block number of the block that this transaction was included in.\n     *\n     * This is `null` for pending transactions.\n     */\n    readonly blockNumber: null | number;\n\n    /**\n     * The blockHash of the block that this transaction was included in.\n     *\n     * This is `null` for pending transactions.\n     */\n    readonly blockHash: null | string;\n\n    /**\n     * The index within the block that this transaction resides at.\n     */\n    readonly index!: bigint;\n\n    /**\n     * The transaction hash.\n     */\n    readonly hash!: string;\n\n    /**\n     * The [EIP-2718](https://eips.ethereum.org/EIPS/eip-2718) transaction envelope type. This is `0` for legacy\n     * transactions types.\n     */\n    readonly type!: number;\n\n    /**\n     * The receiver of this transaction.\n     *\n     * If `null`, then the transaction is an initcode transaction. This means the result of executing the\n     * {@link QuaiTransactionResponse.data | **data** } will be deployed as a new contract on chain (assuming it does not\n     * revert) and the address may be computed using [getCreateAddress](../functions/getCreateAddress).\n     */\n    readonly to!: null | string;\n\n    /**\n     * The sender of this transaction. It is implicitly computed from the transaction pre-image hash (as the digest) and\n     * the {@link QuaiTransactionResponse.signature | **signature** } using ecrecover.\n     */\n    readonly from!: string;\n\n    /**\n     * The nonce, which is used to prevent replay attacks and offer a method to ensure transactions from a given sender\n     * are explicitly ordered.\n     *\n     * When sending a transaction, this must be equal to the number of transactions ever sent by\n     * {@link QuaiTransactionResponse.from | **from** }.\n     */\n    readonly nonce!: number;\n\n    /**\n     * The maximum units of gas this transaction can consume. If execution exceeds this, the entries transaction is\n     * reverted and the sender is charged for the full amount, despite not state changes being made.\n     */\n    readonly gasLimit!: bigint;\n\n    /**\n     * The maximum priority fee (per unit of gas) to allow a validator to charge the sender. This is inclusive of the\n     * {@link QuaiTransactionResponse.gasPrice | **gasPrice** }.\n     */\n    readonly minerTip!: null | bigint;\n\n    /**\n     * The maximum fee (per unit of gas) to allow this transaction to charge the sender.\n     */\n    readonly gasPrice!: null | bigint;\n\n    /**\n     * The data.\n     */\n    readonly data!: string;\n\n    /**\n     * The value, in wei. Use [formatEther](../functions/formatEther) to format this value as ether.\n     */\n    readonly value!: bigint;\n\n    /**\n     * The chain ID.\n     */\n    readonly chainId!: bigint;\n\n    /**\n     * The signature.\n     */\n    readonly signature!: Signature;\n\n    /**\n     * The [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930) access list for transaction types that support it,\n     * otherwise `null`.\n     */\n    readonly accessList!: null | AccessList;\n\n    readonly etxType!: null | number;\n\n    readonly sender!: null | string;\n\n    readonly originatingTxHash!: null | string;\n\n    protected startBlock: number;\n\n    /**\n     * @ignore\n     */\n    constructor(tx: QuaiTransactionResponseParams, provider: Provider) {\n        this.provider = provider;\n\n        this.blockNumber = tx.blockNumber != null ? tx.blockNumber : null;\n        this.blockHash = tx.blockHash != null ? tx.blockHash : null;\n\n        this.hash = tx.hash;\n        this.index = tx.index;\n\n        this.type = tx.type;\n\n        this.from = tx.from;\n        this.to = tx.to || null;\n\n        this.gasLimit = tx.gasLimit;\n        this.nonce = tx.nonce;\n        this.data = tx.data;\n        this.value = tx.value;\n\n        this.minerTip = tx.minerTip != null ? tx.minerTip : null;\n        this.gasPrice = tx.gasPrice != null ? tx.gasPrice : null;\n\n        this.chainId = tx.chainId;\n        this.signature = tx.signature;\n\n        this.accessList = tx.accessList != null ? tx.accessList : null;\n        this.startBlock = -1;\n\n        this.etxType = tx.etxType != null ? tx.etxType : null;\n    }\n\n    /**\n     * Returns a JSON-compatible representation of this transaction.\n     */\n    toJSON(): any {\n        const { blockNumber, blockHash, index, hash, type, to, from, nonce, data, signature, accessList } = this;\n        const result = {\n            _type: 'TransactionReceipt',\n            accessList,\n            blockNumber,\n            blockHash,\n            chainId: toJson(this.chainId),\n            data,\n            from,\n            gasLimit: toJson(this.gasLimit),\n            hash,\n            gasPrice: toJson(this.gasPrice),\n            minerTip: toJson(this.minerTip),\n            nonce,\n            signature,\n            to,\n            index,\n            type,\n            value: toJson(this.value),\n        };\n\n        return result;\n    }\n\n    /**\n     * Resolves to the Block that this transaction was included in.\n     *\n     * This will return null if the transaction has not been included yet.\n     *\n     * @param {Shard} shard - The shard to fetch the block from.\n     * @returns {null | Promise<Block>} A promise resolving to the block.\n     */\n    async getBlock(shard: Shard): Promise<null | Block> {\n        let blockNumber = this.blockNumber;\n        if (blockNumber == null) {\n            const tx = await this.getTransaction();\n            if (tx) {\n                blockNumber = tx.blockNumber;\n            }\n        }\n        if (blockNumber == null) {\n            return null;\n        }\n        const block = this.provider.getBlock(shard, blockNumber);\n        if (block == null) {\n            throw new Error('TODO');\n        }\n        return block;\n    }\n\n    /**\n     * Resolves to this transaction being re-requested from the provider. This can be used if you have an unmined\n     * transaction and wish to get an up-to-date populated instance.\n     *\n     * @returns {null | Promise<TransactionResponse>} A promise resolving to the transaction, or null if not found.\n     */\n    async getTransaction(): Promise<null | QuaiTransactionResponse> {\n        const transaction = this.provider.getTransaction(this.hash);\n        if (transaction instanceof QuaiTransactionResponse) {\n            return transaction as QuaiTransactionResponse;\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Resolve to the number of confirmations this transaction has.\n     *\n     * @returns {Promise<number>} A promise resolving to the number of confirmations.\n     * @throws {Error} If the block is not found.\n     */\n    async confirmations(): Promise<number> {\n        const zone = zoneFromHash(this.hash);\n        if (this.blockNumber == null) {\n            const { tx, blockNumber } = await resolveProperties({\n                tx: this.getTransaction(),\n                blockNumber: this.provider.getBlockNumber(toShard(zone)),\n            });\n\n            // Not mined yet...\n            if (tx == null || tx.blockNumber == null) {\n                return 0;\n            }\n\n            return blockNumber - tx.blockNumber + 1;\n        }\n\n        const blockNumber = await this.provider.getBlockNumber(toShard(zone));\n        return blockNumber - this.blockNumber + 1;\n    }\n\n    /**\n     * Resolves once this transaction has been mined and has `confirms` blocks including it (default: `1`) with an\n     * optional `timeout`.\n     *\n     * This can resolve to `null` only if `confirms` is `0` and the transaction has not been mined, otherwise this will\n     * wait until enough confirmations have completed.\n     *\n     * @param {number} [_confirms] - The number of confirmations to wait for.\n     * @param {number} [_timeout] - The number of milliseconds to wait before rejecting.\n     * @returns {Promise<null | TransactionReceipt>} A promise resolving to the transaction receipt.\n     * @throws {Error} If the transaction was replaced, repriced, or cancelled.\n     */\n    async wait(_confirms?: number, _timeout?: number): Promise<null | TransactionReceipt> {\n        const confirms = _confirms == null ? 1 : _confirms;\n        const timeout = _timeout == null ? 0 : _timeout;\n\n        let startBlock = this.startBlock;\n        let nextScan = -1;\n        let stopScanning = startBlock === -1 ? true : false;\n        const zone = zoneFromHash(this.hash);\n        const checkReplacement = async () => {\n            // Get the current transaction count for this sender\n            if (stopScanning) {\n                return null;\n            }\n            const { blockNumber, nonce } = await resolveProperties({\n                blockNumber: this.provider.getBlockNumber(toShard(zone)),\n                nonce: this.provider.getTransactionCount(this.from),\n            });\n\n            // No transaction or our nonce has not been mined yet; but we\n            // can start scanning later when we do start\n            if (nonce < this.nonce) {\n                startBlock = blockNumber;\n                return;\n            }\n\n            // We were mined; no replacement\n            if (stopScanning) {\n                return null;\n            }\n            const mined = await this.getTransaction();\n            if (mined && mined.blockNumber != null) {\n                return;\n            }\n\n            // We were replaced; start scanning for that transaction\n\n            // Starting to scan; look back a few extra blocks for safety\n            if (nextScan === -1) {\n                nextScan = startBlock - 3;\n                if (nextScan < this.startBlock) {\n                    nextScan = this.startBlock;\n                }\n            }\n\n            while (nextScan <= blockNumber) {\n                // Get the next block to scan\n                if (stopScanning) {\n                    return null;\n                }\n                const block = await this.provider.getBlock(toShard(zone), nextScan, true);\n\n                // This should not happen; but we'll try again shortly\n                if (block == null) {\n                    return;\n                }\n\n                // We were mined; no replacement\n                for (const hash of block) {\n                    if (hash === this.hash) {\n                        return;\n                    }\n                }\n\n                // Search for the transaction that replaced us\n                for (let i = 0; i < block.length; i++) {\n                    const tx: TransactionResponse | ExternalTransactionResponse = await block.getTransaction(i);\n\n                    if ('from' in tx && tx.from === this.from && tx.nonce === this.nonce) {\n                        // Get the receipt\n                        if (stopScanning) {\n                            return null;\n                        }\n                        const receipt = await this.provider.getTransactionReceipt(tx.hash);\n\n                        // This should not happen; but we'll try again shortly\n                        if (receipt == null) {\n                            return;\n                        }\n\n                        // We will retry this on the next block (this case could be optimized)\n                        if (blockNumber - receipt.blockNumber + 1 < confirms) {\n                            return;\n                        }\n\n                        // The reason we were replaced\n                        let reason: 'replaced' | 'repriced' | 'cancelled' = 'replaced';\n                        if (tx.data === this.data && tx.to === this.to && tx.value === this.value) {\n                            reason = 'repriced';\n                        } else if (tx.data === '0x' && tx.from === tx.to && tx.value === BN_0) {\n                            reason = 'cancelled';\n                        }\n\n                        assert(false, 'transaction was replaced', 'TRANSACTION_REPLACED', {\n                            cancelled: reason === 'replaced' || reason === 'cancelled',\n                            reason,\n                            replacement: tx.replaceableTransaction(startBlock),\n                            hash: (tx as QuaiTransactionResponse).hash,\n                            receipt,\n                        });\n                    }\n                }\n\n                nextScan++;\n            }\n            return;\n        };\n\n        const checkReceipt = (receipt: null | TransactionReceipt) => {\n            if (receipt == null || receipt.status !== 0) {\n                return receipt;\n            }\n            assert(false, 'transaction execution reverted', 'CALL_EXCEPTION', {\n                action: 'sendTransaction',\n                data: null,\n                reason: null,\n                invocation: null,\n                revert: null,\n                transaction: {\n                    to: receipt.to,\n                    from: receipt.from,\n                    data: '', // @TODO: in v7, split out sendTransaction properties\n                },\n                receipt,\n            });\n        };\n\n        const receipt = await this.provider.getTransactionReceipt(this.hash);\n\n        if (confirms === 0) {\n            return checkReceipt(receipt);\n        }\n\n        if (receipt) {\n            if ((await receipt.confirmations()) >= confirms) {\n                return checkReceipt(receipt);\n            }\n        } else {\n            // Check for a replacement; throws if a replacement was found\n            await checkReplacement();\n\n            // Allow null only when the confirms is 0\n            if (confirms === 0) {\n                return null;\n            }\n        }\n\n        const waiter = new Promise((resolve, reject) => {\n            // List of things to cancel when we have a result (one way or the other)\n            const cancellers: Array<() => void> = [];\n            const cancel = () => {\n                cancellers.forEach((c) => c());\n            };\n\n            // On cancel, stop scanning for replacements\n            cancellers.push(() => {\n                stopScanning = true;\n            });\n\n            // Set up any timeout requested\n            if (timeout > 0) {\n                const timer = setTimeout(() => {\n                    cancel();\n                    reject(makeError('wait for transaction timeout', 'TIMEOUT'));\n                }, timeout);\n                cancellers.push(() => {\n                    clearTimeout(timer);\n                });\n            }\n\n            const txListener = async (receipt: TransactionReceipt) => {\n                // Done; return it!\n                if ((await receipt.confirmations()) >= confirms) {\n                    cancel();\n                    try {\n                        resolve(checkReceipt(receipt));\n                    } catch (error) {\n                        reject(error);\n                    }\n                }\n            };\n            cancellers.push(() => {\n                this.provider.off(this.hash, txListener);\n            });\n            this.provider.on(this.hash, txListener);\n            // We support replacement detection; start checking\n            if (startBlock >= 0) {\n                const replaceListener = async () => {\n                    try {\n                        // Check for a replacement; this throws only if one is found\n                        await checkReplacement();\n                    } catch (error) {\n                        // We were replaced (with enough confirms); re-throw the error\n                        if (isError(error, 'TRANSACTION_REPLACED')) {\n                            cancel();\n                            reject(error);\n                            return;\n                        }\n                    }\n\n                    // Rescheudle a check on the next block\n                    if (!stopScanning) {\n                        this.provider.once('block', replaceListener, zone);\n                    }\n                };\n                cancellers.push(() => {\n                    this.provider.off('block', replaceListener, zone);\n                });\n                this.provider.once('block', replaceListener, zone);\n            }\n        });\n\n        return await (<Promise<TransactionReceipt>>waiter);\n    }\n\n    /**\n     * Returns `true` if this transaction has been included.\n     *\n     * This is effective only as of the time the TransactionResponse was instantiated. To get up-to-date information,\n     * use {@link QuaiTransactionResponse.getTransaction | **getTransaction**}.\n     *\n     * This provides a Type Guard that this transaction will have non-null property values for properties that are null\n     * for unmined transactions.\n     *\n     * @returns {QuaiMinedTransactionResponse} True if the transaction has been mined.\n     * @throws {Error} If the transaction was replaced, repriced, or cancelled.\n     */\n    isMined(): this is QuaiMinedTransactionResponse {\n        return this.blockHash != null;\n    }\n\n    /**\n     * Returns a filter which can be used to listen for orphan events that evict this transaction.\n     *\n     * @returns {OrphanFilter} The orphan filter.\n     */\n    removedEvent(): OrphanFilter {\n        assert(this.isMined(), 'unmined transaction canot be orphaned', 'UNSUPPORTED_OPERATION', {\n            operation: 'removeEvent()',\n        });\n        return createRemovedTransactionFilter(this);\n    }\n\n    /**\n     * Returns a filter which can be used to listen for orphan events that re-order this event against `other`.\n     *\n     * @param {TransactionResponse} [other] - The other transaction to compare against.\n     * @returns {OrphanFilter} The orphan filter.\n     */\n    reorderedEvent(other?: TransactionResponse): OrphanFilter {\n        assert(this.isMined(), 'unmined transaction canot be orphaned', 'UNSUPPORTED_OPERATION', {\n            operation: 'removeEvent()',\n        });\n\n        assert(!other || other.isMined(), \"unmined 'other' transaction canot be orphaned\", 'UNSUPPORTED_OPERATION', {\n            operation: 'removeEvent()',\n        });\n\n        return createReorderedTransactionFilter(this, other);\n    }\n\n    /**\n     * Returns a new TransactionResponse instance which has the ability to detect (and throw an error) if the\n     * transaction is replaced, which will begin scanning at `startBlock`.\n     *\n     * This should generally not be used by developers and is intended primarily for internal use. Setting an incorrect\n     * `startBlock` can have devastating performance consequences if used incorrectly.\n     *\n     * @param {number} startBlock - The block number to start scanning for replacements.\n     * @returns {QuaiTransactionResponse} The replaceable transaction.\n     */\n    replaceableTransaction(startBlock: number): QuaiTransactionResponse {\n        assertArgument(Number.isInteger(startBlock) && startBlock >= 0, 'invalid startBlock', 'startBlock', startBlock);\n        const tx = new QuaiTransactionResponse(this, this.provider);\n        tx.startBlock = startBlock;\n        return tx;\n    }\n}\n\n/**\n * A **QiTransactionResponse** includes all properties about a Qi transaction that was sent to the network, which may or\n * may not be included in a block.\n *\n * The {@link TransactionResponse.isMined | **TransactionResponse.isMined**} can be used to check if the transaction has\n * been mined as well as type guard that the otherwise possibly `null` properties are defined.\n *\n * @category Providers\n */\nexport class QiTransactionResponse implements QiTransactionLike, QiTransactionResponseParams {\n    /**\n     * The provider this is connected to, which will influence how its methods will resolve its async inspection\n     * methods.\n     */\n    readonly provider: Provider;\n\n    /**\n     * The block number of the block that this transaction was included in.\n     *\n     * This is `null` for pending transactions.\n     */\n    readonly blockNumber: null | number;\n\n    /**\n     * The blockHash of the block that this transaction was included in.\n     *\n     * This is `null` for pending transactions.\n     */\n    readonly blockHash: null | string;\n\n    /**\n     * The index within the block that this transaction resides at.\n     */\n    readonly index!: bigint;\n\n    /**\n     * The transaction hash.\n     */\n    readonly hash!: string;\n\n    /**\n     * The [EIP-2718](https://eips.ethereum.org/EIPS/eip-2718) transaction envelope type. This is `0` for legacy\n     * transactions types.\n     */\n    readonly type!: number;\n\n    /**\n     * The chain ID.\n     */\n    readonly chainId!: bigint;\n\n    /**\n     * The signature.\n     */\n    readonly signature!: string;\n\n    readonly txInputs?: Array<TxInput>;\n\n    readonly txOutputs?: Array<TxOutput>;\n\n    protected startBlock: number;\n    /**\n     * @ignore\n     */\n    constructor(tx: QiTransactionResponseParams, provider: Provider) {\n        this.provider = provider;\n\n        this.blockNumber = tx.blockNumber != null ? tx.blockNumber : null;\n        this.blockHash = tx.blockHash != null ? tx.blockHash : null;\n\n        this.hash = tx.hash;\n        this.index = tx.index;\n\n        this.type = tx.type;\n\n        this.chainId = tx.chainId;\n        this.signature = tx.signature;\n\n        this.startBlock = -1;\n\n        this.txInputs = tx.txInputs;\n        this.txOutputs = tx.txOutputs;\n    }\n\n    /**\n     * Returns a JSON-compatible representation of this transaction.\n     */\n    toJSON(): any {\n        const { blockNumber, blockHash, index, hash, type, signature, txInputs, txOutputs } = this;\n        const result = {\n            _type: 'TransactionReceipt',\n            blockNumber,\n            blockHash,\n            chainId: toJson(this.chainId),\n            hash,\n            signature,\n            index,\n            type,\n            txInputs: JSON.parse(JSON.stringify(txInputs)),\n            txOutputs: JSON.parse(JSON.stringify(txOutputs)),\n        };\n\n        return result;\n    }\n\n    /**\n     * Resolves to the Block that this transaction was included in.\n     *\n     * This will return null if the transaction has not been included yet.\n     *\n     * @param {Shard} shard - The shard to fetch the block from.\n     * @returns {null | Promise<Block>} A promise resolving to the block or null if not found.\n     */\n    async getBlock(shard: Shard): Promise<null | Block> {\n        let blockNumber = this.blockNumber;\n        if (blockNumber == null) {\n            const tx = await this.getTransaction();\n            if (tx) {\n                blockNumber = tx.blockNumber;\n            }\n        }\n        if (blockNumber == null) {\n            return null;\n        }\n        const block = this.provider.getBlock(shard, blockNumber);\n        if (block == null) {\n            throw new Error('TODO');\n        }\n        return block;\n    }\n\n    /**\n     * Resolves to this transaction being re-requested from the provider. This can be used if you have an unmined\n     * transaction and wish to get an up-to-date populated instance.\n     *\n     * @returns {null | Promise<TransactionResponse>} A promise resolving to the transaction, or null if not found.\n     * @throws {Error} If the transaction is not found.\n     */\n    async getTransaction(): Promise<null | QiTransactionResponse> {\n        const transaction = this.provider.getTransaction(this.hash);\n        if (transaction instanceof QiTransactionResponse) {\n            return transaction as QiTransactionResponse;\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Resolve to the number of confirmations this transaction has.\n     *\n     * @returns {Promise<number>} A promise resolving to the number of confirmations.\n     */\n    async confirmations(): Promise<number> {\n        const zone = zoneFromHash(this.hash);\n        if (this.blockNumber == null) {\n            const { tx, blockNumber } = await resolveProperties({\n                tx: this.getTransaction(),\n                blockNumber: this.provider.getBlockNumber(toShard(zone)),\n            });\n\n            // Not mined yet...\n            if (tx == null || tx.blockNumber == null || tx.blockHash == null) {\n                return 0;\n            }\n\n            return blockNumber - tx.blockNumber + 1;\n        }\n\n        const blockNumber = await this.provider.getBlockNumber(toShard(zone));\n        return blockNumber - this.blockNumber + 1;\n    }\n\n    async wait(_confirms?: number, _timeout?: number): Promise<null | QiTransactionResponse> {\n        const confirms = _confirms == null ? 1 : _confirms;\n        const timeout = _timeout == null ? 0 : _timeout;\n\n        const tx = await this.provider.getTransaction(this.hash);\n\n        if (confirms === 0 && tx?.blockHash != null) {\n            return tx as QiTransactionResponse;\n        }\n\n        const waiter = new Promise((resolve, reject) => {\n            // List of things to cancel when we have a result (one way or the other)\n            const cancellers: Array<() => void> = [];\n            const cancel = () => {\n                cancellers.forEach((c) => c());\n            };\n\n            // Set up any timeout requested\n            if (timeout > 0) {\n                const timer = setTimeout(() => {\n                    cancel();\n                    reject(makeError('wait for transaction timeout', 'TIMEOUT'));\n                }, timeout);\n                cancellers.push(() => {\n                    clearTimeout(timer);\n                });\n            }\n\n            const txListener = async (tx: QiTransactionResponse) => {\n                // Done; return it!\n                if ((await tx.confirmations()) >= confirms) {\n                    cancel();\n                    try {\n                        resolve(tx);\n                    } catch (error) {\n                        reject(error);\n                    }\n                }\n            };\n            cancellers.push(() => {\n                this.provider.off(this.hash, txListener);\n            });\n            this.provider.on(this.hash, txListener);\n        });\n\n        return await (<Promise<QiTransactionResponse>>waiter);\n    }\n\n    /**\n     * Returns `true` if this transaction has been included.\n     *\n     * This is effective only as of the time the TransactionResponse was instantiated. To get up-to-date information,\n     * use {@link QiTransactionResponse.getTransaction | **getTransaction**}.\n     *\n     * This provides a Type Guard that this transaction will have non-null property values for properties that are null\n     * for unmined transactions.\n     *\n     * @returns {QiMinedTransactionResponse} True if the transaction has been mined or false otherwise.\n     */\n    isMined(): this is QiMinedTransactionResponse {\n        return this.blockHash != null;\n    }\n\n    /**\n     * Returns a filter which can be used to listen for orphan events that evict this transaction.\n     *\n     * @returns {OrphanFilter} The orphan filter.\n     */\n    removedEvent(): OrphanFilter {\n        assert(this.isMined(), 'unmined transaction canot be orphaned', 'UNSUPPORTED_OPERATION', {\n            operation: 'removeEvent()',\n        });\n        return createRemovedTransactionFilter(this);\n    }\n\n    /**\n     * Returns a filter which can be used to listen for orphan events that re-order this event against `other`.\n     *\n     * @param {TransactionResponse} [other] - The other transaction to compare against.\n     * @returns {OrphanFilter} The orphan filter.\n     */\n    reorderedEvent(other?: TransactionResponse): OrphanFilter {\n        assert(this.isMined(), 'unmined transaction canot be orphaned', 'UNSUPPORTED_OPERATION', {\n            operation: 'removeEvent()',\n        });\n\n        assert(!other || other.isMined(), \"unmined 'other' transaction canot be orphaned\", 'UNSUPPORTED_OPERATION', {\n            operation: 'removeEvent()',\n        });\n\n        return createReorderedTransactionFilter(this, other);\n    }\n\n    /**\n     * Returns a new TransactionResponse instance which has the ability to detect (and throw an error) if the\n     * transaction is replaced, which will begin scanning at `startBlock`.\n     *\n     * This should generally not be used by developers and is intended primarily for internal use. Setting an incorrect\n     * `startBlock` can have devastating performance consequences if used incorrectly.\n     *\n     * @param {number} startBlock - The block number to start scanning for replacements.\n     * @returns {QiTransactionResponse} The replaceable transaction.\n     */\n    replaceableTransaction(startBlock: number): QiTransactionResponse {\n        assertArgument(Number.isInteger(startBlock) && startBlock >= 0, 'invalid startBlock', 'startBlock', startBlock);\n        const tx = new QiTransactionResponse(this, this.provider);\n        tx.startBlock = startBlock;\n        return tx;\n    }\n}\n\n//////////////////////\n// OrphanFilter\n\n/**\n * An Orphan Filter allows detecting when an orphan block has resulted in dropping a block or transaction or has\n * resulted in transactions changing order.\n *\n * Not currently fully supported.\n *\n * @category Providers\n */\nexport type OrphanFilter =\n    | {\n          orphan: 'drop-block';\n          hash: string;\n          number: number;\n      }\n    | {\n          orphan: 'drop-transaction';\n          tx: { hash: string; blockHash: string; blockNumber: number };\n          other?: { hash: string; blockHash: string; blockNumber: number };\n      }\n    | {\n          orphan: 'reorder-transaction';\n          tx: { hash: string; blockHash: string; blockNumber: number };\n          other?: { hash: string; blockHash: string; blockNumber: number };\n      }\n    | {\n          orphan: 'drop-log';\n          log: {\n              transactionHash: string;\n              blockHash: string;\n              blockNumber: number;\n              address: string;\n              data: string;\n              topics: ReadonlyArray<string>;\n              index: number;\n          };\n      };\n\nfunction createOrphanedBlockFilter(block: { hash: string; number: number }): OrphanFilter {\n    return { orphan: 'drop-block', hash: block.hash, number: block.number };\n}\n\nfunction createReorderedTransactionFilter(\n    tx: { hash: string; blockHash: string; blockNumber: number },\n    other?: { hash: string; blockHash: string; blockNumber: number },\n): OrphanFilter {\n    return { orphan: 'reorder-transaction', tx, other };\n}\n\nfunction createRemovedTransactionFilter(tx: { hash: string; blockHash: string; blockNumber: number }): OrphanFilter {\n    return { orphan: 'drop-transaction', tx };\n}\n\nfunction createRemovedLogFilter(log: {\n    blockHash: string;\n    transactionHash: string;\n    blockNumber: number;\n    address: string;\n    data: string;\n    topics: ReadonlyArray<string>;\n    index: number;\n}): OrphanFilter {\n    return {\n        orphan: 'drop-log',\n        log: {\n            transactionHash: log.transactionHash,\n            blockHash: log.blockHash,\n            blockNumber: log.blockNumber,\n            address: log.address,\n            data: log.data,\n            topics: Object.freeze(log.topics.slice()),\n            index: log.index,\n        },\n    };\n}\n\n//////////////////////\n// EventFilter\n\nexport type NodeLocation = number[];\n\n/**\n * A **TopicFilter** provides a struture to define bloom-filter queries.\n *\n * Each field that is `null` matches **any** value, a field that is a `string` must match exactly that value and and\n * `array` is effectively an `OR`-ed set, where any one of those values must match.\n *\n * @category Providers\n */\nexport type TopicFilter = Array<null | string | Array<string>>;\n\n// @TODO:\n//export type DeferableTopicFilter = Array<null | string | Promise<string> | Array<string | Promise<string>>>;\n\n/**\n * An **EventFilter** allows efficiently filtering logs (also known as events) using bloom filters included within\n * blocks.\n *\n * @category Providers\n */\nexport interface EventFilter {\n    address?: AddressLike | Array<AddressLike>;\n    topics?: TopicFilter;\n    nodeLocation?: NodeLocation;\n}\n\nexport type AccessesType = 'block' | 'balance';\n\n/**\n * An **AccessesFilter** allows efficiently filtering accesses (state uses) using address.\n *\n * @category Providers\n */\nexport interface AccessesFilter {\n    type: AccessesType;\n    address: AddressLike;\n}\n\n/**\n * A **Filter** allows searching a specific range of blocks for mathcing logs.\n *\n * @category Providers\n */\nexport interface Filter extends EventFilter {\n    /**\n     * The start block for the filter (inclusive).\n     */\n    fromBlock?: BlockTag;\n\n    /**\n     * The end block for the filter (inclusive).\n     */\n    toBlock?: BlockTag;\n}\n\n/**\n * A **FilterByBlockHash** allows searching a specific block for mathcing logs.\n *\n * @category Providers\n */\nexport interface FilterByBlockHash extends EventFilter {\n    /**\n     * The blockhash of the specific block for the filter.\n     */\n    blockHash?: string;\n    zone: Zone;\n}\n\nexport function getZoneFromEventFilter(filter: EventFilter): Zone | null {\n    let zone: Zone | null = null;\n    if (filter.nodeLocation) {\n        zone = getZoneFromNodeLocation(filter.nodeLocation);\n    } else if (filter.address) {\n        let address: string;\n        if (Array.isArray(filter.address)) {\n            address = filter.address[0] as string;\n        } else {\n            address = filter.address as string;\n        }\n        const addressZone = getZoneForAddress(address);\n        if (addressZone) {\n            zone = toZone(addressZone);\n        } else {\n            return null;\n        }\n    }\n    return zone;\n}\n\n//////////////////////\n// ProviderEvent\n\n/**\n * A **ProviderEvent** provides the types of events that can be subscribed to on a {@link Provider| **Provider**}.\n *\n * Each provider may include additional possible events it supports, but the most commonly supported are:\n *\n * **`\"block\"`** - calls the listener with the current block number on each new block.\n *\n * **`\"error\"`** - calls the listener on each async error that occurs during the event loop, with the error.\n *\n * **`\"debug\"`** - calls the listener on debug events, which can be used to troubleshoot network errors, provider\n * problems, etc.\n *\n * **`transaction hash`** - calls the listener on each block after the transaction has been mined; generally `.once` is\n * more appropriate for this event.\n *\n * **`Array`** - calls the listener on each log that matches the filter.\n *\n * {@link EventFilter | **EventFilter**} - calls the listener with each matching log\n *\n * @category Providers\n */\nexport type ProviderEvent = string | Array<string | Array<string>> | EventFilter | OrphanFilter | AccessesFilter;\n\n//////////////////////\n// Provider\n\n/**\n * A **Provider** is the primary method to interact with the read-only content on Ethereum.\n *\n * It allows access to details about accounts, blocks and transactions and the ability to query event logs and simulate\n * contract execution.\n *\n * Account data includes the {@link Provider.getBalance | **balance**},\n * {@link Provider.getTransactionCount | **getTransactionCount**}, {@link Provider.getCode | **code**} and\n * {@link Provider.getStorage | **state trie storage**}.\n *\n * Simulating execution can be used to {@link Provider.call | **call**}, {@link Provider.estimateGas | **estimateGas**}\n * and {@link Provider.getTransactionResult | **get transaction result**}.\n *\n * The {@link Provider.broadcastTransaction | **broadcastTransaction**} is the only method which allows updating the\n * blockchain, but it is usually accessed by a [Signer](../interfaces/Signer), since a private key must be used to sign\n * the transaction before it can be broadcast.\n *\n * @category Providers\n */\nexport interface Provider extends ContractRunner, EventEmitterable<ProviderEvent> {\n    /**\n     * The provider iteself.\n     *\n     * This is part of the necessary API for executing a contract, as it provides a common property on any\n     * {@link ContractRunner | **ContractRunner**} that can be used to access the read-only portion of the runner.\n     */\n    provider: this;\n\n    /**\n     * Shutdown any resources this provider is using. No additional calls should be made to this provider after calling\n     * this.\n     */\n    destroy(): void;\n\n    ////////////////////\n    // State\n\n    /**\n     * Get the current block number.\n     *\n     * @param {Shard} shard - The shard to fetch the block number from.\n     * @returns {Promise<number>} A promise resolving to the block number.\n     */\n    getBlockNumber(shard: Shard): Promise<number>;\n\n    /**\n     * Get the connected {@link Network | **Network**}.\n     *\n     * @param {Shard} shard - The shard to fetch the network from.\n     * @returns {Promise<Network>} A promise resolving to the network.\n     */\n    getNetwork(): Promise<Network>;\n\n    /**\n     * Get the best guess at the recommended {@link FeeData | **FeeData**}.\n     *\n     * @param {Zone} zone - The shard to fetch the fee data from.\n     * @param {boolean} txType - The transaction type to fetch the fee data for (true for Quai, false for Qi)\n     * @returns {Promise<FeeData>} A promise resolving to the fee data.\n     */\n    getFeeData(zone: Zone, txType: boolean): Promise<FeeData>;\n\n    /**\n     * Get a work object to package a transaction in.\n     *\n     * @returns {Promise<WorkObjectLike>} A promise resolving to the work object.\n     */\n    getPendingHeader(): Promise<WorkObjectLike>;\n\n    ////////////////////\n    // Account\n\n    /**\n     * Get the account balance (in wei) of `address`. If `blockTag` is specified and the node supports archive access\n     * for that `blockTag`, the balance is as of that {@link BlockTag | **BlockTag**}.\n     *\n     * @param {AddressLike} address - The address to fetch the balance for.\n     * @param {BlockTag} [blockTag] - The block tag to fetch the balance from.\n     * @returns {Promise<bigint>} A promise resolving to the balance.\n     * @note On nodes without archive access enabled, the `blockTag` may be\n     *  **silently ignored** by the node, which may cause issues if relied on.\n     */\n    getBalance(address: AddressLike, blockTag?: BlockTag): Promise<bigint>;\n\n    /**\n     * Get the locked balance for `address`.\n     *\n     * @param {AddressLike} address - The address to fetch the locked balance for.\n     * @returns {Promise<bigint>} A promise resolving to the locked balance.\n     */\n    getLockedBalance(address: AddressLike): Promise<bigint>;\n\n    /**\n     * Get the UTXO entries for `address`.\n     *\n     * @param {AddressLike} address - The address to fetch the UTXO entries for.\n     * @returns {Promise<Outpoint[]>} A promise resolving to the UTXO entries.\n     * @note On nodes without archive access enabled, the `blockTag` may be\n     *  **silently ignored** by the node, which may cause issues if relied on.\n     */\n    getOutpointsByAddress(address: AddressLike): Promise<Array<Outpoint>>;\n\n    /**\n     * Get the number of transactions ever sent for `address`, which is used as the `nonce` when sending a transaction.\n     * If `blockTag` is specified and the node supports archive access for that `blockTag`, the transaction count is as\n     * of that {@link BlockTag | **BlockTag**}.\n     *\n     * @param {AddressLike} address - The address to fetch the transaction count for.\n     * @param {BlockTag} [blockTag] - The block tag to fetch the transaction count from.\n     * @returns {Promise<number>} A promise resolving to the transaction count.\n     * @note On nodes without archive access enabled, the `blockTag` may be\n     *  **silently ignored** by the node, which may cause issues if relied on.\n     */\n    getTransactionCount(address: AddressLike, blockTag?: BlockTag): Promise<number>;\n\n    /**\n     * Get the bytecode for `address`.\n     *\n     * @param {AddressLike} address - The address to fetch the code for.\n     * @param {BlockTag} [blockTag] - The block tag to fetch the code from.\n     * @returns {Promise<string>} A promise resolving to the code stored at the address.\n     * @note On nodes without archive access enabled, the `blockTag` may be\n     *  **silently ignored** by the node, which may cause issues if relied on.\n     */\n    getCode(address: AddressLike, blockTag?: BlockTag): Promise<string>;\n\n    /**\n     * Get the storage slot value for `address` at slot `position`.\n     *\n     * @param {AddressLike} address - The address to fetch the storage from.\n     * @param {BigNumberish} position - The position to fetch the storage from.\n     * @param {BlockTag} [blockTag] - The block tag to fetch the storage from.\n     * @returns {Promise<string>} A promise resolving to the storage value.\n     * @note On nodes without archive access enabled, the `blockTag` may be\n     *  **silently ignored** by the node, which may cause issues if relied on.\n     */\n    getStorage(address: AddressLike, position: BigNumberish, blockTag?: BlockTag): Promise<string>;\n\n    ////////////////////\n    // Execution\n\n    /**\n     * Estimates the amount of gas required to executre `tx`.\n     *\n     * @param {TransactionRequest} tx - The transaction to estimate the gas for.\n     * @returns {Promise<bigint>} A promise resolving to the estimated gas.\n     * @throws {Error} If the transaction execution reverts.\n     */\n    estimateGas(tx: TransactionRequest): Promise<bigint>;\n\n    /**\n     * Estimate the fee for a Qi transaction.\n     *\n     * @param {QiPerformActionTransaction} tx - The transaction to estimate the fee for.\n     * @returns {Promise<bigint>} A promise resolving to the estimated fee.\n     */\n    estimateFeeForQi(tx: QiPerformActionTransaction): Promise<bigint>;\n\n    /**\n     * Required for populating access lists for state mutating calls\n     *\n     * @param tx\n     * @returns {Promise<AccessList>}\n     */\n    createAccessList(tx: QuaiTransactionRequest): Promise<AccessList>;\n\n    /**\n     * Simulate the execution of `tx`. If the call reverts, it will throw a\n     * [CallExceptionError](../interfaces/CallExceptionError) which includes the revert data.\n     *\n     * @param {TransactionRequest} tx - The transaction to simulate.\n     * @returns {Promise<string>} A promise resolving to the result of the execution.\n     * @throws {Error} If the transaction execution reverts.\n     */\n    call(tx: TransactionRequest): Promise<string>;\n\n    /**\n     * Broadcasts the `signedTx` to the network, adding it to the memory pool of any node for which the transaction\n     * meets the rebroadcast requirements.\n     *\n     * @param {Zone} zone - The zone to broadcast the transaction to.\n     * @param {string} signedTx - The signed transaction to broadcast.\n     * @param {AddressLike} [from] - The address that signed the transaction.\n     * @returns {Promise<TransactionResponse>} A promise resolving to the transaction response.\n     * @throws {Error} If the transaction is invalid or the transaction is replaced.\n     */\n    broadcastTransaction(zone: Zone, signedTx: string, from?: AddressLike): Promise<TransactionResponse>;\n\n    ////////////////////\n    // Queries\n\n    /**\n     * Resolves to the block for `blockHashOrBlockTag`.\n     *\n     * If `prefetchTxs`, and the backend supports including transactions with block requests, all transactions will be\n     * included and the {@link Block | **Block**} object will not need to make remote calls for getting transactions.\n     *\n     * @param {Shard} shard - The shard to fetch the block from.\n     * @param {BlockTag | string} blockHashOrBlockTag - The block hash or block tag to fetch.\n     * @param {boolean} [prefetchTxs] - If true, prefetch the transactions.\n     * @returns {Promise<null | Block>} A promise resolving to the block or null if not found.\n     * @throws {Error} If the block is not found.\n     */\n    getBlock(shard: Shard, blockHashOrBlockTag: BlockTag | string, prefetchTxs?: boolean): Promise<null | Block>;\n\n    /**\n     * Resolves to the transaction for `hash`.\n     *\n     * If the transaction is unknown or on pruning nodes which discard old transactions this resolves to `null`.\n     *\n     * @param {string} hash - The transaction hash to fetch.\n     * @returns {Promise<null | TransactionResponse>} A promise resolving to the transaction or null if not found.\n     */\n    getTransaction(hash: string): Promise<null | TransactionResponse | ExternalTransactionResponse>;\n\n    /**\n     * Resolves to the transaction receipt for `hash`, if mined.\n     *\n     * If the transaction has not been mined, is unknown or on pruning nodes which discard old transactions this\n     * resolves to `null`.\n     *\n     * @param {string} hash - The transaction hash to fetch the receipt for.\n     * @returns {Promise<null | TransactionReceipt>} A promise resolving to the transaction receipt or null if not\n     *   found.\n     */\n    getTransactionReceipt(hash: string): Promise<null | TransactionReceipt>;\n\n    /**\n     * Resolves to the result returned by the executions of `hash`.\n     *\n     * This is only supported on nodes with archive access and with the necessary debug APIs enabled.\n     *\n     * @param {string} hash - The transaction hash to fetch the result for.\n     * @returns {Promise<null | string>} A promise resolving to the result or null if not found.\n     */\n    getTransactionResult(hash: string): Promise<null | string>;\n\n    ////////////////////\n    // Bloom-filter Queries\n\n    /**\n     * Resolves to the list of Logs that match `filter`\n     *\n     * @param {Filter} filter - The filter to apply.\n     * @returns {Promise<Log[]>} A promise resolving to the logs.\n     */\n    getLogs(filter: Filter | FilterByBlockHash): Promise<Array<Log>>;\n\n    /**\n     * Waits until the transaction `hash` is mined and has `confirms` confirmations.\n     *\n     * @param {string} hash - The transaction hash to wait for.\n     * @param {number} [confirms] - The number of confirmations to wait for.\n     * @param {number} [timeout] - The number of milliseconds to wait before timing out.\n     * @returns {Promise<null | TransactionReceipt>} A promise resolving to the transaction receipt or null if not\n     *   found.\n     */\n    waitForTransaction(hash: string, confirms?: number, timeout?: number): Promise<null | TransactionReceipt>;\n\n    /**\n     * Resolves to the block at `blockTag` once it has been mined.\n     *\n     * This can be useful for waiting some number of blocks by using the `currentBlockNumber + N`.\n     *\n     * @param {Shard} shard - The shard to fetch the block from.\n     * @param {BlockTag} [blockTag] - The block tag to fetch.\n     * @returns {Promise<Block>} A promise resolving to the block.\n     */\n    waitForBlock(shard: Shard, blockTag?: BlockTag): Promise<Block>;\n\n    /**\n     * Resolves to the number indicating the size of the network\n     *\n     * @returns {Promise<number>} A promise resolving to the current network size.\n     */\n    getProtocolExpansionNumber(): Promise<number>;\n\n    /**\n     * Resolves to the current content of the transaction pool.\n     *\n     * @returns {Promise<txpoolContentResponse>} A promise resolving to the transaction pool content.\n     */\n    getTxPoolContent(zone: Zone): Promise<txpoolContentResponse>;\n\n    /**\n     * Resolves to the current content of the transaction pool.\n     *\n     * @returns {Promise<txpoolInspectResponse>} A promise resolving to the transaction pool inspect.\n     */\n    txPoolInspect(zone: Zone): Promise<txpoolInspectResponse>;\n\n    /**\n     * Resolves to the current Quai rate for the given amount.\n     *\n     * @param {bigint} amt - The amount in quais to get the rate for.\n     * @returns {Promise<bigint>} A promise resolving to the latest Quai rate.\n     */\n    getQiRateAtBlock(zone: Zone, blockTag: BlockTag, amt: bigint): Promise<bigint>;\n\n    /**\n     * Resolves to the current Quai rate for the given amount.\n     *\n     * @param {bigint} amt - The amount in quais to get the rate for.\n     * @returns {Promise<bigint>} A promise resolving to the latest Quai rate.\n     */\n    getLatestQiRate(zone: Zone, amt: bigint): Promise<bigint>;\n\n    /**\n     * Resolves to the current Quai rate for the given amount.\n     *\n     * @param {bigint} amt - The amount in quais to get the rate for.\n     * @returns {Promise<bigint>} A promise resolving to the latest Quai rate.\n     */\n    getQuaiRateAtBlock(zone: Zone, blockTag: BlockTag, amt: bigint): Promise<bigint>;\n\n    /**\n     * Resolves to the current Quai rate for the given amount.\n     *\n     * @param {bigint} amt - The amount in quai to get the rate for.\n     * @returns {Promise<bigint>} A promise resolving to the latest Quai->Qi rate.\n     */\n    getLatestQuaiRate(zone: Zone, amt: bigint): Promise<bigint>;\n\n    getOutpointDeltas(addresses: string[], startHash: string, endHash?: string): Promise<OutpointDeltas>;\n}\n","import { ProtoTransaction } from '../transaction/abstract-transaction.js';\nimport { ProtoWorkObject } from '../transaction/work-object.js';\nimport { hexlify } from '../utils/index.js';\nimport * as Proto from './protoc/proto_block.js';\n\n/**\n * @category Encoding\n * @param {ProtoTransaction} protoTx - The signed constructed transaction\n * @returns {string} - The Protobuf encoded transaction\n */\nexport function encodeProtoTransaction(protoTx: ProtoTransaction): string {\n    const tx = Proto.block.ProtoTransaction.fromObject(protoTx as any);\n    return hexlify(tx.serialize());\n}\n\n/**\n * @category Encoding\n * @param {ProtoWorkObject} protoWo - The constructed WorkObject\n * @returns {string} - The Protobuf encoded WorkObject\n */\nexport function encodeProtoWorkObject(protoWo: ProtoWorkObject): string {\n    const wo = Proto.block.ProtoWorkObject.fromObject(protoWo as any);\n    return hexlify(wo.serialize());\n}\n","import { keccak256, Signature } from '../crypto/index.js';\nimport { getBigInt, assert, assertArgument } from '../utils/index.js';\n\nimport type { BigNumberish } from '../utils/index.js';\nimport type { SignatureLike } from '../crypto/index.js';\nimport { encodeProtoTransaction } from '../encoding/proto-encode.js';\nimport { Zone } from '../constants/index.js';\n\n/**\n * A **TransactionLike** is a JSON representation of a transaction.\n *\n * @category Transaction\n */\nexport interface TransactionLike {\n    /**\n     * The type.\n     */\n    type: null | number;\n\n    /**\n     * The chain ID the transaction is valid on.\n     */\n    chainId?: null | BigNumberish;\n\n    /**\n     * The signature for the transaction\n     */\n    signature?: null | SignatureLike;\n\n    /**\n     * The hash of the transaction.\n     */\n    hash?: null | string;\n}\n\n/**\n * A **ProtoTransaction** is a JSON representation of a either a Quai or Qi transaction.\n *\n * @category Transaction\n */\nexport interface ProtoTransaction {\n    /**\n     * The type of the transaction.\n     */\n    type: number;\n\n    /**\n     * The recipient address.\n     */\n    to?: Uint8Array | null;\n\n    /**\n     * The nonce of the transaction.\n     */\n    nonce?: number;\n\n    /**\n     * The value of the transaction.\n     */\n    value?: Uint8Array;\n\n    /**\n     * The gas limit for the transaction.\n     */\n    gas?: number;\n\n    /**\n     * The data of the transaction.\n     */\n    data?: Uint8Array;\n\n    /**\n     * The chain ID of the transaction.\n     */\n    chain_id: Uint8Array;\n\n    /**\n     * The gas price for the transaction.\n     */\n    gas_price?: Uint8Array;\n\n    /**\n     * The gas tip cap for the transaction.\n     */\n    miner_tip?: Uint8Array;\n\n    /**\n     * The access list for the transaction.\n     */\n    access_list?: ProtoAccessList;\n\n    /**\n     * The V component of the signature.\n     */\n    v?: Uint8Array;\n\n    /**\n     * The R component of the signature.\n     */\n    r?: Uint8Array;\n\n    /**\n     * The S component of the signature.\n     */\n    s?: Uint8Array;\n\n    /**\n     * The originating transaction hash.\n     */\n    originating_tx_hash?: string;\n\n    /**\n     * The external transaction index.\n     */\n    etx_index?: number | null;\n\n    /**\n     * The external transaction sender.\n     */\n    etx_sender?: Uint8Array | null;\n\n    work_nonce?: number | null;\n\n    etx_type?: number | null;\n\n    /**\n     * The transaction inputs.\n     */\n    tx_ins?: { tx_ins: Array<ProtoTxInput> };\n\n    /**\n     * The transaction outputs.\n     */\n    tx_outs?: { tx_outs: Array<ProtoTxOutput> };\n\n    /**\n     * The signature of the transaction.\n     */\n    signature?: Uint8Array;\n}\n\n/**\n * A **ProtoTxOutput** is a JSON representation of a Qi UTXO transaction output.\n *\n * @category Transaction\n */\nexport type ProtoTxOutput = {\n    /**\n     * The address of the output.\n     */\n    address: Uint8Array;\n\n    /**\n     * The denomination of the output.\n     */\n    denomination: number;\n\n    /**\n     * The lock of the output.\n     */\n    lock?: Uint8Array;\n};\n\n/**\n * A **ProtoTxInput** is a JSON representation of a Qi UTXO transaction input.\n *\n * @category Transaction\n */\nexport type ProtoTxInput = {\n    /**\n     * The previous out point.\n     */\n    previous_out_point: {\n        /**\n         * The hash of the previous out point.\n         */\n        hash: {\n            value: Uint8Array;\n        };\n        /**\n         * The index of the previous out point.\n         */\n        index: number;\n    };\n    /**\n     * The public key.\n     */\n    pub_key: Uint8Array;\n};\n\n/**\n * A **ProtoAccessList** is a JSON representation of an access list.\n *\n * @category Transaction\n */\nexport interface ProtoAccessList {\n    /**\n     * The access tuples.\n     */\n    access_tuples: Array<ProtoAccessTuple>;\n}\n\n/**\n * A **ProtoAccessTuple** is a JSON representation of an access tuple.\n *\n * @category Transaction\n */\nexport interface ProtoAccessTuple {\n    /**\n     * The address of the access tuple.\n     */\n    address: Uint8Array;\n\n    /**\n     * The storage keys of the access tuple.\n     */\n    storage_key: Array<ProtoStorageKey>;\n}\n\nexport interface ProtoStorageKey {\n    value: Uint8Array;\n}\n\ntype allowedSignatureTypes = Signature | string;\n\n/**\n * An **AbstractTransaction** describes the common operations to be executed on Quai and Qi ledgers by an Externally\n * Owned Account (EOA). This class must be subclassed by concrete implementations of transactions on each ledger.\n */\nexport abstract class AbstractTransaction<S extends allowedSignatureTypes> implements TransactionLike {\n    protected _type: number | null;\n    protected _signature: null | S;\n    protected _chainId: bigint;\n\n    /**\n     * The transaction type.\n     *\n     * If null, the type will be automatically inferred based on explicit properties.\n     */\n    get type(): null | number {\n        return this._type;\n    }\n    set type(value: null | number | string) {\n        switch (value) {\n            case null:\n                this._type = null;\n                break;\n            case 0:\n            case 'standard':\n                this._type = 0;\n                break;\n            case 2:\n            case 'utxo':\n                this._type = 2;\n                break;\n            default:\n                assertArgument(false, 'unsupported transaction type', 'type', value);\n        }\n    }\n\n    /**\n     * The name of the transaction type.\n     */\n    get typeName(): null | string {\n        switch (this.type) {\n            case 0:\n                return 'standard';\n            case 1:\n                return 'external';\n            case 2:\n                return 'utxo';\n        }\n\n        return null;\n    }\n\n    /**\n     * The chain ID this transaction is valid on.\n     */\n    get chainId(): bigint {\n        return this._chainId;\n    }\n    set chainId(value: BigNumberish) {\n        this._chainId = getBigInt(value);\n    }\n\n    /**\n     * If signed, the signature for this transaction.\n     */\n    get signature(): S {\n        return (this._signature || null) as S;\n    }\n    set signature(value: S) {\n        if (typeof value === 'string') {\n            this._signature = value as S;\n        } else {\n            this._signature = (value == null ? null : Signature.from(value)) as S;\n        }\n    }\n\n    /**\n     * Creates a new Transaction with default values.\n     */\n    constructor() {\n        this._type = null;\n        this._chainId = BigInt(0);\n        this._signature = null;\n    }\n\n    /**\n     * The pre-image hash of this transaction.\n     *\n     * This is the digest that a [Signer](../interfaces/Signer) must sign to authorize this transaction.\n     */\n    get digest(): string {\n        return keccak256(this.unsignedSerialized);\n    }\n\n    /**\n     * Returns true if signed.\n     *\n     * This provides a Type Guard that properties requiring a signed transaction are non-null.\n     *\n     * @returns {boolean} Indicates if the transaction is signed.\n     */\n    isSigned(): this is AbstractTransaction<S> & {\n        type: number;\n        typeName: string;\n        from: string;\n        signature: Signature;\n    } {\n        return this.signature != null;\n    }\n\n    /**\n     * The serialized transaction.\n     *\n     * This throws if the transaction is unsigned. For the pre-image, use\n     * {@link AbstractTransaction.unsignedSerialized | **unsignedSerialized** }.\n     */\n    get serialized(): string {\n        assert(\n            this.signature != null,\n            'cannot serialize unsigned transaction; maybe you meant .unsignedSerialized',\n            'UNSUPPORTED_OPERATION',\n            { operation: '.serialized' },\n        );\n        return encodeProtoTransaction(this.toProtobuf(true));\n    }\n\n    /**\n     * The transaction pre-image.\n     *\n     * The hash of this is the digest which needs to be signed to authorize this transaction.\n     */\n    get unsignedSerialized(): string {\n        return encodeProtoTransaction(this.toProtobuf(false));\n    }\n\n    /**\n     * Return the most \"likely\" type; currently the highest supported transaction type.\n     *\n     * @returns {number} The inferred transaction type.\n     */\n    inferType(): number {\n        return <number>this.inferTypes().pop();\n    }\n\n    /**\n     * Validates the explicit properties and returns a list of compatible transaction types.\n     *\n     * @returns {number[]} The compatible transaction types.\n     */\n    abstract inferTypes(): Array<number>;\n\n    /**\n     * Create a copy of this transaction.\n     *\n     * @returns {AbstractTransaction} The cloned transaction.\n     */\n    abstract clone(): AbstractTransaction<S>;\n\n    /**\n     * Return a JSON-friendly object.\n     *\n     * @returns {TransactionLike} The JSON-friendly object.\n     */\n    abstract toJSON(): TransactionLike;\n\n    /**\n     * Return a protobuf-friendly JSON object.\n     *\n     * @param {boolean} includeSignature - Whether to include the signature in the protobuf.\n     * @returns {ProtoTransaction} The protobuf-friendly JSON object.\n     */\n    abstract toProtobuf(includeSignature: boolean): ProtoTransaction;\n\n    /**\n     * Get the origin zone of the transaction.\n     *\n     * @returns {Zone | undefined} The origin zone.\n     */\n    abstract get originZone(): Zone | undefined;\n\n    /**\n     * Get the destination zone of the transaction.\n     *\n     * @returns {Zone | undefined} The destination zone.\n     */\n    abstract get destZone(): Zone | undefined;\n\n    /**\n     * Check if the transaction is external.\n     *\n     * @returns {boolean} True if the transaction is external.\n     */\n    get isExternal(): boolean {\n        return this.destZone !== undefined && this.originZone !== this.destZone;\n    }\n}\n","import { keccak256 } from '../crypto/index.js';\nimport { AbstractTransaction, TransactionLike, TxInput, TxOutput } from './index.js';\nimport { assertArgument, getBytes, getZoneForAddress, hexlify, toBigInt } from '../utils/index.js';\nimport { decodeProtoTransaction } from '../encoding/index.js';\nimport { formatNumber } from '../providers/format.js';\nimport { computeAddress, isQiAddress } from '../address/index.js';\nimport { ProtoTransaction } from './abstract-transaction.js';\nimport { Zone } from '../constants/index.js';\n\n/**\n * Interface representing a QiTransaction.\n *\n * @category Transaction\n */\nexport interface QiTransactionLike extends TransactionLike {\n    /**\n     * Transaction inputs.\n     *\n     * @type {TxInput[] | null}\n     */\n    txInputs?: null | TxInput[];\n\n    /**\n     * Transaction outputs.\n     *\n     * @type {TxOutput[] | null}\n     */\n    txOutputs?: null | TxOutput[];\n}\n\n/**\n * Class representing a QiTransaction.\n *\n * @category Transaction\n * @extends {AbstractTransaction<string>}\n * @implements {QiTransactionLike}\n */\nexport class QiTransaction extends AbstractTransaction<string> implements QiTransactionLike {\n    #txInputs?: null | TxInput[];\n    #txOutputs?: null | TxOutput[];\n\n    /**\n     * Get transaction inputs.\n     *\n     * @returns {TxInput[]} The transaction inputs.\n     */\n    get txInputs(): TxInput[] {\n        return (this.#txInputs ?? []).map((entry) => ({ ...entry }));\n    }\n\n    /**\n     * Set transaction inputs.\n     *\n     * @param {TxInput[] | null} value - The transaction inputs.\n     * @throws {Error} If the value is not an array.\n     */\n    set txInputs(value: TxInput[] | null) {\n        if (!Array.isArray(value)) {\n            throw new Error('txInputs must be an array');\n        }\n        this.#txInputs = value.map((entry) => ({ ...entry }));\n    }\n\n    /**\n     * Get transaction outputs.\n     *\n     * @returns {TxOutput[]} The transaction outputs.\n     */\n    get txOutputs(): TxOutput[] {\n        return (this.#txOutputs ?? []).map((output) => ({ ...output }));\n    }\n\n    /**\n     * Set transaction outputs.\n     *\n     * @param {TxOutput[] | null} value - The transaction outputs.\n     * @throws {Error} If the value is not an array.\n     */\n    set txOutputs(value: TxOutput[] | null) {\n        if (!Array.isArray(value)) {\n            throw new Error('txOutputs must be an array');\n        }\n        this.#txOutputs = value.map((output) => ({ ...output }));\n    }\n\n    /**\n     * Get the permuted hash of the transaction as specified by QIP-0010.\n     *\n     * @returns {string | null} The transaction hash.\n     * @throws {Error} If the transaction has no inputs or outputs, or if cross-zone & cross-ledger transactions are not\n     *   supported.\n     * @see {@link [QIP0010](https://github.com/quai-network/qips/blob/master/qip-0010.md)}\n     */\n    get hash(): null | string {\n        if (this.signature == null) {\n            return null;\n        }\n\n        if (this.txInputs.length < 1 || this.txOutputs.length < 1) {\n            throw new Error('Transaction must have at least one input and one output');\n        }\n\n        const senderAddr = computeAddress(this.txInputs[0].pubkey || '');\n\n        if (!this.destZone || !this.originZone) {\n            throw new Error(\n                `Invalid zones: origin ${this.originZone} ->  destination ${this.destZone} (address: ${senderAddr})`,\n            );\n        }\n\n        const isSameLedger = isQiAddress(senderAddr) === isQiAddress(hexlify(this.txOutputs[0].address) || '');\n        if (this.isExternal && !isSameLedger) {\n            throw new Error('Cross-zone & cross-ledger transactions are not supported');\n        }\n\n        const hexString = this.serialized.startsWith('0x') ? this.serialized.substring(2) : this.serialized;\n        const dataBuffer = Buffer.from(hexString, 'hex');\n\n        const hashHex = keccak256(dataBuffer);\n        const hashBuffer = Buffer.from(hashHex.substring(2), 'hex');\n\n        const prevTxHash = this.txInputs[0].txhash;\n        const prevTxHashBytes = getBytes(prevTxHash);\n        const origin = prevTxHashBytes[2]; // Get the third byte (0-based index)\n        hashBuffer[0] = origin;\n        hashBuffer[1] |= 0x80;\n        hashBuffer[2] = origin;\n        hashBuffer[3] |= 0x80;\n\n        return '0x' + hashBuffer.toString('hex');\n    }\n\n    /**\n     * Get the zone of the sender address.\n     *\n     * @returns {Zone | undefined} The origin zone.\n     */\n    get originZone(): Zone | undefined {\n        const senderAddr = computeAddress(this.txInputs[0].pubkey || '');\n\n        const zone = getZoneForAddress(senderAddr);\n        return zone ?? undefined;\n    }\n\n    /**\n     * Get the zone of the recipient address.\n     *\n     * @returns {Zone | undefined} The destination zone.\n     */\n    get destZone(): Zone | undefined {\n        const zone = getZoneForAddress(this.txOutputs[0].address);\n        return zone ?? undefined;\n    }\n\n    /**\n     * Creates a new Transaction with default values.\n     */\n    constructor() {\n        super();\n        this.#txInputs = [];\n        this.#txOutputs = [];\n    }\n\n    /**\n     * Validates the explicit properties and returns a list of compatible transaction types.\n     *\n     * @returns {number[]} The compatible transaction types.\n     */\n    inferTypes(): Array<number> {\n        const types: Array<number> = [];\n\n        // Explicit type\n        if (this.type != null) {\n            types.push(this.type);\n        } else {\n            types.push(2);\n        }\n\n        types.sort();\n\n        return types;\n    }\n\n    /**\n     * Create a copy of this transaction.\n     *\n     * @returns {QiTransaction} The cloned transaction.\n     */\n    clone(): QiTransaction {\n        return QiTransaction.from(this);\n    }\n\n    /**\n     * Return a JSON-friendly object.\n     *\n     * @returns {QiTransactionLike} The JSON-friendly object.\n     */\n    toJSON(): TransactionLike {\n        const s = (v: null | bigint) => {\n            if (v == null) {\n                return null;\n            }\n            return v.toString();\n        };\n\n        return {\n            type: this.type,\n            chainId: s(this.chainId),\n            signature: this.signature ? this.signature : null,\n            hash: this.hash,\n            txInputs: this.txInputs,\n            txOutputs: this.txOutputs,\n        } as QiTransactionLike;\n    }\n\n    /**\n     * Return a protobuf-friendly JSON object.\n     *\n     * @param {boolean} [includeSignature=true] - Whether to include the signature. Default is `true`\n     * @returns {ProtoTransaction} The protobuf-friendly JSON object.\n     */\n    toProtobuf(includeSignature: boolean = true): ProtoTransaction {\n        const protoTx: ProtoTransaction = {\n            type: this.type || 2,\n            chain_id: formatNumber(this.chainId || 0, 'chainId'),\n            tx_ins: {\n                tx_ins: this.txInputs.map((input) => ({\n                    previous_out_point: {\n                        hash: { value: getBytes(input.txhash) },\n                        index: input.index,\n                    },\n                    pub_key: getBytes(input.pubkey),\n                })),\n            },\n            tx_outs: {\n                tx_outs: this.txOutputs.map((output) => ({\n                    address: getBytes(output.address),\n                    denomination: output.denomination,\n                    lock: new Uint8Array(),\n                })),\n            },\n        };\n\n        if (this.signature && includeSignature) {\n            protoTx.signature = getBytes(this.signature);\n        }\n        return protoTx;\n    }\n\n    /**\n     * Create a Transaction from a serialized transaction or a Transaction-like object.\n     *\n     * @param {string | QiTransactionLike} tx - The transaction to decode.\n     * @returns {QiTransaction} The decoded transaction.\n     * @throws {Error} If the transaction is unsigned and defines a hash.\n     */\n    static from(tx: string | QiTransactionLike): QiTransaction {\n        if (typeof tx === 'string') {\n            const decodedProtoTx: ProtoTransaction = decodeProtoTransaction(getBytes(tx));\n            return QiTransaction.fromProto(decodedProtoTx);\n        }\n\n        const result = new QiTransaction();\n        if (tx.type != null) {\n            result.type = tx.type;\n        }\n        if (tx.chainId != null) {\n            result.chainId = tx.chainId;\n        }\n        if (tx.signature != null && tx.signature !== '') {\n            result.signature = tx.signature as string;\n        }\n        if (tx.txInputs != null) {\n            result.txInputs = tx.txInputs as TxInput[];\n        }\n        if (tx.txOutputs != null) {\n            result.txOutputs = tx.txOutputs as TxOutput[];\n        }\n\n        if (tx.hash != null) {\n            assertArgument(result.isSigned(), 'unsigned transaction cannot define hash', 'tx', tx);\n        }\n\n        return result;\n    }\n\n    /**\n     * Create a Transaction from a ProtoTransaction object.\n     *\n     * @param {ProtoTransaction} protoTx - The transaction to decode.\n     * @returns {QiTransaction} The decoded transaction.\n     */\n    static fromProto(protoTx: ProtoTransaction): QiTransaction {\n        const tx = new QiTransaction();\n\n        tx.type = protoTx.type;\n        tx.chainId = toBigInt(protoTx.chain_id);\n\n        tx.txInputs =\n            protoTx.tx_ins?.tx_ins.map((input) => ({\n                txhash: hexlify(input.previous_out_point.hash.value),\n                index: input.previous_out_point.index,\n                pubkey: hexlify(input.pub_key),\n            })) ?? [];\n        tx.txOutputs =\n            protoTx.tx_outs?.tx_outs.map((output) => ({\n                address: hexlify(output.address),\n                denomination: output.denomination,\n                lock: output.lock ? hexlify(output.lock) : '',\n            })) ?? [];\n        if (protoTx.signature) {\n            tx.signature = hexlify(protoTx.signature);\n        }\n\n        return tx;\n    }\n}\n","import { keccak256, Signature } from '../crypto/index.js';\nimport { AccessList, accessListify, AccessListish, AbstractTransaction, TransactionLike } from './index.js';\nimport {\n    assert,\n    assertArgument,\n    BigNumberish,\n    BytesLike,\n    getBigInt,\n    getBytes,\n    getNumber,\n    getZoneForAddress,\n    hexlify,\n    toBeArray,\n    toBigInt,\n    zeroPadValue,\n} from '../utils/index.js';\nimport { decodeProtoTransaction, encodeProtoTransaction } from '../encoding/index.js';\nimport {\n    formatMixedCaseChecksumAddress,\n    getAddress,\n    recoverAddress,\n    validateAddress,\n    isQuaiAddress,\n} from '../address/index.js';\nimport { formatNumber, handleNumber } from '../providers/format.js';\nimport { ProtoTransaction } from './abstract-transaction.js';\nimport { Zone } from '../constants/index.js';\n\n/**\n * A **QuaiTransactionLike** is a JSON representation of a Quai transaction.\n *\n * @category Transaction\n */\nexport interface QuaiTransactionLike extends TransactionLike {\n    /**\n     * The recipient address or `null` for an `init` transaction.\n     */\n    to?: null | string;\n\n    /**\n     * The sender.\n     */\n    from?: string;\n\n    /**\n     * The nonce.\n     */\n    nonce?: null | number;\n\n    /**\n     * The maximum amount of gas that can be used.\n     */\n    gasLimit?: null | BigNumberish;\n\n    /**\n     * The maximum priority fee per gas for london transactions.\n     */\n    minerTip?: null | BigNumberish;\n\n    /**\n     * The maximum total fee per gas for london transactions.\n     */\n    gasPrice?: null | BigNumberish;\n\n    /**\n     * The data.\n     */\n    data?: null | string;\n\n    /**\n     * The value (in wei) to send.\n     */\n    value?: null | BigNumberish;\n\n    /**\n     * The access list for berlin and london transactions.\n     */\n    accessList?: null | AccessListish;\n}\n\n/**\n * Parses a signature from an array of fields.\n *\n * @ignore\n * @param {string[]} fields - The fields to parse.\n * @returns {Signature} The parsed signature.\n */\nexport function _parseSignature(fields: Array<string>): Signature {\n    let yParity: number;\n    try {\n        yParity = handleNumber(fields[0], 'yParity');\n        if (yParity !== 0 && yParity !== 1) {\n            throw new Error('bad yParity');\n        }\n    } catch (error) {\n        assertArgument(false, 'invalid yParity', 'yParity', fields[0]);\n    }\n\n    const r = zeroPadValue(fields[1], 32);\n    const s = zeroPadValue(fields[2], 32);\n\n    return Signature.from({ r, s, yParity });\n}\n\n/**\n * Represents a Quai transaction.\n *\n * @category Transaction\n */\nexport class QuaiTransaction extends AbstractTransaction<Signature> implements QuaiTransactionLike {\n    #to: null | string;\n    #data: string;\n    #nonce: number;\n    #gasLimit: bigint;\n    #gasPrice: null | bigint;\n    #minerTip: null | bigint;\n    #value: bigint;\n    #accessList: null | AccessList;\n    from?: string;\n\n    /**\n     * The `to` address for the transaction or `null` if the transaction is an `init` transaction.\n     *\n     * @type {null | string}\n     */\n    get to(): null | string {\n        return this.#to;\n    }\n    set to(value: null | string) {\n        if (value !== null) validateAddress(value);\n        this.#to = value;\n    }\n\n    /**\n     * The permuted hash of the transaction as specified by\n     * [QIP-0010](https://github.com/quai-network/qips/blob/master/qip-0010.md).\n     *\n     * @type {null | string}\n     * @throws {Error} If the transaction is not signed.\n     */\n    get hash(): null | string {\n        if (this.signature == null) return null;\n\n        if (!this.originZone) {\n            throw new Error('Invalid Zone for from address');\n        }\n        if (!this.from) {\n            throw new Error('Missing from address');\n        }\n\n        const isSameLedger = !this.to || isQuaiAddress(this.from) === isQuaiAddress(this.to);\n        if (this.isExternal && !isSameLedger) {\n            throw new Error('Cross-zone & cross-ledger transactions are not supported');\n        }\n\n        const hexString = this.serialized.startsWith('0x') ? this.serialized.substring(2) : this.serialized;\n        const dataBuffer = Buffer.from(hexString, 'hex');\n\n        const hashHex = keccak256(dataBuffer);\n        const hashBuffer = Buffer.from(hashHex.substring(2), 'hex');\n\n        const origin = this.originZone ? parseInt(this.originZone.slice(2), 16) : 0;\n        hashBuffer[0] = origin;\n        hashBuffer[1] &= 0x7f;\n        hashBuffer[2] = origin;\n        hashBuffer[3] &= 0x7f;\n\n        return '0x' + hashBuffer.toString('hex');\n    }\n\n    /**\n     * The zone of the sender address\n     *\n     * @type {Zone | undefined}\n     */\n    get originZone(): Zone | undefined {\n        const zone = this.from ? getZoneForAddress(this.from) : undefined;\n        return zone ?? undefined;\n    }\n\n    /**\n     * The zone of the recipient address\n     *\n     * @type {Zone | undefined}\n     */\n    get destZone(): Zone | undefined {\n        const zone = this.to !== null ? getZoneForAddress(this.to || '') : undefined;\n        return zone ?? undefined;\n    }\n\n    /**\n     * The transaction nonce.\n     *\n     * @type {number}\n     */\n    get nonce(): number {\n        return this.#nonce;\n    }\n    set nonce(value: BigNumberish) {\n        this.#nonce = getNumber(value, 'value');\n    }\n\n    /**\n     * The gas limit.\n     *\n     * @type {bigint}\n     */\n    get gasLimit(): bigint {\n        return this.#gasLimit;\n    }\n    set gasLimit(value: BigNumberish) {\n        this.#gasLimit = getBigInt(value);\n    }\n\n    /**\n     * The maximum priority fee per unit of gas to pay. On legacy networks this should be `null`.\n     *\n     * @type {null | bigint}\n     */\n    get minerTip(): null | bigint {\n        const value = this.#minerTip;\n        if (value == null) {\n            return null;\n        }\n        return value;\n    }\n    set minerTip(value: null | BigNumberish) {\n        this.#minerTip = value == null ? null : getBigInt(value, 'minerTip');\n    }\n\n    /**\n     * The maximum total fee per unit of gas to pay. On legacy networks this should be `null`.\n     *\n     * @type {null | bigint}\n     */\n    get gasPrice(): null | bigint {\n        const value = this.#gasPrice;\n        if (value == null) {\n            return null;\n        }\n        return value;\n    }\n    set gasPrice(value: null | BigNumberish) {\n        this.#gasPrice = value == null ? null : getBigInt(value, 'gasPrice');\n    }\n\n    /**\n     * The transaction data. For `init` transactions this is the deployment code.\n     *\n     * @type {string}\n     */\n    get data(): string {\n        return this.#data;\n    }\n    set data(value: BytesLike) {\n        this.#data = hexlify(value);\n    }\n\n    /**\n     * The amount of ether to send in this transactions.\n     *\n     * @type {bigint}\n     */\n    get value(): bigint {\n        return this.#value;\n    }\n    set value(value: BigNumberish) {\n        this.#value = getBigInt(value, 'value');\n    }\n\n    /**\n     * The access list.\n     *\n     * An access list permits discounted (but pre-paid) access to bytecode and state variable access within contract\n     * execution.\n     *\n     * @type {null | AccessList}\n     */\n    get accessList(): null | AccessList {\n        const value = this.#accessList || null;\n        if (value == null) {\n            return null;\n        }\n        return value;\n    }\n    set accessList(value: null | AccessListish) {\n        this.#accessList = value == null ? null : accessListify(value);\n    }\n\n    /**\n     * Creates a new Transaction with default values.\n     *\n     * @param {string} [from] - The sender address.\n     */\n    constructor(from?: string) {\n        super();\n        this.#to = null;\n        this.#nonce = 0;\n        this.#gasLimit = BigInt(0);\n        this.#gasPrice = null;\n        this.#minerTip = null;\n        this.#gasPrice = null;\n        this.#data = '0x';\n        this.#value = BigInt(0);\n        this.#accessList = null;\n        this.from = from;\n    }\n\n    /**\n     * Validates the explicit properties and returns a list of compatible transaction types.\n     *\n     * @returns {number[]} The compatible transaction types.\n     */\n    inferTypes(): Array<number> {\n        if (this.gasPrice != null && this.minerTip != null) {\n            assert(this.gasPrice >= this.minerTip, 'priorityFee cannot be more than maxFee', 'BAD_DATA', {\n                value: this,\n            });\n        }\n\n        assert(\n            this.type !== 0 && this.type !== 1,\n            'transaction type cannot have externalGasLimit, externalGasTip, externalGasPrice, externalData, or externalAccessList',\n            'BAD_DATA',\n            { value: this },\n        );\n\n        const types: Array<number> = [];\n\n        // Explicit type\n        if (this.type != null) {\n            types.push(this.type);\n        } else {\n            types.push(0);\n        }\n\n        types.sort();\n\n        return types;\n    }\n\n    /**\n     * Create a copy of this transaction.\n     *\n     * @returns {QuaiTransaction} The cloned transaction.\n     */\n    clone(): QuaiTransaction {\n        return QuaiTransaction.from(this);\n    }\n\n    /**\n     * Return a JSON-friendly object.\n     *\n     * @returns {QuaiTransactionLike} The JSON-friendly object.\n     */\n    toJSON(): QuaiTransactionLike {\n        const s = (v: null | bigint) => {\n            if (v == null) {\n                return null;\n            }\n            return v.toString();\n        };\n\n        return {\n            type: this.type,\n            to: this.to,\n            from: this.from,\n            data: this.data,\n            nonce: this.nonce,\n            gasLimit: s(this.gasLimit),\n            gasPrice: s(this.gasPrice),\n            minerTip: s(this.minerTip),\n            value: s(this.value),\n            chainId: s(this.chainId),\n            signature: this.signature ? this.signature.toJSON() : null,\n            hash: this.hash,\n            accessList: this.accessList,\n        } as QuaiTransactionLike;\n    }\n\n    /**\n     * Return a protobuf-friendly JSON object.\n     *\n     * @param {boolean} [includeSignature=true] - Whether to include the signature. Default is `true`\n     * @returns {ProtoTransaction} The protobuf-friendly JSON object.\n     */\n    toProtobuf(includeSignature: boolean = true): ProtoTransaction {\n        const protoTx: ProtoTransaction = {\n            type: this.type || 0,\n            chain_id: formatNumber(this.chainId || 0, 'chainId'),\n            nonce: this.nonce || 0,\n            miner_tip: formatNumber(this.minerTip || 0, 'minerTip'),\n            gas_price: formatNumber(this.gasPrice || 0, 'gasPrice'),\n            gas: Number(this.gasLimit || 0),\n            to: this.to != null ? getBytes(this.to as string) : null,\n            value: formatNumber(this.value || 0, 'value'),\n            data: getBytes(this.data || '0x'),\n            access_list: {\n                access_tuples:\n                    this.accessList?.map((it) => {\n                        return {\n                            address: getBytes(it.address),\n                            storage_key: it.storageKeys.map((key) => {\n                                return { value: getBytes(key) };\n                            }),\n                        };\n                    }) || [],\n            },\n        };\n\n        if (this.signature && includeSignature) {\n            protoTx.v = formatNumber(this.signature.yParity, 'yParity');\n            protoTx.r = toBeArray(this.signature.r);\n            protoTx.s = toBeArray(this.signature.s);\n        }\n\n        return protoTx;\n    }\n\n    /**\n     * Create a **Transaction** from a serialized transaction or a Transaction-like object.\n     *\n     * @param {string | QuaiTransactionLike} tx - The transaction to decode.\n     * @returns {QuaiTransaction} The decoded transaction.\n     */\n    static from(tx: string | QuaiTransactionLike): QuaiTransaction {\n        if (typeof tx === 'string') {\n            const decodedProtoTx: ProtoTransaction = decodeProtoTransaction(getBytes(tx));\n            return QuaiTransaction.fromProto(decodedProtoTx);\n        }\n\n        const result = new QuaiTransaction(tx.from);\n        if (tx.type != null) {\n            result.type = tx.type;\n        }\n        if (tx.to != null) {\n            validateAddress(tx.to);\n            result.to = tx.to;\n        }\n        if (tx.nonce != null) {\n            result.nonce = tx.nonce;\n        }\n        if (tx.gasLimit != null) {\n            result.gasLimit = tx.gasLimit;\n        }\n        if (tx.minerTip != null) {\n            result.minerTip = tx.minerTip;\n        }\n        if (tx.gasPrice != null) {\n            result.gasPrice = tx.gasPrice;\n        }\n        if (tx.data != null && tx.data !== '') {\n            result.data = tx.data;\n        }\n        if (tx.value != null) {\n            result.value = tx.value;\n        }\n        if (tx.chainId != null) {\n            result.chainId = tx.chainId;\n        }\n        if (tx.signature != null) {\n            result.signature = Signature.from(tx.signature);\n        }\n        if (tx.accessList != null) {\n            result.accessList = tx.accessList;\n        }\n\n        if (tx.hash != null) {\n            assertArgument(result.isSigned(), 'unsigned transaction cannot define hash', 'tx', tx);\n        }\n\n        if (tx.from != null) {\n            assertArgument(isQuaiAddress(tx.from), 'from address must be a Quai address', 'tx.from', tx.from);\n            assertArgument(\n                (result.from || '').toLowerCase() === (tx.from || '').toLowerCase(),\n                'from mismatch',\n                'tx',\n                tx,\n            );\n            result.from = tx.from;\n        }\n        return result;\n    }\n\n    /**\n     * Create a **Transaction** from a ProtoTransaction object.\n     *\n     * @param {ProtoTransaction} protoTx - The transaction to decode.\n     * @returns {QuaiTransaction} The decoded transaction.\n     */\n    static fromProto(protoTx: ProtoTransaction): QuaiTransaction {\n        //  TODO: Fix this because new tx instance requires a 'from' address\n        let signature: null | Signature = null;\n        let address: string = '';\n        delete protoTx.etx_sender;\n        delete protoTx.etx_index;\n        delete protoTx.work_nonce;\n        delete protoTx.etx_type;\n        const protoTxCopy = structuredClone(protoTx);\n\n        if (protoTx.v && protoTx.r && protoTx.s) {\n            // check if protoTx.r is zero\n            if (protoTx.r.reduce((acc, val) => (acc += val), 0) == 0) {\n                throw new Error('Proto decoding only supported for signed transactions');\n            }\n            const signatureFields = [hexlify(protoTx.v!), hexlify(protoTx.r!), hexlify(protoTx.s!)];\n            signature = _parseSignature(signatureFields);\n\n            delete protoTxCopy.v;\n            delete protoTxCopy.r;\n            delete protoTxCopy.s;\n            delete protoTxCopy.signature;\n\n            address = recoverAddress(keccak256(encodeProtoTransaction(protoTxCopy)), signature);\n        }\n        const tx = new QuaiTransaction(address);\n\n        if (signature) {\n            tx.signature = signature;\n        }\n\n        if (protoTx.to !== null) {\n            const toAddr = hexlify(protoTx.to!);\n            tx.to = getAddress(toAddr);\n        }\n\n        tx.type = protoTx.type;\n        tx.chainId = toBigInt(protoTx.chain_id);\n        tx.nonce = Number(protoTx.nonce);\n        tx.minerTip = toBigInt(protoTx.miner_tip!);\n        tx.gasPrice = toBigInt(protoTx.gas_price!);\n        tx.gasLimit = toBigInt(protoTx.gas!);\n        tx.value = protoTx.value !== null ? toBigInt(protoTx.value!) : BigInt(0);\n        tx.data = hexlify(protoTx.data!);\n        tx.accessList = protoTx.access_list!.access_tuples.map((tuple) => ({\n            address: formatMixedCaseChecksumAddress(hexlify(tuple.address)),\n            storageKeys: tuple.storage_key.map((key) => hexlify(key.value)),\n        }));\n        return tx;\n    }\n}\n","import { toZone, Zone } from '../constants/index.js';\nimport { toShard } from '../constants/shards.js';\nimport { assert, getBytes, isHexString } from '../utils/index.js';\nimport { getZoneFromNodeLocation } from '../utils/shards.js';\nimport {\n    getZoneFromEventFilter,\n    TransactionResponse,\n    type EventFilter,\n    type OrphanFilter,\n    type ProviderEvent,\n} from './provider.js';\n\nimport type { AbstractProvider, Subscriber } from './abstract-provider.js';\n\n/**\n * Deep copies an object.\n *\n * @param {any} obj - The object to copy.\n * @returns {any} The copied object.\n */\nfunction copy(obj: any): any {\n    return JSON.parse(JSON.stringify(obj));\n}\n\n/**\n * Return the polling subscriber for common events.\n *\n * @category Providers\n * @param {AbstractProvider} provider - The provider to attach the subscriber to.\n * @param {ProviderEvent} event - The event to subscribe to.\n * @returns {Subscriber} The polling subscriber.\n * @throws {Error} If the event is unsupported.\n */\nexport function getPollingSubscriber(provider: AbstractProvider, event: ProviderEvent, zone: Zone): Subscriber {\n    if (event === 'block') {\n        return new PollingBlockSubscriber(provider, zone);\n    }\n\n    if (isHexString(event, 32)) {\n        const eventBytes = getBytes(event);\n        const ninthBit = (eventBytes[1] & 0x80) === 0x80;\n\n        if (ninthBit) {\n            return new PollingQiTransactionSubscriber(provider, event, zone);\n        } else {\n            return new PollingTransactionSubscriber(provider, event, zone);\n        }\n    }\n\n    assert(false, 'unsupported polling event', 'UNSUPPORTED_OPERATION', {\n        operation: 'getPollingSubscriber',\n        info: { event },\n    });\n}\n\n/**\n * A **PollingBlockSubscriber** polls at a regular interval for a change in the block number.\n *\n * @category Providers\n */\nexport class PollingBlockSubscriber implements Subscriber {\n    #provider: AbstractProvider;\n    #poller: null | number;\n    #interval: number;\n    #zone: Zone;\n\n    // The most recent block we have scanned for events. The value -2\n    // indicates we still need to fetch an initial block number\n    #blockNumber: number;\n\n    /**\n     * Create a new **PollingBlockSubscriber** attached to `provider`.\n     *\n     * @ignore\n     */\n    constructor(provider: AbstractProvider, zone: Zone) {\n        this.#provider = provider;\n        this.#zone = zone;\n        this.#poller = null;\n        this.#interval = 4000;\n        this.#blockNumber = -2;\n    }\n\n    /**\n     * The polling interval.\n     *\n     * @returns {number} The current polling interval.\n     */\n    get pollingInterval(): number {\n        return this.#interval;\n    }\n\n    /**\n     * Sets the polling interval.\n     *\n     * @param {number} value - The new polling interval.\n     */\n    set pollingInterval(value: number) {\n        this.#interval = value;\n    }\n\n    /**\n     * Polls for new blocks.\n     *\n     * @ignore\n     * @returns {Promise<void>} A promise that resolves when polling is complete.\n     */\n    async #poll(): Promise<void> {\n        try {\n            const blockNumber = await this.#provider.getBlockNumber(toShard(this.#zone));\n\n            // Bootstrap poll to setup our initial block number\n            if (this.#blockNumber === -2) {\n                this.#blockNumber = blockNumber;\n                return;\n            }\n\n            // @TODO: Put a cap on the maximum number of events per loop?\n\n            if (blockNumber !== this.#blockNumber) {\n                for (let b = this.#blockNumber + 1; b <= blockNumber; b++) {\n                    // We have been stopped\n                    if (this.#poller == null) {\n                        return;\n                    }\n\n                    await this.#provider.emit('block', this.#zone, b);\n                }\n\n                this.#blockNumber = blockNumber;\n            }\n        } catch (error) {\n            // @TODO: Minor bump, add an \"error\" event to let subscribers\n            //        know things went awry.\n        }\n\n        // We have been stopped\n        if (this.#poller == null) {\n            return;\n        }\n\n        this.#poller = this.#provider._setTimeout(this.#poll.bind(this), this.#interval);\n    }\n\n    /**\n     * Starts the polling process.\n     */\n    start(): void {\n        if (this.#poller) {\n            return;\n        }\n        this.#poller = this.#provider._setTimeout(this.#poll.bind(this), this.#interval);\n        this.#poll();\n    }\n\n    /**\n     * Stops the polling process.\n     */\n    stop(): void {\n        if (!this.#poller) {\n            return;\n        }\n        this.#provider._clearTimeout(this.#poller);\n        this.#poller = null;\n    }\n\n    /**\n     * Pauses the polling process.\n     *\n     * @param {boolean} [dropWhilePaused] - Whether to drop the block number while paused.\n     */\n    pause(dropWhilePaused?: boolean): void {\n        this.stop();\n        if (dropWhilePaused) {\n            this.#blockNumber = -2;\n        }\n    }\n\n    /**\n     * Resumes the polling process.\n     */\n    resume(): void {\n        this.start();\n    }\n}\n\n/**\n * An **OnBlockSubscriber** can be sub-classed, with a {@link OnBlockSubscriber._poll | **_poll**} implementation which\n * will be called on every new block.\n *\n * @category Providers\n */\nexport class OnBlockSubscriber implements Subscriber {\n    #provider: AbstractProvider;\n    #poll: (b: number) => void;\n    #running: boolean;\n    #zone: Zone;\n\n    /**\n     * Create a new **OnBlockSubscriber** attached to `provider`.\n     *\n     * @ignore\n     */\n    constructor(provider: AbstractProvider, zone: Zone) {\n        this.#provider = provider;\n        this.#zone = zone;\n        this.#running = false;\n        this.#poll = (blockNumber: number) => {\n            this._poll(blockNumber, this.#provider);\n        };\n    }\n\n    /**\n     * Called on every new block.\n     *\n     * @ignore\n     * @param {number} blockNumber - The block number.\n     * @param {AbstractProvider} provider - The provider.\n     * @returns {Promise<void>} A promise that resolves when the poll is complete.\n     * @throws {Error} If the method is not overridden by a subclass.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async _poll(blockNumber: number, provider: AbstractProvider): Promise<void> {\n        throw new Error('sub-classes must override this');\n    }\n\n    /**\n     * Starts the subscriber.\n     */\n    start(): void {\n        if (this.#running) {\n            return;\n        }\n        this.#running = true;\n\n        this.#poll(-2);\n        this.#provider.on('block', this.#poll, this.#zone);\n    }\n\n    /**\n     * Stops the subscriber.\n     */\n    stop(): void {\n        if (!this.#running) {\n            return;\n        }\n        this.#running = false;\n\n        this.#provider.off('block', this.#poll, this.#zone);\n    }\n\n    /**\n     * Pauses the subscriber.\n     *\n     * @param {boolean} [dropWhilePaused] - Whether to drop the block number while paused.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    pause(dropWhilePaused?: boolean): void {\n        this.stop();\n    }\n\n    /**\n     * Resumes the subscriber.\n     */\n    resume(): void {\n        this.start();\n    }\n}\n\n/**\n * @ignore\n */\nexport class PollingOrphanSubscriber extends OnBlockSubscriber {\n    #filter: OrphanFilter;\n\n    /**\n     * Create a new **PollingOrphanSubscriber** attached to `provider`, listening for `filter`.\n     *\n     * @ignore\n     */\n    constructor(provider: AbstractProvider, filter: OrphanFilter, zone: Zone) {\n        super(provider, zone);\n        this.#filter = copy(filter);\n    }\n\n    /**\n     * Polls for orphaned blocks.\n     *\n     * @ignore\n     * @param {number} blockNumber - The block number.\n     * @param {AbstractProvider} provider - The provider.\n     * @returns {Promise<void>} A promise that resolves when the poll is complete.\n     * @throws {Error} If the method is not implemented.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async _poll(blockNumber: number, provider: AbstractProvider): Promise<void> {\n        throw new Error('@TODO');\n        console.log(this.#filter);\n    }\n}\n\n/**\n * A **PollingTransactionSubscriber** will poll for a given transaction hash for its receipt.\n *\n * @category Providers\n */\nexport class PollingTransactionSubscriber extends OnBlockSubscriber {\n    #hash: string;\n\n    /**\n     * Create a new **PollingTransactionSubscriber** attached to `provider`, listening for `hash`.\n     *\n     * @ignore\n     */\n    constructor(provider: AbstractProvider, hash: string, zone: Zone) {\n        super(provider, zone);\n        this.#hash = hash;\n    }\n\n    /**\n     * Polls for the transaction receipt.\n     *\n     * @ignore\n     * @param {number} blockNumber - The block number.\n     * @param {AbstractProvider} provider - The provider.\n     * @returns {Promise<void>} A promise that resolves when the poll is complete.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async _poll(blockNumber: number, provider: AbstractProvider): Promise<void> {\n        const tx = await provider.getTransactionReceipt(this.#hash);\n        if (tx) {\n            provider.emit(this.#hash, toZone(this.#hash.slice(0, 4)), tx);\n        }\n    }\n}\n\nexport class PollingQiTransactionSubscriber extends OnBlockSubscriber {\n    #hash: string;\n\n    constructor(provider: AbstractProvider, hash: string, zone: Zone) {\n        super(provider, zone);\n        this.#hash = hash;\n    }\n\n    async _poll(blockNumber: number, provider: AbstractProvider): Promise<void> {\n        const tx = (await provider.getTransaction(this.#hash)) as TransactionResponse;\n        if (tx && tx.isMined()) {\n            provider.emit(this.#hash, toZone(this.#hash.slice(0, 4)), tx);\n        }\n    }\n}\n\n/**\n * A **PollingEventSubscriber** will poll for a given filter for its logs.\n *\n * @category Providers\n */\nexport class PollingEventSubscriber implements Subscriber {\n    #provider: AbstractProvider;\n    #filter: EventFilter;\n    #poller: (b: number) => void;\n    #running: boolean;\n    #blockNumber: number;\n    #zone: Zone;\n\n    /**\n     * Create a new **PollingEventSubscriber** attached to `provider`, listening for `filter`.\n     *\n     * @ignore\n     */\n    constructor(provider: AbstractProvider, filter: EventFilter) {\n        this.#provider = provider;\n        this.#filter = copy(filter);\n        this.#poller = this.#poll.bind(this);\n        this.#running = false;\n        this.#blockNumber = -2;\n        const zone = getZoneFromEventFilter(this.#filter);\n        if (zone) {\n            this.#zone = zone;\n        } else {\n            throw new Error('Unable to determine zone for event filter');\n        }\n    }\n\n    /**\n     * Polls for logs based on the filter.\n     *\n     * @ignore\n     * @param {number} blockNumber - The block number.\n     * @returns {Promise<void>} A promise that resolves when the poll is complete.\n     */\n    async #poll(blockNumber: number): Promise<void> {\n        // The initial block hasn't been determined yet\n        if (this.#blockNumber === -2) {\n            return;\n        }\n\n        const filter = copy(this.#filter);\n        filter.fromBlock = this.#blockNumber + 1;\n        filter.toBlock = blockNumber;\n\n        const logs = await this.#provider.getLogs(filter);\n\n        // No logs could just mean the node has not indexed them yet,\n        // so we keep a sliding window of 60 blocks to keep scanning\n        if (logs.length === 0) {\n            if (this.#blockNumber < blockNumber - 60) {\n                this.#blockNumber = blockNumber - 60;\n            }\n            return;\n        }\n\n        for (const log of logs) {\n            this.#provider.emit(this.#filter, getZoneFromNodeLocation(this.#filter.nodeLocation!), log);\n\n            // Only advance the block number when logs were found to\n            // account for networks (like BNB and Polygon) which may\n            // sacrifice event consistency for block event speed\n            this.#blockNumber = log.blockNumber;\n        }\n    }\n\n    /**\n     * Starts the subscriber.\n     */\n    start(): void {\n        if (this.#running) {\n            return;\n        }\n        this.#running = true;\n\n        if (this.#blockNumber === -2) {\n            this.#provider.getBlockNumber(toShard(this.#zone)).then((blockNumber) => {\n                this.#blockNumber = blockNumber;\n            });\n        }\n        this.#provider.on('block', this.#poller, this.#zone);\n    }\n\n    /**\n     * Stops the subscriber.\n     */\n    stop(): void {\n        if (!this.#running) {\n            return;\n        }\n        this.#running = false;\n\n        this.#provider.off('block', this.#poller, this.#zone);\n    }\n\n    /**\n     * Pauses the subscriber.\n     *\n     * @param {boolean} [dropWhilePaused] - Whether to drop the block number while paused.\n     */\n    pause(dropWhilePaused?: boolean): void {\n        this.stop();\n        if (dropWhilePaused) {\n            this.#blockNumber = -2;\n        }\n    }\n\n    /**\n     * Resumes the subscriber.\n     */\n    resume(): void {\n        this.start();\n    }\n}\n","/**\n * The available providers should suffice for most developers purposes, but the\n * {@link AbstractProvider | **AbstractProvider**} class has many features which enable sub-classing it for specific\n * purposes.\n */\n\n/**\n * Event coalescence When we register an event with an async value (e.g. address is a Signer), we need to add it\n * immediately for the Event API, but also need time to resolve the address. Upon resolving the address, we need to\n * migrate the listener to the static event. We also need to maintain a map of Signer to address so we can sync respond\n * to listenerCount.\n */\n\nimport { computeAddress, resolveAddress, formatMixedCaseChecksumAddress, isQiAddress } from '../address/index.js';\nimport { Shard, toShard, toZone, Zone } from '../constants/index.js';\nimport { TxInput, TxOutput } from '../transaction/index.js';\nimport { Outpoint, OutpointDeltas, TxInputJson, TxOutputJson } from '../transaction/utxo.js';\nimport {\n    hexlify,\n    isHexString,\n    getBigInt,\n    getBytes,\n    getNumber,\n    makeError,\n    assert,\n    assertArgument,\n    FetchRequest,\n    toQuantity,\n    defineProperties,\n    EventPayload,\n    resolveProperties,\n} from '../utils/index.js';\nimport { decodeProtoTransaction } from '../encoding/index.js';\nimport type { txpoolContentResponse, txpoolInspectResponse } from './txpool.js';\n\nimport {\n    formatBlock,\n    formatLog,\n    formatOutpointDeltas,\n    formatOutpoints,\n    formatTransactionReceipt,\n    formatTransactionResponse,\n} from './format.js';\nimport { Network } from './network.js';\nimport {\n    copyRequest,\n    Block,\n    FeeData,\n    Log,\n    TransactionReceipt,\n    TransactionResponse,\n    addressFromTransactionRequest,\n    QiPreparedTransactionRequest,\n    QuaiPreparedTransactionRequest,\n    QuaiTransactionResponse,\n    QiTransactionResponse,\n    QuaiTransactionRequest,\n    AccessesFilter,\n    ExternalTransactionResponse,\n} from './provider.js';\n\nimport type { Addressable, AddressLike } from '../address/index.js';\nimport type { BigNumberish } from '../utils/index.js';\nimport type { Listener } from '../utils/index.js';\n\nimport type { Networkish } from './network.js';\nimport type {\n    BlockParams,\n    ExternalTransactionResponseParams,\n    LogParams,\n    OutpointDeltaResponseParams,\n    QiTransactionResponseParams,\n    TransactionReceiptParams,\n} from './formatting.js';\n\nimport type {\n    BlockTag,\n    EventFilter,\n    Filter,\n    FilterByBlockHash,\n    NodeLocation,\n    OrphanFilter,\n    Provider,\n    ProviderEvent,\n    TransactionRequest,\n} from './provider.js';\nimport { WorkObjectLike } from '../transaction/work-object.js';\nimport { QiTransaction, QuaiTransaction } from '../transaction/index.js';\nimport { QuaiTransactionResponseParams } from './formatting.js';\n\nimport {\n    PollingBlockSubscriber,\n    PollingEventSubscriber,\n    PollingOrphanSubscriber,\n    PollingTransactionSubscriber,\n    PollingQiTransactionSubscriber,\n} from './subscriber-polling.js';\nimport { getNodeLocationFromZone, getZoneFromNodeLocation } from '../utils/shards.js';\nimport { fromShard } from '../constants/shards.js';\nimport { AccessList } from '../transaction/index.js';\n\ntype Timer = ReturnType<typeof setTimeout>;\n\n/**\n * Check if a value is a Promise.\n *\n * @param {any} value - The value to check.\n * @returns {boolean} True if the value is a Promise, false otherwise.\n */\nfunction isPromise<T = any>(value: any): value is Promise<T> {\n    return value && typeof value.then === 'function';\n}\n\n/**\n * Get a tag string based on a prefix and value.\n *\n * @param {string} prefix - The prefix for the tag.\n * @param {any} value - The value to include in the tag.\n * @returns {string} The generated tag.\n */\nfunction getTag(prefix: string, value: any): string {\n    return (\n        prefix +\n        ':' +\n        JSON.stringify(value, (k, v) => {\n            if (v == null) {\n                return 'null';\n            }\n            if (typeof v === 'bigint') {\n                return `bigint:${v.toString()}`;\n            }\n            if (typeof v === 'string') {\n                return v.toLowerCase();\n            }\n\n            // Sort object keys\n            if (typeof v === 'object' && !Array.isArray(v)) {\n                const keys = Object.keys(v);\n                keys.sort();\n                return keys.reduce(\n                    (accum, key) => {\n                        accum[key] = v[key];\n                        return accum;\n                    },\n                    <any>{},\n                );\n            }\n\n            return v;\n        })\n    );\n}\n\n/**\n * The value passed to the {@link AbstractProvider._getSubscriber | **AbstractProvider._getSubscriber**} method.\n *\n * Only developers sub-classing {@link AbstractProvider | **AbstractProvider**} will care about this, if they are\n * modifying a low-level feature of how subscriptions operate.\n *\n * @category Providers\n */\nexport type Subscription =\n    | {\n          type: 'close' | 'debug' | 'error' | 'finalized' | 'network' | 'safe';\n          tag: string;\n          zone?: Zone;\n      }\n    | {\n          type: 'block' | 'pending';\n          tag: string;\n          zone: Zone;\n      }\n    | {\n          type: 'transaction';\n          tag: string;\n          hash: string;\n          zone: Zone;\n      }\n    | {\n          type: 'accesses';\n          tag: string;\n          filter: AccessesFilter;\n          zone: Zone;\n      }\n    | {\n          type: 'qiTransaction';\n          tag: string;\n          hash: string;\n          zone: Zone;\n      }\n    | {\n          type: 'event';\n          tag: string;\n          filter: EventFilter;\n          zone: Zone;\n      }\n    | {\n          type: 'orphan';\n          tag: string;\n          filter: OrphanFilter;\n          zone: Zone;\n      };\n\n/**\n * A **Subscriber** manages a subscription.\n *\n * Only developers sub-classing {@link AbstractProvider | **AbstractProvider**} will care about this, if they are\n * modifying a low-level feature of how subscriptions operate.\n *\n * @category Providers\n */\nexport interface Subscriber {\n    /**\n     * Called initially when a subscriber is added the first time.\n     */\n    start(): void;\n\n    /**\n     * Called when there are no more subscribers to the event.\n     */\n    stop(): void;\n\n    /**\n     * Called when the subscription should pause.\n     *\n     * If `dropWhilePaused`, events that occur while paused should not be emitted\n     * {@link Subscriber.resume | **Subscriber.resume**}.\n     *\n     * @param {boolean} [dropWhilePaused] - If `true`, events that occur while paused\n     */\n    pause(dropWhilePaused?: boolean): void;\n\n    /**\n     * Resume a paused subscriber.\n     */\n    resume(): void;\n\n    /**\n     * The frequency (in ms) to poll for events, if polling is used by the subscriber.\n     *\n     * For non-polling subscribers, this must return `undefined`.\n     */\n    pollingInterval?: number;\n}\n\n/**\n * An **UnmanagedSubscriber** is useful for events which do not require any additional management, such as `\"debug\"`\n * which only requires emit in synchronous event loop triggered calls.\n *\n * @category Providers\n */\nexport class UnmanagedSubscriber implements Subscriber {\n    /**\n     * The name of the event.\n     */\n    name!: string;\n\n    /**\n     * Create a new UnmanagedSubscriber with `name`.\n     *\n     * @param {string} name - The name of the event.\n     */\n    constructor(name: string) {\n        defineProperties<UnmanagedSubscriber>(this, { name });\n    }\n\n    start(): void {}\n    stop(): void {}\n\n    // todo `dropWhilePaused` is not used, remove or re-write\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    pause(dropWhilePaused?: boolean): void {}\n    resume(): void {}\n}\n\ntype Sub = {\n    tag: string;\n    nameMap: Map<string, string>;\n    addressableMap: WeakMap<Addressable, string>;\n    listeners: Array<{ listener: Listener; once: boolean }>;\n    // @todo get rid of this, as it is (and has to be)\n    // tracked in subscriber\n    started: boolean;\n    subscriber: Subscriber;\n    zone: Zone;\n};\n\n/**\n * Create a deep copy of a value.\n *\n * @param {T} value - The value to copy.\n * @returns {T} The copied value.\n */\nfunction copy<T = any>(value: T): T {\n    return JSON.parse(JSON.stringify(value));\n}\n\n/**\n * Remove duplicates and sort an array of strings.\n *\n * @param {string[]} items - The array of strings.\n * @returns {string[]} The concisified array.\n */\nfunction concisify(items: Array<string>): Array<string> {\n    items = Array.from(new Set(items).values());\n    items.sort();\n    return items;\n}\n\n// todo `provider` is not used, remove or re-write\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nasync function getSubscription(_event: ProviderEvent, zone?: Zone): Promise<Subscription> {\n    if (_event == null) {\n        throw new Error('invalid event');\n    }\n\n    // Normalize topic array info an EventFilter\n    if (Array.isArray(_event)) {\n        _event = { topics: _event };\n    }\n\n    if (typeof _event === 'string') {\n        if (_event === 'debug') {\n            return { type: _event, tag: _event };\n        }\n        switch (_event) {\n            case 'block':\n            case 'pending':\n                if (!zone) {\n                    throw new Error('zone is required for block and pending events');\n                }\n                return { type: 'block', tag: _event, zone };\n            case 'error':\n            case 'finalized':\n            case 'network':\n            case 'safe': {\n                return { type: _event, tag: _event };\n            }\n        }\n    }\n\n    if (isHexString(_event, 32)) {\n        const eventBytes = getBytes(_event);\n        const ninthBit = (eventBytes[1] & 0x80) === 0x80;\n\n        const hash = _event.toLowerCase();\n        zone = toZone(hash.slice(0, 4));\n        if (ninthBit) {\n            return { type: 'qiTransaction', tag: getTag('Tx', { hash }), hash, zone };\n        } else {\n            return { type: 'transaction', tag: getTag('tx', { hash }), hash, zone };\n        }\n    }\n\n    if ((<any>_event).orphan) {\n        const event = <OrphanFilter>_event;\n        if (!zone) {\n            const hash =\n                (<{ hash: string }>event).hash ||\n                (<{ tx: { hash: string } }>event).tx.hash ||\n                (<{ other: { hash: string } }>event).other?.hash ||\n                (<{ log: { transactionHash: string } }>event).log.transactionHash ||\n                null;\n            if (hash == null) {\n                throw new Error('orphan event must specify a hash');\n            }\n            zone = toZone(hash.slice(0, 4));\n        }\n\n        // @todo Should lowercase and whatnot things here instead of copy...\n        return { type: 'orphan', tag: getTag('orphan', event), filter: copy(event), zone };\n    }\n\n    if ((<any>_event).type && (<any>_event).address) {\n        const address = formatMixedCaseChecksumAddress(\n            isHexString((<any>_event).address) ? (<any>_event).address : await resolveAddress((<any>_event).address),\n        );\n        const filter = <AccessesFilter>{\n            type: (<any>_event).type,\n            address: address,\n        };\n        if (!zone) {\n            zone = toZone(address.slice(0, 4));\n        }\n        return { filter, tag: getTag('accesses', filter), type: 'accesses', zone };\n    } else if ((<any>_event).topics || (<any>_event).address) {\n        const event = <EventFilter>_event;\n\n        const filter: EventFilter = {\n            topics: (event.topics || []).map((t) => {\n                if (t == null) {\n                    return null;\n                }\n                if (Array.isArray(t)) {\n                    return concisify(t.map((t) => t.toLowerCase()));\n                }\n                return t.toLowerCase();\n            }),\n        };\n        if (event.nodeLocation) {\n            filter.nodeLocation = event.nodeLocation;\n        }\n        if (event.address) {\n            const addresses: Array<string> = [];\n            const promises: Array<Promise<void>> = [];\n\n            const addAddress = (addr: AddressLike) => {\n                if (isHexString(addr)) {\n                    addresses.push(formatMixedCaseChecksumAddress(addr));\n                } else {\n                    promises.push(\n                        (async () => {\n                            addresses.push(formatMixedCaseChecksumAddress(await resolveAddress(addr)));\n                        })(),\n                    );\n                }\n            };\n\n            if (Array.isArray(event.address)) {\n                event.address.forEach(addAddress);\n            } else {\n                addAddress(event.address);\n            }\n            if (promises.length) {\n                await Promise.all(promises);\n            }\n            if (!zone) {\n                zone = toZone(addresses[0].slice(0, 4));\n            }\n            filter.address = concisify(addresses.map((a) => a.toLowerCase()));\n\n            if (!filter.nodeLocation) {\n                filter.nodeLocation = getNodeLocationFromZone(zone);\n            }\n        } else {\n            if (!zone) {\n                throw new Error('zone is required for event');\n            }\n        }\n\n        return { filter, tag: getTag('event', filter), type: 'event', zone };\n    }\n\n    assertArgument(false, 'unknown ProviderEvent', 'event', _event);\n}\n\n/**\n * Get the current time in milliseconds.\n *\n * @returns {number} The current time in milliseconds.\n */\nfunction getTime(): number {\n    return new Date().getTime();\n}\n\n/**\n * A normalized filter used for {@link PerformActionRequest | **PerformActionRequest**} objects.\n *\n * @category Providers\n */\nexport type PerformActionFilter =\n    | {\n          address?: string | Array<string>;\n          topics?: Array<null | string | Array<string>>;\n          fromBlock?: BlockTag;\n          toBlock?: BlockTag;\n          nodeLocation: NodeLocation;\n      }\n    | {\n          address?: string | Array<string>;\n          topics?: Array<null | string | Array<string>>;\n          blockHash?: string;\n          nodeLocation: NodeLocation;\n      };\n\n/**\n * A normalized transactions used for {@link PerformActionRequest | **PerformActionRequest**} objects.\n *\n * @category Providers\n */\nexport type PerformActionTransaction = QuaiPerformActionTransaction | QiPerformActionTransaction;\n\n/**\n * @category Providers\n */\n// todo: write docs for this\nexport interface QuaiPerformActionTransaction extends QuaiPreparedTransactionRequest {\n    /**\n     * The `to` address of the transaction.\n     */\n    to?: string;\n\n    /**\n     * The sender of the transaction.\n     */\n    from: string;\n\n    [key: string]: any;\n}\n\n/**\n * @category Providers\n */\n// todo: write docs for this\nexport interface QiPerformActionTransaction extends QiPreparedTransactionRequest {\n    /**\n     * The transaction type. Always 2 for UTXO transactions.\n     */\n    txType: number;\n\n    /**\n     * The `inputs` of the UTXO transaction.\n     */\n    txIn: Array<TxInputJson>;\n\n    /**\n     * The `outputs` of the UTXO transaction.\n     */\n    txOut: Array<TxOutputJson>;\n\n    [key: string]: any;\n}\n\n/**\n * The {@link AbstractProvider | **AbstractProvider**} methods will normalize all values and pass this type to\n * {@link AbstractProvider._perform | **AbstractProvider._perform**}.\n *\n * @category Providers\n */\nexport type PerformActionRequest =\n    | {\n          method: 'broadcastTransaction';\n          signedTransaction: string;\n          zone: Zone;\n      }\n    | {\n          method: 'call';\n          transaction: PerformActionTransaction;\n          blockTag: BlockTag;\n          zone?: Zone;\n      }\n    | {\n          method: 'chainId';\n          zone?: Zone;\n      }\n    | {\n          method: 'estimateGas';\n          transaction: PerformActionTransaction;\n          zone?: Zone;\n      }\n    | {\n          method: 'estimateFeeForQi';\n          transaction: QiPerformActionTransaction;\n          zone?: Zone;\n      }\n    | {\n          method: 'createAccessList';\n          transaction: PerformActionTransaction;\n          zone?: Zone;\n      }\n    | {\n          method: 'getBalance';\n          address: string;\n          blockTag: BlockTag;\n          zone: Zone;\n      }\n    | {\n          method: 'getLockedBalance';\n          address: string;\n          zone: Zone;\n      }\n    | {\n          method: 'getOutpointsByAddress';\n          address: string;\n          zone: Zone;\n      }\n    | {\n          method: 'getBlock';\n          blockTag: BlockTag;\n          includeTransactions: boolean;\n          shard: Shard;\n      }\n    | {\n          method: 'getBlock';\n          blockHash: string;\n          includeTransactions: boolean;\n          shard: Shard;\n      }\n    | {\n          method: 'getBlockNumber';\n          shard?: Shard;\n      }\n    | {\n          method: 'getCode';\n          address: string;\n          blockTag: BlockTag;\n          zone: Zone;\n      }\n    | {\n          method: 'getGasPrice';\n          txType: boolean;\n          zone?: Zone;\n      }\n    | {\n          method: 'getLogs';\n          filter: PerformActionFilter;\n          zone: Zone;\n      }\n    | {\n          method: 'getMinerTip';\n          zone?: Zone;\n      }\n    | {\n          method: 'getStorage';\n          address: string;\n          position: bigint;\n          blockTag: BlockTag;\n          zone: Zone;\n      }\n    | {\n          method: 'getTransaction';\n          hash: string;\n          zone: Zone;\n      }\n    | {\n          method: 'getTransactionCount';\n          address: string;\n          blockTag: BlockTag;\n          zone: Zone;\n      }\n    | {\n          method: 'getTransactionReceipt';\n          hash: string;\n          zone: Zone;\n      }\n    | {\n          method: 'getTransactionResult';\n          hash: string;\n          zone: Zone;\n      }\n    | {\n          method: 'getRunningLocations';\n          shard?: Shard;\n          now: boolean;\n      }\n    | {\n          method: 'getProtocolTrieExpansionCount';\n          shard: Shard;\n      }\n    | {\n          method: 'getQiRateAtBlock';\n          blockTag: BlockTag;\n          amt: string;\n          zone: Zone;\n      }\n    | {\n          method: 'getQuaiRateAtBlock';\n          blockTag: BlockTag;\n          amt: string;\n          zone: Zone;\n      }\n    | {\n          method: 'getProtocolExpansionNumber';\n      }\n    | {\n          method: 'getPendingHeader';\n      }\n    | {\n          method: 'getTxPoolContent';\n          zone: Zone;\n      }\n    | {\n          method: 'txPoolInspect';\n          zone: Zone;\n      }\n    | {\n          method: 'getOutpointDeltasForAddressesInRange';\n          addresses: string[];\n          startHash: string;\n          endHash: string;\n          zone: Zone;\n      };\n\ntype _PerformAccountRequest =\n    | {\n          method: 'getBalance' | 'getLockedBalance' | 'getTransactionCount' | 'getCode' | 'getOutpointsByAddress';\n      }\n    | {\n          method: 'getStorage';\n          position: bigint;\n      };\n\n/**\n * Options for configuring some internal aspects of an {@link AbstractProvider | **AbstractProvider**}.\n *\n * **`cacheTimeout`** - how long to cache a low-level `_perform` for, based on input parameters. This reduces the number\n * of calls to getChainId and getBlockNumber, but may break test chains which can perform operations (internally)\n * synchronously. Use `-1` to disable, `0` will only buffer within the same event loop and any other value is in ms.\n * (default: `250`)\n *\n * @category Providers\n */\nexport type AbstractProviderOptions = {\n    cacheTimeout?: number;\n    pollingInterval?: number;\n    usePathing?: boolean;\n};\n\nconst defaultOptions = {\n    cacheTimeout: 250,\n    pollingInterval: 4000,\n    usePathing: true,\n};\n\n/**\n * An **AbstractProvider** provides a base class for other sub-classes to implement the {@link Provider | **Provider**}\n * API by normalizing input arguments and formatting output results as well as tracking events for consistent behaviour\n * on an eventually-consistent network.\n *\n * @category Providers\n */\nexport class AbstractProvider<C = FetchRequest> implements Provider {\n    /**\n     * @ignore\n     */\n    _urlMap: Map<Shard, C>;\n\n    #connect: FetchRequest[];\n    #subs: Map<string, Sub>;\n\n    // null=unpaused, true=paused+dropWhilePaused, false=paused\n    #pausedState: null | boolean;\n\n    #destroyed: boolean;\n\n    #networkPromise: null | Promise<Network>;\n    readonly #anyNetwork: boolean;\n\n    #performCache: Map<string, Promise<any>>;\n\n    // The most recent block number if running an event or -1 if no \"block\" event\n    #lastBlockNumber: number;\n\n    #nextTimer: number;\n    #timers: Map<number, { timer: null | Timer; func: () => void; time: number }>;\n\n    #options: Required<AbstractProviderOptions>;\n\n    _initFailed: boolean;\n\n    initResolvePromise: null | ((value: void) => void);\n    initRejectPromise: null | ((reason?: any) => void);\n    initPromise: Promise<void>;\n    attemptConnect: boolean;\n\n    /**\n     * Create a new **AbstractProvider** connected to `network`, or use the various network detection capabilities to\n     * discover the {@link Network | **Network**} if necessary.\n     *\n     * @param _network - The network to connect to, or `\"any\"` to\n     * @param options - The options to configure the provider.\n     */\n    constructor(_network?: 'any' | Networkish, options?: AbstractProviderOptions) {\n        this._initFailed = false;\n        this.attemptConnect = true;\n        this.#options = Object.assign({}, defaultOptions, options || {});\n\n        if (_network === 'any') {\n            this.#anyNetwork = true;\n            this.#networkPromise = null;\n        } else if (_network) {\n            const network = Network.from(_network);\n            this.#anyNetwork = false;\n            this.#networkPromise = Promise.resolve(network);\n            setTimeout(() => {\n                this.emit('network', undefined, network, null);\n            }, 0);\n        } else {\n            this.#anyNetwork = false;\n            this.#networkPromise = null;\n        }\n\n        this.#lastBlockNumber = -1;\n\n        this.#performCache = new Map();\n\n        this.#subs = new Map();\n        this.#pausedState = null;\n\n        this.#destroyed = false;\n\n        this.#nextTimer = 1;\n        this.#timers = new Map();\n\n        this.#connect = [];\n        this._urlMap = new Map();\n        this.initResolvePromise = null;\n        this.initRejectPromise = null;\n        this.initPromise = new Promise((resolve, reject) => {\n            this.initResolvePromise = resolve;\n            this.initRejectPromise = reject;\n        });\n    }\n\n    /**\n     * Initialize the URL map with the provided URLs.\n     *\n     * @param {U} urls - The URLs to initialize the map with.\n     * @returns {Promise<void>} A promise that resolves when the map is initialized.\n     */\n    async initialize<U = string[] | FetchRequest>(urls: U): Promise<void> {\n        this.initPromise = new Promise((resolve, reject) => {\n            this.initResolvePromise = resolve;\n            this.initRejectPromise = reject;\n        });\n        try {\n            const primeSuffix = this.#options.usePathing ? `/${fromShard(Shard.Prime, 'nickname')}` : ':9001';\n            if (urls instanceof FetchRequest) {\n                urls.url = urls.url.split(':')[0] + ':' + urls.url.split(':')[1] + primeSuffix;\n                this._urlMap.set(Shard.Prime, urls as C);\n                this.#connect.push(urls);\n                const shards = await this._waitGetRunningLocations(Shard.Prime, true);\n                shards.forEach((shard) => {\n                    const port = 9200 + 20 * shard[0] + shard[1];\n                    const shardEnum = toShard(`0x${shard[0].toString(16)}${shard[1].toString(16)}`);\n                    const shardSuffix = this.#options.usePathing ? `/${fromShard(shardEnum, 'nickname')}` : `:${port}`;\n                    this._urlMap.set(\n                        shardEnum,\n                        new FetchRequest(urls.url.split(':')[0] + ':' + urls.url.split(':')[1] + shardSuffix) as C,\n                    );\n                });\n                return;\n            }\n            if (Array.isArray(urls)) {\n                for (const url of urls) {\n                    const primeUrl = url.split(':')[0] + ':' + url.split(':')[1] + primeSuffix;\n                    const primeConnect = new FetchRequest(primeUrl);\n                    this._urlMap.set(Shard.Prime, primeConnect as C);\n                    this.#connect.push(primeConnect);\n                    const shards = await this._waitGetRunningLocations(Shard.Prime, true);\n                    shards.forEach((shard) => {\n                        const port = 9200 + 20 * shard[0] + shard[1];\n                        const shardEnum = toShard(`0x${shard[0].toString(16)}${shard[1].toString(16)}`);\n                        const shardSuffix = this.#options.usePathing\n                            ? `/${fromShard(shardEnum, 'nickname')}`\n                            : `:${port}`;\n                        this._urlMap.set(\n                            toShard(`0x${shard[0].toString(16)}${shard[1].toString(16)}`),\n                            new FetchRequest(url.split(':')[0] + ':' + url.split(':')[1] + shardSuffix) as C,\n                        );\n                    });\n                }\n            }\n            if (this.initResolvePromise) this.initResolvePromise();\n        } catch (error) {\n            this._initFailed = true;\n            console.log('Error initializing URL map:', error);\n            if (this.initRejectPromise) this.initRejectPromise(error);\n        }\n    }\n\n    /**\n     * Get the list of connected FetchRequests.\n     *\n     * @returns {FetchRequest[]} The list of connected FetchRequests.\n     */\n    get connect(): FetchRequest[] {\n        return this.#connect;\n    }\n\n    /**\n     * Get the zone from an address.\n     *\n     * @param {AddressLike} _address - The address to get the zone from.\n     * @returns {Promise<Zone>} A promise that resolves to the zone.\n     */\n    async zoneFromAddress(_address: AddressLike): Promise<Zone> {\n        const address: string | Promise<string> = this._getAddress(_address);\n        return toZone((await address).slice(0, 4));\n    }\n\n    /**\n     * Get the shard from a hash.\n     *\n     * @param {string} hash - The hash to get the shard from.\n     * @returns {Shard} The shard.\n     */\n    shardFromHash(hash: string): Shard {\n        return toShard(hash.slice(0, 4));\n    }\n\n    /**\n     * Get the zone from a hash.\n     *\n     * @param {string} hash - The hash to get the zone from.\n     * @returns {Zone} The zone.\n     */\n    zoneFromHash(hash: string): Zone {\n        return toZone(hash.slice(0, 4));\n    }\n\n    /**\n     * Get the latest Quai rate for a zone.\n     *\n     * @param {Zone} zone - The zone to get the rate for.\n     * @param {number} [amt=1] - The amount in quais to get the rate for. Default is `1`\n     * @returns {Promise<bigint>} A promise that resolves to the latest Quai -> Qi rate for the given amount.\n     */\n    async getLatestQuaiRate(zone: Zone, amt: bigint): Promise<bigint> {\n        const blockNumber = await this.getBlockNumber(toShard(zone));\n        return this.getQuaiRateAtBlock(zone, blockNumber, amt);\n    }\n\n    /**\n     * Get the Quai rate at a specific block.\n     *\n     * @param {Zone} zone - The zone to get the rate for.\n     * @param {BlockTag} blockTag - The block tag to get the rate at.\n     * @param {number} [amt=1] - The amount to get the rate for. Default is `1`\n     * @returns {Promise<bigint>} A promise that resolves to the Quai rate at the specified block.\n     */\n    async getQuaiRateAtBlock(zone: Zone, blockTag: BlockTag, amt: bigint): Promise<bigint> {\n        let resolvedBlockTag = this._getBlockTag(toShard(zone), blockTag);\n        if (typeof resolvedBlockTag !== 'string') {\n            resolvedBlockTag = await resolvedBlockTag;\n        }\n        return getBigInt(\n            await this.#perform({\n                method: 'getQuaiRateAtBlock',\n                blockTag: resolvedBlockTag,\n                amt: toQuantity(String(amt)),\n                zone: zone,\n            }),\n        );\n    }\n\n    /**\n     * Get the protocol expansion number.\n     *\n     * @returns {Promise<number>} A promise that resolves to the protocol expansion number.\n     */\n    async getProtocolExpansionNumber(): Promise<number> {\n        return getNumber(await this.#perform({ method: 'getProtocolExpansionNumber' }));\n    }\n\n    /**\n     * Get the active region shards based on the protocol expansion number.\n     *\n     * @returns {Promise<Shard[]>} A promise that resolves to the active shards.\n     */\n    async getActiveRegions(): Promise<Shard[]> {\n        const protocolExpansionNumber = await this.getProtocolExpansionNumber();\n        const shards = [Shard.Cyprus];\n        if (protocolExpansionNumber >= 1) {\n            shards.push(Shard.Paxos);\n        }\n        if (protocolExpansionNumber >= 3) {\n            shards.push(Shard.Hydra);\n        }\n        return shards.sort((a: Shard, b: Shard) => a.localeCompare(b));\n    }\n\n    /**\n     * Get the active zones for a shard based on the protocol expansion number.\n     *\n     * @returns {Promise<Zone[]>} A promise that resolves to the active zones.\n     */\n    async getActiveZones(): Promise<Zone[]> {\n        const protocolExpansionNumber = await this.getProtocolExpansionNumber();\n        const zones = [Zone.Cyprus1];\n        if (protocolExpansionNumber >= 1) {\n            zones.push(Zone.Cyprus2);\n        }\n        if (protocolExpansionNumber >= 2) {\n            zones.push(Zone.Paxos1, Zone.Paxos2);\n        }\n        if (protocolExpansionNumber >= 3) {\n            zones.push(Zone.Cyprus3, Zone.Paxos3, Zone.Hydra1, Zone.Hydra2, Zone.Hydra3);\n        }\n        return zones.sort((a: Zone, b: Zone) => a.localeCompare(b));\n    }\n\n    /**\n     * Get the latest Qi rate for a zone.\n     *\n     * @param {Zone} zone - The zone to get the rate for.\n     * @param {number} [amt=1] - The amount to get the rate for. Default is `1`\n     * @returns {Promise<bigint>} A promise that resolves to the latest Qi rate.\n     */\n    async getLatestQiRate(zone: Zone, amt: bigint): Promise<bigint> {\n        const blockNumber = await this.getBlockNumber(toShard(zone));\n        return this.getQiRateAtBlock(zone, blockNumber, amt);\n    }\n\n    /**\n     * Get the Qi rate at a specific block.\n     *\n     * @param {Zone} zone - The zone to get the rate for.\n     * @param {BlockTag} blockTag - The block tag to get the rate at.\n     * @param {number} [amt=1] - The amount to get the rate for. Default is `1`\n     * @returns {Promise<bigint>} A promise that resolves to the Qi rate at the specified block.\n     */\n    async getQiRateAtBlock(zone: Zone, blockTag: BlockTag, amt: bigint): Promise<bigint> {\n        let resolvedBlockTag = this._getBlockTag(toShard(zone), blockTag);\n        if (typeof resolvedBlockTag !== 'string') {\n            resolvedBlockTag = await resolvedBlockTag;\n        }\n\n        return getBigInt(\n            await this.#perform({\n                method: 'getQiRateAtBlock',\n                blockTag: resolvedBlockTag,\n                amt: toQuantity(String(amt)),\n                zone: zone,\n            }),\n        );\n    }\n\n    /**\n     * Get the polling interval.\n     *\n     * @returns {number} The polling interval.\n     */\n    get pollingInterval(): number {\n        return this.#options.pollingInterval;\n    }\n\n    /**\n     * Returns `this`, to allow an **AbstractProvider** to implement the [Contract Runner](../classes/ContractRunner)\n     * interface.\n     *\n     * @returns {this} The provider instance.\n     */\n    get provider(): this {\n        return this;\n    }\n\n    /**\n     * Shares multiple identical requests made during the same 250ms.\n     *\n     * @ignore\n     * @param {PerformActionRequest} req - The request to perform.\n     * @returns {Promise<T>} A promise that resolves to the result of the operation.\n     */\n    async #perform<T = any>(req: PerformActionRequest): Promise<T> {\n        this.attemptConnect = true;\n        const timeout = this.#options.cacheTimeout;\n        // Caching disabled\n        if (timeout < 0) {\n            return await this._perform(req);\n        }\n\n        // Create a tag\n        const tag = getTag(req.method, req);\n\n        let perform = this.#performCache.get(tag);\n        if (!perform || tag.includes('pending') || tag.includes('latest')) {\n            perform = this._perform(req);\n\n            this.#performCache.set(tag, perform);\n\n            setTimeout(() => {\n                if (this.#performCache.get(tag) === perform) {\n                    this.#performCache.delete(tag);\n                }\n            }, timeout);\n        }\n\n        return await perform;\n    }\n\n    /**\n     * Provides the opportunity for a sub-class to wrap a block before returning it, to add additional properties or an\n     * alternate sub-class of {@link Block | **Block**}.\n     *\n     * @ignore\n     * @param {BlockParams} value - The block to wrap.\n     * @param {Network} network - The network the block was on.\n     * @returns {Block} The wrapped block.\n     */\n    // @todo `network` is not used, remove or re-write\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _wrapBlock(value: BlockParams, network: Network): Block {\n        return new Block(formatBlock(value), this);\n    }\n\n    /**\n     * Provides the opportunity for a sub-class to wrap a log before returning it, to add additional properties or an\n     * alternate sub-class of {@link Log | **Log**}.\n     *\n     * @ignore\n     * @param {LogParams} value - The log to wrap.\n     * @param {Network} network - The network the log was on.\n     * @returns {Log} The wrapped log.\n     */\n    // @todo `network` is not used, remove or re-write\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _wrapLog(value: LogParams, network: Network): Log {\n        return new Log(formatLog(value), this);\n    }\n\n    /**\n     * Provides the opportunity for a sub-class to wrap a transaction receipt before returning it, to add additional\n     * properties or an {@link TransactionReceipt | **TransactionReceipt**}.\n     *\n     * @ignore\n     * @param {TransactionReceiptParams} value - The transaction receipt to wrap.\n     * @param {Network} network - The network the transaction was on.\n     * @returns {TransactionReceipt} The wrapped transaction receipt.\n     */\n    // @todo `network` is not used, remove or re-write\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _wrapTransactionReceipt(value: TransactionReceiptParams, network: Network): TransactionReceipt {\n        const formattedReceipt = formatTransactionReceipt(value);\n        return new TransactionReceipt(formattedReceipt, this);\n    }\n\n    /**\n     * Provides the opportunity for a sub-class to wrap a transaction response before returning it, to add additional\n     * properties or an alternate sub-class of {@link TransactionResponse | **TransactionResponse**}.\n     *\n     * @ignore\n     * @param {TransactionResponseParams} tx - The transaction response to wrap.\n     * @param {Network} network - The network the transaction was on.\n     * @returns {TransactionResponse} The wrapped transaction response.\n     */\n    // TODO: `newtork` is not used, remove or re-write\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _wrapTransactionResponse(tx: any, network: Network): TransactionResponse | ExternalTransactionResponse {\n        try {\n            const formattedTx = formatTransactionResponse(tx);\n            if (tx.type === '0x0' || tx.type === 0) {\n                return new QuaiTransactionResponse(formattedTx as QuaiTransactionResponseParams, this);\n            } else if (tx.type === '0x1' || tx.type === 1) {\n                return new ExternalTransactionResponse(formattedTx as ExternalTransactionResponseParams, this);\n            } else if (tx.type === '0x2' || tx.type === 2) {\n                return new QiTransactionResponse(formattedTx as QiTransactionResponseParams, this);\n            } else {\n                throw new Error(`Unknown transaction type: ${tx.type}`);\n            }\n        } catch (error) {\n            console.error('Error in _wrapTransactionResponse:', error);\n            throw error;\n        }\n    }\n\n    /**\n     * Resolves to the Network, forcing a network detection using whatever technique the sub-class requires.\n     *\n     * Sub-classes **must** override this.\n     *\n     * @ignore\n     * @param {Shard} [shard] - The shard to use for the network detection.\n     * @returns {Promise<Network>} A promise resolving to the network.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _detectNetwork(): Promise<Network> {\n        assert(false, 'sub-classes must implement this', 'UNSUPPORTED_OPERATION', {\n            operation: '_detectNetwork',\n        });\n    }\n\n    /**\n     * Sub-classes should use this to perform all built-in operations. All methods sanitizes and normalizes the values\n     * passed into this.\n     *\n     * Sub-classes **must** override this.\n     *\n     * @ignore\n     * @param {PerformActionRequest} req - The request to perform.\n     * @returns {Promise<T>} A promise resolving to the result of the operation.\n     */\n    async _perform<T = any>(req: PerformActionRequest): Promise<T> {\n        assert(false, `unsupported method: ${req.method}`, 'UNSUPPORTED_OPERATION', {\n            operation: req.method,\n            info: req,\n        });\n    }\n\n    // State\n\n    async getBlockNumber(shard: Shard): Promise<number> {\n        const blockNumber = getNumber(await this.#perform({ method: 'getBlockNumber', shard: shard }), '%response');\n        if (this.#lastBlockNumber >= 0) {\n            this.#lastBlockNumber = blockNumber;\n        }\n        return blockNumber;\n    }\n\n    /**\n     * Returns or resolves to the address for `address`, resolving {@link Addressable | **Addressable**} objects and\n     * returning if already an address.\n     *\n     * @ignore\n     * @param {AddressLike} address - The address to normalize.\n     * @returns {string | Promise<string>} The normalized address.\n     */\n    _getAddress(address: AddressLike): string | Promise<string> {\n        return resolveAddress(address);\n    }\n\n    /**\n     * Returns or resolves to a valid block tag for `blockTag`, resolving negative values and returning if already a\n     * valid block tag.\n     *\n     * @ignore\n     * @param {Shard} [shard] - The shard to use for the block tag.\n     * @param {BlockTag} [blockTag] - The block tag to normalize.\n     * @returns {string | Promise<string>} A promise that resolves to a valid block tag.\n     */\n    _getBlockTag(shard: Shard, blockTag?: BlockTag): string | Promise<string> {\n        if (blockTag == null) {\n            return 'latest';\n        }\n\n        switch (blockTag) {\n            case 'earliest':\n                return '0x0';\n            case 'finalized':\n            case 'latest':\n            case 'pending':\n            case 'safe':\n                return blockTag;\n        }\n\n        if (isHexString(blockTag)) {\n            if (isHexString(blockTag, 32)) {\n                return blockTag;\n            }\n            return toQuantity(blockTag);\n        }\n\n        if (typeof blockTag === 'bigint') {\n            blockTag = getNumber(blockTag, 'blockTag');\n        }\n\n        if (typeof blockTag === 'number') {\n            if (blockTag >= 0) {\n                return toQuantity(blockTag);\n            }\n            if (this.#lastBlockNumber >= 0) {\n                return toQuantity(this.#lastBlockNumber + blockTag);\n            }\n            return this.getBlockNumber(shard).then((b) => toQuantity(b + <number>blockTag));\n        }\n\n        assertArgument(false, 'invalid blockTag', 'blockTag', blockTag);\n    }\n\n    /**\n     * Returns or resolves to a filter for `filter`, resolving any {@link Addressable | **Addressable**} object and\n     * returning if already a valid filter.\n     *\n     * @ignore\n     * @param {Filter | FilterByBlockHash} filter - The filter to normalize.\n     * @returns {PerformActionFilter | Promise<PerformActionFilter>} A promise that resolves to a valid filter.\n     */\n    _getFilter(filter: Filter | FilterByBlockHash): PerformActionFilter | Promise<PerformActionFilter> {\n        // Create a canonical representation of the topics\n        const topics = (filter.topics || []).map((t) => {\n            if (t == null) {\n                return null;\n            }\n            if (Array.isArray(t)) {\n                return concisify(t.map((t) => t.toLowerCase()));\n            }\n            return t.toLowerCase();\n        });\n\n        const blockHash = 'blockHash' in filter ? filter.blockHash : undefined;\n\n        const resolve = (\n            _address: Array<string>,\n            fromBlock?: string,\n            toBlock?: string,\n            nodeLocation?: NodeLocation,\n        ) => {\n            let address: undefined | string | Array<string> = undefined;\n            switch (_address.length) {\n                case 0:\n                    break;\n                case 1:\n                    address = _address[0];\n                    break;\n                default:\n                    _address.sort();\n                    address = _address;\n            }\n\n            if (blockHash) {\n                if (fromBlock != null || toBlock != null) {\n                    throw new Error('invalid filter');\n                }\n            }\n\n            const filter = <any>{};\n            if (address) {\n                filter.address = address;\n            }\n            if (topics.length) {\n                filter.topics = topics;\n            }\n            if (fromBlock) {\n                filter.fromBlock = fromBlock;\n            }\n            if (toBlock) {\n                filter.toBlock = toBlock;\n            }\n            if (blockHash) {\n                filter.blockHash = blockHash;\n            }\n            if (nodeLocation) {\n                filter.nodeLocation = nodeLocation;\n            }\n\n            return filter;\n        };\n\n        // Addresses could be async (Addressables)\n        const address: Array<string | Promise<string>> = [];\n        if (filter.address) {\n            if (Array.isArray(filter.address)) {\n                for (const addr of filter.address) {\n                    address.push(this._getAddress(addr));\n                }\n            } else {\n                address.push(this._getAddress(filter.address));\n            }\n        }\n\n        const zone = getZoneFromNodeLocation(filter.nodeLocation!);\n\n        let fromBlock: undefined | string | Promise<string> = undefined;\n        if ('fromBlock' in filter) {\n            fromBlock = this._getBlockTag(toShard(zone), filter.fromBlock);\n        }\n\n        let toBlock: undefined | string | Promise<string> = undefined;\n        if ('toBlock' in filter) {\n            toBlock = this._getBlockTag(toShard(zone), filter.toBlock);\n        }\n\n        let nodeLocation: NodeLocation | undefined = undefined;\n        if (filter.nodeLocation) {\n            nodeLocation = filter.nodeLocation;\n        }\n\n        if (\n            address.filter((a) => typeof a !== 'string').length ||\n            (fromBlock != null && typeof fromBlock !== 'string') ||\n            (toBlock != null && typeof toBlock !== 'string')\n        ) {\n            return Promise.all([Promise.all(address), fromBlock, toBlock, nodeLocation]).then((result) => {\n                return resolve(result[0], result[1], result[2], result[3]);\n            });\n        }\n\n        return resolve(<Array<string>>address, fromBlock, toBlock, nodeLocation);\n    }\n\n    /**\n     * Returns or resovles to a transaction for `request`, resolving any {@link Addressable | **Addressable**} and\n     * returning if already a valid transaction.\n     *\n     * @ignore\n     * @param {PerformActionTransaction} _request - The transaction to normalize.\n     * @returns {PerformActionTransaction | Promise<PerformActionTransaction>} A promise that resolves to a valid\n     *   transaction.\n     */\n    _getTransactionRequest(_request: TransactionRequest): PerformActionTransaction | Promise<PerformActionTransaction> {\n        const request = <PerformActionTransaction>copyRequest(_request);\n\n        const promises: Array<Promise<void>> = [];\n        ['to', 'from', 'inputs', 'outputs'].forEach((key) => {\n            if ((<any>request)[key] == null) {\n                return;\n            }\n\n            const addr = Array.isArray((<any>request)[key])\n                ? 'address' in <any>request[key][0]\n                    ? (<TxOutput[]>(<any>request)[key]).map((it) => it.address)\n                    : (<TxInput[]>(<any>request)[key]).map((it) => computeAddress(it.pubkey))\n                : resolveAddress((<any>request)[key]);\n            if (isPromise(addr)) {\n                if (Array.isArray(addr)) {\n                    for (let i = 0; i < addr.length; i++) {\n                        promises.push(\n                            (async function () {\n                                (<any>request)[key][i].address = await addr[i];\n                            })(),\n                        );\n                    }\n                } else {\n                    promises.push(\n                        (async function () {\n                            (<any>request)[key] = await addr;\n                        })(),\n                    );\n                }\n            } else {\n                (<any>request)[key] = addr;\n            }\n        });\n\n        if (request.blockTag != null) {\n            const blockTag = this._getBlockTag(toShard(request.chainId!.toString()), request.blockTag);\n            if (isPromise(blockTag)) {\n                promises.push(\n                    (async function () {\n                        request.blockTag = await blockTag;\n                    })(),\n                );\n            } else {\n                request.blockTag = blockTag;\n            }\n        }\n\n        if (promises.length) {\n            return (async function () {\n                await Promise.all(promises);\n                return request;\n            })();\n        }\n\n        return request;\n    }\n\n    async getNetwork(): Promise<Network> {\n        // No explicit network was set and this is our first time\n        if (this.#networkPromise == null) {\n            // Detect the current network (shared with all calls)\n            const detectNetwork = (async () => {\n                try {\n                    const network = await this._detectNetwork();\n                    this.emit('network', undefined, network, null);\n                    return network;\n                } catch (error) {\n                    if (this.#networkPromise === detectNetwork!) {\n                        this.#networkPromise = null;\n                    }\n                    throw error;\n                }\n            })();\n\n            this.#networkPromise = detectNetwork;\n            return (await detectNetwork).clone();\n        }\n\n        const networkPromise = this.#networkPromise;\n\n        const [expected, actual] = await Promise.all([\n            networkPromise, // Possibly an explicit Network\n            this._detectNetwork(), // The actual connected network\n        ]);\n\n        if (expected.chainId !== actual.chainId) {\n            if (this.#anyNetwork) {\n                // The \"any\" network can change, so notify listeners\n                this.emit('network', undefined, actual, expected);\n\n                // Update the network if something else hasn't already changed it\n                if (this.#networkPromise === networkPromise) {\n                    this.#networkPromise = Promise.resolve(actual);\n                }\n            } else {\n                // Otherwise, we do not allow changes to the underlying network\n                assert(false, `network changed: ${expected.chainId} => ${actual.chainId} `, 'NETWORK_ERROR', {\n                    event: 'changed',\n                });\n            }\n        }\n\n        return expected.clone();\n    }\n\n    protected async _waitGetRunningLocations(shard: Shard, now: boolean): Promise<number[][]> {\n        let retries = 0;\n        let locations: number[][] = [];\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            try {\n                if (this.attemptConnect) {\n                    if (retries > 5) {\n                        retries = 0;\n                    }\n                    locations = await this._getRunningLocations(shard, now);\n                    break;\n                } else {\n                    await new Promise((resolve) => setTimeout(resolve, 1000));\n                }\n            } catch (error) {\n                retries++;\n                if (retries > 5) {\n                    this.attemptConnect = false;\n                }\n                await new Promise((resolve) => setTimeout(resolve, 1000));\n            }\n        }\n        if (locations.length === 0) {\n            throw new Error('could not get running locations');\n        }\n        return locations;\n    }\n\n    protected async _getRunningLocations(shard?: Shard, now?: boolean): Promise<number[][]> {\n        now = now ? now : false;\n        return await this.#perform(\n            shard\n                ? { method: 'getRunningLocations', shard: shard, now: now }\n                : { method: 'getRunningLocations', now: now },\n        );\n    }\n\n    async getRunningLocations(shard?: Shard): Promise<number[][]> {\n        return await this._getRunningLocations(shard);\n    }\n\n    async getProtocolTrieExpansionCount(shard: Shard): Promise<number> {\n        return await this.#perform({ method: 'getProtocolTrieExpansionCount', shard: shard });\n    }\n\n    async getFeeData(zone?: Zone, txType: boolean = true): Promise<FeeData> {\n        const getFeeDataFunc = async () => {\n            const { gasPrice, minerTip } = await resolveProperties({\n                gasPrice: (async () => {\n                    try {\n                        const value = await this.#perform({ method: 'getGasPrice', txType, zone: zone });\n                        return getBigInt(value, '%response');\n                    } catch (error) {\n                        console.log(error);\n                    }\n                    return null;\n                })(),\n                minerTip: (async () => {\n                    try {\n                        const value = txType ? await this.#perform({ method: 'getMinerTip', zone: zone }) : 0;\n                        return getBigInt(value, '%response');\n                        // eslint-disable-next-line no-empty\n                    } catch (error) {}\n                    return null;\n                })(),\n            });\n\n            if (gasPrice == null) {\n                throw new Error('could not determine gasPrice');\n            }\n\n            let baseMinerTip: null | bigint = null;\n\n            // These are the recommended EIP-1559 heuristics for fee data\n\n            baseMinerTip = minerTip != null ? minerTip : BigInt('1000000000');\n\n            return new FeeData(gasPrice, baseMinerTip);\n        };\n\n        return await getFeeDataFunc();\n    }\n\n    async estimateGas(_tx: TransactionRequest): Promise<bigint> {\n        let tx = this._getTransactionRequest(_tx);\n        if (isPromise(tx)) {\n            tx = await tx;\n        }\n        const zone = await this.zoneFromAddress(addressFromTransactionRequest(tx));\n        return (\n            getBigInt(\n                await this.#perform({\n                    method: 'estimateGas',\n                    transaction: tx,\n                    zone: zone,\n                }),\n                '%response',\n            ) * BigInt(2)\n        );\n    }\n\n    async estimateFeeForQi(_tx: QiPerformActionTransaction): Promise<bigint> {\n        const zone = await this.zoneFromAddress(addressFromTransactionRequest(_tx));\n        return getBigInt(\n            await this.#perform({\n                method: 'estimateFeeForQi',\n                transaction: _tx,\n                zone: zone,\n            }),\n            '%response',\n        );\n    }\n\n    async createAccessList(_tx: TransactionRequest): Promise<AccessList> {\n        let tx = this._getTransactionRequest(_tx);\n        if (isPromise(tx)) {\n            tx = await tx;\n        }\n        const zone = await this.zoneFromAddress(addressFromTransactionRequest(tx));\n        return (\n            await this.#perform({\n                method: 'createAccessList',\n                transaction: tx,\n                zone: zone,\n            })\n        ).accessList;\n    }\n\n    // TODO: `attempt` is not used, remove or re-write\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async #call(tx: PerformActionTransaction, blockTag: string, attempt: number, zone?: Zone): Promise<string> {\n        // This came in as a PerformActionTransaction, so to/from are safe; we can cast\n        const transaction = <PerformActionTransaction>copyRequest(tx);\n        return hexlify(await this._perform({ method: 'call', transaction, blockTag, zone }));\n    }\n\n    // TODO: `shard` is not used, remove or re-write\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async #checkNetwork<T>(promise: Promise<T>, shard?: Shard): Promise<T> {\n        const { value } = await resolveProperties({\n            network: this.getNetwork(),\n            value: promise,\n        });\n        return value;\n    }\n\n    async call(_tx: QuaiTransactionRequest): Promise<string> {\n        const zone = await this.zoneFromAddress(addressFromTransactionRequest(_tx));\n        const shard = toShard(zone);\n\n        const { tx, blockTag } = await resolveProperties({\n            tx: this._getTransactionRequest(_tx),\n            blockTag: this._getBlockTag(shard, _tx.blockTag),\n        });\n\n        return await this.#checkNetwork(this.#call(tx, blockTag, -1, zone), shard);\n    }\n\n    // Account\n    async #getAccountValue(request: _PerformAccountRequest, _address: AddressLike, _blockTag?: BlockTag): Promise<any> {\n        let address: string | Promise<string> = this._getAddress(_address);\n        const zone = await this.zoneFromAddress(_address);\n        const shard = toShard(zone);\n\n        let blockTag: string | Promise<string> = this._getBlockTag(shard, _blockTag);\n\n        if (typeof address !== 'string' || typeof blockTag !== 'string') {\n            [address, blockTag] = await Promise.all([address, blockTag]);\n        }\n\n        return await this.#checkNetwork(\n            this.#perform(Object.assign(request, { address, blockTag, zone: zone }) as PerformActionRequest),\n            shard,\n        );\n    }\n\n    async getBalance(address: AddressLike, blockTag?: BlockTag): Promise<bigint> {\n        return getBigInt(await this.#getAccountValue({ method: 'getBalance' }, address, blockTag), '%response');\n    }\n\n    async getLockedBalance(address: AddressLike): Promise<bigint> {\n        return getBigInt(await this.#getAccountValue({ method: 'getLockedBalance' }, address), '%response');\n    }\n\n    async getOutpointsByAddress(address: AddressLike): Promise<Outpoint[]> {\n        return formatOutpoints(await this.#getAccountValue({ method: 'getOutpointsByAddress' }, address, 'latest'));\n    }\n\n    async getTransactionCount(address: AddressLike, blockTag?: BlockTag): Promise<number> {\n        return getNumber(\n            await this.#getAccountValue({ method: 'getTransactionCount' }, address, blockTag),\n            '%response',\n        );\n    }\n\n    async getCode(address: AddressLike, blockTag?: BlockTag): Promise<string> {\n        return hexlify(await this.#getAccountValue({ method: 'getCode' }, address, blockTag));\n    }\n\n    async getStorage(address: AddressLike, _position: BigNumberish, blockTag?: BlockTag): Promise<string> {\n        const position = getBigInt(_position, 'position');\n        return hexlify(await this.#getAccountValue({ method: 'getStorage', position }, address, blockTag));\n    }\n\n    async getPendingHeader(): Promise<WorkObjectLike> {\n        return await this.#perform({ method: 'getPendingHeader' });\n    }\n\n    async getTxPoolContent(zone: Zone): Promise<txpoolContentResponse> {\n        return await this.#perform({ method: 'getTxPoolContent', zone: zone });\n    }\n\n    async txPoolInspect(zone: Zone): Promise<txpoolInspectResponse> {\n        return await this.#perform({ method: 'txPoolInspect', zone: zone });\n    }\n\n    // Write\n    async broadcastTransaction(zone: Zone, signedTx: string): Promise<TransactionResponse> {\n        const type = decodeProtoTransaction(getBytes(signedTx)).type;\n        try {\n            const { blockNumber, hash, network } = await resolveProperties({\n                blockNumber: this.getBlockNumber(toShard(zone)),\n                hash: this._perform({\n                    method: 'broadcastTransaction',\n                    signedTransaction: signedTx,\n                    zone: zone,\n                }),\n                network: this.getNetwork(),\n            });\n\n            const tx = type == 2 ? QiTransaction.from(signedTx) : QuaiTransaction.from(signedTx);\n            const txObj = tx.toJSON();\n\n            this.#validateTransactionHash(tx.hash || '', hash);\n\n            if (type == 2) {\n                return new QiTransactionResponse(txObj as QiTransactionResponseParams, this);\n            }\n\n            const wrappedTx = this._wrapTransactionResponse(<any>txObj, network);\n            return wrappedTx.replaceableTransaction(blockNumber) as TransactionResponse;\n        } catch (error) {\n            console.error('Error in broadcastTransaction:', error);\n            throw error;\n        }\n    }\n\n    #validateTransactionHash(computedHash: string, nodehash: string) {\n        if (computedHash !== nodehash) {\n            throw new Error(`Transaction hash mismatch: ${computedHash} !== ${nodehash}`);\n        }\n    }\n\n    validateUrl(url: string): void {\n        const urlPattern = /^(https?):\\/\\/[a-zA-Z0-9.-]+(:\\d+)?$/;\n\n        if (!urlPattern.test(url)) {\n            let errorMessage = 'Invalid URL: ';\n\n            if (!/^https?:\\/\\//.test(url)) {\n                errorMessage += 'URL must start with http:// or https://. ';\n            }\n\n            if (url.endsWith('/')) {\n                errorMessage += 'URL should not end with a /. ';\n            }\n\n            if (/\\/[^/]+/.test(url)) {\n                errorMessage += 'URL should not contain a path, query string, or fragment. ';\n            }\n\n            throw new Error(errorMessage.trim());\n        }\n    }\n\n    async #getBlock(shard: Shard, block: BlockTag | string, includeTransactions: boolean): Promise<any> {\n        if (isHexString(block, 32)) {\n            return await this.#perform({\n                method: 'getBlock',\n                blockHash: block,\n                includeTransactions,\n                shard: shard,\n            });\n        }\n\n        let blockTag = this._getBlockTag(shard, block);\n        if (typeof blockTag !== 'string') {\n            blockTag = await blockTag;\n        }\n\n        return await this.#perform({\n            method: 'getBlock',\n            blockTag,\n            includeTransactions,\n            shard: shard,\n        });\n    }\n\n    // Queries\n    async getBlock(shard: Shard, block: BlockTag | string, prefetchTxs?: boolean): Promise<null | Block> {\n        const { network, params } = await resolveProperties({\n            network: this.getNetwork(),\n            params: this.#getBlock(shard, block, !!prefetchTxs),\n        });\n        if (params == null) {\n            return null;\n        }\n        return this._wrapBlock(params, network);\n    }\n\n    async getTransaction(hash: string): Promise<null | TransactionResponse | ExternalTransactionResponse> {\n        const zone = toZone(this.shardFromHash(hash));\n        const { network, params } = await resolveProperties({\n            network: this.getNetwork(),\n            params: this.#perform({ method: 'getTransaction', hash, zone: zone }),\n        });\n        if (params == null) {\n            return null;\n        }\n\n        return this._wrapTransactionResponse(params, network);\n    }\n\n    async getTransactionReceipt(hash: string): Promise<null | TransactionReceipt> {\n        const zone = toZone(this.shardFromHash(hash));\n        const { network, params } = await resolveProperties({\n            network: this.getNetwork(),\n            params: this.#perform({ method: 'getTransactionReceipt', hash, zone: zone }),\n        });\n        if (params == null) {\n            return null;\n        }\n        // Some backends did not backfill the effectiveGasPrice in to old transactions\n        // in the receipt, so we look it up manually and inject it.\n        if (params.gasPrice == null && params.effectiveGasPrice == null) {\n            const tx = await this.#perform({ method: 'getTransaction', hash, zone: zone });\n            if (tx == null) {\n                throw new Error('report this; could not find tx or effectiveGasPrice');\n            }\n            params.effectiveGasPrice = tx.gasPrice;\n        }\n\n        return this._wrapTransactionReceipt(params, network);\n    }\n\n    async getTransactionResult(hash: string): Promise<null | string> {\n        const zone = toZone(this.shardFromHash(hash));\n        const { result } = await resolveProperties({\n            network: this.getNetwork(),\n            result: this.#perform({ method: 'getTransactionResult', hash, zone: zone }),\n        });\n        if (result == null) {\n            return null;\n        }\n        return hexlify(result);\n    }\n\n    async getOutpointDeltas(addresses: string[], startHash: string, endHash?: string): Promise<OutpointDeltas> {\n        // Validate addresses are Qi addresses\n        for (const addr of addresses) {\n            assertArgument(isQiAddress(addr), `Invalid Qi address: ${addr}`, 'addresses', addresses);\n        }\n\n        // Validate block hashes\n        assertArgument(isHexString(startHash, 32), 'invalid startHash', 'startHash', startHash);\n        if (endHash) {\n            assertArgument(isHexString(endHash, 32), 'invalid endHash', 'endHash', endHash);\n        } else {\n            endHash = 'latest';\n        }\n\n        // Get the zone from the first address\n        const zone = await this.zoneFromAddress(addresses[0]);\n        const shard = toShard(zone);\n\n        // Fetch the block numbers for startHash and endHash in parallel\n        const [startBlock, endBlock] = await Promise.all([\n            this.getBlock(shard, startHash),\n            this.getBlock(shard, endHash),\n        ]);\n\n        if (startBlock == null) {\n            throw new Error('Could not find start block');\n        }\n\n        if (endBlock == null) {\n            throw new Error('Could not find end block');\n        }\n\n        const startBlockNumber = getNumber(startBlock.woHeader.number, 'startBlockNumber');\n        const endBlockNumber = getNumber(endBlock.woHeader.number, 'endBlockNumber');\n\n        assertArgument(\n            startBlockNumber <= endBlockNumber,\n            'startBlockNumber must be less than or equal to endBlockNumber',\n            'startBlockNumber',\n            startBlockNumber,\n        );\n\n        // Precompute the ranges and collect end block numbers\n        const ranges: Array<{ startHash: string; endHash: string }> = [];\n        const endBlockNumbers: number[] = [];\n\n        let currentStartBlockNumber = startBlockNumber;\n        let currentStartHash: string = startHash;\n\n        while (currentStartBlockNumber <= endBlockNumber) {\n            // Calculate end of this segment\n            const currentEndBlockNumber = Math.min(currentStartBlockNumber + 999, endBlockNumber);\n            endBlockNumbers.push(currentEndBlockNumber);\n\n            // Update for next segment\n            currentStartBlockNumber = currentEndBlockNumber + 1;\n        }\n\n        // Fetch all the end block hashes in parallel\n        const endBlocksPromises = endBlockNumbers.map((blockNumber) => this.getBlock(shard, blockNumber));\n        const endBlocks = await Promise.all(endBlocksPromises);\n\n        // Build the ranges using the fetched block hashes\n        currentStartBlockNumber = startBlockNumber;\n        currentStartHash = startHash;\n\n        for (let i = 0; i < endBlocks.length; i++) {\n            const currentEndBlock = endBlocks[i];\n            if (!currentEndBlock) {\n                throw new Error(`Could not find block for block number ${endBlockNumbers[i]}`);\n            }\n            const currentEndHash = currentEndBlock.hash;\n\n            ranges.push({ startHash: currentStartHash, endHash: currentEndHash });\n\n            // Update for next segment\n            currentStartBlockNumber = endBlockNumbers[i] + 1;\n            currentStartHash = currentEndHash;\n        }\n\n        // Issue all RPC calls in parallel\n        const promises = ranges.map((range) => {\n            return this.#perform<OutpointDeltaResponseParams>({\n                method: 'getOutpointDeltasForAddressesInRange',\n                addresses: addresses,\n                startHash: range.startHash,\n                endHash: range.endHash,\n                zone: zone,\n            }).then(formatOutpointDeltas);\n        });\n\n        // Wait for all promises to resolve\n        const deltasArray = await Promise.all(promises);\n\n        // Merge all the results\n        const deltas: OutpointDeltas = {};\n\n        for (const delta of deltasArray) {\n            for (const [address, data] of Object.entries(delta)) {\n                if (!deltas[address]) {\n                    deltas[address] = { created: [], deleted: [] };\n                }\n                deltas[address].created.push(...data.created);\n                deltas[address].deleted.push(...data.deleted);\n            }\n        }\n\n        return deltas;\n    }\n\n    // Bloom-filter Queries\n    async getLogs(_filter: Filter | FilterByBlockHash): Promise<Array<Log>> {\n        let filter = this._getFilter(_filter);\n        if (isPromise(filter)) {\n            filter = await filter;\n        }\n\n        const { network, params } = await resolveProperties({\n            network: this.getNetwork(),\n            params: this.#perform<Array<LogParams>>({\n                method: 'getLogs',\n                filter,\n                zone: getZoneFromNodeLocation(filter.nodeLocation),\n            }),\n        });\n\n        return params.map((p) => this._wrapLog(p, network));\n    }\n\n    /**\n     * @ignore\n     */\n    // TODO: unsupported, remove?\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _getProvider(chainId: number): AbstractProvider {\n        assert(false, 'provider cannot connect to target network', 'UNSUPPORTED_OPERATION', {\n            operation: '_getProvider()',\n        });\n    }\n\n    async waitForTransaction(\n        hash: string,\n        _confirms?: null | number,\n        timeout?: null | number,\n    ): Promise<null | TransactionReceipt> {\n        const zone = this.zoneFromHash(hash);\n        const confirms = _confirms != null ? _confirms : 1;\n        if (confirms === 0) {\n            return this.getTransactionReceipt(hash);\n        }\n\n        // eslint-disable-next-line no-async-promise-executor\n        return new Promise(async (resolve, reject) => {\n            let timer: null | Timer = null;\n\n            const listener = async (blockNumber: number) => {\n                try {\n                    const receipt = await this.getTransactionReceipt(hash);\n                    if (receipt != null) {\n                        if (blockNumber - receipt.blockNumber + 1 >= confirms) {\n                            resolve(receipt);\n                            //this.off(\"block\", listener);\n                            if (timer) {\n                                clearTimeout(timer);\n                                timer = null;\n                            }\n                            return;\n                        }\n                    }\n                } catch (error) {\n                    console.log('Error occured while waiting for transaction:', error);\n                }\n                this.once('block', listener, zone);\n            };\n\n            if (timeout != null) {\n                timer = setTimeout(() => {\n                    if (timer == null) {\n                        return;\n                    }\n                    timer = null;\n                    this.off('block', listener, zone);\n                    reject(makeError('timeout', 'TIMEOUT', { reason: 'timeout' }));\n                }, timeout);\n            }\n\n            listener(await this.getBlockNumber(toShard(zone)));\n        });\n    }\n\n    // TODO: not implemented yet\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async waitForBlock(shard: Shard, blockTag?: BlockTag): Promise<Block> {\n        assert(false, 'not implemented yet', 'NOT_IMPLEMENTED', {\n            operation: 'waitForBlock',\n        });\n    }\n\n    /**\n     * Clear a timer created using the {@link AbstractProvider._setTimeout | **_setTimeout**} method.\n     *\n     * @param {number} timerId - The ID of the timer to clear.\n     */\n    _clearTimeout(timerId: number): void {\n        const timer = this.#timers.get(timerId);\n        if (!timer) {\n            return;\n        }\n        if (timer.timer) {\n            clearTimeout(timer.timer);\n        }\n        this.#timers.delete(timerId);\n    }\n\n    /**\n     * Create a timer that will execute `func` after at least `timeout` (in ms). If `timeout` is unspecified, then\n     * `func` will execute in the next event loop.\n     *\n     * {@link AbstractProvider.pause | **Pausing**} the provider will pause any associated timers.\n     *\n     * @ignore\n     * @ignore\n     * @param {() => void} _func - The function to execute.\n     * @param {number} [timeout] - The time to wait before executing `func`.\n     * @returns {number} The ID of the timer.\n     */\n    _setTimeout(_func: () => void, timeout?: number): number {\n        if (timeout == null) {\n            timeout = 0;\n        }\n        const timerId = this.#nextTimer++;\n        const func = () => {\n            this.#timers.delete(timerId);\n            _func();\n        };\n\n        if (this.paused) {\n            this.#timers.set(timerId, { timer: null, func, time: timeout });\n        } else {\n            const timer = setTimeout(func, timeout);\n            this.#timers.set(timerId, { timer, func, time: getTime() });\n        }\n\n        return timerId;\n    }\n\n    /**\n     * Perform `func` on each subscriber.\n     *\n     * @ignore\n     * @param {(s: Subscriber) => void} func - The function to perform.\n     */\n    _forEachSubscriber(func: (s: Subscriber) => void): void {\n        for (const sub of this.#subs.values()) {\n            func(sub.subscriber);\n        }\n    }\n\n    /**\n     * Sub-classes may override this to customize subscription implementations.\n     *\n     * @ignore\n     * @param {Subscription} sub - The subscription to get the subscriber for.\n     */\n    _getSubscriber(sub: Subscription): Subscriber {\n        switch (sub.type) {\n            case 'debug':\n            case 'error':\n            case 'network':\n                return new UnmanagedSubscriber(sub.type);\n            case 'block': {\n                const subscriber = new PollingBlockSubscriber(this as AbstractProvider, sub.zone);\n                subscriber.pollingInterval = this.pollingInterval;\n                return subscriber;\n            }\n            //! TODO: implement this for quais\n            // case \"safe\": case \"finalized\":\n            //     return new PollingBlockTagSubscriber(this, sub.type);\n            case 'event':\n                return new PollingEventSubscriber(this as AbstractProvider, sub.filter);\n            case 'transaction':\n                return new PollingTransactionSubscriber(this as AbstractProvider, sub.hash, sub.zone);\n            case 'qiTransaction':\n                return new PollingQiTransactionSubscriber(this as AbstractProvider, sub.hash, sub.zone);\n            case 'orphan':\n                return new PollingOrphanSubscriber(this as AbstractProvider, sub.filter, sub.zone);\n        }\n\n        throw new Error(`unsupported event: ${sub.type}`);\n    }\n\n    /**\n     * If a {@link Subscriber | **Subscriber**} fails and needs to replace itself, this method may be used.\n     *\n     * For example, this is used for providers when using the `quai_getFilterChanges` method, which can return null if\n     * state filters are not supported by the backend, allowing the Subscriber to swap in a `PollingEventSubscriber`.\n     *\n     * @ignore\n     * @param {Subscriber} oldSub - The subscriber to replace.\n     * @param {Subscriber} newSub - The new subscriber.\n     */\n    _recoverSubscriber(oldSub: Subscriber, newSub: Subscriber): void {\n        for (const sub of this.#subs.values()) {\n            if (sub.subscriber === oldSub) {\n                if (sub.started) {\n                    sub.subscriber.stop();\n                }\n                sub.subscriber = newSub;\n                if (sub.started) {\n                    newSub.start();\n                }\n                if (this.#pausedState != null) {\n                    newSub.pause(this.#pausedState);\n                }\n                break;\n            }\n        }\n    }\n\n    async #hasSub(event: ProviderEvent, emitArgs?: Array<any>, zone?: Zone): Promise<null | Sub> {\n        let sub = await getSubscription(event, zone);\n        // This is a log that is removing an existing log; we actually want\n        // to emit an orphan event for the removed log\n        if (sub.type === 'event' && emitArgs && emitArgs.length > 0 && emitArgs[0].removed === true) {\n            sub = await getSubscription({ orphan: 'drop-log', log: emitArgs[0] }, zone);\n        }\n        return this.#subs.get(sub.tag) || null;\n    }\n\n    async #getSub(event: ProviderEvent, zone?: Zone): Promise<Sub> {\n        const subscription = await getSubscription(event, zone);\n\n        // Prevent tampering with our tag in any subclass' _getSubscriber\n        const tag = subscription.tag;\n\n        let sub = this.#subs.get(tag);\n        if (!sub) {\n            const subscriber = this._getSubscriber(subscription);\n\n            const addressableMap = new WeakMap();\n            const nameMap = new Map();\n            sub = { subscriber, tag, addressableMap, nameMap, started: false, listeners: [], zone: subscription.zone! };\n            this.#subs.set(tag, sub);\n        }\n\n        return sub;\n    }\n\n    async startZoneSubscriptions(zone: Zone): Promise<void> {\n        for (const sub of Array.from(this.#subs.values())) {\n            if (sub.zone === zone) {\n                if (sub.started) {\n                    await sub.subscriber.start();\n                }\n            }\n        }\n    }\n\n    async on(event: ProviderEvent, listener: Listener, zone?: Zone): Promise<this> {\n        const sub = await this.#getSub(event, zone);\n        sub.listeners.push({ listener, once: false });\n        if (!sub.started) {\n            sub.subscriber.start();\n            sub.started = true;\n            if (this.#pausedState != null) {\n                sub.subscriber.pause(this.#pausedState);\n            }\n        }\n        return this;\n    }\n\n    async once(event: ProviderEvent, listener: Listener, zone?: Zone): Promise<this> {\n        const sub = await this.#getSub(event, zone);\n        sub.listeners.push({ listener, once: true });\n        if (!sub.started) {\n            sub.subscriber.start();\n            sub.started = true;\n            if (this.#pausedState != null) {\n                sub.subscriber.pause(this.#pausedState);\n            }\n        }\n        return this;\n    }\n\n    async emit(event: ProviderEvent, zone?: Zone, ...args: Array<any>): Promise<boolean> {\n        const sub = await this.#hasSub(event, args, zone);\n        // If there is not subscription or if a recent emit removed\n        // the last of them (which also deleted the sub) do nothing\n        if (!sub || sub.listeners.length === 0) {\n            return false;\n        }\n\n        const count = sub.listeners.length;\n        sub.listeners = sub.listeners.filter(({ listener, once }) => {\n            const payload = new EventPayload(this, once ? null : listener, event);\n            try {\n                listener.call(this, ...args, payload);\n                // eslint-disable-next-line no-empty\n            } catch (error) {}\n            return !once;\n        });\n\n        if (sub.listeners.length === 0) {\n            if (sub.started) {\n                sub.subscriber.stop();\n            }\n            this.#subs.delete(sub.tag);\n        }\n\n        return count > 0;\n    }\n\n    async listenerCount(event?: ProviderEvent): Promise<number> {\n        if (event) {\n            const sub = await this.#hasSub(event);\n            if (!sub) {\n                return 0;\n            }\n            return sub.listeners.length;\n        }\n\n        let total = 0;\n        for (const { listeners } of this.#subs.values()) {\n            total += listeners.length;\n        }\n        return total;\n    }\n\n    async listeners(event?: ProviderEvent): Promise<Array<Listener>> {\n        if (event) {\n            const sub = await this.#hasSub(event);\n            if (!sub) {\n                return [];\n            }\n            return sub.listeners.map(({ listener }) => listener);\n        }\n        let result: Array<Listener> = [];\n        for (const { listeners } of this.#subs.values()) {\n            result = result.concat(listeners.map(({ listener }) => listener));\n        }\n        return result;\n    }\n\n    async off(event: ProviderEvent, listener?: Listener, zone?: Zone): Promise<this> {\n        const sub = await this.#hasSub(event, [], zone);\n        if (!sub) {\n            return this;\n        }\n\n        if (listener) {\n            const index = sub.listeners.map(({ listener }) => listener).indexOf(listener);\n            if (index >= 0) {\n                sub.listeners.splice(index, 1);\n            }\n        }\n\n        if (!listener || sub.listeners.length === 0) {\n            if (sub.started) {\n                sub.subscriber.stop();\n            }\n            this.#subs.delete(sub.tag);\n        }\n\n        return this;\n    }\n\n    async removeAllListeners(event?: ProviderEvent): Promise<this> {\n        if (event) {\n            const { tag, started, subscriber } = await this.#getSub(event);\n            if (started) {\n                subscriber.stop();\n            }\n            this.#subs.delete(tag);\n        } else {\n            for (const [tag, { started, subscriber }] of this.#subs) {\n                if (started) {\n                    subscriber.stop();\n                }\n                this.#subs.delete(tag);\n            }\n        }\n        return this;\n    }\n\n    // Alias for \"on\"\n    async addListener(event: ProviderEvent, listener: Listener, zone?: Zone): Promise<this> {\n        return await this.on(event, listener, zone);\n    }\n\n    // Alias for \"off\"\n    async removeListener(event: ProviderEvent, listener: Listener, zone?: Zone): Promise<this> {\n        return this.off(event, listener, zone);\n    }\n\n    /**\n     * If this provider has been destroyed using the {@link AbstractProvider.destroy | **destroy**} method.\n     *\n     * Once destroyed, all resources are reclaimed, internal event loops and timers are cleaned up and no further\n     * requests may be sent to the provider.\n     */\n    get destroyed(): boolean {\n        return this.#destroyed;\n    }\n\n    /**\n     * Sub-classes may use this to shutdown any sockets or release their resources and reject any pending requests.\n     *\n     * Sub-classes **must** call `super.destroy()`.\n     */\n    destroy(): void {\n        // Stop all listeners\n        this.removeAllListeners();\n\n        // Shut down all tiemrs\n        for (const timerId of this.#timers.keys()) {\n            this._clearTimeout(timerId);\n        }\n\n        this.#destroyed = true;\n    }\n\n    /**\n     * Whether the provider is currently paused.\n     *\n     * A paused provider will not emit any events, and generally should not make any requests to the network, but that\n     * is up to sub-classes to manage.\n     *\n     * Setting `paused = true` is identical to calling `.pause(false)`, which will buffer any events that occur while\n     * paused until the provider is unpaused.\n     *\n     * @returns {boolean} Whether the provider is paused.\n     */\n    get paused(): boolean {\n        return this.#pausedState != null;\n    }\n    set paused(pause: boolean) {\n        if (!!pause === this.paused) {\n            return;\n        }\n\n        if (this.paused) {\n            this.resume();\n        } else {\n            this.pause(false);\n        }\n    }\n\n    /**\n     * Pause the provider. If `dropWhilePaused`, any events that occur while paused are dropped, otherwise all events\n     * will be emitted once the provider is unpaused.\n     *\n     * @param {boolean} [dropWhilePaused] - Whether to drop events while paused.\n     */\n    pause(dropWhilePaused?: boolean): void {\n        this.#lastBlockNumber = -1;\n\n        if (this.#pausedState != null) {\n            if (this.#pausedState == !!dropWhilePaused) {\n                return;\n            }\n            assert(false, 'cannot change pause type; resume first', 'UNSUPPORTED_OPERATION', {\n                operation: 'pause',\n            });\n        }\n\n        this._forEachSubscriber((s) => s.pause(dropWhilePaused));\n        this.#pausedState = !!dropWhilePaused;\n\n        for (const timer of this.#timers.values()) {\n            // Clear the timer\n            if (timer.timer) {\n                clearTimeout(timer.timer);\n            }\n\n            // Remaining time needed for when we become unpaused\n            timer.time = getTime() - timer.time;\n        }\n    }\n\n    /**\n     * Resume the provider.\n     */\n    resume(): void {\n        if (this.#pausedState == null) {\n            return;\n        }\n\n        this._forEachSubscriber((s) => s.resume());\n        this.#pausedState = null;\n        for (const timer of this.#timers.values()) {\n            // Remaining time when we were paused\n            let timeout = timer.time;\n            if (timeout < 0) {\n                timeout = 0;\n            }\n\n            // Start time (in cause paused, so we con compute remaininf time)\n            timer.time = getTime();\n\n            // Start the timer\n            setTimeout(timer.func, timeout);\n        }\n    }\n}\n","import { isError } from '../utils/index.js';\n\nimport { PollingEventSubscriber } from './subscriber-polling.js';\n\nimport type { AbstractProvider, Subscriber } from './abstract-provider.js';\nimport type { Network } from './network.js';\nimport { getZoneFromEventFilter, type EventFilter } from './provider.js';\nimport type { JsonRpcApiProvider } from './provider-jsonrpc.js';\nimport { Zone } from '../constants/index.js';\n\n/**\n * Deep copies an object.\n *\n * @param {any} obj - The object to copy.\n * @returns {any} A deep copy of the object.\n */\nfunction copy(obj: any): any {\n    return JSON.parse(JSON.stringify(obj));\n}\n\n/**\n * Some backends support subscribing to events using a Filter ID.\n *\n * When subscribing with this technique, the node issues a unique **Filter ID**. At this point the node dedicates\n * resources to the filter, so that periodic calls to follow up on the **Filter ID** will receive any events since the\n * last call.\n *\n * @category Providers\n */\nexport class FilterIdSubscriber implements Subscriber {\n    #provider: JsonRpcApiProvider;\n\n    #filterIdPromise: null | Promise<string>;\n    #poller: (b: number) => Promise<void>;\n\n    #running: boolean;\n\n    #network: null | Network;\n\n    #hault: boolean;\n\n    protected zone: Zone;\n\n    /**\n     * @ignore Creates A new **FilterIdSubscriber** which will use {@link FilterIdSubscriber._subscribe | **_subscribe**}\n     *   and {@link FilterIdSubscriber._emitResults | **_emitResults**} to setup the subscription and provide the event\n     *   to the `provider`.\n     * @param {JsonRpcApiProvider<any>} provider - The provider to use.\n     */\n    constructor(provider: JsonRpcApiProvider<any>, zone: Zone) {\n        this.#provider = provider;\n\n        this.#filterIdPromise = null;\n        this.#poller = this.#poll.bind(this);\n\n        this.#running = false;\n\n        this.#network = null;\n\n        this.#hault = false;\n\n        this.zone = zone;\n    }\n\n    /**\n     * Sub-classes **must** override this to begin the subscription.\n     *\n     * @ignore\n     * @param {JsonRpcApiProvider} provider - The provider to use.\n     * @returns {Promise<string>} A promise that resolves to the subscription ID.\n     * @throws {Error} If the method is not overridden.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _subscribe(provider: JsonRpcApiProvider): Promise<string> {\n        throw new Error('subclasses must override this');\n    }\n\n    /**\n     * Sub-classes **must** override this to handle the events.\n     *\n     * @ignore\n     * @param {AbstractProvider} provider - The provider to use.\n     * @param {any[]} result - The results to handle.\n     * @returns {Promise<void>} A promise that resolves when the results are handled.\n     * @throws {Error} If the method is not overridden.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _emitResults(provider: AbstractProvider, result: Array<any>): Promise<void> {\n        throw new Error('subclasses must override this');\n    }\n\n    /**\n     * Sub-classes **must** override this to handle recovery on errors.\n     *\n     * @ignore\n     * @param {AbstractProvider} provider - The provider to use.\n     * @returns {Subscriber} The recovered subscriber.\n     * @throws {Error} If the method is not overridden.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _recover(provider: AbstractProvider): Subscriber {\n        throw new Error('subclasses must override this');\n    }\n\n    /**\n     * Polls for new events.\n     *\n     * @ignore\n     * @param {number} blockNumber - The block number to poll from.\n     * @returns {Promise<void>} A promise that resolves when polling is complete.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async #poll(blockNumber: number): Promise<void> {\n        try {\n            // Subscribe if necessary\n            if (this.#filterIdPromise == null) {\n                this.#filterIdPromise = this._subscribe(this.#provider);\n            }\n\n            // Get the Filter ID\n            let filterId: null | string = null;\n            try {\n                filterId = await this.#filterIdPromise;\n            } catch (error) {\n                if (!isError(error, 'UNSUPPORTED_OPERATION') || error.operation !== 'quai_newFilter') {\n                    throw error;\n                }\n            }\n\n            // The backend does not support Filter ID; downgrade to\n            // polling\n            if (filterId == null) {\n                this.#filterIdPromise = null;\n                this.#provider._recoverSubscriber(this, this._recover(this.#provider));\n                return;\n            }\n\n            const network = await this.#provider.getNetwork();\n            if (!this.#network) {\n                this.#network = network;\n            }\n\n            if ((this.#network as Network).chainId !== network.chainId) {\n                throw new Error('chain changed');\n            }\n\n            if (this.#hault) {\n                return;\n            }\n\n            const result = await this.#provider.send('quai_getFilterChanges', [filterId]);\n            await this._emitResults(this.#provider, result);\n        } catch (error) {\n            console.log('@TODO', error);\n        }\n\n        this.#provider.once('block', this.#poller, this.zone);\n    }\n\n    /**\n     * Tears down the subscription.\n     *\n     * @ignore\n     */\n    #teardown(): void {\n        const filterIdPromise = this.#filterIdPromise;\n        if (filterIdPromise) {\n            this.#filterIdPromise = null;\n            filterIdPromise.then((filterId) => {\n                this.#provider.send('quai_uninstallFilter', [filterId]);\n            });\n        }\n    }\n\n    /**\n     * Starts the subscriber.\n     */\n    start(): void {\n        if (this.#running) {\n            return;\n        }\n        this.#running = true;\n\n        this.#poll(-2);\n    }\n\n    /**\n     * Stops the subscriber.\n     */\n    stop(): void {\n        if (!this.#running) {\n            return;\n        }\n        this.#running = false;\n\n        this.#hault = true;\n        this.#teardown();\n        this.#provider.off('block', this.#poller, this.zone);\n    }\n\n    /**\n     * Pauses the subscriber.\n     *\n     * @param {boolean} [dropWhilePaused] - Whether to drop the subscription while paused.\n     */\n    pause(dropWhilePaused?: boolean): void {\n        if (dropWhilePaused) {\n            this.#teardown();\n        }\n        this.#provider.off('block', this.#poller, this.zone);\n    }\n\n    /**\n     * Resumes the subscriber.\n     */\n    resume(): void {\n        this.start();\n    }\n}\n\n/**\n * A **FilterIdSubscriber** for receiving contract events.\n *\n * @category Providers\n */\nexport class FilterIdEventSubscriber extends FilterIdSubscriber {\n    #event: EventFilter;\n\n    /**\n     * @ignore Creates A new **FilterIdEventSubscriber** attached to `provider` listening for `filter`.\n     * @param {JsonRpcApiProvider<any>} provider - The provider to use.\n     * @param {EventFilter} filter - The event filter to use.\n     */\n    constructor(provider: JsonRpcApiProvider<any>, filter: EventFilter) {\n        const zone = getZoneFromEventFilter(filter);\n        if (zone == null) {\n            throw new Error('Unable to determine zone for event filter');\n        }\n        super(provider, zone);\n        this.#event = copy(filter);\n    }\n\n    /**\n     * Recovers the subscriber.\n     *\n     * @ignore\n     * @param {AbstractProvider<any>} provider - The provider to use.\n     * @returns {Subscriber} The recovered subscriber.\n     */\n    _recover(provider: AbstractProvider<any>): Subscriber {\n        return new PollingEventSubscriber(provider, this.#event);\n    }\n\n    /**\n     * Subscribes to the event filter.\n     *\n     * @ignore\n     * @param {JsonRpcApiProvider<any>} provider - The provider to use.\n     * @returns {Promise<string>} A promise that resolves to the subscription ID.\n     */\n    async _subscribe(provider: JsonRpcApiProvider<any>): Promise<string> {\n        const filterId = await provider.send('quai_newFilter', [this.#event]);\n        return filterId;\n    }\n\n    /**\n     * Emits the results of the event filter.\n     *\n     * @ignore\n     * @param {JsonRpcApiProvider<any>} provider - The provider to use.\n     * @param {any[]} results - The results to emit.\n     * @returns {Promise<void>} A promise that resolves when the results are emitted.\n     */\n    async _emitResults(provider: JsonRpcApiProvider<any>, results: Array<any>): Promise<void> {\n        for (const result of results) {\n            provider.emit(this.#event, this.zone, provider._wrapLog(result, provider._network));\n        }\n    }\n}\n\n/**\n * A **FilterIdSubscriber** for receiving pending transactions events.\n *\n * @category Providers\n */\nexport class FilterIdPendingSubscriber extends FilterIdSubscriber {\n    /**\n     * Subscribes to the pending transactions filter.\n     *\n     * @ignore\n     * @param {JsonRpcApiProvider<any>} provider - The provider to use.\n     * @returns {Promise<string>} A promise that resolves to the subscription ID.\n     */\n    async _subscribe(provider: JsonRpcApiProvider<any>): Promise<string> {\n        return await provider.send('quai_newPendingTransactionFilter', []);\n    }\n\n    /**\n     * Emits the results of the pending transactions filter.\n     *\n     * @ignore\n     * @param {JsonRpcApiProvider<any>} provider - The provider to use.\n     * @param {any[]} results - The results to emit.\n     * @returns {Promise<void>} A promise that resolves when the results are emitted.\n     */\n    async _emitResults(provider: JsonRpcApiProvider<any>, results: Array<any>): Promise<void> {\n        for (const result of results) {\n            provider.emit('pending', this.zone, result);\n        }\n    }\n}\n","import { getAddress } from '../address/index.js';\nimport { keccak256 } from '../crypto/index.js';\nimport { recoverAddress } from '../address/index.js';\nimport {\n    concat,\n    defineProperties,\n    getBigInt,\n    getBytes,\n    hexlify,\n    mask,\n    toBeHex,\n    toQuantity,\n    toTwos,\n    zeroPadValue,\n    assertArgument,\n} from '../utils/index.js';\n\nimport { id } from './id.js';\n\nimport type { SignatureLike } from '../crypto/index.js';\nimport type { BigNumberish, BytesLike } from '../utils/index.js';\n\nconst padding = new Uint8Array(32);\npadding.fill(0);\n\nconst BN__1 = BigInt(-1);\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_MAX_UINT256 = BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\n\n// @TODO: in v7, verifyingContract should be an AddressLike and use resolveAddress\n\n/**\n * The domain for an [EIP-712](https://eips.ethereum.org/EIPS/eip-712) payload.\n *\n * @category Hash\n */\nexport interface TypedDataDomain {\n    /**\n     * The human-readable name of the signing domain.\n     */\n    name?: null | string;\n\n    /**\n     * The major version of the signing domain.\n     */\n    version?: null | string;\n\n    /**\n     * The chain ID of the signing domain.\n     */\n    chainId?: null | BigNumberish;\n\n    /**\n     * The the address of the contract that will verify the signature.\n     */\n    verifyingContract?: null | string;\n\n    /**\n     * A salt used for purposes decided by the specific domain.\n     */\n    salt?: null | BytesLike;\n}\n\n/**\n * A specific field of a structured [EIP-712](https://eips.ethereum.org/EIPS/eip-712) type.\n *\n * @category Hash\n */\nexport interface TypedDataField {\n    /**\n     * The field name.\n     */\n    name: string;\n\n    /**\n     * The type of the field.\n     */\n    type: string;\n}\n\nfunction hexPadRight(value: BytesLike): string {\n    const bytes = getBytes(value);\n    const padOffset = bytes.length % 32;\n    if (padOffset) {\n        return concat([bytes, padding.slice(padOffset)]);\n    }\n    return hexlify(bytes);\n}\n\nconst hexTrue = toBeHex(BN_1, 32);\nconst hexFalse = toBeHex(BN_0, 32);\n\nconst domainFieldTypes: Record<string, string> = {\n    name: 'string',\n    version: 'string',\n    chainId: 'uint256',\n    verifyingContract: 'address',\n    salt: 'bytes32',\n};\n\nconst domainFieldNames: Array<string> = ['name', 'version', 'chainId', 'verifyingContract', 'salt'];\n\nfunction checkString(key: string): (value: any) => string {\n    return function (value: any) {\n        assertArgument(\n            typeof value === 'string',\n            `invalid domain value for ${JSON.stringify(key)}`,\n            `domain.${key}`,\n            value,\n        );\n        return value;\n    };\n}\n\nconst domainChecks: Record<string, (value: any) => any> = {\n    name: checkString('name'),\n    version: checkString('version'),\n    chainId: function (_value: any) {\n        const value = getBigInt(_value, 'domain.chainId');\n        assertArgument(value >= 0, 'invalid chain ID', 'domain.chainId', _value);\n        if (Number.isSafeInteger(value)) {\n            return Number(value);\n        }\n        return toQuantity(value);\n    },\n    verifyingContract: function (value: any) {\n        try {\n            return getAddress(value);\n            // eslint-disable-next-line no-empty\n        } catch (error) {}\n        assertArgument(false, `invalid domain value \"verifyingContract\"`, 'domain.verifyingContract', value);\n    },\n    salt: function (value: any) {\n        const bytes = getBytes(value, 'domain.salt');\n        assertArgument(bytes.length === 32, `invalid domain value \"salt\"`, 'domain.salt', value);\n        return hexlify(bytes);\n    },\n};\n\nfunction getBaseEncoder(type: string): null | ((value: any) => string) {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = match[1] === '';\n\n            const width = parseInt(match[2] || '256');\n            assertArgument(\n                width % 8 === 0 && width !== 0 && width <= 256 && (match[2] == null || match[2] === String(width)),\n                'invalid numeric width',\n                'type',\n                type,\n            );\n\n            const boundsUpper = mask(BN_MAX_UINT256, signed ? width - 1 : width);\n            const boundsLower = signed ? (boundsUpper + BN_1) * BN__1 : BN_0;\n\n            return function (_value: BigNumberish) {\n                const value = getBigInt(_value, 'value');\n\n                assertArgument(\n                    value >= boundsLower && value <= boundsUpper,\n                    `value out-of-bounds for ${type}`,\n                    'value',\n                    value,\n                );\n\n                return toBeHex(signed ? toTwos(value, 256) : value, 32);\n            };\n        }\n    }\n\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            assertArgument(\n                width !== 0 && width <= 32 && match[1] === String(width),\n                'invalid bytes width',\n                'type',\n                type,\n            );\n\n            return function (value: BytesLike) {\n                const bytes = getBytes(value);\n                assertArgument(bytes.length === width, `invalid length for ${type}`, 'value', value);\n                return hexPadRight(value);\n            };\n        }\n    }\n\n    switch (type) {\n        case 'address':\n            return function (value: string) {\n                return zeroPadValue(getAddress(value), 32);\n            };\n        case 'bool':\n            return function (value: boolean) {\n                return !value ? hexFalse : hexTrue;\n            };\n        case 'bytes':\n            return function (value: BytesLike) {\n                return keccak256(value);\n            };\n        case 'string':\n            return function (value: string) {\n                return id(value);\n            };\n    }\n\n    return null;\n}\n\nfunction encodeType(name: string, fields: Array<TypedDataField>): string {\n    return `${name}(${fields.map(({ name, type }) => type + ' ' + name).join(',')})`;\n}\n\n/**\n * A **TypedDataEncode** prepares and encodes [EIP-712](https://eips.ethereum.org/EIPS/eip-712) payloads for signed\n * typed data.\n *\n * This is useful for those that wish to compute various components of a typed data hash, primary types, or\n * sub-components, but generally the higher level [`Signer.signTypedData`](../classes/Signer#signTypedData) is more\n * useful.\n *\n * @category Hash\n */\nexport class TypedDataEncoder {\n    /**\n     * The primary type for the structured {@link types | **types**}.\n     *\n     * This is derived automatically from the {@link types | **types**}, since no recursion is possible, once the DAG for\n     * the types is consturcted internally, the primary type must be the only remaining type with no parent nodes.\n     */\n    readonly primaryType!: string;\n\n    readonly #types: string;\n\n    /**\n     * The types.\n     */\n    get types(): Record<string, Array<TypedDataField>> {\n        return JSON.parse(this.#types);\n    }\n\n    readonly #fullTypes: Map<string, string>;\n\n    readonly #encoderCache: Map<string, (value: any) => string>;\n\n    /**\n     * Create a new **TypedDataEncoder** for `types`.\n     *\n     * This performs all necessary checking that types are valid and do not violate the\n     * [EIP-712](https://eips.ethereum.org/EIPS/eip-712) structural constraints as well as computes the\n     * {@link primaryType | **primaryType**}.\n     */\n    constructor(types: Record<string, Array<TypedDataField>>) {\n        this.#types = JSON.stringify(types);\n        this.#fullTypes = new Map();\n        this.#encoderCache = new Map();\n\n        // Link struct types to their direct child structs\n        const links: Map<string, Set<string>> = new Map();\n\n        // Link structs to structs which contain them as a child\n        const parents: Map<string, Array<string>> = new Map();\n\n        // Link all subtypes within a given struct\n        const subtypes: Map<string, Set<string>> = new Map();\n\n        Object.keys(types).forEach((type) => {\n            links.set(type, new Set());\n            parents.set(type, []);\n            subtypes.set(type, new Set());\n        });\n\n        for (const name in types) {\n            const uniqueNames: Set<string> = new Set();\n\n            for (const field of types[name]) {\n                // Check each field has a unique name\n                assertArgument(\n                    !uniqueNames.has(field.name),\n                    `duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`,\n                    'types',\n                    types,\n                );\n                uniqueNames.add(field.name);\n\n                // Get the base type (drop any array specifiers)\n                const baseType = (<any>field.type.match(/^([^\\x5b]*)(\\x5b|$)/))[1] || null;\n                assertArgument(\n                    baseType !== name,\n                    `circular type reference to ${JSON.stringify(baseType)}`,\n                    'types',\n                    types,\n                );\n\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) {\n                    continue;\n                }\n\n                assertArgument(parents.has(baseType), `unknown type ${JSON.stringify(baseType)}`, 'types', types);\n\n                // Add linkage\n                (parents.get(baseType) as Array<string>).push(name);\n                (links.get(name) as Set<string>).add(baseType);\n            }\n        }\n\n        // Deduce the primary type\n        const primaryTypes = Array.from(parents.keys()).filter((n) => (parents.get(n) as Array<string>).length === 0);\n        assertArgument(primaryTypes.length !== 0, 'missing primary type', 'types', types);\n        assertArgument(\n            primaryTypes.length === 1,\n            `ambiguous primary types or unused types: ${primaryTypes.map((t) => JSON.stringify(t)).join(', ')}`,\n            'types',\n            types,\n        );\n\n        defineProperties<TypedDataEncoder>(this, { primaryType: primaryTypes[0] });\n\n        // Check for circular type references\n        function checkCircular(type: string, found: Set<string>) {\n            assertArgument(!found.has(type), `circular type reference to ${JSON.stringify(type)}`, 'types', types);\n\n            found.add(type);\n\n            for (const child of links.get(type) as Set<string>) {\n                if (!parents.has(child)) {\n                    continue;\n                }\n\n                // Recursively check children\n                checkCircular(child, found);\n\n                // Mark all ancestors as having this decendant\n                for (const subtype of found) {\n                    (subtypes.get(subtype) as Set<string>).add(child);\n                }\n            }\n\n            found.delete(type);\n        }\n        checkCircular(this.primaryType, new Set());\n\n        // Compute each fully describe type\n        for (const [name, set] of subtypes) {\n            const st = Array.from(set);\n            st.sort();\n            this.#fullTypes.set(name, encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(''));\n        }\n    }\n\n    /**\n     * Returnthe encoder for the specific `type`.\n     *\n     * @param {string} type - The type to get the encoder for.\n     * @returns {(value: any) => string} The encoder for the type.\n     */\n    getEncoder(type: string): (value: any) => string {\n        let encoder = this.#encoderCache.get(type);\n        if (!encoder) {\n            encoder = this.#getEncoder(type);\n            this.#encoderCache.set(type, encoder);\n        }\n        return encoder;\n    }\n\n    #getEncoder(type: string): (value: any) => string {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return encoder;\n            }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            return (value: Array<any>) => {\n                assertArgument(\n                    !match[3] || parseInt(match[3]) === value.length,\n                    `array length mismatch; expected length ${parseInt(match[3])}`,\n                    'value',\n                    value,\n                );\n\n                let result = value.map(subEncoder);\n                if (this.#fullTypes.has(subtype)) {\n                    result = result.map(keccak256);\n                }\n\n                return keccak256(concat(result));\n            };\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this.#fullTypes.get(type) as string);\n            return (value: Record<string, any>) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this.#fullTypes.has(type)) {\n                        return keccak256(result);\n                    }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return concat(values);\n            };\n        }\n\n        assertArgument(false, `unknown type: ${type}`, 'type', type);\n    }\n\n    /**\n     * Return the full type for `name`.\n     *\n     * @param {string} name - The name to get the full type for.\n     * @returns {string} The full type.\n     */\n    encodeType(name: string): string {\n        const result = this.#fullTypes.get(name);\n        assertArgument(result, `unknown type: ${JSON.stringify(name)}`, 'name', name);\n        return result;\n    }\n\n    /**\n     * Return the encoded `value` for the `type`.\n     *\n     * @param {string} type - The type to encode the value for.\n     * @param {any} value - The value to encode.\n     * @returns {string} The encoded value.\n     */\n    encodeData(type: string, value: any): string {\n        return this.getEncoder(type)(value);\n    }\n\n    /**\n     * Returns the hash of `value` for the type of `name`.\n     *\n     * @param {string} name - The name of the type.\n     * @param {Record<string, any>} value - The value to hash.\n     * @returns {string} The hash of the value.\n     */\n    hashStruct(name: string, value: Record<string, any>): string {\n        return keccak256(this.encodeData(name, value));\n    }\n\n    /**\n     * Return the fulled encoded `value` for the {@link types | **types**}.\n     *\n     * @param {Record<string, any>} value - The value to encode.\n     * @returns {string} The encoded value.\n     */\n    encode(value: Record<string, any>): string {\n        return this.encodeData(this.primaryType, value);\n    }\n\n    /**\n     * Return the hash of the fully encoded `value` for the {@link types | **types**}.\n     *\n     * @param {Record<string, any>} value - The value to hash.\n     * @returns {string} The hash of the value.\n     */\n    hash(value: Record<string, any>): string {\n        return this.hashStruct(this.primaryType, value);\n    }\n\n    /**\n     * @ignore\n     */\n    _visit(type: string, value: any, callback: (type: string, data: any) => any): any {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return callback(type, value);\n            }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            assertArgument(\n                !match[3] || parseInt(match[3]) === value.length,\n                `array length mismatch; expected length ${parseInt(match[3])}`,\n                'value',\n                value,\n            );\n            return value.map((v: any) => this._visit(match[1], v, callback));\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce(\n                (accum, { name, type }) => {\n                    accum[name] = this._visit(type, value[name], callback);\n                    return accum;\n                },\n                <Record<string, any>>{},\n            );\n        }\n\n        assertArgument(false, `unknown type: ${type}`, 'type', type);\n    }\n\n    /**\n     * Call `calback` for each value in `value`, passing the type and component within `value`.\n     *\n     * This is useful for replacing addresses or other transformation that may be desired on each component, based on\n     * its type.\n     *\n     * @param {Record<string, any>} value - The value to visit.\n     * @param {(type: string, data: any) => any} callback - The callback to call for each value.\n     * @returns {any} The result of the callback.\n     */\n    visit(value: Record<string, any>, callback: (type: string, data: any) => any): any {\n        return this._visit(this.primaryType, value, callback);\n    }\n\n    /**\n     * Create a new **TypedDataEncoder** for `types`.\n     *\n     * @param {Record<string, TypedDataField[]>} types - The types to encode.\n     * @returns {TypedDataEncoder} The encoder for the types.\n     * @throws {Error} If the types are invalid.\n     */\n    static from(types: Record<string, Array<TypedDataField>>): TypedDataEncoder {\n        return new TypedDataEncoder(types);\n    }\n\n    /**\n     * Return the primary type for `types`.\n     *\n     * @param {Record<string, TypedDataField[]>} types - The types to get the primary type for.\n     * @returns {string} The primary type.\n     * @throws {Error} If the types are invalid.\n     */\n    static getPrimaryType(types: Record<string, Array<TypedDataField>>): string {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n\n    /**\n     * Return the hashed struct for `value` using `types` and `name`.\n     *\n     * @param {string} name - The name of the type.\n     * @param {Record<string, TypedDataField[]>} types - The types to hash.\n     * @param {Record<string, any>} value - The value to hash.\n     * @returns {string} The hash of the value.\n     */\n    static hashStruct(name: string, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n\n    /**\n     * Return the domain hash for `domain`.\n     *\n     * @param {TypedDataDomain} domain - The domain to hash.\n     * @returns {string} The hash of the domain.\n     * @throws {Error} If the domain is invalid.\n     */\n    static hashDomain(domain: TypedDataDomain): string {\n        const domainFields: Array<TypedDataField> = [];\n        for (const name in domain) {\n            if ((<Record<string, any>>domain)[name] == null) {\n                continue;\n            }\n            const type = domainFieldTypes[name];\n            assertArgument(type, `invalid typed-data domain key: ${JSON.stringify(name)}`, 'domain', domain);\n            domainFields.push({ name, type });\n        }\n\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n\n        return TypedDataEncoder.hashStruct('EIP712Domain', { EIP712Domain: domainFields }, domain);\n    }\n\n    /**\n     * Return the fully encoded [EIP-712](https://eips.ethereum.org/EIPS/eip-712) `value` for `types` with `domain`.\n     *\n     * @param {TypedDataDomain} domain - The domain to use.\n     * @param {Record<string, TypedDataField[]>} types - The types to encode.\n     * @param {Record<string, any>} value - The value to encode.\n     * @returns {string} The encoded value.\n     */\n    static encode(\n        domain: TypedDataDomain,\n        types: Record<string, Array<TypedDataField>>,\n        value: Record<string, any>,\n    ): string {\n        return concat(['0x1901', TypedDataEncoder.hashDomain(domain), TypedDataEncoder.from(types).hash(value)]);\n    }\n\n    /**\n     * Return the hash of the fully encoded [EIP-712](https://eips.ethereum.org/EIPS/eip-712) `value` for `types` with\n     * `domain`.\n     *\n     * @param {TypedDataDomain} domain - The domain to use.\n     * @param {Record<string, TypedDataField[]>} types - The types to hash.\n     * @param {Record<string, any>} value - The value to hash.\n     * @returns {string} The hash of the value.\n     */\n    static hash(\n        domain: TypedDataDomain,\n        types: Record<string, Array<TypedDataField>>,\n        value: Record<string, any>,\n    ): string {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n\n    /**\n     * Returns the JSON-encoded payload expected by nodes which implement the JSON-RPC\n     * [EIP-712](https://eips.ethereum.org/EIPS/eip-712) method.\n     *\n     * @param {TypedDataDomain} domain - The domain to use.\n     * @param {Record<string, TypedDataField[]>} types - The types to encode.\n     * @param {Record<string, any>} value - The value to encode.\n     * @returns {any} The JSON-encoded payload.\n     */\n    static getPayload(\n        domain: TypedDataDomain,\n        types: Record<string, Array<TypedDataField>>,\n        value: Record<string, any>,\n    ): any {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n\n        // Derive the EIP712Domain Struct reference type\n        const domainValues: Record<string, any> = {};\n        const domainTypes: Array<{ name: string; type: string }> = [];\n\n        domainFieldNames.forEach((name) => {\n            const value = (<any>domain)[name];\n            if (value == null) {\n                return;\n            }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n\n        const encoder = TypedDataEncoder.from(types);\n\n        const typesWithDomain = Object.assign({}, types);\n        assertArgument(\n            typesWithDomain.EIP712Domain == null,\n            'types must not contain EIP712Domain type',\n            'types.EIP712Domain',\n            types,\n        );\n\n        typesWithDomain.EIP712Domain = domainTypes;\n\n        // Validate the data structures and types\n        encoder.encode(value);\n\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type: string, value: any) => {\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(getBytes(value));\n                }\n\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return getBigInt(value).toString();\n                }\n\n                switch (type) {\n                    case 'address':\n                        return value.toLowerCase();\n                    case 'bool':\n                        return !!value;\n                    case 'string':\n                        assertArgument(typeof value === 'string', 'invalid string', 'value', value);\n                        return value;\n                }\n\n                assertArgument(false, 'unsupported type', 'type', type);\n            }),\n        };\n    }\n}\n\n/**\n * Compute the address used to sign the typed data for the `signature`.\n *\n * @category Hash\n * @param {TypedDataDomain} domain - The domain of the typed data.\n * @param {Record<string, TypedDataField[]>} types - The types of the typed data.\n * @param {Record<string, any>} value - The value of the typed data.\n * @param {SignatureLike} signature - The signature to verify.\n * @returns {string} The address that signed the typed data.\n */\nexport function verifyTypedData(\n    domain: TypedDataDomain,\n    types: Record<string, Array<TypedDataField>>,\n    value: Record<string, any>,\n    signature: SignatureLike,\n): string {\n    return recoverAddress(TypedDataEncoder.hash(domain, types, value), signature);\n}\n","/**\n * Generally the [Wallet](../classes/Wallet) and [JsonRpcSigner](../classes/JsonRpcSigner) and their sub-classes are\n * sufficent for most developers, but this is provided to fascilitate more complex Signers.\n */\nimport { AddressLike, resolveAddress, validateAddress } from '../address/index.js';\nimport { defineProperties, getBigInt, resolveProperties, assert, assertArgument } from '../utils/index.js';\nimport { addressFromTransactionRequest, copyRequest, QuaiTransactionRequest } from '../providers/provider.js';\n\nimport type { TypedDataDomain, TypedDataField } from '../hash/index.js';\nimport type { TransactionLike } from '../transaction/index.js';\n\nimport type { BlockTag, Provider, TransactionRequest, TransactionResponse } from '../providers/provider.js';\nimport type { Signer } from './signer.js';\nimport { getTxType } from '../utils/index.js';\nimport { QuaiTransaction, QuaiTransactionLike } from '../transaction/index.js';\nimport { toZone, Zone } from '../constants/index.js';\nimport { AccessList } from '../transaction/index.js';\n\nfunction checkProvider(signer: AbstractSigner, operation: string): Provider {\n    if (signer.provider) {\n        return signer.provider;\n    }\n    assert(false, 'missing provider', 'UNSUPPORTED_OPERATION', { operation });\n}\n\nasync function populate(signer: AbstractSigner, tx: TransactionRequest): Promise<TransactionLike> {\n    const pop: any = copyRequest(tx);\n\n    if (pop.to != null) {\n        pop.to = resolveAddress(pop.to);\n        validateAddress(pop.to);\n    }\n\n    if (pop.from != null) {\n        const from = pop.from;\n        pop.from = await Promise.all([signer.getAddress(), resolveAddress(from)]).then(([address, from]) => {\n            assertArgument(address.toLowerCase() === from.toLowerCase(), 'transaction from mismatch', 'tx.from', from);\n            return address;\n        });\n    } else {\n        pop.from = await signer.getAddress();\n    }\n    validateAddress(pop.from);\n\n    return await resolveProperties(pop);\n}\n\n/**\n * An **AbstractSigner** includes most of teh functionality required to get a {@link Signer | **Signer**} working as\n * expected, but requires a few Signer-specific methods be overridden.\n *\n * @category Signers\n */\nexport abstract class AbstractSigner<P extends null | Provider = null | Provider> implements Signer {\n    /**\n     * The provider this signer is connected to.\n     */\n    readonly provider!: P;\n\n    /**\n     * Creates a new Signer connected to `provider`.\n     */\n    constructor(provider?: P) {\n        defineProperties<AbstractSigner>(this, { provider: provider || null });\n    }\n\n    /**\n     * Resolves to the Signer address.\n     */\n    abstract getAddress(): Promise<string>;\n\n    /**\n     * @ignore\n     */\n    _getAddress(address: AddressLike): string | Promise<string> {\n        return resolveAddress(address);\n    }\n\n    async zoneFromAddress(_address: AddressLike): Promise<Zone> {\n        const address: string | Promise<string> = this._getAddress(_address);\n        return toZone((await address).slice(0, 4));\n    }\n    /**\n     * Returns the signer connected to `provider`.\n     *\n     * This may throw, for example, a Signer connected over a Socket or to a specific instance of a node may not be\n     * transferrable.\n     *\n     * @param {Provider} provider - The provider to connect to.\n     * @returns {Signer} The connected signer.\n     */\n    abstract connect(provider: null | Provider): Signer;\n\n    async getNonce(blockTag?: BlockTag): Promise<number> {\n        return checkProvider(this, 'getTransactionCount').getTransactionCount(await this.getAddress(), blockTag);\n    }\n\n    async populateCall(tx: TransactionRequest): Promise<TransactionLike> {\n        const pop = await populate(this, tx);\n        return pop;\n    }\n\n    async populateQuaiTransaction(tx: QuaiTransactionRequest): Promise<QuaiTransactionLike> {\n        const provider = checkProvider(this, 'populateTransaction');\n        const zone = await this.zoneFromAddress(tx.from);\n\n        const pop = (await populate(this, tx)) as QuaiTransactionLike;\n\n        if (pop.type == null) {\n            pop.type = getTxType(pop.from ?? null, pop.to ?? null);\n        }\n\n        if (pop.nonce == null || pop.nonce === 0) {\n            pop.nonce = await this.getNonce('pending');\n        }\n\n        // Populate the chain ID\n        const network = await (<Provider>this.provider).getNetwork();\n\n        if (pop.chainId != null && pop.chainId !== 0n) {\n            const chainId = getBigInt(pop.chainId);\n            assertArgument(chainId === network.chainId, 'transaction chainId mismatch', 'tx.chainId', zone);\n        } else {\n            pop.chainId = network.chainId;\n        }\n\n        // Create a base transaction object to be used for gas estimation and access list creation\n        const baseTx: QuaiTransactionLike = {\n            chainId: pop.chainId,\n            type: pop.type,\n            from: pop.from,\n            nonce: pop.nonce,\n        };\n        if (pop.to) baseTx.to = pop.to;\n        if (pop.data) baseTx.data = pop.data;\n        if (pop.value) baseTx.value = pop.value;\n\n        if (pop.gasLimit == null || pop.gasLimit === 0n) {\n            if (pop.type == 0) {\n                pop.gasLimit = await this.estimateGas(baseTx);\n            } else {\n                //Special cases for type 2 tx to bypass address out of scope in the node\n                baseTx.to = '0x0000000000000000000000000000000000000000';\n                pop.gasLimit = getBigInt(2 * Number(await this.estimateGas(baseTx)));\n                baseTx.to = pop.to;\n            }\n        }\n\n        if (pop.gasPrice == null || pop.minerTip == null) {\n            const feeData = await provider.getFeeData(zone, true);\n\n            if (pop.gasPrice == null) {\n                pop.gasPrice = feeData.gasPrice;\n            }\n            if (pop.minerTip == null) {\n                pop.minerTip = feeData.minerTip || 10n;\n            }\n        }\n        if (pop.data) {\n            if (tx.accessList) {\n                pop.accessList = tx.accessList;\n            } else {\n                pop.accessList = await this.createAccessList(baseTx as QuaiTransactionRequest);\n            }\n        }\n        //@TOOD: Don't await all over the place; save them up for\n        // the end for better batching\n        return await resolveProperties(pop);\n    }\n\n    async estimateGas(tx: TransactionRequest): Promise<bigint> {\n        return checkProvider(this, 'estimateGas').estimateGas(await this.populateCall(tx));\n    }\n\n    async createAccessList(tx: QuaiTransactionRequest): Promise<AccessList> {\n        return checkProvider(this, 'createAccessList').createAccessList(\n            (await this.populateCall(tx)) as QuaiTransactionRequest,\n        );\n    }\n\n    async call(tx: TransactionRequest): Promise<string> {\n        return checkProvider(this, 'call').call(await this.populateCall(tx));\n    }\n\n    async sendTransaction(tx: TransactionRequest): Promise<TransactionResponse> {\n        const provider = checkProvider(this, 'sendTransaction');\n        const zone = await this.zoneFromAddress(addressFromTransactionRequest(tx));\n        const pop = await this.populateQuaiTransaction(tx as QuaiTransactionRequest);\n        const txObj = QuaiTransaction.from(pop);\n\n        const sender = await this.getAddress();\n        const signedTx = await this.signTransaction(txObj);\n        return await provider.broadcastTransaction(zone, signedTx, sender);\n    }\n\n    abstract signTransaction(tx: TransactionRequest): Promise<string>;\n    abstract signMessage(message: string | Uint8Array): Promise<string>;\n    abstract signTypedData(\n        domain: TypedDataDomain,\n        types: Record<string, Array<TypedDataField>>,\n        value: Record<string, any>,\n    ): Promise<string>;\n}\n\n/**\n * A **VoidSigner** is a class deisgned to allow an address to be used in any API which accepts a Signer, but for which\n * there are no credentials available to perform any actual signing.\n *\n * This for example allow impersonating an account for the purpose of static calls or estimating gas, but does not allow\n * sending transactions.\n *\n * @category Signers\n */\nexport class VoidSigner extends AbstractSigner {\n    /**\n     * The signer address.\n     */\n    readonly address!: string;\n\n    /**\n     * Creates a new **VoidSigner** with `address` attached to `provider`.\n     */\n    constructor(address: string, provider?: null | Provider) {\n        super(provider);\n        defineProperties<VoidSigner>(this, { address });\n    }\n\n    async getAddress(): Promise<string> {\n        return this.address;\n    }\n\n    connect(provider: null | Provider): VoidSigner {\n        return new VoidSigner(this.address, provider);\n    }\n\n    #throwUnsupported(suffix: string, operation: string): never {\n        assert(false, `VoidSigner cannot sign ${suffix}`, 'UNSUPPORTED_OPERATION', { operation });\n    }\n\n    // TODO: `domain`, `types` and `value` are not used, remove?\n    // TODO: this function only throws, remove?\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async signTransaction(tx: TransactionRequest): Promise<string> {\n        this.#throwUnsupported('transactions', 'signTransaction');\n    }\n\n    // TODO: `domain`, `types` and `value` are not used, remove?\n    // TODO: this function only throws, remove?\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async signMessage(message: string | Uint8Array): Promise<string> {\n        this.#throwUnsupported('messages', 'signMessage');\n    }\n\n    // TODO: `domain`, `types` and `value` are not used, remove?\n    // TODO: this function only throws, remove?\n    async signTypedData(\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        domain: TypedDataDomain,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        types: Record<string, Array<TypedDataField>>,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        value: Record<string, any>,\n    ): Promise<string> {\n        this.#throwUnsupported('typed-data', 'signTypedData');\n    }\n}\n","/**\n * One of the most common ways to interact with the blockchain is by a node running a JSON-RPC interface which can be\n * connected to, based on the transport, using:\n *\n * - HTTP or HTTPS - {@link JsonRpcProvider | **JsonRpcProvider**}\n * - WebSocket - {@link WebSocketProvider | **WebSocketProvider**}\n * - IPC - {@link IpcSocketProvider | **IpcSocketProvider**}\n */\n\n// @TODO:\n// - Add the batching API\n\n// https://playground.open-rpc.org/?schemaUrl=https://raw.githubusercontent.com/ethereum/eth1.0-apis/assembled-spec/openrpc.json&uiSchema%5BappBar%5D%5Bui:splitView%5D=true&uiSchema%5BappBar%5D%5Bui:input%5D=false&uiSchema%5BappBar%5D%5Bui:examplesDropdown%5D=false\n\nimport { AbiCoder } from '../abi/index.js';\nimport { getAddress, resolveAddress } from '../address/index.js';\nimport { accessListify, QuaiTransactionLike } from '../transaction/index.js';\nimport {\n    getBigInt,\n    hexlify,\n    isHexString,\n    toQuantity,\n    makeError,\n    assert,\n    assertArgument,\n    isError,\n    FetchRequest,\n    defineProperties,\n    resolveProperties,\n} from '../utils/index.js';\n\nimport { AbstractProvider, UnmanagedSubscriber } from './abstract-provider.js';\nimport { Network } from './network.js';\nimport { FilterIdEventSubscriber, FilterIdPendingSubscriber } from './subscriber-filterid.js';\n\nimport type { TransactionLike, TxInput, TxOutput } from '../transaction/index.js';\n\nimport type { PerformActionRequest, Subscriber, Subscription } from './abstract-provider.js';\nimport type { Networkish } from './network.js';\nimport type { Provider, QuaiTransactionRequest, TransactionRequest, TransactionResponse } from './provider.js';\nimport { Shard, toShard, toZone, Zone } from '../constants/index.js';\nimport { TypedDataDomain, TypedDataEncoder, TypedDataField } from '../hash/index.js';\nimport { AbstractSigner, Signer } from '../signers/index.js';\nimport { toUtf8Bytes } from '../encoding/index.js';\nimport { addressFromTransactionRequest, zoneFromHash } from './provider.js';\n\ntype Timer = ReturnType<typeof setTimeout>;\n\nconst Primitive = 'bigint,boolean,function,number,string,symbol'.split(/,/g);\n\n/**\n * Deeply copies a value.\n *\n * @ignore\n * @param {T} value - The value to copy.\n * @returns {T} The copied value.\n */\nfunction deepCopy<T = any>(value: T): T {\n    if (value == null || Primitive.indexOf(typeof value) >= 0) {\n        return value;\n    }\n\n    // Keep any Addressable\n    if (typeof (<any>value).getAddress === 'function') {\n        return value;\n    }\n\n    if (Array.isArray(value)) {\n        return <any>value.map(deepCopy);\n    }\n\n    if (typeof value === 'object') {\n        return Object.keys(value).reduce(\n            (accum, key) => {\n                accum[key] = (<any>value)[key];\n                return accum;\n            },\n            <any>{},\n        );\n    }\n\n    throw new Error(`should not happen: ${value} (${typeof value})`);\n}\n\n/**\n * Stalls execution for a specified duration.\n *\n * @ignore\n * @param {number} duration - The duration to stall in milliseconds.\n * @returns {Promise<void>} A promise that resolves after the duration.\n */\nfunction stall(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\n/**\n * A JSON-RPC payload, which are sent to a JSON-RPC server.\n *\n * @category Providers\n */\nexport type JsonRpcPayload = {\n    /**\n     * The JSON-RPC request ID.\n     */\n    id: number;\n\n    /**\n     * The JSON-RPC request method.\n     */\n    method: string;\n\n    /**\n     * The JSON-RPC request parameters.\n     */\n    params: Array<any> | Record<string, any>;\n\n    /**\n     * A required constant in the JSON-RPC specification.\n     */\n    jsonrpc: '2.0';\n};\n\n/**\n * A JSON-RPC result, which are returned on success from a JSON-RPC server.\n *\n * @category Providers\n */\nexport type JsonRpcResult = {\n    /**\n     * The response ID to match it to the relevant request.\n     */\n    id: number;\n\n    /**\n     * The response result.\n     */\n    result: any;\n};\n\n/**\n * A JSON-RPC error, which are returned on failure from a JSON-RPC server.\n *\n * @category Providers\n */\nexport type JsonRpcError = {\n    /**\n     * The response ID to match it to the relevant request.\n     */\n    id: number;\n\n    /**\n     * The response error.\n     */\n    error: {\n        code: number;\n        message?: string;\n        data?: any;\n        shard?: Shard;\n    };\n};\n\n/**\n * When subscribing to the `\"debug\"` event, the Listener will receive this object as the first parameter.\n *\n * @category Providers\n */\nexport type DebugEventJsonRpcApiProvider =\n    | {\n          action: 'sendRpcPayload';\n          payload: JsonRpcPayload | Array<JsonRpcPayload>;\n      }\n    | {\n          action: 'receiveRpcResult';\n          result: Array<JsonRpcResult | JsonRpcError>;\n      }\n    | {\n          action: 'receiveRpcError';\n          error: Error;\n      };\n\n/**\n * Options for configuring a {@link JsonRpcApiProvider | **JsonRpcApiProvider**}. Much of this is targeted towards\n * sub-classes, which often will not expose any of these options to their consumers.\n *\n * **`polling`** - use the polling strategy is used immediately for events; otherwise, attempt to use filters and fall\n * back onto polling (default: `false`)\n *\n * **`staticNetwork`** - do not request chain ID on requests to validate the underlying chain has not changed (default:\n * `null`)\n *\n * This should **ONLY** be used if it is **certain** that the network cannot change, such as when using INFURA (since\n * the URL dictates the network). If the network is assumed static and it does change, this can have tragic\n * consequences. For example, this **CANNOT** be used with MetaMask, since the used can select a new network from the\n * drop-down at any time.\n *\n * **`batchStallTime`** - how long (ms) to aggregate requests into a single batch. `0` indicates batching will only\n * encompass the current event loop. If `batchMaxCount = 1`, this is ignored. (default: `10`)\n *\n * **`batchMaxSize`** - target maximum size (bytes) to allow per batch request (default: 1Mb)\n *\n * **`batchMaxCount`** - maximum number of requests to allow in a batch. If `batchMaxCount = 1`, then batching is\n * disabled. (default: `100`)\n *\n * **`cacheTimeout`** - passed as {@link AbstractProviderOptions | **AbstractProviderOptions**}.\n *\n * @category Providers\n */\nexport type JsonRpcApiProviderOptions = {\n    staticNetwork?: null | Network | boolean;\n    batchStallTime?: number;\n    batchMaxSize?: number;\n    batchMaxCount?: number;\n\n    cacheTimeout?: number;\n    usePathing?: boolean;\n};\n\nconst defaultOptions = {\n    staticNetwork: null,\n\n    batchStallTime: 10, // 10ms\n    batchMaxSize: 1 << 20, // 1Mb\n    batchMaxCount: 100, // 100 requests\n\n    cacheTimeout: 250,\n    usePathing: true,\n};\n\nexport interface AbstractJsonRpcTransactionRequest {\n    /**\n     * The chain ID the transaction is valid on.\n     */\n    chainId?: string;\n\n    /**\n     * The [EIP-2718](https://eips.ethereum.org/EIPS/eip-2718) transaction type.\n     */\n    type?: string;\n}\n\nexport type JsonRpcTransactionRequest = QiJsonRpcTransactionRequest | QuaiJsonRpcTransactionRequest;\n\nexport interface QiJsonRpcTransactionRequest extends AbstractJsonRpcTransactionRequest {\n    txInputs?: Array<TxInput>;\n\n    txOutputs?: Array<TxOutput>;\n}\n\n/**\n * A **JsonRpcTransactionRequest** is formatted as needed by the JSON-RPC Ethereum API specification.\n *\n * @category Providers\n */\nexport interface QuaiJsonRpcTransactionRequest extends AbstractJsonRpcTransactionRequest {\n    /**\n     * The sender address to use when signing.\n     */\n    from?: string;\n\n    /**\n     * The target address.\n     */\n    to?: string;\n\n    /**\n     * The transaction data.\n     */\n    data?: string;\n\n    /**\n     * The maximum amount of gas to allow a transaction to consume.\n     *\n     * In most other places in quais, this is called `gasLimit` which differs from the JSON-RPC Ethereum API\n     * specification.\n     */\n    gas?: string;\n\n    /**\n     * The maximum fee per gas for [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559) transactions.\n     */\n    gasPrice?: string;\n\n    /**\n     * The maximum priority fee per gas for [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559) transactions.\n     */\n    minerTip?: string;\n\n    /**\n     * The nonce for the transaction.\n     */\n    nonce?: string;\n\n    /**\n     * The transaction value (in wei).\n     */\n    value?: string;\n\n    /**\n     * The transaction access list.\n     */\n    accessList?: Array<{ address: string; storageKeys: Array<string> }>;\n}\n\n// @TODO: Unchecked Signers\n\n/**\n * A signer that uses JSON-RPC to sign transactions and messages.\n *\n * @category Providers\n */\nexport class JsonRpcSigner extends AbstractSigner<JsonRpcApiProvider> {\n    address!: string;\n\n    /**\n     * Creates a new JsonRpcSigner instance.\n     *\n     * @param {JsonRpcApiProvider<any>} provider - The JSON-RPC provider.\n     * @param {string} address - The address of the signer.\n     */\n    constructor(provider: JsonRpcApiProvider<any>, address: string) {\n        super(provider);\n        address = getAddress(address);\n        defineProperties<JsonRpcSigner>(this, { address });\n    }\n\n    /**\n     * Connects the signer to a provider.\n     *\n     * @param {null | Provider} provider - The provider to connect to.\n     * @returns {Signer} The connected signer.\n     * @throws {Error} If the signer cannot be reconnected.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    connect(provider: null | Provider): Signer {\n        assert(false, 'cannot reconnect JsonRpcSigner', 'UNSUPPORTED_OPERATION', {\n            operation: 'signer.connect',\n        });\n    }\n\n    /**\n     * Gets the address of the signer.\n     *\n     * @returns {Promise<string>} The address of the signer.\n     */\n    async getAddress(): Promise<string> {\n        return this.address;\n    }\n\n    /**\n     * Populates a Quai transaction.\n     *\n     * @ignore\n     * @param {QuaiTransactionRequest} tx - The transaction request.\n     * @returns {Promise<QuaiTransactionLike>} The populated transaction.\n     */\n    async populateQuaiTransaction(tx: QuaiTransactionRequest): Promise<QuaiTransactionLike> {\n        return (await this.populateCall(tx)) as QuaiTransactionLike;\n    }\n\n    /**\n     * Sends an unchecked transaction.\n     *\n     * @ignore\n     * @param {TransactionRequest} _tx - The transaction request.\n     * @returns {Promise<string>} The transaction hash.\n     */\n    async sendUncheckedTransaction(_tx: TransactionRequest): Promise<string> {\n        const tx = deepCopy(_tx);\n\n        const promises: Array<Promise<void>> = [];\n\n        if ('from' in tx) {\n            // Make sure the from matches the sender\n            if (tx.from) {\n                const _from = tx.from;\n                promises.push(\n                    (async () => {\n                        const from = await resolveAddress(_from);\n                        assertArgument(\n                            from != null && from.toLowerCase() === this.address.toLowerCase(),\n                            'from address mismatch',\n                            'transaction',\n                            _tx,\n                        );\n                        tx.from = from;\n                    })(),\n                );\n            } else {\n                tx.from = this.address;\n            }\n\n            // The JSON-RPC for quai_sendTransaction uses 90000 gas; if the user\n            // wishes to use this, it is easy to specify explicitly, otherwise\n            // we look it up for them.\n            if (tx.gasLimit == null) {\n                promises.push(\n                    (async () => {\n                        tx.gasLimit = await this.provider.estimateGas({ ...tx, from: this.address });\n                    })(),\n                );\n            }\n\n            // The address may be an ENS name or Addressable\n            if (tx.to != null) {\n                const _to = tx.to;\n                promises.push(\n                    (async () => {\n                        tx.to = await resolveAddress(_to);\n                    })(),\n                );\n            }\n        }\n\n        // Wait until all of our properties are filled in\n        if (promises.length) {\n            await Promise.all(promises);\n        }\n        const hexTx = this.provider.getRpcTransaction(tx);\n\n        return this.provider.send('quai_sendTransaction', [hexTx]);\n    }\n\n    /**\n     * Sends a transaction.\n     *\n     * @param {TransactionRequest} tx - The transaction request.\n     * @returns {Promise<TransactionResponse>} The transaction response.\n     * @throws {Error} If the transaction cannot be sent.\n     */\n    async sendTransaction(tx: TransactionRequest): Promise<TransactionResponse> {\n        const zone = await this.zoneFromAddress(addressFromTransactionRequest(tx));\n        // This cannot be mined any earlier than any recent block\n        const blockNumber = await this.provider.getBlockNumber(toShard(zone));\n        // Send the transaction\n        const hash = await this.sendUncheckedTransaction(tx);\n\n        // Unfortunately, JSON-RPC only provides and opaque transaction hash\n        // for a response, and we need the actual transaction, so we poll\n        // for it; it should show up very quickly\n        return await new Promise((resolve, reject) => {\n            const timeouts = [1000, 100];\n            let invalids = 0;\n\n            const checkTx = async () => {\n                try {\n                    // Try getting the transaction\n                    const tx = await this.provider.getTransaction(hash);\n\n                    if (tx != null) {\n                        resolve(tx.replaceableTransaction(blockNumber) as TransactionResponse);\n                        return;\n                    }\n                } catch (error) {\n                    // If we were cancelled: stop polling.\n                    // If the data is bad: the node returns bad transactions\n                    // If the network changed: calling again will also fail\n                    // If unsupported: likely destroyed\n                    if (\n                        isError(error, 'CANCELLED') ||\n                        isError(error, 'BAD_DATA') ||\n                        isError(error, 'NETWORK_ERROR') ||\n                        isError(error, 'UNSUPPORTED_OPERATION')\n                    ) {\n                        if (error.info == null) {\n                            error.info = {};\n                        }\n                        error.info.sendTransactionHash = hash;\n\n                        reject(error);\n                        return;\n                    }\n\n                    // Stop-gap for misbehaving backends; see #4513\n                    if (isError(error, 'INVALID_ARGUMENT')) {\n                        invalids++;\n                        if (error.info == null) {\n                            error.info = {};\n                        }\n                        error.info.sendTransactionHash = hash;\n                        if (invalids > 10) {\n                            reject(error);\n                            return;\n                        }\n                    }\n\n                    // Notify anyone that cares; but we will try again, since\n                    // it is likely an intermittent service error\n                    this.provider.emit(\n                        'error',\n                        zoneFromHash(hash),\n                        makeError('failed to fetch transation after sending (will try again)', 'UNKNOWN_ERROR', {\n                            error,\n                        }),\n                    );\n                }\n\n                // Wait another 4 seconds\n                this.provider._setTimeout(() => {\n                    checkTx();\n                }, timeouts.pop() || 4000);\n            };\n            checkTx();\n        });\n    }\n\n    /**\n     * Signs a transaction.\n     *\n     * @param {TransactionRequest} _tx - The transaction request.\n     * @returns {Promise<string>} The signed transaction.\n     * @throws {Error} If the transaction cannot be signed.\n     */\n    async signTransaction(_tx: TransactionRequest): Promise<string> {\n        const tx = deepCopy(_tx);\n\n        // QuaiTransactionRequest\n        if ('from' in tx) {\n            if (tx.from) {\n                const from = await resolveAddress(tx.from);\n                assertArgument(\n                    from != null && from.toLowerCase() === this.address.toLowerCase(),\n                    'from address mismatch',\n                    'transaction',\n                    _tx,\n                );\n                tx.from = from;\n            } else {\n                tx.from = this.address;\n            }\n        } else {\n            throw new Error('No QI signing implementation in provider-jsonrpc');\n        }\n        const hexTx = this.provider.getRpcTransaction(tx);\n        return await this.provider.send('quai_signTransaction', [hexTx]);\n    }\n\n    /**\n     * Signs a message.\n     *\n     * @param {string | Uint8Array} _message - The message to sign.\n     * @returns {Promise<string>} The signed message.\n     */\n    async signMessage(_message: string | Uint8Array): Promise<string> {\n        const message = typeof _message === 'string' ? toUtf8Bytes(_message) : _message;\n        return await this.provider.send('personal_sign', [hexlify(message), this.address.toLowerCase()]);\n    }\n\n    /**\n     * Signs typed data.\n     *\n     * @param {TypedDataDomain} domain - The domain of the typed data.\n     * @param {Record<string, TypedDataField[]>} types - The types of the typed data.\n     * @param {Record<string, any>} _value - The value of the typed data.\n     * @returns {Promise<string>} The signed typed data.\n     */\n    async signTypedData(\n        domain: TypedDataDomain,\n        types: Record<string, Array<TypedDataField>>,\n        _value: Record<string, any>,\n    ): Promise<string> {\n        const value = deepCopy(_value);\n\n        return await this.provider.send('quai_signTypedData_v4', [\n            this.address.toLowerCase(),\n            JSON.stringify(TypedDataEncoder.getPayload(domain, types, value)),\n        ]);\n    }\n\n    /**\n     * Unlocks the account.\n     *\n     * @param {string} password - The password to unlock the account.\n     * @returns {Promise<boolean>} True if the account is unlocked, false otherwise.\n     */\n    async unlock(password: string): Promise<boolean> {\n        return this.provider.send('personal_unlockAccount', [this.address.toLowerCase(), password, null]);\n    }\n\n    /**\n     * Signs a message using the legacy method.\n     *\n     * @ignore\n     * @param {string | Uint8Array} _message - The message to sign.\n     * @returns {Promise<string>} The signed message.\n     */\n    async _legacySignMessage(_message: string | Uint8Array): Promise<string> {\n        const message = typeof _message === 'string' ? toUtf8Bytes(_message) : _message;\n        return await this.provider.send('quai_sign', [this.address.toLowerCase(), hexlify(message)]);\n    }\n}\n\ntype ResolveFunc = (result: JsonRpcResult) => void;\ntype RejectFunc = (error: Error) => void;\n\ntype Payload = { payload: JsonRpcPayload; resolve: ResolveFunc; reject: RejectFunc; shard?: Shard; now?: boolean };\n\n/**\n * The JsonRpcApiProvider is an abstract class and **MUST** be sub-classed.\n *\n * It provides the base for all JSON-RPC-based Provider interaction.\n *\n * Sub-classing Notes:\n *\n * - A sub-class MUST override _send\n * - A sub-class MUST call the `_start()` method once connected\n *\n * @category Providers\n */\nexport abstract class JsonRpcApiProvider<C = FetchRequest> extends AbstractProvider<C> {\n    #options: Required<JsonRpcApiProviderOptions>;\n\n    // The next ID to use for the JSON-RPC ID field\n    #nextId: number;\n\n    // Payloads are queued and triggered in batches using the drainTimer\n    #payloads: Array<Payload>;\n    #drainTimer: null | Timer;\n\n    #notReady: null | {\n        promise: Promise<void>;\n        resolve: null | ((v: void) => void);\n    };\n\n    #network: null | Network;\n    #pendingDetectNetwork: null | Promise<Network>;\n\n    /**\n     * Schedules the draining of the payload queue.\n     *\n     * @ignore\n     */\n    #scheduleDrain(): void {\n        if (this.#drainTimer) {\n            return;\n        }\n\n        // If we aren't using batching, no harm in sending it immediately\n        const stallTime = this._getOption('batchMaxCount') === 1 ? 0 : this._getOption('batchStallTime');\n\n        this.#drainTimer = setTimeout(() => {\n            this.#drainTimer = null;\n\n            const payloads = this.#payloads;\n            this.#payloads = [];\n\n            while (payloads.length) {\n                // Create payload batches that satisfy our batch constraints\n                const batch = [<Payload>payloads.shift()];\n                while (payloads.length) {\n                    if (batch.length === this.#options.batchMaxCount) {\n                        break;\n                    }\n                    batch.push(<Payload>payloads.shift());\n                    const bytes = JSON.stringify(batch.map((p) => p.payload));\n                    if (bytes.length > this.#options.batchMaxSize) {\n                        payloads.unshift(<Payload>batch.pop());\n                        break;\n                    }\n                }\n\n                // Process the result to each payload\n                (async () => {\n                    const payloadMap: Map<string | undefined, Array<JsonRpcPayload>> = new Map();\n                    const nowPayloadMap: Map<string | undefined, Array<JsonRpcPayload>> = new Map();\n                    for (let i = 0; i < batch.length; i++) {\n                        if (batch[i].now) {\n                            if (!nowPayloadMap.has(batch[i].shard)) {\n                                if (batch[i].payload != null) {\n                                    nowPayloadMap.set(batch[i].shard, [batch[i].payload]);\n                                }\n                            } else {\n                                nowPayloadMap.get(batch[i].shard)?.push(batch[i].payload);\n                            }\n                        } else {\n                            if (!payloadMap.has(batch[i].shard)) {\n                                if (batch[i].payload != null) {\n                                    payloadMap.set(batch[i].shard, [batch[i].payload]);\n                                }\n                            } else {\n                                payloadMap.get(batch[i].shard)?.push(batch[i].payload);\n                            }\n                        }\n                    }\n\n                    const rawResult: Array<Array<JsonRpcResult | JsonRpcError>> = [];\n                    const processPayloads = async (key: string | undefined, value: JsonRpcPayload[], now?: boolean) => {\n                        const payload = value.length === 1 ? value[0] : value;\n                        const shard = key ? toShard(key) : Shard.Prime;\n                        const zone = shard.length < 4 ? undefined : toZone(shard);\n\n                        this.emit('debug', zone, { action: 'sendRpcPayload', payload });\n\n                        rawResult.push(await this._send(payload, shard, now));\n\n                        this.emit('debug', zone, { action: 'receiveRpcResult', payload });\n                    };\n                    await Promise.all(\n                        Array.from(nowPayloadMap)\n                            .map(async ([key, value]) => {\n                                await processPayloads(key, value, true);\n                            })\n                            .concat(\n                                Array.from(payloadMap).map(async ([key, value]) => {\n                                    await processPayloads(key, value);\n                                }),\n                            ),\n                    );\n\n                    const result: Array<JsonRpcResult | JsonRpcError> = rawResult.flat();\n\n                    let lastZone: Zone | undefined;\n                    try {\n                        // Process results in batch order\n                        for (const { resolve, reject, payload, shard } of batch) {\n                            if (this.destroyed) {\n                                reject(\n                                    makeError('provider destroyed; cancelled request', 'UNSUPPORTED_OPERATION', {\n                                        operation: payload.method,\n                                    }),\n                                );\n                                continue;\n                            }\n\n                            if (shard) {\n                                lastZone = shard.length < 4 ? undefined : toZone(shard);\n                            } else {\n                                lastZone = undefined;\n                            }\n\n                            // Find the matching result\n                            const resp = result.filter((r) => r.id === payload.id)[0];\n                            // No result; the node failed us in unexpected ways\n                            if (resp == null) {\n                                const error = makeError('missing response for request', 'BAD_DATA', {\n                                    value: result,\n                                    info: { payload },\n                                });\n                                this.emit('error', lastZone, error);\n                                reject(error);\n                                continue;\n                            }\n\n                            // The response is an error\n                            if ('error' in resp) {\n                                reject(this.getRpcError(payload, resp, shard));\n                                continue;\n                            }\n\n                            // All good; send the result\n                            resolve(resp.result);\n                        }\n                    } catch (error: any) {\n                        this.emit('debug', lastZone, { action: 'receiveRpcError', error });\n\n                        for (const { reject } of batch) {\n                            // @TODO: augment the error with the payload\n                            reject(error);\n                        }\n                    }\n                })();\n            }\n        }, stallTime);\n    }\n\n    /**\n     * Creates a new JsonRpcApiProvider instance.\n     *\n     * @param {Networkish} [network] - The network to connect to.\n     * @param {JsonRpcApiProviderOptions} [options] - The options for the provider.\n     */\n    constructor(network?: Networkish, options?: JsonRpcApiProviderOptions) {\n        super(network, options);\n\n        this.#nextId = 1;\n        this.#options = Object.assign({}, defaultOptions, options || {});\n\n        this.#payloads = [];\n        this.#drainTimer = null;\n\n        this.#network = null;\n        this.#pendingDetectNetwork = null;\n\n        {\n            let resolve: null | ((value: void) => void) = null;\n            const promise = new Promise((_resolve: (value: void) => void) => {\n                resolve = _resolve;\n            });\n            this.#notReady = { promise, resolve };\n        }\n\n        const staticNetwork = this._getOption('staticNetwork');\n        if (typeof staticNetwork === 'boolean') {\n            assertArgument(\n                !staticNetwork || network !== 'any',\n                \"staticNetwork cannot be used on special network 'any'\",\n                'options',\n                options,\n            );\n            if (staticNetwork && network != null) {\n                this.#network = Network.from(network);\n            }\n        } else if (staticNetwork) {\n            // Make sure any static network is compatbile with the provided netwrok\n            assertArgument(\n                network == null || staticNetwork.matches(network),\n                'staticNetwork MUST match network object',\n                'options',\n                options,\n            );\n            this.#network = staticNetwork;\n        }\n    }\n\n    /**\n     * Returns the value associated with the option `key`.\n     *\n     * Sub-classes can use this to inquire about configuration options.\n     *\n     * @ignore\n     * @param {keyof JsonRpcApiProviderOptions} key - The option key.\n     * @returns {JsonRpcApiProviderOptions[key]} The option value.\n     */\n    _getOption<K extends keyof JsonRpcApiProviderOptions>(key: K): JsonRpcApiProviderOptions[K] {\n        return this.#options[key];\n    }\n\n    /**\n     * Gets the {@link Network | **Network**} this provider has committed to. On each call, the network is detected, and\n     * if it has changed, the call will reject.\n     *\n     * @ignore\n     * @returns {Network} The network.\n     * @throws {Error} If the network is not available yet.\n     */\n    get _network(): Network {\n        assert(this.#network, 'network is not available yet', 'NETWORK_ERROR');\n        return this.#network;\n    }\n\n    /**\n     * Sends a JSON-RPC `payload` (or a batch) to the underlying channel.\n     *\n     * Sub-classes **MUST** override this.\n     *\n     * @ignore\n     * @param {JsonRpcPayload | JsonRpcPayload[]} payload - The JSON-RPC payload.\n     * @param {Shard} [shard] - The shard to send the request to.\n     * @param {boolean} [now] - Whether to send the request immediately.\n     * @returns {Promise<(JsonRpcResult | JsonRpcError)[]>} The JSON-RPC result.\n     * @throws {Error} If the request fails.\n     */\n    abstract _send(\n        payload: JsonRpcPayload | Array<JsonRpcPayload>,\n        shard?: Shard,\n        now?: boolean,\n    ): Promise<Array<JsonRpcResult | JsonRpcError>>;\n\n    /**\n     * Resolves to the non-normalized value by performing `req`.\n     *\n     * Sub-classes may override this to modify behavior of actions, and should generally call `super._perform` as a\n     * fallback.\n     *\n     * @ignore\n     * @param {PerformActionRequest} req - The request to perform.\n     * @returns {Promise<any>} The result of the request.\n     * @throws {Error} If the request fails.\n     */\n    async _perform(req: PerformActionRequest): Promise<any> {\n        // Legacy networks do not like the type field being passed along (which\n        // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n        if (req.method !== 'getRunningLocations') {\n            await this.initPromise;\n        }\n        if (req.method === 'call' || req.method === 'estimateGas') {\n            const tx = req.transaction;\n            if (tx && tx.type != null && getBigInt(tx.type)) {\n                // If there are no EIP-1559 properties, it might be non-EIP-a559\n                if (tx.gasPrice == null && tx.minerTip == null) {\n                    const feeData = await this.getFeeData(req.zone, tx.type === 1);\n                    if (feeData.gasPrice == null && feeData.minerTip == null) {\n                        // Network doesn't know about EIP-1559 (and hence type)\n                        req = Object.assign({}, req, {\n                            transaction: Object.assign({}, tx, { type: undefined }),\n                        });\n                    }\n                }\n            }\n        }\n\n        const request = this.getRpcRequest(req);\n\n        if (request != null) {\n            const shard = 'shard' in req ? req.shard : 'zone' in req ? toShard(req.zone!) : undefined;\n            if (req.method === 'getRunningLocations') {\n                return await this.send(request.method, request.args, shard, req.now);\n            } else {\n                return await this.send(request.method, request.args, shard);\n            }\n        }\n\n        return super._perform(req);\n    }\n\n    /**\n     * Sub-classes may override this; it detects the _actual_ network that we are **currently** connected to.\n     *\n     * Keep in mind that {@link JsonRpcApiProvider.send | **send**} may only be used once\n     * {@link JsonRpcApiProvider.ready | **ready**}, otherwise the _send primitive must be used instead.\n     *\n     * @ignore\n     * @returns {Promise<Network>} The detected network.\n     * @throws {Error} If network detection fails.\n     */\n    async _detectNetwork(): Promise<Network> {\n        const network = this._getOption('staticNetwork');\n        if (network) {\n            if (network === true) {\n                if (this.#network) {\n                    return this.#network;\n                }\n            } else {\n                return network;\n            }\n        }\n\n        if (this.#pendingDetectNetwork) {\n            return await this.#pendingDetectNetwork;\n        }\n\n        // If we are ready, use `send`, which enabled requests to be batched\n        if (this.ready) {\n            this.#pendingDetectNetwork = (async () => {\n                try {\n                    const result = Network.from(getBigInt(await this.send('quai_chainId', [])));\n                    this.#pendingDetectNetwork = null;\n                    return result;\n                } catch (error) {\n                    this.#pendingDetectNetwork = null;\n                    throw error;\n                }\n            })();\n            return await this.#pendingDetectNetwork;\n        }\n\n        // We are not ready yet; use the primitive _send\n        this.#pendingDetectNetwork = (async () => {\n            const payload: JsonRpcPayload = {\n                id: this.#nextId++,\n                method: 'quai_chainId',\n                params: [],\n                jsonrpc: '2.0',\n            };\n\n            this.emit('debug', undefined, { action: 'sendRpcPayload', payload });\n\n            let result: JsonRpcResult | JsonRpcError;\n            try {\n                result = (await this._send(payload))[0];\n                this.#pendingDetectNetwork = null;\n            } catch (error) {\n                this.#pendingDetectNetwork = null;\n                this.emit('debug', undefined, { action: 'receiveRpcError', error });\n                throw error;\n            }\n\n            this.emit('debug', undefined, { action: 'receiveRpcResult', result });\n\n            if ('result' in result) {\n                return Network.from(getBigInt(result.result));\n            }\n\n            throw this.getRpcError(payload, result);\n        })();\n\n        return await this.#pendingDetectNetwork;\n    }\n\n    /**\n     * Sub-classes **MUST** call this. Until {@link JsonRpcApiProvider._start | **_start**} has been called, no calls\n     * will be passed to {@link JsonRpcApiProvider._send | **_send**} from {@link JsonRpcApiProvider.send | **send**} . If\n     * it is overridden, then `super._start()` **MUST** be called.\n     *\n     * Calling it multiple times is safe and has no effect.\n     *\n     * @ignore\n     */\n    _start() {\n        this.attemptConnect = true;\n        if (this.#notReady == null || this.#notReady.resolve == null) {\n            return;\n        }\n\n        this.#notReady.resolve();\n        this.#notReady = null;\n\n        (async () => {\n            let retries = 0;\n            const maxRetries = 5;\n            while (this.#network == null && !this.destroyed && retries < maxRetries) {\n                try {\n                    this.#network = await this._detectNetwork();\n                } catch (error) {\n                    if (this.destroyed) {\n                        break;\n                    }\n                    console.log(\n                        'JsonRpcProvider failed to detect network and cannot start up; retrying (perhaps the URL is wrong or the node is not started)',\n                    );\n                    this.emit(\n                        'error',\n                        undefined,\n                        makeError('failed to bootstrap network detection', 'NETWORK_ERROR', {\n                            event: 'initial-network-discovery',\n                            info: { error },\n                        }),\n                    );\n                    await stall(1000 * Math.pow(2, retries));\n                    retries++;\n                }\n            }\n            if (retries >= maxRetries) {\n                console.log('JsonRpcProvider failed to detect network and cannot start up; retry limit reached');\n                makeError('failed to bootstrap network detection', 'NETWORK_ERROR', {\n                    event: 'initial-network-discovery',\n                    info: { retries },\n                });\n            }\n\n            // Start dispatching requests\n            this.#scheduleDrain();\n        })();\n    }\n\n    /**\n     * Resolves once the {@link JsonRpcApiProvider._start | **_start**} has been called. This can be used in sub-classes\n     * to defer sending data until the connection has been established.\n     *\n     * @ignore\n     * @returns {Promise<void>} A promise that resolves once the provider is ready.\n     */\n    async _waitUntilReady(): Promise<void> {\n        if (this._initFailed) {\n            console.log('init failed');\n            throw new Error('Provider failed to initialize on creation. Run initialize or create a new provider.');\n        }\n\n        // Flag to control the loop in setAttemptConnect\n        let keepAttempting = true;\n\n        // Function to set attemptConnect every 2 seconds\n        const setAttemptConnect = async () => {\n            while (keepAttempting) {\n                this.attemptConnect = true;\n                await new Promise((resolve) => setTimeout(resolve, 2000));\n            }\n        };\n\n        // Start setting attemptConnect in the background\n        setAttemptConnect();\n\n        try {\n            // Wait until initPromise resolves\n            await this.initPromise;\n        } finally {\n            // Stop setting attemptConnect once initPromise resolves\n            keepAttempting = false;\n        }\n    }\n\n    /**\n     * Return a Subscriber that will manage the `sub`.\n     *\n     * Sub-classes may override this to modify the behavior of subscription management.\n     *\n     * @ignore\n     * @param {Subscription} sub - The subscription to manage.\n     * @returns {Subscriber} The subscriber that will manage the subscription.\n     */\n    _getSubscriber(sub: Subscription): Subscriber {\n        // Pending Filters aren't availble via polling\n        if (sub.type === 'pending') {\n            return new FilterIdPendingSubscriber(this, sub.zone!);\n        }\n\n        if (sub.type === 'event') {\n            return new FilterIdEventSubscriber(this, sub.filter);\n        }\n\n        // Orphaned Logs are handled automatically, by the filter, since\n        // logs with removed are emitted by it\n        if (sub.type === 'orphan' && sub.filter.orphan === 'drop-log') {\n            return new UnmanagedSubscriber('orphan');\n        }\n\n        return super._getSubscriber(sub);\n    }\n\n    /**\n     * Returns true only if the {@link JsonRpcApiProvider._start | **_start**} has been called.\n     *\n     * @returns {boolean} True if the provider is ready.\n     */\n    get ready(): boolean {\n        return this.#notReady == null;\n    }\n\n    /**\n     * Returns `tx` as a normalized JSON-RPC transaction request, which has all values hexlified and any numeric values\n     * converted to Quantity values.\n     *\n     * @ignore\n     * @param {TransactionRequest} tx - The transaction to normalize.\n     * @returns {JsonRpcTransactionRequest} The normalized transaction.\n     * @throws {Error} If the transaction is invalid.\n     */\n    getRpcTransaction(tx: TransactionRequest): JsonRpcTransactionRequest {\n        const result: JsonRpcTransactionRequest = {};\n\n        if ('from' in tx || ('to' in tx && 'data' in tx)) {\n            // JSON-RPC now requires numeric values to be \"quantity\" values\n            ['chainId', 'gasLimit', 'gasPrice', 'type', 'gasPrice', 'minerTip', 'nonce', 'value'].forEach((key) => {\n                if ((<any>tx)[key] == null) {\n                    return;\n                }\n                let dstKey = key;\n                if (key === 'gasLimit') {\n                    dstKey = 'gas';\n                }\n                (<any>result)[dstKey] = toQuantity(getBigInt((<any>tx)[key], `tx.${key}`));\n            });\n\n            ['from', 'to', 'data'].forEach((key) => {\n                if ((<any>tx)[key] == null) {\n                    return;\n                }\n                (<any>result)[key] = hexlify((<any>tx)[key]);\n            });\n\n            // Normalize the access list object\n            if ('accessList' in tx && tx.accessList) {\n                (result as QuaiJsonRpcTransactionRequest)['accessList'] = accessListify(tx.accessList);\n            }\n        } else {\n            if ((<any>tx).txInputs != null) {\n                (result as QiJsonRpcTransactionRequest)['txInputs'] = (<any>tx).txInputs.map((input: TxInput) => ({\n                    txhash: hexlify(input.txhash),\n                    index: toQuantity(getBigInt(input.index, `tx.txInputs.${input.index}`)),\n                    pubkey: hexlify(input.pubkey),\n                }));\n            }\n\n            if ((<any>tx).txOutputs != null) {\n                (result as QiJsonRpcTransactionRequest)['txOutputs'] = (<any>tx).txOutputs.map((output: TxOutput) => ({\n                    address: hexlify(output.address),\n                    denomination: toQuantity(getBigInt(output.denomination, `tx.txOutputs.${output.denomination}`)),\n                }));\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Returns the request method and arguments required to perform `req`.\n     *\n     * @ignore\n     * @param {PerformActionRequest} req - The request to perform.\n     * @returns {null | { method: string; args: any[] }} The method and arguments to use.\n     * @throws {Error} If the request is not supported or invalid.\n     */\n    getRpcRequest(req: PerformActionRequest): null | { method: string; args: Array<any> } {\n        switch (req.method) {\n            case 'chainId':\n                return { method: 'quai_chainId', args: [] };\n\n            case 'getBlockNumber':\n                return { method: 'quai_blockNumber', args: [] };\n\n            case 'getGasPrice':\n                return {\n                    method: 'quai_gasPrice',\n                    args: [],\n                };\n\n            case 'getMinerTip':\n                return { method: 'quai_minerTip', args: [] };\n\n            case 'getPendingHeader':\n                return { method: 'quai_getPendingHeader', args: [] };\n\n            case 'getBalance':\n                return {\n                    method: 'quai_getBalance',\n                    args: [req.address, req.blockTag],\n                };\n\n            case 'getLockedBalance':\n                return {\n                    method: 'quai_getLockedBalance',\n                    args: [req.address],\n                };\n\n            case 'getOutpointsByAddress':\n                return {\n                    method: 'quai_getOutpointsByAddress',\n                    args: [req.address],\n                };\n            case 'getTransactionCount':\n                return {\n                    method: 'quai_getTransactionCount',\n                    args: [req.address, req.blockTag],\n                };\n\n            case 'getCode':\n                return {\n                    method: 'quai_getCode',\n                    args: [req.address, req.blockTag],\n                };\n\n            case 'getStorage':\n                return {\n                    method: 'quai_getStorageAt',\n                    args: [req.address, '0x' + req.position.toString(16), req.blockTag],\n                };\n\n            case 'broadcastTransaction':\n                return {\n                    method: 'quai_sendRawTransaction',\n                    args: [req.signedTransaction],\n                };\n\n            case 'getBlock':\n                if ('blockTag' in req) {\n                    return {\n                        method: 'quai_getBlockByNumber',\n                        args: [req.blockTag, !!req.includeTransactions],\n                    };\n                } else if ('blockHash' in req) {\n                    return {\n                        method: 'quai_getBlockByHash',\n                        args: [req.blockHash, !!req.includeTransactions],\n                    };\n                }\n                break;\n\n            case 'getTransaction':\n                return {\n                    method: 'quai_getTransactionByHash',\n                    args: [req.hash],\n                };\n\n            case 'getTransactionReceipt':\n                return {\n                    method: 'quai_getTransactionReceipt',\n                    args: [req.hash],\n                };\n\n            case 'call':\n                return {\n                    method: 'quai_call',\n                    args: [this.getRpcTransaction(req.transaction), req.blockTag],\n                };\n\n            case 'estimateGas': {\n                return {\n                    method: 'quai_estimateGas',\n                    args: [this.getRpcTransaction(req.transaction)],\n                };\n            }\n\n            case 'estimateFeeForQi': {\n                return {\n                    method: 'quai_estimateFeeForQi',\n                    args: [req.transaction],\n                };\n            }\n\n            case 'createAccessList': {\n                return {\n                    method: 'quai_createAccessList',\n                    args: [this.getRpcTransaction(req.transaction)],\n                };\n            }\n\n            case 'getRunningLocations': {\n                return {\n                    method: 'quai_listRunningChains',\n                    args: [],\n                };\n            }\n\n            case 'getProtocolTrieExpansionCount': {\n                return {\n                    method: 'quai_getProtocolExpansionNumber',\n                    args: [],\n                };\n            }\n\n            case 'getProtocolExpansionNumber': {\n                return {\n                    method: 'quai_getProtocolExpansionNumber',\n                    args: [],\n                };\n            }\n\n            case 'getQiRateAtBlock': {\n                return {\n                    method: 'quai_qiRateAtBlock',\n                    args: [req.blockTag, req.amt],\n                };\n            }\n\n            case 'getQuaiRateAtBlock': {\n                return {\n                    method: 'quai_quaiRateAtBlock',\n                    args: [req.blockTag, req.amt],\n                };\n            }\n\n            case 'getLogs':\n                return { method: 'quai_getLogs', args: [req.filter] };\n\n            case 'getTxPoolContent':\n                return { method: 'txpool_content', args: [] };\n\n            case 'txPoolInspect':\n                return { method: 'txpool_inspect', args: [] };\n\n            case 'getOutpointDeltasForAddressesInRange':\n                return {\n                    method: 'quai_getOutpointDeltasForAddressesInRange',\n                    args: [req.addresses, req.startHash, req.endHash],\n                };\n        }\n\n        return null;\n    }\n\n    /**\n     * Returns an quais-style Error for the given JSON-RPC error `payload`, coalescing the various strings and error\n     * shapes that different nodes return, coercing them into a machine-readable standardized error.\n     *\n     * @ignore\n     * @param {JsonRpcPayload} payload - The payload that was sent.\n     * @param {JsonRpcError} _error - The error that was received.\n     * @returns {Error} The coalesced error.\n     */\n    getRpcError(payload: JsonRpcPayload, _error: JsonRpcError, shard?: Shard): Error {\n        const { method } = payload;\n        const { error } = _error;\n\n        if (method === 'quai_estimateGas' && error.message) {\n            const msg = error.message;\n            if (!msg.match(/revert/i) && msg.match(/insufficient funds/i)) {\n                return makeError('insufficient funds', 'INSUFFICIENT_FUNDS', {\n                    transaction: (<any>payload).params[0],\n                    info: { payload, error, shard },\n                });\n            }\n        }\n\n        if (method === 'quai_call' || method === 'quai_estimateGas') {\n            const result = spelunkData(error);\n\n            const e = AbiCoder.getBuiltinCallException(\n                method === 'quai_call' ? 'call' : 'estimateGas',\n                (<any>payload).params[0],\n                result ? result.data : null,\n            );\n            e.info = { error, payload, shard };\n            return e;\n        }\n\n        // Only estimateGas and call can return arbitrary contract-defined text, so now we\n        // we can process text safely.\n\n        const message = JSON.stringify(spelunkMessage(error));\n\n        if (method === 'quai_getTransactionByHash' && error.message && error.message.match(/transaction not found/i)) {\n            return makeError('transaction not found', 'TRANSACTION_NOT_FOUND', { info: { payload, error, shard } });\n        }\n\n        if (typeof error.message === 'string' && error.message.match(/user denied|quais-user-denied/i)) {\n            const actionMap: Record<\n                string,\n                'requestAccess' | 'sendTransaction' | 'signMessage' | 'signTransaction' | 'signTypedData'\n            > = {\n                quai_sign: 'signMessage',\n                personal_sign: 'signMessage',\n                quai_signTypedData_v4: 'signTypedData',\n                quai_signTransaction: 'signTransaction',\n                quai_sendTransaction: 'sendTransaction',\n                quai_requestAccounts: 'requestAccess',\n                wallet_requestAccounts: 'requestAccess',\n            };\n\n            return makeError(`user rejected action`, 'ACTION_REJECTED', {\n                action: actionMap[method] || 'unknown',\n                reason: 'rejected',\n                info: { payload, error, shard },\n            });\n        }\n\n        if (method === 'quai_sendRawTransaction' || method === 'quai_sendTransaction') {\n            const transaction = <TransactionLike>(<any>payload).params[0];\n\n            if (message.match(/insufficient funds|base fee exceeds gas limit/i)) {\n                return makeError('insufficient funds for intrinsic transaction cost', 'INSUFFICIENT_FUNDS', {\n                    transaction,\n                    info: { error, shard },\n                });\n            }\n\n            if (message.match(/nonce/i) && message.match(/too low/i)) {\n                return makeError('nonce has already been used', 'NONCE_EXPIRED', {\n                    transaction,\n                    info: { error, shard },\n                });\n            }\n\n            // \"replacement transaction underpriced\"\n            if (message.match(/replacement transaction/i) && message.match(/underpriced/i)) {\n                return makeError('replacement fee too low', 'REPLACEMENT_UNDERPRICED', {\n                    transaction,\n                    info: { error, shard },\n                });\n            }\n\n            if (message.match(/only replay-protected/i)) {\n                return makeError('legacy pre-eip-155 transactions not supported', 'UNSUPPORTED_OPERATION', {\n                    operation: method,\n                    info: { transaction, info: { error, shard } },\n                });\n            }\n\n            if (message.match(/already known/i)) {\n                return makeError('transaction already known', 'TRANSACTION_ALREADY_KNOWN', { info: { error, shard } });\n            }\n        }\n\n        let unsupported = !!message.match(/the method .* does not exist/i);\n        if (!unsupported) {\n            if (error && (<any>error).details && (<any>error).details.startsWith('Unauthorized method:')) {\n                unsupported = true;\n            }\n        }\n\n        if (unsupported) {\n            return makeError('unsupported operation', 'UNSUPPORTED_OPERATION', {\n                operation: payload.method,\n                info: { error, payload, shard },\n            });\n        }\n\n        if (message.match('Provider failed to initialize on creation. Run initialize or create a new provider.')) {\n            return makeError(\n                'Provider failed to initialize on creation. Run initUrlMap or create a new provider.',\n                'PROVIDER_FAILED_TO_INITIALIZE',\n                {\n                    info: { payload, error, shard },\n                },\n            );\n        }\n\n        return makeError('could not coalesce error', 'UNKNOWN_ERROR', { error, payload, shard });\n    }\n\n    /**\n     * Requests the `method` with `params` via the JSON-RPC protocol over the underlying channel. This can be used to\n     * call methods on the backend that do not have a high-level API within the Provider API.\n     *\n     * This method queues requests according to the batch constraints in the options, assigns the request a unique ID.\n     *\n     * **Do NOT override** this method in sub-classes; instead override {@link JsonRpcApiProvider._send | **_send**} or\n     * force the options values in the call to the constructor to modify this method's behavior.\n     *\n     * @param {string} method - The method to call.\n     * @param {any[] | Record<string, any>} params - The parameters to pass to the method.\n     * @param {Shard} shard - The shard to send the request to.\n     * @param {boolean} now - If true, the request will be sent immediately.\n     * @returns {Promise<any>} A promise that resolves to the result of the method call.\n     */\n    send(method: string, params: Array<any> | Record<string, any>, shard?: Shard, now?: boolean): Promise<any> {\n        const continueSend = (): Promise<any> => {\n            if (this.destroyed) {\n                return Promise.reject(\n                    makeError('provider destroyed; cancelled request', 'UNSUPPORTED_OPERATION', { operation: method }),\n                );\n            }\n            const id = this.#nextId++;\n            const promise = new Promise((resolve, reject) => {\n                this.#payloads.push({\n                    resolve,\n                    reject,\n                    payload: { method, params, id, jsonrpc: '2.0' },\n                    shard: shard,\n                    now: now,\n                });\n            });\n\n            // If there is not a pending drainTimer, set one\n            this.#scheduleDrain();\n\n            return <Promise<JsonRpcResult>>promise;\n        };\n        // @TODO: cache chainId?? purge on switch_networks\n\n        // We have been destroyed; no operations are supported anymore\n        if (method !== 'quai_listRunningChains') {\n            return this.initPromise.then(() => {\n                return continueSend();\n            });\n        } else {\n            return continueSend();\n        }\n    }\n\n    /**\n     * Returns a JsonRpcSigner for the given address.\n     *\n     * @param {number | string} [address] - The address or index of the account.\n     * @returns {Promise<JsonRpcSigner>} A promise that resolves to the JsonRpcSigner.\n     * @throws {Error} If the account is invalid.\n     */\n    async getSigner(address?: number | string): Promise<JsonRpcSigner> {\n        if (address == null) {\n            address = 0;\n        }\n\n        const accountsPromise = this.send('quai_accounts', []);\n\n        // Account index\n        if (typeof address === 'number') {\n            const accounts = <Array<string>>await accountsPromise;\n            if (address >= accounts.length) {\n                throw new Error('no such account');\n            }\n            return new JsonRpcSigner(this, accounts[address]);\n        }\n\n        const { accounts } = await resolveProperties({\n            network: this.getNetwork(),\n            accounts: accountsPromise,\n        });\n\n        // Account address\n        address = getAddress(address);\n        for (const account of accounts) {\n            if (getAddress(account) === address) {\n                return new JsonRpcSigner(this, address);\n            }\n        }\n\n        throw new Error('invalid account');\n    }\n\n    /**\n     * Returns a list of JsonRpcSigners for all accounts.\n     *\n     * @returns {Promise<JsonRpcSigner[]>} A promise that resolves to an array of JsonRpcSigners.\n     */\n    async listAccounts(): Promise<Array<JsonRpcSigner>> {\n        const accounts: Array<string> = await this.send('quai_accounts', []);\n        return accounts.map((a) => new JsonRpcSigner(this, a));\n    }\n\n    /**\n     * Destroys the provider, stopping all processing and canceling all pending requests.\n     */\n    destroy(): void {\n        // Stop processing requests\n        if (this.#drainTimer) {\n            clearTimeout(this.#drainTimer);\n            this.#drainTimer = null;\n        }\n\n        // Cancel all pending requests\n        for (const { payload, reject } of this.#payloads) {\n            reject(\n                makeError('provider destroyed; cancelled request', 'UNSUPPORTED_OPERATION', {\n                    operation: payload.method,\n                }),\n            );\n        }\n\n        this.#payloads = [];\n\n        // Parent clean-up\n        super.destroy();\n    }\n}\n\n/**\n * The JsonRpcProvider is one of the most common Providers, which performs all operations over HTTP (or HTTPS) requests.\n *\n * Events are processed by polling the backend for the current block number; when it advances, all block-base events are\n * then checked for updates.\n *\n * @category Providers\n */\nexport class JsonRpcProvider extends JsonRpcApiProvider {\n    constructor(urls?: string | string[] | FetchRequest, network?: Networkish, options?: JsonRpcApiProviderOptions) {\n        if (urls == null) {\n            urls = ['http://localhost:8545'];\n        }\n        super(network, options);\n\n        if (Array.isArray(urls)) {\n            urls.forEach((url) => {\n                this.validateUrl(url);\n            });\n            this.initialize(urls);\n        } else if (typeof urls === 'string') {\n            this.validateUrl(urls);\n            this.initialize([urls]);\n        } else {\n            this.validateUrl(urls.url);\n            this.initialize(urls.clone());\n        }\n    }\n\n    _getSubscriber(sub: Subscription): Subscriber {\n        const subscriber = super._getSubscriber(sub);\n        return subscriber;\n    }\n\n    _getConnection(shard?: Shard): FetchRequest {\n        if (this._initFailed) {\n            throw new Error('Provider failed to initialize on creation. Run initUrlMap or create a new provider.');\n        }\n        let connection;\n        if (shard !== undefined) {\n            connection = this._urlMap.get(shard) ?? this.connect[this.connect.length - 1]!.clone();\n        } else {\n            connection = this.connect[this.connect.length - 1]!.clone();\n        }\n        return new FetchRequest(connection.url);\n    }\n\n    async send(method: string, params: Array<any> | Record<string, any>, shard?: Shard, now?: boolean): Promise<any> {\n        try {\n            this._start();\n\n            return await super.send(method, params, shard, now);\n        } catch (error) {\n            return Promise.reject(error);\n        }\n        // All requests are over HTTP, so we can just start handling requests\n        // We do this here rather than the constructor so that we don't send any\n        // requests to the network (i.e. quai_chainId) until we absolutely have to.\n    }\n\n    async _send(\n        payload: JsonRpcPayload | Array<JsonRpcPayload>,\n        shard?: Shard,\n        now?: boolean,\n    ): Promise<Array<JsonRpcResult | JsonRpcError>> {\n        if (this._initFailed) {\n            return [\n                {\n                    id: Array.isArray(payload) ? payload[0].id : payload.id,\n                    error: {\n                        code: -32000,\n                        message: 'Provider failed to initialize on creation. Run initialize or create a new provider.',\n                    },\n                },\n            ];\n        }\n\n        try {\n            if (!now) {\n                await this._waitUntilReady();\n            }\n        } catch (error) {\n            return [\n                {\n                    id: Array.isArray(payload) ? payload[0].id : payload.id,\n                    error: {\n                        code: -32000,\n                        message: 'Provider failed to initialize on creation. Run initialize or create a new provider.',\n                    },\n                },\n            ];\n        }\n        // Configure a POST connection for the requested method\n        try {\n            const request = this._getConnection(shard);\n            request.body = JSON.stringify(payload);\n            request.setHeader('content-type', 'application/json');\n            const response = await request.send();\n            response.assertOk();\n\n            let resp = response.bodyJson;\n            if (!Array.isArray(resp)) {\n                resp = [resp];\n            }\n\n            return resp;\n        } catch (error) {\n            return [\n                {\n                    id: Array.isArray(payload) ? payload[0].id : payload.id,\n                    error: {\n                        code: -32000,\n                        message: error instanceof Error ? error.message : String(error),\n                    },\n                },\n            ];\n        }\n    }\n}\n\nfunction spelunkData(value: any): null | { message: string; data: string } {\n    if (value == null) {\n        return null;\n    }\n\n    // These *are* the droids we're looking for.\n    if (typeof value.message === 'string' && value.message.match(/revert/i) && isHexString(value.data)) {\n        return { message: value.message, data: value.data };\n    }\n\n    // Spelunk further...\n    if (typeof value === 'object') {\n        for (const key in value) {\n            const result = spelunkData(value[key]);\n            if (result) {\n                return result;\n            }\n        }\n        return null;\n    }\n\n    // Might be a JSON string we can further descend...\n    if (typeof value === 'string') {\n        try {\n            return spelunkData(JSON.parse(value));\n            // eslint-disable-next-line no-empty\n        } catch (error) {}\n    }\n\n    return null;\n}\n\nfunction _spelunkMessage(value: any, result: Array<string>): void {\n    if (value == null) {\n        return;\n    }\n\n    // These *are* the droids we're looking for.\n    if (typeof value.message === 'string') {\n        result.push(value.message);\n    }\n\n    // Spelunk further...\n    if (typeof value === 'object') {\n        for (const key in value) {\n            _spelunkMessage(value[key], result);\n        }\n    }\n\n    // Might be a JSON string we can further descend...\n    if (typeof value === 'string') {\n        try {\n            return _spelunkMessage(JSON.parse(value), result);\n            // eslint-disable-next-line no-empty\n        } catch (error) {}\n    }\n}\n\nfunction spelunkMessage(value: any): Array<string> {\n    const result: Array<string> = [];\n    _spelunkMessage(value, result);\n    return result;\n}\n","import { assertArgument } from '../utils/index.js';\nimport { JsonRpcApiProvider, JsonRpcSigner } from './provider-jsonrpc.js';\n\nimport type { JsonRpcError, JsonRpcPayload, JsonRpcResult } from './provider-jsonrpc.js';\nimport type { Networkish } from './network.js';\nimport { Shard } from '../constants/index.js';\n\n/**\n * The interface to an [EIP-1193](https://eips.ethereum.org/EIPS/eip-1193) provider, which is a standard used by most\n * injected providers, which the {@link BrowserProvider | **BrowserProvider**} accepts and exposes the API of.\n *\n * @category Providers\n * @interface\n */\nexport interface Eip1193Provider {\n    /**\n     * See [EIP-1193](https://eips.ethereum.org/EIPS/eip-1193) for details on this method.\n     *\n     * @param {Object} request - The request object.\n     * @param {string} request.method - The method name.\n     * @param {any[] | Record<string, any>} [request.params] - The parameters for the method.\n     * @param {Shard} [request.shard] - The shard to send the request to.\n     * @returns {Promise<any>} The result of the request.\n     */\n    request(request: { method: string; params?: Array<any> | Record<string, any>; shard?: Shard }): Promise<any>;\n}\n\n/**\n * The possible additional events dispatched when using the `\"debug\"` event on a\n * {@link BrowserProvider | **BrowserProvider**}.\n *\n * @category Providers\n * @property {string} action - The action type.\n * @property {Object} payload - The payload of the action.\n * @property {string} payload.method - The method name.\n * @property {any[]} payload.params - The parameters for the method.\n * @property {any} result - The result of the action.\n * @property {Error} error - The error object.\n */\nexport type DebugEventBrowserProvider =\n    | {\n          action: 'sendEip1193Payload';\n          payload: { method: string; params: Array<any> };\n      }\n    | {\n          action: 'receiveEip1193Result';\n          result: any;\n      }\n    | {\n          action: 'receiveEip1193Error';\n          error: Error;\n      };\n\n/**\n * A **BrowserProvider** is intended to wrap an injected provider which adheres to the\n * [EIP-1193](https://eips.ethereum.org/EIPS/eip-1193) standard, which most (if not all) currently do.\n *\n * @category Providers\n * @class\n * @extends JsonRpcApiProvider\n */\nexport class BrowserProvider extends JsonRpcApiProvider {\n    #request: (method: string, params: Array<any> | Record<string, any>, shard?: Shard) => Promise<any>;\n\n    /**\n     * Connect to the `ethereum` provider, optionally forcing the `network`.\n     *\n     * @class\n     * @param {Eip1193Provider} ethereum - The EIP-1193 provider.\n     * @param {Networkish} [network] - The network to connect to.\n     */\n    constructor(ethereum: Eip1193Provider, network?: Networkish) {\n        super(network, { batchMaxCount: 1 });\n\n        if (this.initResolvePromise) this.initResolvePromise();\n\n        this.#request = async (method: string, params: Array<any> | Record<string, any>, shard?: Shard) => {\n            const payload = { method, params, shard };\n            this.emit('debug', undefined, { action: 'sendEip1193Request', payload });\n            try {\n                const result = await ethereum.request(payload);\n                this.emit('debug', undefined, { action: 'receiveEip1193Result', result });\n                return result;\n            } catch (e: any) {\n                const error = new Error(e.message);\n                (<any>error).code = e.code;\n                (<any>error).data = e.data;\n                (<any>error).payload = payload;\n                this.emit('debug', undefined, { action: 'receiveEip1193Error', error });\n                throw error;\n            }\n        };\n    }\n\n    /**\n     * Resolves to `true` if the provider manages the `address`.\n     *\n     * @param {number | string} address - The address to check.\n     * @returns {Promise<boolean>} Resolves to `true` if the provider manages the `address`.\n     */\n    async hasSigner(address: number | string): Promise<boolean> {\n        if (address == null) {\n            address = 0;\n        }\n\n        const accounts = await this.send('quai_accounts', []);\n        if (typeof address === 'number') {\n            return accounts.length > address;\n        }\n\n        address = address.toLowerCase();\n        return accounts.filter((a: string) => a.toLowerCase() === address).length !== 0;\n    }\n\n    /**\n     * Sends a JSON-RPC request.\n     *\n     * @param {string} method - The method name.\n     * @param {any[] | Record<string, any>} params - The parameters for the method.\n     * @returns {Promise<any>} The result of the request.\n     */\n    async send(method: string, params: Array<any> | Record<string, any>, shard?: Shard): Promise<any> {\n        await this._start();\n\n        return await super.send(method, params, shard);\n    }\n\n    /**\n     * Sends a JSON-RPC payload.\n     *\n     * @ignore\n     * @ignore\n     * @param {JsonRpcPayload | JsonRpcPayload[]} payload - The JSON-RPC payload.\n     * @returns {Promise<(JsonRpcResult | JsonRpcError)[]>} The result of the request.\n     */\n    async _send(\n        payload: JsonRpcPayload | Array<JsonRpcPayload>,\n        shard?: Shard,\n    ): Promise<Array<JsonRpcResult | JsonRpcError>> {\n        assertArgument(!Array.isArray(payload), 'EIP-1193 does not support batch request', 'payload', payload);\n\n        try {\n            const result = await this.#request(payload.method, payload.params || [], shard);\n            return [{ id: payload.id, result }];\n        } catch (e: any) {\n            return [\n                {\n                    id: payload.id,\n                    error: { code: e.code, data: e.data, message: e.message, shard: shard || undefined },\n                },\n            ];\n        }\n    }\n\n    /**\n     * Gets the RPC error.\n     *\n     * @param {JsonRpcPayload} payload - The JSON-RPC payload.\n     * @param {JsonRpcError} error - The JSON-RPC error.\n     * @returns {Error} The RPC error.\n     */\n    getRpcError(payload: JsonRpcPayload, error: JsonRpcError): Error {\n        error = JSON.parse(JSON.stringify(error));\n\n        // EIP-1193 gives us some machine-readable error codes, so rewrite\n        // them into\n        switch (error.error.code || -1) {\n            case 4001:\n                error.error.message = `quais-user-denied: ${error.error.message}`;\n                break;\n            case 4200:\n                error.error.message = `quais-unsupported: ${error.error.message}`;\n                break;\n        }\n\n        return super.getRpcError(payload, error);\n    }\n\n    /**\n     * Gets the signer for the given address.\n     *\n     * @param {number | string} [address] - The address to get the signer for.\n     * @returns {Promise<JsonRpcSigner>} The signer for the address.\n     */\n    async getSigner(address?: number | string): Promise<JsonRpcSigner> {\n        if (address == null) {\n            address = 0;\n        }\n\n        if (!(await this.hasSigner(address))) {\n            try {\n                await this.#request('quai_requestAccounts', []);\n            } catch (error: any) {\n                const payload = error.payload;\n                throw this.getRpcError(payload, { id: payload.id, error });\n            }\n        }\n\n        return await super.getSigner(address);\n    }\n}\n","/**\n * The Interface class is a low-level class that accepts an ABI and provides all the necessary functionality to encode\n * and decode paramaters to and results from methods, events and errors.\n *\n * It also provides several convenience methods to automatically search and find matching transactions and events to\n * parse them.\n *\n * @category Application Binary Interface\n */\n\nimport { keccak256 } from '../crypto/index.js';\nimport { id } from '../hash/index.js';\nimport {\n    concat,\n    dataSlice,\n    getBigInt,\n    getBytes,\n    getBytesCopy,\n    hexlify,\n    zeroPadBytes,\n    zeroPadValue,\n    isHexString,\n    defineProperties,\n    assertArgument,\n    toBeHex,\n    assert,\n} from '../utils/index.js';\n\nimport { AbiCoder } from './abi-coder.js';\nimport { checkResultErrors, Result } from './coders/abstract-coder.js';\nimport {\n    ConstructorFragment,\n    ErrorFragment,\n    EventFragment,\n    FallbackFragment,\n    Fragment,\n    FunctionFragment,\n    ParamType,\n} from './fragments.js';\nimport { Typed } from './typed.js';\n\nimport type { BigNumberish, BytesLike, CallExceptionError, CallExceptionTransaction } from '../utils/index.js';\n\nimport type { JsonFragment } from './fragments.js';\n\nexport { checkResultErrors, Result };\n\n/**\n * When using the {@link Interface.parseLog | **Interface.parseLog**} to automatically match a Log to its event for\n * parsing, a **LogDescription** is returned.\n *\n * @category Application Binary Interface\n */\nexport class LogDescription {\n    /**\n     * The matching fragment for the `topic0`.\n     */\n    readonly fragment!: EventFragment;\n\n    /**\n     * The name of the Event.\n     */\n    readonly name!: string;\n\n    /**\n     * The full Event signature.\n     */\n    readonly signature!: string;\n\n    /**\n     * The topic hash for the Event.\n     */\n    readonly topic!: string;\n\n    /**\n     * The arguments passed into the Event with `emit`.\n     */\n    readonly args!: Result;\n\n    /**\n     * @ignore\n     */\n    constructor(fragment: EventFragment, topic: string, args: Result) {\n        const name = fragment.name,\n            signature = fragment.format();\n        defineProperties<LogDescription>(this, {\n            fragment,\n            name,\n            signature,\n            topic,\n            args,\n        });\n    }\n}\n\n/**\n * When using the {@link Interface.parseTransaction | **Interface.parseTransaction**} to automatically match a\n * transaction data to its function for parsing, a **TransactionDescription** is returned.\n *\n * @category Application Binary Interface\n */\nexport class TransactionDescription {\n    /**\n     * The matching fragment from the transaction `data`.\n     */\n    readonly fragment!: FunctionFragment;\n\n    /**\n     * The name of the Function from the transaction `data`.\n     */\n    readonly name!: string;\n\n    /**\n     * The arguments passed to the Function from the transaction `data`.\n     */\n    readonly args!: Result;\n\n    /**\n     * The full Function signature from the transaction `data`.\n     */\n    readonly signature!: string;\n\n    /**\n     * The selector for the Function from the transaction `data`.\n     */\n    readonly selector!: string;\n\n    /**\n     * The `value` (in wei) from the transaction.\n     */\n    readonly value!: bigint;\n\n    /**\n     * @ignore\n     */\n    constructor(fragment: FunctionFragment, selector: string, args: Result, value: bigint) {\n        const name = fragment.name,\n            signature = fragment.format();\n        defineProperties<TransactionDescription>(this, {\n            fragment,\n            name,\n            args,\n            signature,\n            selector,\n            value,\n        });\n    }\n}\n\n/**\n * When using the {@link Interface.parseError | **Interface.parseError**} to automatically match an error for a call\n * result for parsing, an **ErrorDescription** is returned.\n *\n * @category Application Binary Interface\n */\nexport class ErrorDescription {\n    /**\n     * The matching fragment.\n     */\n    readonly fragment!: ErrorFragment;\n\n    /**\n     * The name of the Error.\n     */\n    readonly name!: string;\n\n    /**\n     * The arguments passed to the Error with `revert`.\n     */\n    readonly args!: Result;\n\n    /**\n     * The full Error signature.\n     */\n    readonly signature!: string;\n\n    /**\n     * The selector for the Error.\n     */\n    readonly selector!: string;\n\n    /**\n     * @ignore\n     */\n    constructor(fragment: ErrorFragment, selector: string, args: Result) {\n        const name = fragment.name,\n            signature = fragment.format();\n        defineProperties<ErrorDescription>(this, {\n            fragment,\n            name,\n            args,\n            signature,\n            selector,\n        });\n    }\n}\n\n/**\n * An **Indexed** is used as a value when a value that does not fit within a topic (i.e. not a fixed-length, 32-byte\n * type). It is the `keccak256` of the value, and used for types such as arrays, tuples, bytes and strings.\n *\n * @category Application Binary Interface\n */\nexport class Indexed {\n    /**\n     * The `keccak256` of the value logged.\n     */\n    readonly hash!: null | string;\n\n    /**\n     * @ignore\n     */\n    readonly _isIndexed!: boolean;\n\n    /**\n     * Check if a value is an **Indexed** This provides a Type Guard for property access.\n     *\n     * @param value - The value to check.\n     * @returns `true` if the value is an **Indexed**.\n     */\n    static isIndexed(value: any): value is Indexed {\n        return !!(value && value._isIndexed);\n    }\n\n    /**\n     * @ignore\n     */\n    constructor(hash: null | string) {\n        defineProperties<Indexed>(this, { hash, _isIndexed: true });\n    }\n}\n\ntype ErrorInfo = {\n    signature: string;\n    inputs: Array<string>;\n    name: string;\n    reason: (...args: Array<any>) => string;\n};\n\n// https://docs.soliditylang.org/en/v0.8.13/control-structures.html?highlight=panic#panic-via-assert-and-error-via-require\nconst PanicReasons: Record<string, string> = {\n    '0': 'generic panic',\n    '1': 'assert(false)',\n    '17': 'arithmetic overflow',\n    '18': 'division or modulo by zero',\n    '33': 'enum overflow',\n    '34': 'invalid encoded storage byte array accessed',\n    '49': 'out-of-bounds array access; popping on an empty array',\n    '50': 'out-of-bounds access of an array or bytesN',\n    '65': 'out of memory',\n    '81': 'uninitialized function',\n};\n\nconst BuiltinErrors: Record<string, ErrorInfo> = {\n    '0x08c379a0': {\n        signature: 'Error(string)',\n        name: 'Error',\n        inputs: ['string'],\n        reason: (message: string) => {\n            return `reverted with reason string ${JSON.stringify(message)}`;\n        },\n    },\n    '0x4e487b71': {\n        signature: 'Panic(uint256)',\n        name: 'Panic',\n        inputs: ['uint256'],\n        reason: (code: bigint) => {\n            let reason = 'unknown panic code';\n            if (code >= 0 && code <= 0xff && PanicReasons[code.toString()]) {\n                reason = PanicReasons[code.toString()];\n            }\n            return `reverted with panic code 0x${code.toString(16)} (${reason})`;\n        },\n    },\n};\n\n/**\n * An **InterfaceAbi** may be any supported ABI format.\n *\n * A string is expected to be a JSON string, which will be parsed using `JSON.parse`. This means that the value **must**\n * be a valid JSON string, with no stray commas, etc.\n *\n * An array may contain any combination of:\n *\n * - Human-Readable fragments\n * - Parsed JSON fragment\n * - [**Fragment**](../classes/Fragment)\n *\n * A **Human-Readable Fragment** is a string which resembles a Solidity signature and is introduced in [this blog\n * entry](lhttps://blog.ricmoo.com/human-readable-contract-abis-in-quais-js-141902f4d917). For example, `function\n * balanceOf(address) view returns (uint)`.\n *\n * A **Parsed JSON Fragment** is a JavaScript Object desribed in the [Solidity\n * documentation](https://docs.soliditylang.org/en/v0.8.19/abi-spec.html#json).\n *\n * @category Application Binary Interface\n */\nexport type InterfaceAbi = string | ReadonlyArray<Fragment | JsonFragment | string>;\n\n/**\n * An Interface abstracts many of the low-level details for encoding and decoding the data on the blockchain.\n *\n * An ABI provides information on how to encode data to send to a Contract, how to decode the results and events and how\n * to interpret revert errors.\n *\n * The ABI can be specified by {@link InterfaceAbi | any supported format}.\n *\n * @category Application Binary Interface\n */\nexport class Interface {\n    /**\n     * All the Contract ABI members (i.e. methods, events, errors, etc).\n     */\n    readonly fragments!: ReadonlyArray<Fragment>;\n\n    /**\n     * The Contract constructor.\n     */\n    readonly deploy!: ConstructorFragment;\n\n    /**\n     * The Fallback method, if any.\n     */\n    readonly fallback!: null | FallbackFragment;\n\n    /**\n     * If receiving ether is supported.\n     */\n    readonly receive!: boolean;\n\n    #errors: Map<string, ErrorFragment>;\n    #events: Map<string, EventFragment>;\n    #functions: Map<string, FunctionFragment>;\n    // #structs: Map<string, StructFragment>;\n    #abiCoder: AbiCoder;\n\n    /**\n     * Create a new Interface for the fragments.\n     *\n     * @param {InterfaceAbi} fragments - The ABI fragments.\n     */\n    constructor(fragments: InterfaceAbi) {\n        let abi: ReadonlyArray<Fragment | JsonFragment | string> = [];\n        if (typeof fragments === 'string') {\n            abi = JSON.parse(fragments);\n        } else {\n            abi = fragments;\n        }\n\n        this.#functions = new Map();\n        this.#errors = new Map();\n        this.#events = new Map();\n\n        const frags: Array<Fragment> = [];\n        for (const a of abi) {\n            try {\n                frags.push(Fragment.from(a));\n            } catch (error) {\n                console.log('Error parsing ABI fragment', error);\n            }\n        }\n\n        defineProperties<Interface>(this, {\n            fragments: Object.freeze(frags),\n        });\n\n        let fallback: null | FallbackFragment = null;\n        let receive = false;\n\n        this.#abiCoder = this.getAbiCoder();\n\n        // Add all fragments by their signature\n        this.fragments.forEach((fragment, index) => {\n            let bucket: Map<string, Fragment>;\n            switch (fragment.type) {\n                case 'constructor':\n                    if (this.deploy) {\n                        console.log('duplicate definition - constructor');\n                        return;\n                    }\n                    defineProperties<Interface>(this, { deploy: <ConstructorFragment>fragment });\n                    return;\n\n                case 'fallback':\n                    if (fragment.inputs.length === 0) {\n                        receive = true;\n                    } else {\n                        assertArgument(\n                            !fallback || (<FallbackFragment>fragment).payable !== fallback.payable,\n                            'conflicting fallback fragments',\n                            `fragments[${index}]`,\n                            fragment,\n                        );\n                        fallback = <FallbackFragment>fragment;\n                        receive = fallback.payable;\n                    }\n                    return;\n\n                case 'function':\n                    bucket = this.#functions;\n                    break;\n\n                case 'event':\n                    bucket = this.#events;\n                    break;\n\n                case 'error':\n                    bucket = this.#errors;\n                    break;\n\n                default:\n                    return;\n            }\n\n            // Two identical entries; ignore it\n            const signature = fragment.format();\n            if (bucket.has(signature)) {\n                return;\n            }\n\n            bucket.set(signature, fragment);\n        });\n\n        // If we do not have a constructor add a default\n        if (!this.deploy) {\n            defineProperties<Interface>(this, {\n                deploy: ConstructorFragment.from('constructor()'),\n            });\n        }\n\n        defineProperties<Interface>(this, { fallback, receive });\n    }\n\n    /**\n     * Returns the entire Human-Readable ABI, as an array of signatures, optionally as `minimal` strings, which removes\n     * parameter names and unneceesary spaces.\n     */\n    format(minimal?: boolean): Array<string> {\n        const format = minimal ? 'minimal' : 'full';\n        const abi = this.fragments.map((f) => f.format(format));\n        return abi;\n    }\n\n    /**\n     * Return the JSON-encoded ABI. This is the format Solidiy returns.\n     */\n    formatJson(): string {\n        const abi = this.fragments.map((f) => f.format('json'));\n\n        // We need to re-bundle the JSON fragments a bit\n        return JSON.stringify(abi.map((j) => JSON.parse(j)));\n    }\n\n    /**\n     * The ABI coder that will be used to encode and decode binary data.\n     */\n    getAbiCoder(): AbiCoder {\n        return AbiCoder.defaultAbiCoder();\n    }\n\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    #getFunction(key: string, values: null | Array<any | Typed>, forceUnique: boolean): null | FunctionFragment {\n        // Selector\n        if (isHexString(key)) {\n            const selector = key.toLowerCase();\n            for (const fragment of this.#functions.values()) {\n                if (selector === fragment.selector) {\n                    return fragment;\n                }\n            }\n            return null;\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (key.indexOf('(') === -1) {\n            const matching: Array<FunctionFragment> = [];\n            for (const [name, fragment] of this.#functions) {\n                if (name.split('(' /* fix:) */)[0] === key) {\n                    matching.push(fragment);\n                }\n            }\n\n            if (values) {\n                const lastValue = values.length > 0 ? values[values.length - 1] : null;\n\n                let valueLength = values.length;\n                let allowOptions = true;\n                if (Typed.isTyped(lastValue) && lastValue.type === 'overrides') {\n                    allowOptions = false;\n                    valueLength--;\n                }\n\n                // Remove all matches that don't have a compatible length. The args\n                // may contain an overrides, so the match may have n or n - 1 parameters\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    const inputs = matching[i].inputs.length;\n                    if (inputs !== valueLength && (!allowOptions || inputs !== valueLength - 1)) {\n                        matching.splice(i, 1);\n                    }\n                }\n\n                // Remove all matches that don't match the Typed signature\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    const inputs = matching[i].inputs;\n                    for (let j = 0; j < values.length; j++) {\n                        // Not a typed value\n                        if (!Typed.isTyped(values[j])) {\n                            continue;\n                        }\n\n                        // We are past the inputs\n                        if (j >= inputs.length) {\n                            if (values[j].type === 'overrides') {\n                                continue;\n                            }\n                            matching.splice(i, 1);\n                            break;\n                        }\n\n                        // Make sure the value type matches the input type\n                        if (values[j].type !== inputs[j].baseType) {\n                            matching.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            }\n\n            // We found a single matching signature with an overrides, but the\n            // last value is something that cannot possibly be an options\n            if (matching.length === 1 && values && values.length !== matching[0].inputs.length) {\n                const lastArg = values[values.length - 1];\n                if (lastArg == null || Array.isArray(lastArg) || typeof lastArg !== 'object') {\n                    matching.splice(0, 1);\n                }\n            }\n\n            if (matching.length === 0) {\n                return null;\n            }\n\n            if (matching.length > 1 && forceUnique) {\n                const matchStr = matching.map((m) => JSON.stringify(m.format())).join(', ');\n                assertArgument(false, `ambiguous function description (i.e. matches ${matchStr})`, 'key', key);\n            }\n\n            return matching[0];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.#functions.get(FunctionFragment.from(key).format());\n        if (result) {\n            return result;\n        }\n\n        return null;\n    }\n\n    /**\n     * Get the function name for `key`, which may be a function selector, function name or function signature that\n     * belongs to the ABI.\n     */\n    getFunctionName(key: string): string {\n        const fragment = this.#getFunction(key, null, false);\n        assertArgument(fragment, 'no matching function', 'key', key);\n        return fragment.name;\n    }\n\n    /**\n     * Returns true if `key` (a function selector, function name or function signature) is present in the ABI.\n     *\n     * In the case of a function name, the name may be ambiguous, so accessing the\n     * {@link FunctionFragment | **FunctionFragment**} may require refinement.\n     */\n    hasFunction(key: string): boolean {\n        return !!this.#getFunction(key, null, false);\n    }\n\n    /**\n     * Get the {@link FunctionFragment | **FunctionFragment**} for `key`, which may be a function selector, function name\n     * or function signature that belongs to the ABI.\n     *\n     * If `values` is provided, it will use the Typed API to handle ambiguous cases where multiple functions match by\n     * name.\n     *\n     * If the `key` and `values` do not refine to a single function in the ABI, this will throw.\n     */\n    getFunction(key: string, values?: Array<any | Typed>): null | FunctionFragment {\n        return this.#getFunction(key, values || null, true);\n    }\n\n    /**\n     * Iterate over all functions, calling `callback`, sorted by their name.\n     */\n    forEachFunction(callback: (func: FunctionFragment, index: number) => void): void {\n        const names = Array.from(this.#functions.keys());\n        names.sort((a, b) => a.localeCompare(b));\n        for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            callback(<FunctionFragment>this.#functions.get(name), i);\n        }\n    }\n\n    // Find an event definition by any means necessary (unless it is ambiguous)\n    #getEvent(key: string, values: null | Array<null | any | Typed>, forceUnique: boolean): null | EventFragment {\n        // EventTopic\n        if (isHexString(key)) {\n            const eventTopic = key.toLowerCase();\n            for (const fragment of this.#events.values()) {\n                if (eventTopic === fragment.topicHash) {\n                    return fragment;\n                }\n            }\n            return null;\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (key.indexOf('(') === -1) {\n            const matching: Array<EventFragment> = [];\n            for (const [name, fragment] of this.#events) {\n                if (name.split('(' /* fix:) */)[0] === key) {\n                    matching.push(fragment);\n                }\n            }\n\n            if (values) {\n                // Remove all matches that don't have a compatible length.\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    if (matching[i].inputs.length < values.length) {\n                        matching.splice(i, 1);\n                    }\n                }\n\n                // Remove all matches that don't match the Typed signature\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    const inputs = matching[i].inputs;\n                    for (let j = 0; j < values.length; j++) {\n                        // Not a typed value\n                        if (!Typed.isTyped(values[j])) {\n                            continue;\n                        }\n\n                        // Make sure the value type matches the input type\n                        if (values[j].type !== inputs[j].baseType) {\n                            matching.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            }\n\n            if (matching.length === 0) {\n                return null;\n            }\n\n            if (matching.length > 1 && forceUnique) {\n                const matchStr = matching.map((m) => JSON.stringify(m.format())).join(', ');\n                assertArgument(false, `ambiguous event description (i.e. matches ${matchStr})`, 'key', key);\n            }\n\n            return matching[0];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.#events.get(EventFragment.from(key).format());\n        if (result) {\n            return result;\n        }\n\n        return null;\n    }\n\n    /**\n     * Get the event name for `key`, which may be a topic hash, event name or event signature that belongs to the ABI.\n     */\n    getEventName(key: string): string {\n        const fragment = this.#getEvent(key, null, false);\n        assertArgument(fragment, 'no matching event', 'key', key);\n\n        return fragment.name;\n    }\n\n    /**\n     * Returns true if `key` (an event topic hash, event name or event signature) is present in the ABI.\n     *\n     * In the case of an event name, the name may be ambiguous, so accessing the\n     * {@link EventFragment | **EventFragment**} may require refinement.\n     */\n    hasEvent(key: string): boolean {\n        return !!this.#getEvent(key, null, false);\n    }\n\n    /**\n     * Get the {@link EventFragment | **EventFragment**} for `key`, which may be a topic hash, event name or event\n     * signature that belongs to the ABI.\n     *\n     * If `values` is provided, it will use the Typed API to handle ambiguous cases where multiple events match by name.\n     *\n     * If the `key` and `values` do not refine to a single event in the ABI, this will throw.\n     */\n    getEvent(key: string, values?: Array<any | Typed>): null | EventFragment {\n        return this.#getEvent(key, values || null, true);\n    }\n\n    /**\n     * Iterate over all events, calling `callback`, sorted by their name.\n     */\n    forEachEvent(callback: (func: EventFragment, index: number) => void): void {\n        const names = Array.from(this.#events.keys());\n        names.sort((a, b) => a.localeCompare(b));\n        for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            callback(<EventFragment>this.#events.get(name), i);\n        }\n    }\n\n    /**\n     * Get the {@link ErrorFragment | **ErroFragment**} for `key`, which may be an error selector, error name or error\n     * signature that belongs to the ABI.\n     *\n     * If `values` is provided, it will use the Typed API to handle ambiguous cases where multiple errors match by name.\n     *\n     * If the `key` and `values` do not refine to a single error in the ABI, this will throw.\n     */\n    // TODO: `values` is not used, remove?\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    getError(key: string, values?: Array<any | Typed>): null | ErrorFragment {\n        if (isHexString(key)) {\n            const selector = key.toLowerCase();\n\n            if (BuiltinErrors[selector]) {\n                return ErrorFragment.from(BuiltinErrors[selector].signature);\n            }\n\n            for (const fragment of this.#errors.values()) {\n                if (selector === fragment.selector) {\n                    return fragment;\n                }\n            }\n\n            return null;\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (key.indexOf('(') === -1) {\n            const matching: Array<ErrorFragment> = [];\n            for (const [name, fragment] of this.#errors) {\n                if (name.split('(' /* fix:) */)[0] === key) {\n                    matching.push(fragment);\n                }\n            }\n\n            if (matching.length === 0) {\n                if (key === 'Error') {\n                    return ErrorFragment.from('error Error(string)');\n                }\n                if (key === 'Panic') {\n                    return ErrorFragment.from('error Panic(uint256)');\n                }\n                return null;\n            } else if (matching.length > 1) {\n                const matchStr = matching.map((m) => JSON.stringify(m.format())).join(', ');\n                assertArgument(false, `ambiguous error description (i.e. ${matchStr})`, 'name', key);\n            }\n\n            return matching[0];\n        }\n\n        // Normalize the signature and lookup the function\n        key = ErrorFragment.from(key).format();\n        if (key === 'Error(string)') {\n            return ErrorFragment.from('error Error(string)');\n        }\n        if (key === 'Panic(uint256)') {\n            return ErrorFragment.from('error Panic(uint256)');\n        }\n\n        const result = this.#errors.get(key);\n        if (result) {\n            return result;\n        }\n\n        return null;\n    }\n\n    /**\n     * Iterate over all errors, calling `callback`, sorted by their name.\n     */\n    forEachError(callback: (func: ErrorFragment, index: number) => void): void {\n        const names = Array.from(this.#errors.keys());\n        names.sort((a, b) => a.localeCompare(b));\n        for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            callback(<ErrorFragment>this.#errors.get(name), i);\n        }\n    }\n\n    /**\n     * @ignore\n     */\n    _decodeParams(params: ReadonlyArray<ParamType>, data: BytesLike): Result {\n        return this.#abiCoder.decode(params, data);\n    }\n\n    /**\n     * @ignore\n     */\n    _encodeParams(params: ReadonlyArray<ParamType>, values: ReadonlyArray<any>): string {\n        return this.#abiCoder.encode(params, values);\n    }\n\n    /**\n     * Encodes a `tx.data` object for deploying the Contract with the `values` as the constructor arguments.\n     */\n    encodeDeploy(values?: ReadonlyArray<any>): string {\n        return this._encodeParams(this.deploy.inputs, values || []);\n    }\n\n    /**\n     * Decodes the result `data` (e.g. from an `quai_call`) for the specified error (see {@link getError | **getError**}\n     * for valid values for `key`).\n     *\n     * Most developers should prefer the {@link parseCallResult | **parseCallResult**} method instead, which will\n     * automatically detect a `CALL_EXCEPTION` and throw the corresponding error.\n     */\n    decodeErrorResult(fragment: ErrorFragment | string, data: BytesLike): Result {\n        if (typeof fragment === 'string') {\n            const f = this.getError(fragment);\n            assertArgument(f, 'unknown error', 'fragment', fragment);\n            fragment = f;\n        }\n\n        assertArgument(\n            dataSlice(data, 0, 4) === fragment.selector,\n            `data signature does not match error ${fragment.name}.`,\n            'data',\n            data,\n        );\n\n        return this._decodeParams(fragment.inputs, dataSlice(data, 4));\n    }\n\n    /**\n     * Encodes the transaction revert data for a call result that reverted from the the Contract with the sepcified\n     * `error` (see {@link getError | **getError**} for valid values for `fragment`) with the `values`.\n     *\n     * This is generally not used by most developers, unless trying to mock a result from a Contract.\n     */\n    encodeErrorResult(fragment: ErrorFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof fragment === 'string') {\n            const f = this.getError(fragment);\n            assertArgument(f, 'unknown error', 'fragment', fragment);\n            fragment = f;\n        }\n\n        return concat([fragment.selector, this._encodeParams(fragment.inputs, values || [])]);\n    }\n\n    /**\n     * Decodes the `data` from a transaction `tx.data` for the function specified (see\n     * {@link getFunction | **getFunction**} for valid values for `fragment`).\n     *\n     * Most developers should prefer the {@link parseTransaction | **parseTransaction**} method instead, which will\n     * automatically detect the fragment.\n     */\n    decodeFunctionData(fragment: FunctionFragment | string, data: BytesLike): Result {\n        if (typeof fragment === 'string') {\n            const f = this.getFunction(fragment);\n            assertArgument(f, 'unknown function', 'fragment', fragment);\n            fragment = f;\n        }\n\n        assertArgument(\n            dataSlice(data, 0, 4) === fragment.selector,\n            `data signature does not match function ${fragment.name}.`,\n            'data',\n            data,\n        );\n\n        return this._decodeParams(fragment.inputs, dataSlice(data, 4));\n    }\n\n    /**\n     * Encodes the `tx.data` for a transaction that calls the function specified (see\n     * {@link getFunction | **getFunction**} for valid values for `fragment`) with the `values`.\n     */\n    encodeFunctionData(fragment: FunctionFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof fragment === 'string') {\n            const f = this.getFunction(fragment);\n            assertArgument(f, 'unknown function', 'fragment', fragment);\n            fragment = f;\n        }\n\n        return concat([fragment.selector, this._encodeParams(fragment.inputs, values || [])]);\n    }\n\n    /**\n     * Decodes the result `data` (e.g. from an `quai_call`) for the specified function (see\n     * {@link getFunction | **getFunction**} for valid values for `key`).\n     *\n     * Most developers should prefer the {@link parseCallResult | **parseCallResult**} method instead, which will\n     * automatically detect a `CALL_EXCEPTION` and throw the corresponding error.\n     */\n    decodeFunctionResult(fragment: FunctionFragment | string, data: BytesLike): Result {\n        if (typeof fragment === 'string') {\n            const f = this.getFunction(fragment);\n            assertArgument(f, 'unknown function', 'fragment', fragment);\n            fragment = f;\n        }\n\n        let message = 'invalid length for result data';\n\n        const bytes = getBytesCopy(data);\n        if (bytes.length % 32 === 0) {\n            try {\n                return this.#abiCoder.decode(fragment.outputs, bytes);\n            } catch (error) {\n                message = 'could not decode result data';\n            }\n        }\n\n        // Call returned data with no error, but the data is junk\n        assert(false, message, 'BAD_DATA', {\n            value: hexlify(bytes),\n            info: { method: fragment.name, signature: fragment.format() },\n        });\n    }\n\n    makeError(_data: BytesLike, tx: CallExceptionTransaction): CallExceptionError {\n        const data = getBytes(_data, 'data');\n\n        const error = AbiCoder.getBuiltinCallException('call', tx, data);\n\n        // Not a built-in error; try finding a custom error\n        const customPrefix = 'execution reverted (unknown custom error)';\n        if (error.message.startsWith(customPrefix)) {\n            const selector = hexlify(data.slice(0, 4));\n\n            const ef = this.getError(selector);\n            if (ef) {\n                try {\n                    const args = this.#abiCoder.decode(ef.inputs, data.slice(4));\n                    error.revert = {\n                        name: ef.name,\n                        signature: ef.format(),\n                        args,\n                    };\n                    error.reason = error.revert.signature;\n                    error.message = `execution reverted: ${error.reason}`;\n                } catch (e) {\n                    error.message = `execution reverted (coult not decode custom error)`;\n                }\n            }\n        }\n\n        // Add the invocation, if available\n        const parsed = this.parseTransaction(tx);\n        if (parsed) {\n            error.invocation = {\n                method: parsed.name,\n                signature: parsed.signature,\n                args: parsed.args,\n            };\n        }\n\n        return error;\n    }\n\n    /**\n     * Encodes the result data (e.g. from an `quai_call`) for the specified function (see\n     * {@link getFunction | **getFunction**} for valid values for `fragment`) with `values`.\n     *\n     * This is generally not used by most developers, unless trying to mock a result from a Contract.\n     */\n    encodeFunctionResult(fragment: FunctionFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof fragment === 'string') {\n            const f = this.getFunction(fragment);\n            assertArgument(f, 'unknown function', 'fragment', fragment);\n            fragment = f;\n        }\n        return hexlify(this.#abiCoder.encode(fragment.outputs, values || []));\n    }\n\n    // Create the filter for the event with search criteria (e.g. for quai_filterLog)\n    encodeFilterTopics(\n        fragment: EventFragment | string,\n        values: ReadonlyArray<any>,\n    ): Array<null | string | Array<string>> {\n        if (typeof fragment === 'string') {\n            const f = this.getEvent(fragment);\n            assertArgument(f, 'unknown event', 'eventFragment', fragment);\n            fragment = f;\n        }\n\n        assert(\n            values.length <= fragment.inputs.length,\n            `too many arguments for ${fragment.format()}`,\n            'UNEXPECTED_ARGUMENT',\n            { count: values.length, expectedCount: fragment.inputs.length },\n        );\n\n        const topics: Array<null | string | Array<string>> = [];\n        if (!fragment.anonymous) {\n            topics.push(fragment.topicHash);\n        }\n\n        // @TODO: Use the coders for this; to properly support tuples, etc.\n        const encodeTopic = (param: ParamType, value: any): string => {\n            if (param.type === 'string') {\n                return id(value);\n            } else if (param.type === 'bytes') {\n                return keccak256(hexlify(value));\n            }\n\n            if (param.type === 'bool' && typeof value === 'boolean') {\n                value = value ? '0x01' : '0x00';\n            } else if (param.type.match(/^u?int/)) {\n                value = toBeHex(value); // @TODO: Should this toTwos??\n            } else if (param.type.match(/^bytes/)) {\n                value = zeroPadBytes(value, 32);\n            } else if (param.type === 'address') {\n                // Check addresses are valid\n                this.#abiCoder.encode(['address'], [value]);\n            }\n\n            return zeroPadValue(hexlify(value), 32);\n        };\n\n        values.forEach((value, index) => {\n            const param = (<EventFragment>fragment).inputs[index];\n\n            if (!param.indexed) {\n                assertArgument(\n                    value == null,\n                    'cannot filter non-indexed parameters; must be null',\n                    'contract.' + param.name,\n                    value,\n                );\n                return;\n            }\n\n            if (value == null) {\n                topics.push(null);\n            } else if (param.baseType === 'array' || param.baseType === 'tuple') {\n                assertArgument(false, 'filtering with tuples or arrays not supported', 'contract.' + param.name, value);\n            } else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            } else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n\n        return topics;\n    }\n\n    encodeEventLog(\n        fragment: EventFragment | string,\n        values: ReadonlyArray<any>,\n    ): { data: string; topics: Array<string> } {\n        if (typeof fragment === 'string') {\n            const f = this.getEvent(fragment);\n            assertArgument(f, 'unknown event', 'eventFragment', fragment);\n            fragment = f;\n        }\n\n        const topics: Array<string> = [];\n\n        const dataTypes: Array<ParamType> = [];\n        const dataValues: Array<string> = [];\n\n        if (!fragment.anonymous) {\n            topics.push(fragment.topicHash);\n        }\n\n        assertArgument(values.length === fragment.inputs.length, 'event arguments/values mismatch', 'values', values);\n\n        fragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n                if (param.type === 'string') {\n                    topics.push(id(value));\n                } else if (param.type === 'bytes') {\n                    topics.push(keccak256(value));\n                } else if (param.baseType === 'tuple' || param.baseType === 'array') {\n                    // @TODO\n                    throw new Error('not implemented');\n                } else {\n                    topics.push(this.#abiCoder.encode([param.type], [value]));\n                }\n            } else {\n                dataTypes.push(param);\n                dataValues.push(value);\n            }\n        });\n\n        return {\n            data: this.#abiCoder.encode(dataTypes, dataValues),\n            topics: topics,\n        };\n    }\n\n    // Decode a filter for the event and the search criteria\n    decodeEventLog(fragment: EventFragment | string, data: BytesLike, topics?: ReadonlyArray<string>): Result {\n        if (typeof fragment === 'string') {\n            const f = this.getEvent(fragment);\n            assertArgument(f, 'unknown event', 'eventFragment', fragment);\n            fragment = f;\n        }\n\n        if (topics != null && !fragment.anonymous) {\n            const eventTopic = fragment.topicHash;\n            assertArgument(\n                isHexString(topics[0], 32) && topics[0].toLowerCase() === eventTopic,\n                'fragment/topic mismatch',\n                'topics[0]',\n                topics[0],\n            );\n            topics = topics.slice(1);\n        }\n\n        const indexed: Array<ParamType> = [];\n        const nonIndexed: Array<ParamType> = [];\n        const dynamic: Array<boolean> = [];\n\n        // TODO: `index` is not used, remove?\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        fragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (\n                    param.type === 'string' ||\n                    param.type === 'bytes' ||\n                    param.baseType === 'tuple' ||\n                    param.baseType === 'array'\n                ) {\n                    indexed.push(ParamType.from({ type: 'bytes32', name: param.name }));\n                    dynamic.push(true);\n                } else {\n                    indexed.push(param);\n                    dynamic.push(false);\n                }\n            } else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n            }\n        });\n\n        const resultIndexed = topics != null ? this.#abiCoder.decode(indexed, concat(topics)) : null;\n        const resultNonIndexed = this.#abiCoder.decode(nonIndexed, data, true);\n\n        //const result: (Array<any> & { [ key: string ]: any }) = [ ];\n        const values: Array<any> = [];\n        const keys: Array<null | string> = [];\n        let nonIndexedIndex = 0,\n            indexedIndex = 0;\n        fragment.inputs.forEach((param, index) => {\n            let value: null | Indexed | Error = null;\n            if (param.indexed) {\n                if (resultIndexed == null) {\n                    value = new Indexed(null);\n                } else if (dynamic[index]) {\n                    value = new Indexed(resultIndexed[indexedIndex++]);\n                } else {\n                    try {\n                        value = resultIndexed[indexedIndex++];\n                    } catch (error: any) {\n                        value = error;\n                    }\n                }\n            } else {\n                try {\n                    value = resultNonIndexed[nonIndexedIndex++];\n                } catch (error: any) {\n                    value = error;\n                }\n            }\n\n            values.push(value);\n            keys.push(param.name || null);\n        });\n\n        return Result.fromItems(values, keys);\n    }\n\n    /**\n     * Parses a transaction, finding the matching function and extracts the parameter values along with other useful\n     * function details.\n     *\n     * If the matching function cannot be found, return null.\n     */\n    parseTransaction(tx: { data: string; value?: BigNumberish }): null | TransactionDescription {\n        const data = getBytes(tx.data, 'tx.data');\n        const value = getBigInt(tx.value != null ? tx.value : 0, 'tx.value');\n\n        const fragment = this.getFunction(hexlify(data.slice(0, 4)));\n\n        if (!fragment) {\n            return null;\n        }\n\n        const args = this.#abiCoder.decode(fragment.inputs, data.slice(4));\n        return new TransactionDescription(fragment, fragment.selector, args, value);\n    }\n\n    // TODO: not implemented\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    parseCallResult(data: BytesLike): Result {\n        throw new Error('@TODO');\n    }\n\n    /**\n     * Parses a receipt log, finding the matching event and extracts the parameter values along with other useful event\n     * details.\n     *\n     * If the matching event cannot be found, returns null.\n     */\n    parseLog(log: { topics: Array<string>; data: string }): null | LogDescription {\n        const fragment = this.getEvent(log.topics[0]);\n\n        if (!fragment || fragment.anonymous) {\n            return null;\n        }\n\n        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n        //        Probably not, because just because it is the only event in the ABI does\n        //        not mean we have the full ABI; maybe just a fragment?\n\n        return new LogDescription(fragment, fragment.topicHash, this.decodeEventLog(fragment, log.data, log.topics));\n    }\n\n    /**\n     * Parses a revert data, finding the matching error and extracts the parameter values along with other useful error\n     * details.\n     *\n     * If the matching error cannot be found, returns null.\n     */\n    parseError(data: BytesLike): null | ErrorDescription {\n        const hexData = hexlify(data);\n\n        const fragment = this.getError(dataSlice(hexData, 0, 4));\n\n        if (!fragment) {\n            return null;\n        }\n\n        const args = this.#abiCoder.decode(fragment.inputs, dataSlice(hexData, 4));\n        return new ErrorDescription(fragment, fragment.selector, args);\n    }\n\n    /**\n     * Creates a new {@link Interface | **Interface**} from the ABI `value`.\n     *\n     * The `value` may be provided as an existing {@link Interface | **Interface**} object, a JSON-encoded ABI or any\n     * Human-Readable ABI format.\n     */\n    static from(value: InterfaceAbi | Interface): Interface {\n        // Already an Interface, which is immutable\n        if (value instanceof Interface) {\n            return value;\n        }\n\n        // JSON\n        if (typeof value === 'string') {\n            return new Interface(JSON.parse(value));\n        }\n\n        // Maybe an interface from an older version, or from a symlinked copy\n        if (typeof (<any>value).format === 'function') {\n            return new Interface((<any>value).format('json'));\n        }\n\n        // Array of fragments\n        return new Interface(value);\n    }\n}\n","// import from provider.ts instead of index.ts to prevent circular dep\n// from quaiscanProvider\nimport { Block, Log, QuaiTransactionResponse, TransactionReceipt, TransactionResponse } from '../providers/provider.js';\nimport { defineProperties, EventPayload } from '../utils/index.js';\n\nimport type { EventFragment, Interface, Result } from '../abi/index.js';\nimport type { Listener } from '../utils/index.js';\nimport type { Provider } from '../providers/index.js';\n\nimport type { BaseContract } from './contract.js';\nimport type { ContractEventName } from './types.js';\nimport { Shard } from '../constants/index.js';\n\n/**\n * An **EventLog** contains additional properties parsed from the {@link Log | **Log**}.\n *\n * @category Contract\n */\nexport class EventLog extends Log {\n    /**\n     * The Contract Interface.\n     */\n    readonly interface!: Interface;\n\n    /**\n     * The matching event.\n     */\n    readonly fragment!: EventFragment;\n\n    /**\n     * The parsed arguments passed to the event by `emit`.\n     */\n    readonly args!: Result;\n\n    /**\n     * @ignore\n     */\n    constructor(log: Log, iface: Interface, fragment: EventFragment) {\n        super(log, log.provider);\n        const args = iface.decodeEventLog(fragment, log.data, log.topics);\n        defineProperties<EventLog>(this, { args, fragment, interface: iface });\n    }\n\n    /**\n     * The name of the event.\n     */\n    get eventName(): string {\n        return this.fragment.name;\n    }\n\n    /**\n     * The signature of the event.\n     */\n    get eventSignature(): string {\n        return this.fragment.format();\n    }\n}\n\n/**\n * An **EventLog** contains additional properties parsed from the {@link Log | **Log**}.\n *\n * @category Contract\n */\nexport class UndecodedEventLog extends Log {\n    /**\n     * The error encounted when trying to decode the log.\n     */\n    readonly error!: Error;\n\n    /**\n     * @ignore\n     */\n    constructor(log: Log, error: Error) {\n        super(log, log.provider);\n        defineProperties<UndecodedEventLog>(this, { error });\n    }\n}\n\n/**\n * A **ContractTransactionReceipt** includes the parsed logs from a {@link TransactionReceipt | **TransactionReceipt**}.\n *\n * @category Contract\n */\nexport class ContractTransactionReceipt extends TransactionReceipt {\n    readonly #iface: Interface;\n\n    /**\n     * @ignore\n     */\n    constructor(iface: Interface, provider: Provider, tx: TransactionReceipt) {\n        super(tx, provider);\n        this.#iface = iface;\n    }\n\n    /**\n     * The parsed logs for any {@link Log | **Log**} which has a matching event in the Contract ABI.\n     */\n    get logs(): Array<EventLog | Log> {\n        return super.logs.map((log) => {\n            const fragment = log.topics.length ? this.#iface.getEvent(log.topics[0]) : null;\n            if (fragment) {\n                try {\n                    return new EventLog(log, this.#iface, fragment);\n                } catch (error: any) {\n                    return new UndecodedEventLog(log, error);\n                }\n            }\n\n            return log;\n        });\n    }\n}\n\n/**\n * A **ContractTransactionResponse** will return a {@link ContractTransactionReceipt | **ContractTransactionReceipt**}\n * when waited on.\n *\n * @category Contract\n */\nexport class ContractTransactionResponse extends QuaiTransactionResponse {\n    readonly #iface: Interface;\n\n    /**\n     * @ignore\n     */\n    constructor(iface: Interface, provider: Provider, tx: QuaiTransactionResponse) {\n        super(tx, provider);\n        this.#iface = iface;\n    }\n\n    /**\n     * Resolves once this transaction has been mined and has `confirms` blocks including it (default: `1`) with an\n     * optional `timeout`.\n     *\n     * This can resolve to `null` only if `confirms` is `0` and the transaction has not been mined, otherwise this will\n     * wait until enough confirmations have completed.\n     *\n     * @param {number} confirms - The number of confirmations to wait for.\n     * @returns {Promise<ContractTransactionReceipt | null>} The transaction receipt, or `null` if `confirms` is `0`.\n     */\n    async wait(confirms?: number): Promise<null | ContractTransactionReceipt> {\n        const receipt = await super.wait(confirms);\n        if (receipt == null) {\n            return null;\n        }\n        return new ContractTransactionReceipt(this.#iface, this.provider, receipt);\n    }\n}\n\n/**\n * A **ContractUnknownEventPayload** is included as the last parameter to Contract Events when the event does not match\n * any events in the ABI.\n *\n * @category Contract\n */\nexport class ContractUnknownEventPayload extends EventPayload<ContractEventName> {\n    /**\n     * The log with no matching events.\n     */\n    readonly log!: Log;\n\n    /**\n     * @ignore\n     */\n    constructor(contract: BaseContract, listener: null | Listener, filter: ContractEventName, log: Log) {\n        super(contract, listener, filter);\n        defineProperties<ContractUnknownEventPayload>(this, { log });\n    }\n\n    /**\n     * Resolves to the block the event occured in.\n     *\n     * @param {Shard} shard - The shard to get the block from.\n     * @returns {Promise<Block>} A promise resolving to the block the event occured in.\n     */\n    async getBlock(shard: Shard): Promise<Block> {\n        return await this.log.getBlock(shard);\n    }\n\n    /**\n     * Resolves to the transaction the event occured in.\n     *\n     * @returns {Promise<TransactionResponse>} A promise resolving to the transaction the event occured in.\n     */\n    async getTransaction(): Promise<TransactionResponse> {\n        return await this.log.getTransaction();\n    }\n\n    /**\n     * Resolves to the transaction receipt the event occured in.\n     *\n     * @returns {Promise<TransactionReceipt>} A promise resolving to the transaction receipt the event occured in.\n     */\n    async getTransactionReceipt(): Promise<TransactionReceipt> {\n        return await this.log.getTransactionReceipt();\n    }\n}\n\n/**\n * A **ContractEventPayload** is included as the last parameter to Contract Events when the event is known.\n *\n * @category Contract\n */\nexport class ContractEventPayload extends ContractUnknownEventPayload {\n    /**\n     * The matching event.\n     */\n    declare readonly fragment: EventFragment;\n\n    /**\n     * The log, with parsed properties.\n     */\n    declare readonly log: EventLog;\n\n    /**\n     * The parsed arguments passed to the event by `emit`.\n     */\n    declare readonly args: Result;\n\n    /**\n     * @ignore\n     */\n    constructor(\n        contract: BaseContract,\n        listener: null | Listener,\n        filter: ContractEventName,\n        fragment: EventFragment,\n        _log: Log,\n    ) {\n        super(contract, listener, filter, new EventLog(_log, contract.interface, fragment));\n        const args = contract.interface.decodeEventLog(fragment, this.log.data, this.log.topics);\n        defineProperties<ContractEventPayload>(this, { args, fragment });\n    }\n\n    /**\n     * The event name.\n     */\n    get eventName(): string {\n        return this.fragment.name;\n    }\n\n    /**\n     * The event signature.\n     */\n    get eventSignature(): string {\n        return this.fragment.format();\n    }\n}\n","import { Interface, Typed } from '../abi/index.js';\nimport { isAddressable, resolveAddress, validateAddress } from '../address/index.js';\n// import from provider.ts instead of index.ts to prevent circular dep\n// from quaiscanProvider\nimport {\n    copyRequest,\n    Log,\n    QuaiTransactionRequest,\n    QuaiTransactionResponse,\n    TransactionResponse,\n} from '../providers/provider.js';\nimport {\n    defineProperties,\n    getBigInt,\n    isCallException,\n    isHexString,\n    resolveProperties,\n    isError,\n    assert,\n    assertArgument,\n    getZoneForAddress,\n} from '../utils/index.js';\n\nimport {\n    ContractEventPayload,\n    ContractUnknownEventPayload,\n    ContractTransactionResponse,\n    EventLog,\n    UndecodedEventLog,\n} from './wrappers.js';\n\nimport type { EventFragment, FunctionFragment, InterfaceAbi, ParamType, Result } from '../abi/index.js';\nimport type { Addressable } from '../address/index.js';\nimport type { EventEmitterable, Listener } from '../utils/index.js';\nimport type { BlockTag, Provider, TransactionRequest, TopicFilter, Filter } from '../providers/index.js';\n\nimport type {\n    BaseContractMethod,\n    ContractEventName,\n    ContractInterface,\n    ContractMethodArgs,\n    ContractMethod,\n    ContractEventArgs,\n    ContractEvent,\n    ContractTransaction,\n    ContractRunner,\n    DeferredTopicFilter,\n    WrappedFallback,\n} from './types.js';\nimport { getNodeLocationFromZone } from '../utils/shards.js';\n\nconst BN_0 = BigInt(0);\n\n/**\n * Interface for a contract runner that can call transactions.\n *\n * @interface\n */\ninterface ContractRunnerCaller extends ContractRunner {\n    call: (tx: TransactionRequest) => Promise<string>;\n}\n\n/**\n * Interface for a contract runner that can estimate gas.\n *\n * @interface\n */\ninterface ContractRunnerEstimater extends ContractRunner {\n    estimateGas: (tx: TransactionRequest) => Promise<bigint>;\n}\n\n/**\n * Interface for a contract runner that can send transactions.\n *\n * @interface\n */\ninterface ContractRunnerSender extends ContractRunner {\n    sendTransaction: (tx: TransactionRequest) => Promise<TransactionResponse>;\n}\n\n/**\n * Check if the value can call transactions.\n *\n * @param {any} value - The value to check.\n * @returns {value is ContractRunnerCaller} True if the value can call transactions.\n */\nfunction canCall(value: any): value is ContractRunnerCaller {\n    return value && typeof value.call === 'function';\n}\n\n/**\n * Check if the value can estimate gas.\n *\n * @param {any} value - The value to check.\n * @returns {value is ContractRunnerEstimater} True if the value can estimate gas.\n */\nfunction canEstimate(value: any): value is ContractRunnerEstimater {\n    return value && typeof value.estimateGas === 'function';\n}\n\n/**\n * Check if the value can send transactions.\n *\n * @param {any} value - The value to check.\n * @returns {value is ContractRunnerSender} True if the value can send transactions.\n */\nfunction canSend(value: any): value is ContractRunnerSender {\n    return value && typeof value.sendTransaction === 'function';\n}\n\n/**\n * Class representing a prepared topic filter.\n *\n * @implements {DeferredTopicFilter}\n */\nclass PreparedTopicFilter implements DeferredTopicFilter {\n    #filter: Promise<TopicFilter>;\n    readonly fragment!: EventFragment;\n\n    /**\n     * @ignore\n     */\n    constructor(contract: BaseContract, fragment: EventFragment, args: Array<any>) {\n        defineProperties<PreparedTopicFilter>(this, { fragment });\n        if (fragment.inputs.length < args.length) {\n            throw new Error('too many arguments');\n        }\n\n        this.#filter = (async function () {\n            const resolvedArgs = await Promise.all(\n                fragment.inputs.map((param, index) => {\n                    const arg = args[index];\n                    if (arg == null) {\n                        return null;\n                    }\n\n                    return param.walkAsync(args[index], (type, value) => {\n                        if (type === 'address') {\n                            if (Array.isArray(value)) {\n                                return Promise.all(value.map((v) => resolveAddress(v)));\n                            }\n                            return resolveAddress(value);\n                        }\n                        return value;\n                    });\n                }),\n            );\n\n            return contract.interface.encodeFilterTopics(fragment, resolvedArgs);\n        })();\n    }\n\n    /**\n     * Get the topic filter.\n     *\n     * @returns {Promise<TopicFilter>} The topic filter.\n     */\n    getTopicFilter(): Promise<TopicFilter> {\n        return this.#filter;\n    }\n}\n\n/**\n * Get the runner for a specific feature.\n *\n * @param {any} value - The value to check.\n * @param {keyof ContractRunner} feature - The feature to check for.\n * @returns {null | T} The runner if available, otherwise null.\n */\nfunction getRunner<T extends ContractRunner>(value: any, feature: keyof ContractRunner): null | T {\n    if (value == null) {\n        return null;\n    }\n    if (typeof value[feature] === 'function') {\n        return value;\n    }\n    if (value.provider && typeof value.provider[feature] === 'function') {\n        return value.provider;\n    }\n    return null;\n}\n\n/**\n * Get the provider from a contract runner.\n *\n * @param {null | ContractRunner} value - The contract runner.\n * @returns {null | Provider} The provider if available, otherwise null.\n */\nfunction getProvider(value: null | ContractRunner): null | Provider {\n    if (value == null) {\n        return null;\n    }\n    return value.provider || null;\n}\n\n/**\n * @ignore Copy Overrides and validate them.\n * @param {any} arg - The argument containing overrides.\n * @param {string[]} [allowed] - The allowed override keys.\n * @returns {Promise<Omit<ContractTransaction, O>>} The copied and validated overrides.\n * @throws {Error} If the overrides are invalid.\n */\nexport async function copyOverrides<O extends string = 'data' | 'to'>(\n    arg: any,\n    allowed?: Array<string>,\n): Promise<Omit<ContractTransaction, O>> {\n    // Make sure the overrides passed in are a valid overrides object\n    const _overrides = Typed.dereference(arg, 'overrides');\n    assertArgument(typeof _overrides === 'object', 'invalid overrides parameter', 'overrides', arg);\n\n    // Create a shallow copy (we'll deep-ify anything needed during normalizing)\n    const overrides = copyRequest(_overrides);\n\n    assertArgument(\n        !('to' in overrides) || overrides.to == null || (allowed || []).indexOf('to') >= 0,\n        'cannot override to',\n        'overrides.to',\n        overrides,\n    );\n    assertArgument(\n        !('data' in overrides) || overrides.data == null || (allowed || []).indexOf('data') >= 0,\n        'cannot override data',\n        'overrides.data',\n        overrides,\n    );\n\n    // Resolve any from\n    if ('from' in overrides && overrides.from) {\n        overrides.from = await overrides.from;\n    }\n\n    return <Omit<ContractTransaction, O>>overrides;\n}\n\n/**\n * @ignore Resolve Arguments for a contract runner.\n * @param {null | ContractRunner} _runner - The contract runner.\n * @param {ReadonlyArray<ParamType>} inputs - The input parameter types.\n * @param {any[]} args - The arguments to resolve.\n * @returns {Promise<any[]>} The resolved arguments.\n */\nexport async function resolveArgs(\n    _runner: null | ContractRunner,\n    inputs: ReadonlyArray<ParamType>,\n    args: Array<any>,\n): Promise<Array<any>> {\n    // Recursively descend into args and resolve any addresses\n    return await Promise.all(\n        inputs.map((param, index) => {\n            return param.walkAsync(args[index], (type, value) => {\n                value = Typed.dereference(value, type);\n                if (type === 'address') {\n                    return resolveAddress(value);\n                }\n                return value;\n            });\n        }),\n    );\n}\n\n/**\n * Build a wrapped fallback method for a contract.\n *\n * @param {BaseContract} contract - The contract instance.\n * @returns {WrappedFallback} The wrapped fallback method.\n */\nfunction buildWrappedFallback(contract: BaseContract): WrappedFallback {\n    /**\n     * Populate a transaction with overrides.\n     *\n     * @param {Omit<QuaiTransactionRequest, 'to'>} [overrides] - The transaction overrides.\n     * @returns {Promise<ContractTransaction>} The populated transaction.\n     * @throws {Error} If the overrides are invalid.\n     */\n    const populateTransaction = async function (\n        overrides?: Omit<QuaiTransactionRequest, 'to'>,\n    ): Promise<ContractTransaction> {\n        // If an overrides was passed in, copy it and normalize the values\n\n        const tx: ContractTransaction = <any>await copyOverrides<'data'>(overrides, ['data']);\n        tx.to = await contract.getAddress();\n        validateAddress(tx.to);\n\n        if (tx.from) {\n            tx.from = await resolveAddress(tx.from);\n            validateAddress(tx.from);\n        }\n\n        const iface = contract.interface;\n\n        const noValue = getBigInt(tx.value || BN_0, 'overrides.value') === BN_0;\n        const noData = (tx.data || '0x') === '0x';\n\n        if (iface.fallback && !iface.fallback.payable && iface.receive && !noData && !noValue) {\n            assertArgument(\n                false,\n                'cannot send data to receive or send value to non-payable fallback',\n                'overrides',\n                overrides,\n            );\n        }\n\n        assertArgument(\n            iface.fallback || noData,\n            'cannot send data to receive-only contract',\n            'overrides.data',\n            tx.data,\n        );\n\n        // Only allow payable contracts to set non-zero value\n        const payable = iface.receive || (iface.fallback && iface.fallback.payable);\n        assertArgument(payable || noValue, 'cannot send value to non-payable fallback', 'overrides.value', tx.value);\n\n        // Only allow fallback contracts to set non-empty data\n        assertArgument(\n            iface.fallback || noData,\n            'cannot send data to receive-only contract',\n            'overrides.data',\n            tx.data,\n        );\n\n        return tx;\n    };\n\n    /**\n     * Perform a static call with the given overrides.\n     *\n     * @param {Omit<QuaiTransactionRequest, 'to'>} [overrides] - The transaction overrides.\n     * @returns {Promise<string>} The result of the static call.\n     * @throws {Error} If the call fails.\n     */\n    const staticCall = async function (overrides?: Omit<QuaiTransactionRequest, 'to'>): Promise<string> {\n        const runner = getRunner(contract.runner, 'call');\n        assert(canCall(runner), 'contract runner does not support calling', 'UNSUPPORTED_OPERATION', {\n            operation: 'call',\n        });\n\n        const tx = await populateTransaction(overrides);\n\n        try {\n            return await runner.call(tx);\n        } catch (error: any) {\n            if (isCallException(error) && error.data) {\n                throw contract.interface.makeError(error.data, tx);\n            }\n            throw error;\n        }\n    };\n\n    /**\n     * Send a transaction with the given overrides.\n     *\n     * @param {Omit<QuaiTransactionRequest, 'to'>} [overrides] - The transaction overrides.\n     * @returns {Promise<ContractTransactionResponse>} The transaction response.\n     * @throws {Error} If the transaction fails.\n     */\n    const send = async function (overrides?: Omit<QuaiTransactionRequest, 'to'>): Promise<ContractTransactionResponse> {\n        const runner = contract.runner;\n        assert(canSend(runner), 'contract runner does not support sending transactions', 'UNSUPPORTED_OPERATION', {\n            operation: 'sendTransaction',\n        });\n\n        const tx = (await runner.sendTransaction(await populateTransaction(overrides))) as QuaiTransactionResponse;\n        const provider = getProvider(contract.runner);\n        // @TODO: the provider can be null; make a custom dummy provider that will throw a\n        // meaningful error\n        return new ContractTransactionResponse(contract.interface, <Provider>provider, tx);\n    };\n\n    /**\n     * Estimate the gas required for a transaction with the given overrides.\n     *\n     * @param {Omit<QuaiTransactionRequest, 'to'>} [overrides] - The transaction overrides.\n     * @returns {Promise<bigint>} The estimated gas.\n     * @throws {Error} If the gas estimation fails.\n     */\n    const estimateGas = async function (overrides?: Omit<QuaiTransactionRequest, 'to'>): Promise<bigint> {\n        const runner = getRunner(contract.runner, 'estimateGas');\n        assert(canEstimate(runner), 'contract runner does not support gas estimation', 'UNSUPPORTED_OPERATION', {\n            operation: 'estimateGas',\n        });\n\n        return await runner.estimateGas(await populateTransaction(overrides));\n    };\n\n    /**\n     * Send a transaction with the given overrides.\n     *\n     * @param {Omit<QuaiTransactionRequest, 'to'>} [overrides] - The transaction overrides.\n     * @returns {Promise<ContractTransactionResponse>} The transaction response.\n     * @throws {Error} If the transaction fails.\n     */\n    const method = async (overrides?: Omit<QuaiTransactionRequest, 'to'>) => {\n        return await send(overrides);\n    };\n\n    defineProperties<any>(method, {\n        _contract: contract,\n\n        estimateGas,\n        populateTransaction,\n        send,\n        staticCall,\n    });\n\n    return <WrappedFallback>method;\n}\n\n/**\n * Build a wrapped method for a contract.\n *\n * @param {BaseContract} contract - The contract instance.\n * @param {string} key - The method key.\n * @returns {BaseContractMethod<A, R, D>} The wrapped method.\n */\nfunction buildWrappedMethod<\n    A extends Array<any> = Array<any>,\n    R = any,\n    D extends R | ContractTransactionResponse = ContractTransactionResponse,\n>(contract: BaseContract, key: string): BaseContractMethod<A, R, D> {\n    /**\n     * Get the function fragment for the given arguments.\n     *\n     * @param {...ContractMethodArgs<A>} args - The method arguments.\n     * @returns {FunctionFragment} The function fragment.\n     * @throws {Error} If no matching fragment is found.\n     */\n    const getFragment = function (...args: ContractMethodArgs<A>): FunctionFragment {\n        const fragment = contract.interface.getFunction(key, args);\n        assert(fragment, 'no matching fragment', 'UNSUPPORTED_OPERATION', {\n            operation: 'fragment',\n            info: { key, args },\n        });\n        return fragment;\n    };\n\n    /**\n     * Populate a transaction with the given arguments.\n     *\n     * @param {...ContractMethodArgs<A>} args - The method arguments.\n     * @returns {Promise<ContractTransaction>} The populated transaction.\n     * @throws {Error} If the arguments are invalid.\n     */\n    const populateTransaction = async function (...args: ContractMethodArgs<A>): Promise<ContractTransaction> {\n        const fragment = getFragment(...args);\n\n        // If an overrides was passed in, copy it and normalize the values\n        let overrides: Omit<ContractTransaction, 'data' | 'to'>;\n        if (fragment.inputs.length + 1 === args.length) {\n            overrides = await copyOverrides(args.pop());\n\n            const resolvedArgs = await resolveArgs(contract.runner, fragment.inputs, args);\n\n            return Object.assign(\n                {},\n                overrides,\n                await resolveProperties({\n                    to: contract.getAddress(),\n                    data: contract.interface.encodeFunctionData(fragment, resolvedArgs),\n                }),\n            );\n        }\n\n        if (fragment.inputs.length !== args.length) {\n            throw new Error(\"internal error: fragment inputs doesn't match arguments; should not happen\");\n        }\n\n        const resolvedArgs = await resolveArgs(contract.runner, fragment.inputs, args);\n\n        return await resolveProperties({\n            to: contract.getAddress(),\n            from: args.pop()?.from,\n            data: contract.interface.encodeFunctionData(fragment, resolvedArgs),\n        });\n    };\n\n    /**\n     * Perform a static call with the given arguments.\n     *\n     * @param {...ContractMethodArgs<A>} args - The method arguments.\n     * @returns {Promise<R>} The result of the static call.\n     * @throws {Error} If the call fails.\n     */\n    const staticCall = async function (...args: ContractMethodArgs<A>): Promise<R> {\n        const result = await staticCallResult(...args);\n        if (result.length === 1) {\n            return result[0];\n        }\n        return <R>(<unknown>result);\n    };\n\n    /**\n     * Send a transaction with the given arguments.\n     *\n     * @param {...ContractMethodArgs<A>} args - The method arguments.\n     * @returns {Promise<ContractTransactionResponse>} The transaction response.\n     * @throws {Error} If the transaction fails.\n     */\n    const send = async function (...args: ContractMethodArgs<A>): Promise<ContractTransactionResponse> {\n        const runner = contract.runner;\n        assert(canSend(runner), 'contract runner does not support sending transactions', 'UNSUPPORTED_OPERATION', {\n            operation: 'sendTransaction',\n        });\n        const pop = await populateTransaction(...args);\n        if (!pop.from && 'address' in runner && typeof runner.address === 'string') {\n            pop.from = await resolveAddress(runner.address);\n        }\n\n        const tx = (await runner.sendTransaction(await pop)) as QuaiTransactionResponse;\n        const provider = getProvider(contract.runner);\n        // @TODO: the provider can be null; make a custom dummy provider that will throw a\n        // meaningful error\n        return new ContractTransactionResponse(contract.interface, <Provider>provider, tx);\n    };\n\n    /**\n     * Estimate the gas required for a transaction with the given arguments.\n     *\n     * @param {...ContractMethodArgs<A>} args - The method arguments.\n     * @returns {Promise<bigint>} The estimated gas.\n     * @throws {Error} If the gas estimation fails.\n     */\n    const estimateGas = async function (...args: ContractMethodArgs<A>): Promise<bigint> {\n        const runner = getRunner(contract.runner, 'estimateGas');\n        assert(canEstimate(runner), 'contract runner does not support gas estimation', 'UNSUPPORTED_OPERATION', {\n            operation: 'estimateGas',\n        });\n\n        return await runner.estimateGas(await populateTransaction(...args));\n    };\n\n    /**\n     * Perform a static call and return the result with the given arguments.\n     *\n     * @param {...ContractMethodArgs<A>} args - The method arguments.\n     * @returns {Promise<Result>} The result of the static call.\n     * @throws {Error} If the call fails.\n     */\n    const staticCallResult = async function (...args: ContractMethodArgs<A>): Promise<Result> {\n        const runner = getRunner(contract.runner, 'call');\n        assert(canCall(runner), 'contract runner does not support calling', 'UNSUPPORTED_OPERATION', {\n            operation: 'call',\n        });\n        const tx = await populateTransaction(...args);\n        if (!tx.from && 'address' in runner && typeof runner.address === 'string') {\n            tx.from = await resolveAddress(runner.address);\n        }\n\n        let result = '0x';\n        try {\n            result = await runner.call(tx);\n        } catch (error: any) {\n            if (isCallException(error) && error.data) {\n                throw contract.interface.makeError(error.data, tx);\n            }\n            throw error;\n        }\n\n        const fragment = getFragment(...args);\n        return contract.interface.decodeFunctionResult(fragment, result);\n    };\n\n    /**\n     * Send a transaction or perform a static call based on the method arguments.\n     *\n     * @param {...ContractMethodArgs<A>} args - The method arguments.\n     * @returns {Promise<R | ContractTransactionResponse>} The result of the method call.\n     * @throws {Error} If the method call fails.\n     */\n    const method = async (...args: ContractMethodArgs<A>) => {\n        const fragment = getFragment(...args);\n        if (fragment.constant) {\n            return await staticCall(...args);\n        }\n        return await send(...args);\n    };\n\n    defineProperties<any>(method, {\n        name: contract.interface.getFunctionName(key),\n        _contract: contract,\n        _key: key,\n\n        getFragment,\n\n        estimateGas,\n        populateTransaction,\n        send,\n        staticCall,\n        staticCallResult,\n    });\n\n    // Only works on non-ambiguous keys (refined fragment is always non-ambiguous)\n    Object.defineProperty(method, 'fragment', {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n            const fragment = contract.interface.getFunction(key);\n            assert(fragment, 'no matching fragment', 'UNSUPPORTED_OPERATION', {\n                operation: 'fragment',\n                info: { key },\n            });\n            return fragment;\n        },\n    });\n\n    return <BaseContractMethod<A, R, D>>method;\n}\n\n/**\n * Build a wrapped event for a contract.\n *\n * @param {BaseContract} contract - The contract instance.\n * @param {string} key - The event key.\n * @returns {ContractEvent<A>} The wrapped event.\n */\nfunction buildWrappedEvent<A extends Array<any> = Array<any>>(contract: BaseContract, key: string): ContractEvent<A> {\n    /**\n     * Get the event fragment for the given arguments.\n     *\n     * @param {...ContractEventArgs<A>} args - The event arguments.\n     * @returns {EventFragment} The event fragment.\n     * @throws {Error} If no matching fragment is found.\n     */\n    const getFragment = function (...args: ContractEventArgs<A>): EventFragment {\n        const fragment = contract.interface.getEvent(key, args);\n\n        assert(fragment, 'no matching fragment', 'UNSUPPORTED_OPERATION', {\n            operation: 'fragment',\n            info: { key, args },\n        });\n\n        return fragment;\n    };\n\n    /**\n     * Create a prepared topic filter for the event.\n     *\n     * @param {...ContractMethodArgs<A>} args - The event arguments.\n     * @returns {PreparedTopicFilter} The prepared topic filter.\n     */\n    const method = function (...args: ContractMethodArgs<A>): PreparedTopicFilter {\n        return new PreparedTopicFilter(contract, getFragment(...args), args);\n    };\n\n    defineProperties<any>(method, {\n        name: contract.interface.getEventName(key),\n        _contract: contract,\n        _key: key,\n\n        getFragment,\n    });\n\n    // Only works on non-ambiguous keys (refined fragment is always non-ambiguous)\n    Object.defineProperty(method, 'fragment', {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n            const fragment = contract.interface.getEvent(key);\n\n            assert(fragment, 'no matching fragment', 'UNSUPPORTED_OPERATION', {\n                operation: 'fragment',\n                info: { key },\n            });\n\n            return fragment;\n        },\n    });\n\n    return <ContractEvent<A>>(<unknown>method);\n}\n\ntype Sub = {\n    tag: string;\n    listeners: Array<{ listener: Listener; once: boolean }>;\n    start: () => void;\n    stop: () => void;\n};\n\n// The combination of TypeScrype, Private Fields and Proxies makes\n// the world go boom; so we hide variables with some trickery keeping\n// a symbol attached to each BaseContract which its sub-class (even\n// via a Proxy) can reach and use to look up its internal values.\n\nconst internal = Symbol.for('_quaisInternal_contract');\ntype Internal = {\n    addrPromise: Promise<string>;\n    addr: null | string;\n\n    deployTx: null | ContractTransactionResponse;\n\n    subs: Map<string, Sub>;\n};\n\nconst internalValues: WeakMap<BaseContract, Internal> = new WeakMap();\n\n/**\n * Set internal values for a contract.\n *\n * @param {BaseContract} contract - The contract instance.\n * @param {Internal} values - The internal values.\n */\nfunction setInternal(contract: BaseContract, values: Internal): void {\n    internalValues.set(contract[internal], values);\n}\n\n/**\n * Get internal values for a contract.\n *\n * @param {BaseContract} contract - The contract instance.\n * @returns {Internal} The internal values.\n */\nfunction getInternal(contract: BaseContract): Internal {\n    return internalValues.get(contract[internal]) as Internal;\n}\n\n/**\n * Check if a value is a deferred topic filter.\n *\n * @param {any} value - The value to check.\n * @returns {value is DeferredTopicFilter} True if the value is a deferred topic filter.\n */\nfunction isDeferred(value: any): value is DeferredTopicFilter {\n    return (\n        value &&\n        typeof value === 'object' &&\n        'getTopicFilter' in value &&\n        typeof value.getTopicFilter === 'function' &&\n        value.fragment\n    );\n}\n\n/**\n * Get subscription information for an event.\n *\n * @param {BaseContract} contract - The contract instance.\n * @param {ContractEventName} event - The event name.\n * @returns {Promise<{ fragment: null | EventFragment; tag: string; topics: TopicFilter }>} The subscription\n *   information.\n * @throws {Error} If the event name is unknown.\n */\nasync function getSubInfo(\n    contract: BaseContract,\n    event: ContractEventName,\n): Promise<{ fragment: null | EventFragment; tag: string; topics: TopicFilter }> {\n    let topics: Array<null | string | Array<string>>;\n    let fragment: null | EventFragment = null;\n\n    // Convert named events to topicHash and get the fragment for\n    // events which need deconstructing.\n\n    if (Array.isArray(event)) {\n        const topicHashify = function (name: string): string {\n            if (isHexString(name, 32)) {\n                return name;\n            }\n            const fragment = contract.interface.getEvent(name);\n            assertArgument(fragment, 'unknown fragment', 'name', name);\n            return fragment.topicHash;\n        };\n\n        // Array of Topics and Names; e.g. `[ \"0x1234...89ab\", \"Transfer(address)\" ]`\n        topics = event.map((e) => {\n            if (e == null) {\n                return null;\n            }\n            if (Array.isArray(e)) {\n                return e.map(topicHashify);\n            }\n            return topicHashify(e);\n        });\n    } else if (event === '*') {\n        topics = [null];\n    } else if (typeof event === 'string') {\n        if (isHexString(event, 32)) {\n            // Topic Hash\n            topics = [event];\n        } else {\n            // Name or Signature; e.g. `\"Transfer\", `\"Transfer(address)\"`\n            fragment = contract.interface.getEvent(event);\n            assertArgument(fragment, 'unknown fragment', 'event', event);\n            topics = [fragment.topicHash];\n        }\n    } else if (isDeferred(event)) {\n        // Deferred Topic Filter; e.g. `contract.filter.Transfer(from)`\n        topics = await event.getTopicFilter();\n    } else if (event && 'fragment' in event) {\n        // ContractEvent; e.g. `contract.filter.Transfer`\n        fragment = event.fragment;\n        topics = [fragment.topicHash];\n    } else {\n        assertArgument(false, 'unknown event name', 'event', event);\n    }\n\n    // Normalize topics and sort TopicSets\n    topics = topics.map((t) => {\n        if (t == null) {\n            return null;\n        }\n        if (Array.isArray(t)) {\n            const items = Array.from(new Set(t.map((t) => t.toLowerCase())).values());\n            if (items.length === 1) {\n                return items[0];\n            }\n            items.sort();\n            return items;\n        }\n        return t.toLowerCase();\n    });\n\n    const tag = topics\n        .map((t) => {\n            if (t == null) {\n                return 'null';\n            }\n            if (Array.isArray(t)) {\n                return t.join('|');\n            }\n            return t;\n        })\n        .join('&');\n\n    return { fragment, tag, topics };\n}\n\n/**\n * Check if a contract has a subscription for an event.\n *\n * @param {BaseContract} contract - The contract instance.\n * @param {ContractEventName} event - The event name.\n * @returns {Promise<null | Sub>} The subscription if available, otherwise null.\n */\nasync function hasSub(contract: BaseContract, event: ContractEventName): Promise<null | Sub> {\n    const { subs } = getInternal(contract);\n    return subs.get((await getSubInfo(contract, event)).tag) || null;\n}\n\n/**\n * Get a subscription for an event.\n *\n * @param {BaseContract} contract - The contract instance.\n * @param {string} operation - The operation name.\n * @param {ContractEventName} event - The event name.\n * @returns {Promise<Sub>} The subscription.\n * @throws {Error} If the contract runner does not support subscribing.\n */\nasync function getSub(contract: BaseContract, operation: string, event: ContractEventName): Promise<Sub> {\n    // Make sure our runner can actually subscribe to events\n    const provider = getProvider(contract.runner);\n    assert(provider, 'contract runner does not support subscribing', 'UNSUPPORTED_OPERATION', { operation });\n\n    const { fragment, tag, topics } = await getSubInfo(contract, event);\n\n    const { addr, subs } = getInternal(contract);\n\n    let sub = subs.get(tag);\n    if (!sub) {\n        const address: string | Addressable = addr ? addr : contract;\n        const filter = { address, topics };\n        const listener = (log: Log) => {\n            let foundFragment = fragment;\n            if (foundFragment == null) {\n                try {\n                    foundFragment = contract.interface.getEvent(log.topics[0]);\n                    // eslint-disable-next-line no-empty\n                } catch (error) {}\n            }\n\n            // If fragment is null, we do not deconstruct the args to emit\n\n            if (foundFragment) {\n                const _foundFragment = foundFragment;\n                const args = fragment ? contract.interface.decodeEventLog(fragment, log.data, log.topics) : [];\n                emit(contract, event, args, (listener: null | Listener) => {\n                    return new ContractEventPayload(contract, listener, event, _foundFragment, log);\n                });\n            } else {\n                emit(contract, event, [], (listener: null | Listener) => {\n                    return new ContractUnknownEventPayload(contract, listener, event, log);\n                });\n            }\n        };\n\n        const zone = getZoneForAddress(await resolveAddress(address));\n        let starting: Array<Promise<any>> = [];\n        const start = () => {\n            if (starting.length) {\n                return;\n            }\n            starting.push(provider.on(filter, listener, zone!));\n        };\n\n        const stop = async () => {\n            if (starting.length == 0) {\n                return;\n            }\n\n            const started = starting;\n            starting = [];\n            await Promise.all(started);\n            provider.off(filter, listener, zone!);\n        };\n\n        sub = { tag, listeners: [], start, stop };\n        subs.set(tag, sub);\n    }\n    return sub;\n}\n/**\n * We use this to ensure one emit resolves before firing the next to ensure correct ordering (note this cannot throw and\n * just adds the notice to the event queue using setTimeout).\n */\nlet lastEmit: Promise<any> = Promise.resolve();\n\ntype PayloadFunc = (listener: null | Listener) => ContractUnknownEventPayload;\n\n/**\n * Emit an event with the given arguments and payload function.\n *\n * @ignore\n * @param {BaseContract} contract - The contract instance.\n * @param {ContractEventName} event - The event name.\n * @param {any[]} args - The arguments to pass to the listeners.\n * @param {null | PayloadFunc} payloadFunc - The payload function.\n * @returns {Promise<boolean>} Resolves to true if any listeners were called.\n */\nasync function _emit(\n    contract: BaseContract,\n    event: ContractEventName,\n    args: Array<any>,\n    payloadFunc: null | PayloadFunc,\n): Promise<boolean> {\n    await lastEmit;\n\n    const sub = await hasSub(contract, event);\n    if (!sub) {\n        return false;\n    }\n\n    const count = sub.listeners.length;\n    sub.listeners = sub.listeners.filter(({ listener, once }) => {\n        const passArgs = Array.from(args);\n        if (payloadFunc) {\n            passArgs.push(payloadFunc(once ? null : listener));\n        }\n        try {\n            listener.call(contract, ...passArgs);\n            // eslint-disable-next-line no-empty\n        } catch (error) {}\n        return !once;\n    });\n\n    if (sub.listeners.length === 0) {\n        sub.stop();\n        getInternal(contract).subs.delete(sub.tag);\n    }\n\n    return count > 0;\n}\n\n/**\n * Emit an event with the given arguments and payload function.\n *\n * @param {BaseContract} contract - The contract instance.\n * @param {ContractEventName} event - The event name.\n * @param {any[]} args - The arguments to pass to the listeners.\n * @param {null | PayloadFunc} payloadFunc - The payload function.\n * @returns {Promise<boolean>} Resolves to true if any listeners were called.\n */\nasync function emit(\n    contract: BaseContract,\n    event: ContractEventName,\n    args: Array<any>,\n    payloadFunc: null | PayloadFunc,\n): Promise<boolean> {\n    try {\n        await lastEmit;\n        // eslint-disable-next-line no-empty\n    } catch (error) {}\n\n    const resultPromise = _emit(contract, event, args, payloadFunc);\n    lastEmit = resultPromise;\n    return await resultPromise;\n}\n\nconst passProperties = ['then'];\n/**\n * Creates a new contract connected to target with the abi and optionally connected to a runner to perform operations on\n * behalf of.\n *\n * @category Contract\n */\nexport class BaseContract implements Addressable, EventEmitterable<ContractEventName> {\n    /**\n     * The target to connect to.\n     *\n     * This can be an address or any [Addressable](../interfaces/Addressable), such as another contract. To get the\n     * resolved address, use the `getAddress` method.\n     */\n    readonly target!: string | Addressable;\n\n    /**\n     * The contract Interface.\n     */\n    readonly interface!: Interface;\n\n    /**\n     * The connected runner. This is generally a [**Provider**](../interfaces/Provider) or a\n     * [**Signer**](../interfaces/Signer), which dictates what operations are supported.\n     *\n     * For example, a **Contract** connected to a [**Provider**](../interfaces/Provider) may only execute read-only\n     * operations.\n     */\n    readonly runner!: null | ContractRunner;\n\n    /**\n     * All the Events available on this contract.\n     */\n    readonly filters!: Record<string, ContractEvent>;\n\n    /**\n     * @ignore\n     */\n    readonly [internal]: any;\n\n    /**\n     * The fallback or receive function if any.\n     */\n    readonly fallback!: null | WrappedFallback;\n\n    /**\n     * Creates a new contract connected to `target` with the `abi` and optionally connected to a `runner` to perform\n     * operations on behalf of.\n     *\n     * @ignore\n     */\n    constructor(\n        target: string | Addressable,\n        abi: Interface | InterfaceAbi,\n        runner?: null | ContractRunner,\n        _deployTx?: null | QuaiTransactionResponse,\n    ) {\n        assertArgument(\n            typeof target === 'string' || isAddressable(target),\n            'invalid value for Contract target',\n            'target',\n            target,\n        );\n\n        if (runner == null) {\n            runner = null;\n        }\n        const iface = Interface.from(abi);\n        defineProperties<BaseContract>(this, { target, runner, interface: iface });\n\n        Object.defineProperty(this, internal, { value: {} });\n\n        let addrPromise;\n        let addr: null | string = null;\n\n        let deployTx: null | ContractTransactionResponse = null;\n        if (_deployTx) {\n            const provider = getProvider(runner);\n            // @TODO: the provider can be null; make a custom dummy provider that will throw a\n            // meaningful error\n            deployTx = new ContractTransactionResponse(this.interface, <Provider>provider, _deployTx);\n        }\n\n        const subs = new Map();\n\n        // Resolve the target as the address\n        if (typeof target === 'string') {\n            addr = target;\n            addrPromise = Promise.resolve(target);\n        } else {\n            addrPromise = target.getAddress().then((addr) => {\n                if (addr == null) {\n                    throw new Error('TODO');\n                }\n                getInternal(this).addr = addr;\n                return addr;\n            });\n        }\n\n        // Set our private values\n        setInternal(this, { addrPromise, addr, deployTx, subs });\n\n        // Add the event filters\n        const filters = new Proxy(\n            {},\n            {\n                get: (target, prop, receiver) => {\n                    // Pass important checks (like `then` for Promise) through\n                    if (typeof prop === 'symbol' || passProperties.indexOf(prop) >= 0) {\n                        return Reflect.get(target, prop, receiver);\n                    }\n\n                    try {\n                        return this.getEvent(prop);\n                    } catch (error) {\n                        if (!isError(error, 'INVALID_ARGUMENT') || error.argument !== 'key') {\n                            throw error;\n                        }\n                    }\n\n                    return undefined;\n                },\n                has: (target, prop) => {\n                    // Pass important checks (like `then` for Promise) through\n                    if (passProperties.indexOf(<string>prop) >= 0) {\n                        return Reflect.has(target, prop);\n                    }\n\n                    return Reflect.has(target, prop) || this.interface.hasEvent(String(prop));\n                },\n            },\n        );\n        defineProperties<BaseContract>(this, { filters });\n\n        defineProperties<BaseContract>(this, {\n            fallback: iface.receive || iface.fallback ? buildWrappedFallback(this) : null,\n        });\n\n        // Return a Proxy that will respond to functions\n        return new Proxy(this, {\n            get: (target, prop, receiver) => {\n                if (typeof prop === 'symbol' || prop in target || passProperties.indexOf(prop) >= 0) {\n                    return Reflect.get(target, prop, receiver);\n                }\n\n                // Undefined properties should return undefined\n                try {\n                    return target.getFunction(prop);\n                } catch (error) {\n                    if (!isError(error, 'INVALID_ARGUMENT') || error.argument !== 'key') {\n                        throw error;\n                    }\n                }\n\n                return undefined;\n            },\n            has: (target, prop) => {\n                if (typeof prop === 'symbol' || prop in target || passProperties.indexOf(prop) >= 0) {\n                    return Reflect.has(target, prop);\n                }\n\n                return target.interface.hasFunction(prop);\n            },\n        });\n    }\n\n    /**\n     * Return a new Contract instance with the same target and ABI, but a different `runner`.\n     *\n     * @param {null | ContractRunner} runner - The runner to use.\n     * @returns {BaseContract} The new contract instance.\n     */\n    connect(runner: null | ContractRunner): BaseContract {\n        return new BaseContract(this.target, this.interface, runner);\n    }\n\n    /**\n     * Return a new Contract instance with the same ABI and runner, but a different `target`.\n     *\n     * @param {string | Addressable} target - The target to connect to.\n     * @returns {BaseContract} The new contract instance.\n     */\n    attach(target: string | Addressable): BaseContract {\n        return new BaseContract(target, this.interface, this.runner);\n    }\n\n    /**\n     * Return the resolved address of this Contract.\n     *\n     * @returns {Promise<string>} The resolved address.\n     */\n    async getAddress(): Promise<string> {\n        return await getInternal(this).addrPromise;\n    }\n\n    /**\n     * Return the deployed bytecode or null if no bytecode is found.\n     *\n     * @returns {Promise<null | string>} The deployed bytecode or null.\n     * @throws {Error} If the runner does not support .provider.\n     */\n    async getDeployedCode(): Promise<null | string> {\n        const provider = getProvider(this.runner);\n        assert(provider, 'runner does not support .provider', 'UNSUPPORTED_OPERATION', {\n            operation: 'getDeployedCode',\n        });\n\n        const code = await provider.getCode(await this.getAddress());\n        if (code === '0x') {\n            return null;\n        }\n        return code;\n    }\n\n    /**\n     * Resolve to this Contract once the bytecode has been deployed, or resolve immediately if already deployed.\n     *\n     * @returns {Promise<this>} The contract instance.\n     * @throws {Error} If the contract runner does not support .provider.\n     */\n    async waitForDeployment(): Promise<this> {\n        // We have the deployment transaction; just use that (throws if deployment fails)\n        const deployTx = this.deploymentTransaction();\n        if (deployTx) {\n            await deployTx.wait();\n            return this;\n        }\n\n        // Check for code\n        const code = await this.getDeployedCode();\n        if (code != null) {\n            return this;\n        }\n\n        // Make sure we can subscribe to a provider event\n        const provider = getProvider(this.runner);\n        assert(provider != null, 'contract runner does not support .provider', 'UNSUPPORTED_OPERATION', {\n            operation: 'waitForDeployment',\n        });\n\n        return new Promise((resolve, reject) => {\n            const checkCode = async () => {\n                try {\n                    const code = await this.getDeployedCode();\n                    if (code != null) {\n                        return resolve(this);\n                    }\n                    provider.once('block', checkCode);\n                } catch (error) {\n                    reject(error);\n                }\n            };\n            checkCode();\n        });\n    }\n\n    /**\n     * Return the transaction used to deploy this contract.\n     *\n     * This is only available if this instance was returned from a [**ContractFactor**](../classes/ContractFactory).\n     *\n     * @returns The transaction used to deploy this contract or `null`.\n     */\n    deploymentTransaction(): null | ContractTransactionResponse {\n        return getInternal(this).deployTx;\n    }\n\n    /**\n     * Return the function for a given name. This is useful when a contract method name conflicts with a JavaScript name\n     * such as `prototype` or when using a Contract programatically.\n     *\n     * @param {string | FunctionFragment} key - The name of the function to return.\n     * @returns The function for the given name.\n     */\n    getFunction<T extends ContractMethod = ContractMethod>(key: string | FunctionFragment): T {\n        if (typeof key !== 'string') {\n            key = key.format();\n        }\n        const func = buildWrappedMethod(this, key);\n        return <T>func;\n    }\n\n    /**\n     * Return the event for a given name. This is useful when a contract event name conflicts with a JavaScript name\n     * such as `prototype` or when using a Contract programatically.\n     *\n     * @param {string | EventFragment} key - The name of the event to return.\n     * @returns The event for the given name.\n     */\n    getEvent(key: string | EventFragment): ContractEvent {\n        if (typeof key !== 'string') {\n            key = key.format();\n        }\n        return buildWrappedEvent(this, key);\n    }\n\n    /**\n     * @ignore\n     */\n    // TODO: implement\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async queryTransaction(hash: string): Promise<Array<EventLog>> {\n        throw new Error('@TODO');\n    }\n\n    /**\n     * Provide historic access to event data for `event` in the range `fromBlock` (default: `0`) to `toBlock` (default:\n     * `\"latest\"`) inclusive.\n     *\n     * @param {Zone} zone - The zone to query.\n     * @param {ContractEventName} event - The event to query.\n     * @param {BlockTag} fromBlock - The block to start querying from.\n     * @param {BlockTag} toBlock - The block to stop querying at.\n     * @returns An array of event logs.\n     */\n    async queryFilter(\n        event: ContractEventName,\n        fromBlock?: BlockTag,\n        toBlock?: BlockTag,\n    ): Promise<Array<EventLog | Log>> {\n        if (fromBlock == null) {\n            fromBlock = 0;\n        }\n        if (toBlock == null) {\n            toBlock = 'latest';\n        }\n        const { addr, addrPromise } = getInternal(this);\n        const address = addr ? addr : await addrPromise;\n        const { fragment, topics } = await getSubInfo(this, event);\n        const zone = getZoneForAddress(address)!;\n        const filter: Filter = { address, topics, fromBlock, toBlock, nodeLocation: getNodeLocationFromZone(zone) };\n\n        const provider = getProvider(this.runner);\n        assert(provider, 'contract runner does not have a provider', 'UNSUPPORTED_OPERATION', {\n            operation: 'queryFilter',\n        });\n\n        return (await provider.getLogs(filter)).map((log) => {\n            let foundFragment = fragment;\n            if (foundFragment == null) {\n                try {\n                    foundFragment = this.interface.getEvent(log.topics[0]);\n                    // eslint-disable-next-line no-empty\n                } catch (error) {}\n            }\n\n            if (foundFragment) {\n                try {\n                    return new EventLog(log, this.interface, foundFragment);\n                } catch (error: any) {\n                    return new UndecodedEventLog(log, error);\n                }\n            }\n\n            return new Log(log, provider);\n        });\n    }\n\n    /**\n     * Add an event `listener` for the `event`.\n     *\n     * @param {ContractEventName} event - The event to listen for.\n     * @param {Listener} listener - The listener to call when the event is emitted.\n     * @returns This contract instance.\n     */\n    async on(event: ContractEventName, listener: Listener): Promise<this> {\n        const sub = await getSub(this, 'on', event);\n        sub.listeners.push({ listener, once: false });\n        sub.start();\n        return this;\n    }\n\n    /**\n     * Add an event `listener` for the `event`, but remove the listener after it is fired once.\n     *\n     * @param {ContractEventName} event - The event to listen for.\n     * @param {Listener} listener - The listener to call when the event is emitted.\n     */\n    async once(event: ContractEventName, listener: Listener): Promise<this> {\n        const sub = await getSub(this, 'once', event);\n        sub.listeners.push({ listener, once: true });\n        sub.start();\n        return this;\n    }\n\n    /**\n     * Emit an `event` calling all listeners with `args`.\n     *\n     * Resolves to `true` if any listeners were called.\n     *\n     * @param {ContractEventName} event - The event to emit.\n     * @param {any[]} args - The arguments to pass to the listeners.\n     * @returns `true` if any listeners were called.\n     */\n    async emit(event: ContractEventName, ...args: Array<any>): Promise<boolean> {\n        return await emit(this, event, args, null);\n    }\n\n    /**\n     * Resolves to the number of listeners of `event` or the total number of listeners if unspecified.\n     *\n     * @param {ContractEventName} event - The event to count listeners for.\n     * @returns {number} The number of listeners.\n     */\n    async listenerCount(event?: ContractEventName): Promise<number> {\n        if (event) {\n            const sub = await hasSub(this, event);\n            if (!sub) {\n                return 0;\n            }\n            return sub.listeners.length;\n        }\n\n        const { subs } = getInternal(this);\n\n        let total = 0;\n        for (const { listeners } of subs.values()) {\n            total += listeners.length;\n        }\n        return total;\n    }\n\n    /**\n     * Resolves to the listeners subscribed to `event` or all listeners if unspecified.\n     *\n     * @param {ContractEventName} event - The event to get listeners for.\n     * @returns {Listener[]} The listeners.\n     */\n    async listeners(event?: ContractEventName): Promise<Array<Listener>> {\n        if (event) {\n            const sub = await hasSub(this, event);\n            if (!sub) {\n                return [];\n            }\n            return sub.listeners.map(({ listener }) => listener);\n        }\n\n        const { subs } = getInternal(this);\n\n        let result: Array<Listener> = [];\n        for (const { listeners } of subs.values()) {\n            result = result.concat(listeners.map(({ listener }) => listener));\n        }\n        return result;\n    }\n\n    /**\n     * Remove the `listener` from the listeners for `event` or remove all listeners if unspecified.\n     *\n     * @param {ContractEventName} event - The event to remove the listener from.\n     * @param {Listener} listener - The listener to remove.\n     * @returns This contract instance.\n     */\n    async off(event: ContractEventName, listener?: Listener): Promise<this> {\n        const sub = await hasSub(this, event);\n        if (!sub) {\n            return this;\n        }\n\n        if (listener) {\n            const index = sub.listeners.map(({ listener }) => listener).indexOf(listener);\n            if (index >= 0) {\n                sub.listeners.splice(index, 1);\n            }\n        }\n\n        if (listener == null || sub.listeners.length === 0) {\n            sub.stop();\n            getInternal(this).subs.delete(sub.tag);\n        }\n\n        return this;\n    }\n\n    /**\n     * Remove all the listeners for `event` or remove all listeners if unspecified.\n     *\n     * @param {ContractEventName} event - The event to remove the listeners from.\n     * @returns This contract instance.\n     */\n    async removeAllListeners(event?: ContractEventName): Promise<this> {\n        if (event) {\n            const sub = await hasSub(this, event);\n            if (!sub) {\n                return this;\n            }\n            sub.stop();\n            getInternal(this).subs.delete(sub.tag);\n        } else {\n            const { subs } = getInternal(this);\n            for (const { tag, stop } of subs.values()) {\n                stop();\n                subs.delete(tag);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Alias for {@link BaseContract.on | **on**}.\n     *\n     * @param {ContractEventName} event - The event to listen for.\n     * @param {Listener} listener - The listener to call when the event is emitted.\n     */\n    async addListener(event: ContractEventName, listener: Listener): Promise<this> {\n        return await this.on(event, listener);\n    }\n\n    /**\n     * Alias for {@link BaseContract.off | **off**}.\n     *\n     * @param {ContractEventName} event - The event to remove the listener from.\n     * @param {Listener} listener - The listener to remove.\n     */\n    async removeListener(event: ContractEventName, listener: Listener): Promise<this> {\n        return await this.off(event, listener);\n    }\n\n    /**\n     * Create a new Class for the `abi`.\n     *\n     * @param {Interface | InterfaceAbi} abi - The ABI to create the class from.\n     * @returns The new Class for the ABI.\n     */\n    static buildClass<T = ContractInterface>(\n        abi: Interface | InterfaceAbi,\n    ): new (target: string, runner?: null | ContractRunner) => BaseContract & Omit<T, keyof BaseContract> {\n        class CustomContract extends BaseContract {\n            constructor(address: string, runner: null | ContractRunner = null) {\n                super(address, abi, runner);\n            }\n        }\n        return CustomContract as any;\n    }\n\n    /**\n     * Create a new BaseContract with a specified Interface.\n     *\n     * @param {string} target - The target to connect to.\n     * @param {Interface | InterfaceAbi} abi - The ABI to use.\n     * @param {null | ContractRunner} runner - The runner to use.\n     * @returns The new BaseContract.\n     */\n    static from<T = ContractInterface>(\n        target: string,\n        abi: Interface | InterfaceAbi,\n        runner?: null | ContractRunner,\n    ): BaseContract & Omit<T, keyof BaseContract> {\n        if (runner == null) {\n            runner = null;\n        }\n        const contract = new this(target, abi, runner);\n        return contract as any;\n    }\n}\n\nfunction _ContractBase(): new (\n    target: string,\n    abi: Interface | InterfaceAbi,\n    runner?: null | ContractRunner,\n) => BaseContract & Omit<ContractInterface, keyof BaseContract> {\n    return BaseContract as any;\n}\n\n/**\n * A {@link BaseContract | **BaseContract**} with no type guards on its methods or events.\n *\n * @category Contract\n */\nexport class Contract extends _ContractBase() {}\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","export var MS = '-ms-'\nexport var MOZ = '-moz-'\nexport var WEBKIT = '-webkit-'\n\nexport var COMMENT = 'comm'\nexport var RULESET = 'rule'\nexport var DECLARATION = 'decl'\n\nexport var PAGE = '@page'\nexport var MEDIA = '@media'\nexport var IMPORT = '@import'\nexport var CHARSET = '@charset'\nexport var VIEWPORT = '@viewport'\nexport var SUPPORTS = '@supports'\nexport var DOCUMENT = '@document'\nexport var NAMESPACE = '@namespace'\nexport var KEYFRAMES = '@keyframes'\nexport var FONT_FACE = '@font-face'\nexport var COUNTER_STYLE = '@counter-style'\nexport var FONT_FEATURE_VALUES = '@font-feature-values'\nexport var LAYER = '@layer'\nexport var SCOPE = '@scope'\n","/**\n * @param {number}\n * @return {number}\n */\nexport var abs = Math.abs\n\n/**\n * @param {number}\n * @return {string}\n */\nexport var from = String.fromCharCode\n\n/**\n * @param {object}\n * @return {object}\n */\nexport var assign = Object.assign\n\n/**\n * @param {string} value\n * @param {number} length\n * @return {number}\n */\nexport function hash (value, length) {\n\treturn charat(value, 0) ^ 45 ? (((((((length << 2) ^ charat(value, 0)) << 2) ^ charat(value, 1)) << 2) ^ charat(value, 2)) << 2) ^ charat(value, 3) : 0\n}\n\n/**\n * @param {string} value\n * @return {string}\n */\nexport function trim (value) {\n\treturn value.trim()\n}\n\n/**\n * @param {string} value\n * @param {RegExp} pattern\n * @return {string?}\n */\nexport function match (value, pattern) {\n\treturn (value = pattern.exec(value)) ? value[0] : value\n}\n\n/**\n * @param {string} value\n * @param {(string|RegExp)} pattern\n * @param {string} replacement\n * @return {string}\n */\nexport function replace (value, pattern, replacement) {\n\treturn value.replace(pattern, replacement)\n}\n\n/**\n * @param {string} value\n * @param {string} search\n * @param {number} position\n * @return {number}\n */\nexport function indexof (value, search, position) {\n\treturn value.indexOf(search, position)\n}\n\n/**\n * @param {string} value\n * @param {number} index\n * @return {number}\n */\nexport function charat (value, index) {\n\treturn value.charCodeAt(index) | 0\n}\n\n/**\n * @param {string} value\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nexport function substr (value, begin, end) {\n\treturn value.slice(begin, end)\n}\n\n/**\n * @param {string} value\n * @return {number}\n */\nexport function strlen (value) {\n\treturn value.length\n}\n\n/**\n * @param {any[]} value\n * @return {number}\n */\nexport function sizeof (value) {\n\treturn value.length\n}\n\n/**\n * @param {any} value\n * @param {any[]} array\n * @return {any}\n */\nexport function append (value, array) {\n\treturn array.push(value), value\n}\n\n/**\n * @param {string[]} array\n * @param {function} callback\n * @return {string}\n */\nexport function combine (array, callback) {\n\treturn array.map(callback).join('')\n}\n\n/**\n * @param {string[]} array\n * @param {RegExp} pattern\n * @return {string[]}\n */\nexport function filter (array, pattern) {\n\treturn array.filter(function (value) { return !match(value, pattern) })\n}\n","import {from, trim, charat, strlen, substr, append, assign} from './Utility.js'\n\nexport var line = 1\nexport var column = 1\nexport var length = 0\nexport var position = 0\nexport var character = 0\nexport var characters = ''\n\n/**\n * @param {string} value\n * @param {object | null} root\n * @param {object | null} parent\n * @param {string} type\n * @param {string[] | string} props\n * @param {object[] | string} children\n * @param {object[]} siblings\n * @param {number} length\n */\nexport function node (value, root, parent, type, props, children, length, siblings) {\n\treturn {value: value, root: root, parent: parent, type: type, props: props, children: children, line: line, column: column, length: length, return: '', siblings: siblings}\n}\n\n/**\n * @param {object} root\n * @param {object} props\n * @return {object}\n */\nexport function copy (root, props) {\n\treturn assign(node('', null, null, '', null, null, 0, root.siblings), root, {length: -root.length}, props)\n}\n\n/**\n * @param {object} root\n */\nexport function lift (root) {\n\twhile (root.root)\n\t\troot = copy(root.root, {children: [root]})\n\n\tappend(root, root.siblings)\n}\n\n/**\n * @return {number}\n */\nexport function char () {\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function prev () {\n\tcharacter = position > 0 ? charat(characters, --position) : 0\n\n\tif (column--, character === 10)\n\t\tcolumn = 1, line--\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function next () {\n\tcharacter = position < length ? charat(characters, position++) : 0\n\n\tif (column++, character === 10)\n\t\tcolumn = 1, line++\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function peek () {\n\treturn charat(characters, position)\n}\n\n/**\n * @return {number}\n */\nexport function caret () {\n\treturn position\n}\n\n/**\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nexport function slice (begin, end) {\n\treturn substr(characters, begin, end)\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nexport function token (type) {\n\tswitch (type) {\n\t\t// \\0 \\t \\n \\r \\s whitespace token\n\t\tcase 0: case 9: case 10: case 13: case 32:\n\t\t\treturn 5\n\t\t// ! + , / > @ ~ isolate token\n\t\tcase 33: case 43: case 44: case 47: case 62: case 64: case 126:\n\t\t// ; { } breakpoint token\n\t\tcase 59: case 123: case 125:\n\t\t\treturn 4\n\t\t// : accompanied token\n\t\tcase 58:\n\t\t\treturn 3\n\t\t// \" ' ( [ opening delimit token\n\t\tcase 34: case 39: case 40: case 91:\n\t\t\treturn 2\n\t\t// ) ] closing delimit token\n\t\tcase 41: case 93:\n\t\t\treturn 1\n\t}\n\n\treturn 0\n}\n\n/**\n * @param {string} value\n * @return {any[]}\n */\nexport function alloc (value) {\n\treturn line = column = 1, length = strlen(characters = value), position = 0, []\n}\n\n/**\n * @param {any} value\n * @return {any}\n */\nexport function dealloc (value) {\n\treturn characters = '', value\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nexport function delimit (type) {\n\treturn trim(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)))\n}\n\n/**\n * @param {string} value\n * @return {string[]}\n */\nexport function tokenize (value) {\n\treturn dealloc(tokenizer(alloc(value)))\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nexport function whitespace (type) {\n\twhile (character = peek())\n\t\tif (character < 33)\n\t\t\tnext()\n\t\telse\n\t\t\tbreak\n\n\treturn token(type) > 2 || token(character) > 3 ? '' : ' '\n}\n\n/**\n * @param {string[]} children\n * @return {string[]}\n */\nexport function tokenizer (children) {\n\twhile (next())\n\t\tswitch (token(character)) {\n\t\t\tcase 0: append(identifier(position - 1), children)\n\t\t\t\tbreak\n\t\t\tcase 2: append(delimit(character), children)\n\t\t\t\tbreak\n\t\t\tdefault: append(from(character), children)\n\t\t}\n\n\treturn children\n}\n\n/**\n * @param {number} index\n * @param {number} count\n * @return {string}\n */\nexport function escaping (index, count) {\n\twhile (--count && next())\n\t\t// not 0-9 A-F a-f\n\t\tif (character < 48 || character > 102 || (character > 57 && character < 65) || (character > 70 && character < 97))\n\t\t\tbreak\n\n\treturn slice(index, caret() + (count < 6 && peek() == 32 && next() == 32))\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nexport function delimiter (type) {\n\twhile (next())\n\t\tswitch (character) {\n\t\t\t// ] ) \" '\n\t\t\tcase type:\n\t\t\t\treturn position\n\t\t\t// \" '\n\t\t\tcase 34: case 39:\n\t\t\t\tif (type !== 34 && type !== 39)\n\t\t\t\t\tdelimiter(character)\n\t\t\t\tbreak\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (type === 41)\n\t\t\t\t\tdelimiter(type)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tnext()\n\t\t\t\tbreak\n\t\t}\n\n\treturn position\n}\n\n/**\n * @param {number} type\n * @param {number} index\n * @return {number}\n */\nexport function commenter (type, index) {\n\twhile (next())\n\t\t// //\n\t\tif (type + character === 47 + 10)\n\t\t\tbreak\n\t\t// /*\n\t\telse if (type + character === 42 + 42 && peek() === 47)\n\t\t\tbreak\n\n\treturn '/*' + slice(index, position - 1) + '*' + from(type === 47 ? type : next())\n}\n\n/**\n * @param {number} index\n * @return {string}\n */\nexport function identifier (index) {\n\twhile (!token(peek()))\n\t\tnext()\n\n\treturn slice(index, position)\n}\n","import {IMPORT, LAYER, COMMENT, RULESET, DECLARATION, KEYFRAMES} from './Enum.js'\nimport {strlen} from './Utility.js'\n\n/**\n * @param {object[]} children\n * @param {function} callback\n * @return {string}\n */\nexport function serialize (children, callback) {\n\tvar output = ''\n\n\tfor (var i = 0; i < children.length; i++)\n\t\toutput += callback(children[i], i, children, callback) || ''\n\n\treturn output\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n * @param {function} callback\n * @return {string}\n */\nexport function stringify (element, index, children, callback) {\n\tswitch (element.type) {\n\t\tcase LAYER: if (element.children.length) break\n\t\tcase IMPORT: case DECLARATION: return element.return = element.return || element.value\n\t\tcase COMMENT: return ''\n\t\tcase KEYFRAMES: return element.return = element.value + '{' + serialize(element.children, callback) + '}'\n\t\tcase RULESET: if (!strlen(element.value = element.props.join(','))) return ''\n\t}\n\n\treturn strlen(children = serialize(element.children, callback)) ? element.return = element.value + '{' + children + '}' : ''\n}\n","import {MS, MOZ, WEBKIT} from './Enum.js'\nimport {hash, charat, strlen, indexof, replace, substr, match} from './Utility.js'\n\n/**\n * @param {string} value\n * @param {number} length\n * @param {object[]} children\n * @return {string}\n */\nexport function prefix (value, length, children) {\n\tswitch (hash(value, length)) {\n\t\t// color-adjust\n\t\tcase 5103:\n\t\t\treturn WEBKIT + 'print-' + value + value\n\t\t// animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)\n\t\tcase 5737: case 4201: case 3177: case 3433: case 1641: case 4457: case 2921:\n\t\t// text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break\n\t\tcase 5572: case 6356: case 5844: case 3191: case 6645: case 3005:\n\t\t// mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,\n\t\tcase 6391: case 5879: case 5623: case 6135: case 4599: case 4855:\n\t\t// background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)\n\t\tcase 4215: case 6389: case 5109: case 5365: case 5621: case 3829:\n\t\t\treturn WEBKIT + value + value\n\t\t// tab-size\n\t\tcase 4789:\n\t\t\treturn MOZ + value + value\n\t\t// appearance, user-select, transform, hyphens, text-size-adjust\n\t\tcase 5349: case 4246: case 4810: case 6968: case 2756:\n\t\t\treturn WEBKIT + value + MOZ + value + MS + value + value\n\t\t// writing-mode\n\t\tcase 5936:\n\t\t\tswitch (charat(value, length + 11)) {\n\t\t\t\t// vertical-l(r)\n\t\t\t\tcase 114:\n\t\t\t\t\treturn WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'tb') + value\n\t\t\t\t// vertical-r(l)\n\t\t\t\tcase 108:\n\t\t\t\t\treturn WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'tb-rl') + value\n\t\t\t\t// horizontal(-)tb\n\t\t\t\tcase 45:\n\t\t\t\t\treturn WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'lr') + value\n\t\t\t\t// default: fallthrough to below\n\t\t\t}\n\t\t// flex, flex-direction, scroll-snap-type, writing-mode\n\t\tcase 6828: case 4268: case 2903:\n\t\t\treturn WEBKIT + value + MS + value + value\n\t\t// order\n\t\tcase 6165:\n\t\t\treturn WEBKIT + value + MS + 'flex-' + value + value\n\t\t// align-items\n\t\tcase 5187:\n\t\t\treturn WEBKIT + value + replace(value, /(\\w+).+(:[^]+)/, WEBKIT + 'box-$1$2' + MS + 'flex-$1$2') + value\n\t\t// align-self\n\t\tcase 5443:\n\t\t\treturn WEBKIT + value + MS + 'flex-item-' + replace(value, /flex-|-self/g, '') + (!match(value, /flex-|baseline/) ? MS + 'grid-row-' + replace(value, /flex-|-self/g, '') : '') + value\n\t\t// align-content\n\t\tcase 4675:\n\t\t\treturn WEBKIT + value + MS + 'flex-line-pack' + replace(value, /align-content|flex-|-self/g, '') + value\n\t\t// flex-shrink\n\t\tcase 5548:\n\t\t\treturn WEBKIT + value + MS + replace(value, 'shrink', 'negative') + value\n\t\t// flex-basis\n\t\tcase 5292:\n\t\t\treturn WEBKIT + value + MS + replace(value, 'basis', 'preferred-size') + value\n\t\t// flex-grow\n\t\tcase 6060:\n\t\t\treturn WEBKIT + 'box-' + replace(value, '-grow', '') + WEBKIT + value + MS + replace(value, 'grow', 'positive') + value\n\t\t// transition\n\t\tcase 4554:\n\t\t\treturn WEBKIT + replace(value, /([^-])(transform)/g, '$1' + WEBKIT + '$2') + value\n\t\t// cursor\n\t\tcase 6187:\n\t\t\treturn replace(replace(replace(value, /(zoom-|grab)/, WEBKIT + '$1'), /(image-set)/, WEBKIT + '$1'), value, '') + value\n\t\t// background, background-image\n\t\tcase 5495: case 3959:\n\t\t\treturn replace(value, /(image-set\\([^]*)/, WEBKIT + '$1' + '$`$1')\n\t\t// justify-content\n\t\tcase 4968:\n\t\t\treturn replace(replace(value, /(.+:)(flex-)?(.*)/, WEBKIT + 'box-pack:$3' + MS + 'flex-pack:$3'), /s.+-b[^;]+/, 'justify') + WEBKIT + value + value\n\t\t// justify-self\n\t\tcase 4200:\n\t\t\tif (!match(value, /flex-|baseline/)) return MS + 'grid-column-align' + substr(value, length) + value\n\t\t\tbreak\n\t\t// grid-template-(columns|rows)\n\t\tcase 2592: case 3360:\n\t\t\treturn MS + replace(value, 'template-', '') + value\n\t\t// grid-(row|column)-start\n\t\tcase 4384: case 3616:\n\t\t\tif (children && children.some(function (element, index) { return length = index, match(element.props, /grid-\\w+-end/) })) {\n\t\t\t\treturn ~indexof(value + (children = children[length].value), 'span', 0) ? value : (MS + replace(value, '-start', '') + value + MS + 'grid-row-span:' + (~indexof(children, 'span', 0) ? match(children, /\\d+/) : +match(children, /\\d+/) - +match(value, /\\d+/)) + ';')\n\t\t\t}\n\t\t\treturn MS + replace(value, '-start', '') + value\n\t\t// grid-(row|column)-end\n\t\tcase 4896: case 4128:\n\t\t\treturn (children && children.some(function (element) { return match(element.props, /grid-\\w+-start/) })) ? value : MS + replace(replace(value, '-end', '-span'), 'span ', '') + value\n\t\t// (margin|padding)-inline-(start|end)\n\t\tcase 4095: case 3583: case 4068: case 2532:\n\t\t\treturn replace(value, /(.+)-inline(.+)/, WEBKIT + '$1$2') + value\n\t\t// (min|max)?(width|height|inline-size|block-size)\n\t\tcase 8116: case 7059: case 5753: case 5535:\n\t\tcase 5445: case 5701: case 4933: case 4677:\n\t\tcase 5533: case 5789: case 5021: case 4765:\n\t\t\t// stretch, max-content, min-content, fill-available\n\t\t\tif (strlen(value) - 1 - length > 6)\n\t\t\t\tswitch (charat(value, length + 1)) {\n\t\t\t\t\t// (m)ax-content, (m)in-content\n\t\t\t\t\tcase 109:\n\t\t\t\t\t\t// -\n\t\t\t\t\t\tif (charat(value, length + 4) !== 45)\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t// (f)ill-available, (f)it-content\n\t\t\t\t\tcase 102:\n\t\t\t\t\t\treturn replace(value, /(.+:)(.+)-([^]+)/, '$1' + WEBKIT + '$2-$3' + '$1' + MOZ + (charat(value, length + 3) == 108 ? '$3' : '$2-$3')) + value\n\t\t\t\t\t// (s)tretch\n\t\t\t\t\tcase 115:\n\t\t\t\t\t\treturn ~indexof(value, 'stretch', 0) ? prefix(replace(value, 'stretch', 'fill-available'), length, children) + value : value\n\t\t\t\t}\n\t\t\tbreak\n\t\t// grid-(column|row)\n\t\tcase 5152: case 5920:\n\t\t\treturn replace(value, /(.+?):(\\d+)(\\s*\\/\\s*(span)?\\s*(\\d+))?(.*)/, function (_, a, b, c, d, e, f) { return (MS + a + ':' + b + f) + (c ? (MS + a + '-span:' + (d ? e : +e - +b)) + f : '') + value })\n\t\t// position: sticky\n\t\tcase 4949:\n\t\t\t// stick(y)?\n\t\t\tif (charat(value, length + 6) === 121)\n\t\t\t\treturn replace(value, ':', ':' + WEBKIT) + value\n\t\t\tbreak\n\t\t// display: (flex|inline-flex|grid|inline-grid)\n\t\tcase 6444:\n\t\t\tswitch (charat(value, charat(value, 14) === 45 ? 18 : 11)) {\n\t\t\t\t// (inline-)?fle(x)\n\t\t\t\tcase 120:\n\t\t\t\t\treturn replace(value, /(.+:)([^;\\s!]+)(;|(\\s+)?!.+)?/, '$1' + WEBKIT + (charat(value, 14) === 45 ? 'inline-' : '') + 'box$3' + '$1' + WEBKIT + '$2$3' + '$1' + MS + '$2box$3') + value\n\t\t\t\t// (inline-)?gri(d)\n\t\t\t\tcase 100:\n\t\t\t\t\treturn replace(value, ':', ':' + MS) + value\n\t\t\t}\n\t\t\tbreak\n\t\t// scroll-margin, scroll-margin-(top|right|bottom|left)\n\t\tcase 5719: case 2647: case 2135: case 3927: case 2391:\n\t\t\treturn replace(value, 'scroll-', 'scroll-snap-') + value\n\t}\n\n\treturn value\n}\n","import {MS, MOZ, WEBKIT, RULESET, KEYFRAMES, DECLARATION} from './Enum.js'\nimport {match, charat, substr, strlen, sizeof, replace, combine, filter, assign} from './Utility.js'\nimport {copy, lift, tokenize} from './Tokenizer.js'\nimport {serialize} from './Serializer.js'\nimport {prefix} from './Prefixer.js'\n\n/**\n * @param {function[]} collection\n * @return {function}\n */\nexport function middleware (collection) {\n\tvar length = sizeof(collection)\n\n\treturn function (element, index, children, callback) {\n\t\tvar output = ''\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\toutput += collection[i](element, index, children, callback) || ''\n\n\t\treturn output\n\t}\n}\n\n/**\n * @param {function} callback\n * @return {function}\n */\nexport function rulesheet (callback) {\n\treturn function (element) {\n\t\tif (!element.root)\n\t\t\tif (element = element.return)\n\t\t\t\tcallback(element)\n\t}\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n * @param {function} callback\n */\nexport function prefixer (element, index, children, callback) {\n\tif (element.length > -1)\n\t\tif (!element.return)\n\t\t\tswitch (element.type) {\n\t\t\t\tcase DECLARATION: element.return = prefix(element.value, element.length, children)\n\t\t\t\t\treturn\n\t\t\t\tcase KEYFRAMES:\n\t\t\t\t\treturn serialize([copy(element, {value: replace(element.value, '@', '@' + WEBKIT)})], callback)\n\t\t\t\tcase RULESET:\n\t\t\t\t\tif (element.length)\n\t\t\t\t\t\treturn combine(children = element.props, function (value) {\n\t\t\t\t\t\t\tswitch (match(value, callback = /(::plac\\w+|:read-\\w+)/)) {\n\t\t\t\t\t\t\t\t// :read-(only|write)\n\t\t\t\t\t\t\t\tcase ':read-only': case ':read-write':\n\t\t\t\t\t\t\t\t\tlift(copy(element, {props: [replace(value, /:(read-\\w+)/, ':' + MOZ + '$1')]}))\n\t\t\t\t\t\t\t\t\tlift(copy(element, {props: [value]}))\n\t\t\t\t\t\t\t\t\tassign(element, {props: filter(children, callback)})\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t// :placeholder\n\t\t\t\t\t\t\t\tcase '::placeholder':\n\t\t\t\t\t\t\t\t\tlift(copy(element, {props: [replace(value, /:(plac\\w+)/, ':' + WEBKIT + 'input-$1')]}))\n\t\t\t\t\t\t\t\t\tlift(copy(element, {props: [replace(value, /:(plac\\w+)/, ':' + MOZ + '$1')]}))\n\t\t\t\t\t\t\t\t\tlift(copy(element, {props: [replace(value, /:(plac\\w+)/, MS + 'input-$1')]}))\n\t\t\t\t\t\t\t\t\tlift(copy(element, {props: [value]}))\n\t\t\t\t\t\t\t\t\tassign(element, {props: filter(children, callback)})\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn ''\n\t\t\t\t\t\t})\n\t\t\t}\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n */\nexport function namespace (element) {\n\tswitch (element.type) {\n\t\tcase RULESET:\n\t\t\telement.props = element.props.map(function (value) {\n\t\t\t\treturn combine(tokenize(value), function (value, index, children) {\n\t\t\t\t\tswitch (charat(value, 0)) {\n\t\t\t\t\t\t// \\f\n\t\t\t\t\t\tcase 12:\n\t\t\t\t\t\t\treturn substr(value, 1, strlen(value))\n\t\t\t\t\t\t// \\0 ( + > ~\n\t\t\t\t\t\tcase 0: case 40: case 43: case 62: case 126:\n\t\t\t\t\t\t\treturn value\n\t\t\t\t\t\t// :\n\t\t\t\t\t\tcase 58:\n\t\t\t\t\t\t\tif (children[++index] === 'global')\n\t\t\t\t\t\t\t\tchildren[index] = '', children[++index] = '\\f' + substr(children[index], index = 1, -1)\n\t\t\t\t\t\t// \\s\n\t\t\t\t\t\tcase 32:\n\t\t\t\t\t\t\treturn index === 1 ? '' : value\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tswitch (index) {\n\t\t\t\t\t\t\t\tcase 0: element = value\n\t\t\t\t\t\t\t\t\treturn sizeof(children) > 1 ? '' : value\n\t\t\t\t\t\t\t\tcase index = sizeof(children) - 1: case 2:\n\t\t\t\t\t\t\t\t\treturn index === 2 ? value + element + element : value + element\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn value\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t}\n}\n","import {COMMENT, RULESET, DECLARATION} from './Enum.js'\nimport {abs, charat, trim, from, sizeof, strlen, substr, append, replace, indexof} from './Utility.js'\nimport {node, char, prev, next, peek, caret, alloc, dealloc, delimit, whitespace, escaping, identifier, commenter} from './Tokenizer.js'\n\n/**\n * @param {string} value\n * @return {object[]}\n */\nexport function compile (value) {\n\treturn dealloc(parse('', null, null, null, [''], value = alloc(value), 0, [0], value))\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {string[]} rule\n * @param {string[]} rules\n * @param {string[]} rulesets\n * @param {number[]} pseudo\n * @param {number[]} points\n * @param {string[]} declarations\n * @return {object}\n */\nexport function parse (value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {\n\tvar index = 0\n\tvar offset = 0\n\tvar length = pseudo\n\tvar atrule = 0\n\tvar property = 0\n\tvar previous = 0\n\tvar variable = 1\n\tvar scanning = 1\n\tvar ampersand = 1\n\tvar character = 0\n\tvar type = ''\n\tvar props = rules\n\tvar children = rulesets\n\tvar reference = rule\n\tvar characters = type\n\n\twhile (scanning)\n\t\tswitch (previous = character, character = next()) {\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (previous != 108 && charat(characters, length - 1) == 58) {\n\t\t\t\t\tif (indexof(characters += replace(delimit(character), '&', '&\\f'), '&\\f', abs(index ? points[index - 1] : 0)) != -1)\n\t\t\t\t\t\tampersand = -1\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t// \" ' [\n\t\t\tcase 34: case 39: case 91:\n\t\t\t\tcharacters += delimit(character)\n\t\t\t\tbreak\n\t\t\t// \\t \\n \\r \\s\n\t\t\tcase 9: case 10: case 13: case 32:\n\t\t\t\tcharacters += whitespace(previous)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tcharacters += escaping(caret() - 1, 7)\n\t\t\t\tcontinue\n\t\t\t// /\n\t\t\tcase 47:\n\t\t\t\tswitch (peek()) {\n\t\t\t\t\tcase 42: case 47:\n\t\t\t\t\t\tappend(comment(commenter(next(), caret()), root, parent, declarations), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tcharacters += '/'\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t// {\n\t\t\tcase 123 * variable:\n\t\t\t\tpoints[index++] = strlen(characters) * ampersand\n\t\t\t// } ; \\0\n\t\t\tcase 125 * variable: case 59: case 0:\n\t\t\t\tswitch (character) {\n\t\t\t\t\t// \\0 }\n\t\t\t\t\tcase 0: case 125: scanning = 0\n\t\t\t\t\t// ;\n\t\t\t\t\tcase 59 + offset: if (ampersand == -1) characters = replace(characters, /\\f/g, '')\n\t\t\t\t\t\tif (property > 0 && (strlen(characters) - length))\n\t\t\t\t\t\t\tappend(property > 32 ? declaration(characters + ';', rule, parent, length - 1, declarations) : declaration(replace(characters, ' ', '') + ';', rule, parent, length - 2, declarations), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @ ;\n\t\t\t\t\tcase 59: characters += ';'\n\t\t\t\t\t// { rule/at-rule\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tappend(reference = ruleset(characters, root, parent, index, offset, rules, points, type, props = [], children = [], length, rulesets), rulesets)\n\n\t\t\t\t\t\tif (character === 123)\n\t\t\t\t\t\t\tif (offset === 0)\n\t\t\t\t\t\t\t\tparse(characters, root, reference, reference, props, rulesets, length, points, children)\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tswitch (atrule === 99 && charat(characters, 3) === 110 ? 100 : atrule) {\n\t\t\t\t\t\t\t\t\t// d l m s\n\t\t\t\t\t\t\t\t\tcase 100: case 108: case 109: case 115:\n\t\t\t\t\t\t\t\t\t\tparse(value, reference, reference, rule && append(ruleset(value, reference, reference, 0, 0, rules, points, type, rules, props = [], length, children), children), rules, children, length, points, rule ? props : children)\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tparse(characters, reference, reference, reference, [''], children, 0, points, children)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tindex = offset = property = 0, variable = ampersand = 1, type = characters = '', length = pseudo\n\t\t\t\tbreak\n\t\t\t// :\n\t\t\tcase 58:\n\t\t\t\tlength = 1 + strlen(characters), property = previous\n\t\t\tdefault:\n\t\t\t\tif (variable < 1)\n\t\t\t\t\tif (character == 123)\n\t\t\t\t\t\t--variable\n\t\t\t\t\telse if (character == 125 && variable++ == 0 && prev() == 125)\n\t\t\t\t\t\tcontinue\n\n\t\t\t\tswitch (characters += from(character), character * variable) {\n\t\t\t\t\t// &\n\t\t\t\t\tcase 38:\n\t\t\t\t\t\tampersand = offset > 0 ? 1 : (characters += '\\f', -1)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// ,\n\t\t\t\t\tcase 44:\n\t\t\t\t\t\tpoints[index++] = (strlen(characters) - 1) * ampersand, ampersand = 1\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @\n\t\t\t\t\tcase 64:\n\t\t\t\t\t\t// -\n\t\t\t\t\t\tif (peek() === 45)\n\t\t\t\t\t\t\tcharacters += delimit(next())\n\n\t\t\t\t\t\tatrule = peek(), offset = length = strlen(type = characters += identifier(caret())), character++\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// -\n\t\t\t\t\tcase 45:\n\t\t\t\t\t\tif (previous === 45 && strlen(characters) == 2)\n\t\t\t\t\t\t\tvariable = 0\n\t\t\t\t}\n\t\t}\n\n\treturn rulesets\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} index\n * @param {number} offset\n * @param {string[]} rules\n * @param {number[]} points\n * @param {string} type\n * @param {string[]} props\n * @param {string[]} children\n * @param {number} length\n * @param {object[]} siblings\n * @return {object}\n */\nexport function ruleset (value, root, parent, index, offset, rules, points, type, props, children, length, siblings) {\n\tvar post = offset - 1\n\tvar rule = offset === 0 ? rules : ['']\n\tvar size = sizeof(rule)\n\n\tfor (var i = 0, j = 0, k = 0; i < index; ++i)\n\t\tfor (var x = 0, y = substr(value, post + 1, post = abs(j = points[i])), z = value; x < size; ++x)\n\t\t\tif (z = trim(j > 0 ? rule[x] + ' ' + y : replace(y, /&\\f/g, rule[x])))\n\t\t\t\tprops[k++] = z\n\n\treturn node(value, root, parent, offset === 0 ? RULESET : type, props, children, length, siblings)\n}\n\n/**\n * @param {number} value\n * @param {object} root\n * @param {object?} parent\n * @param {object[]} siblings\n * @return {object}\n */\nexport function comment (value, root, parent, siblings) {\n\treturn node(value, root, parent, COMMENT, from(char()), substr(value, 2, -2), 0, siblings)\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} length\n * @param {object[]} siblings\n * @return {object}\n */\nexport function declaration (value, root, parent, length, siblings) {\n\treturn node(value, root, parent, DECLARATION, substr(value, 0, length), substr(value, length + 1, -1), length, siblings)\n}\n","var unitlessKeys = {\n  animationIterationCount: 1,\n  aspectRatio: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\nexport { unitlessKeys as default };\n","declare let SC_DISABLE_SPEEDY: boolean | null | undefined;\ndeclare let __VERSION__: string;\n\nexport const SC_ATTR: string =\n  (typeof process !== 'undefined' &&\n    typeof process.env !== 'undefined' &&\n    (process.env.REACT_APP_SC_ATTR || process.env.SC_ATTR)) ||\n  'data-styled';\n\nexport const SC_ATTR_ACTIVE = 'active';\nexport const SC_ATTR_VERSION = 'data-styled-version';\nexport const SC_VERSION = __VERSION__;\nexport const SPLITTER = '/*!sc*/\\n';\n\nexport const IS_BROWSER = typeof window !== 'undefined' && 'HTMLElement' in window;\n\nexport const DISABLE_SPEEDY = Boolean(\n  typeof SC_DISABLE_SPEEDY === 'boolean'\n    ? SC_DISABLE_SPEEDY\n    : typeof process !== 'undefined' &&\n        typeof process.env !== 'undefined' &&\n        typeof process.env.REACT_APP_SC_DISABLE_SPEEDY !== 'undefined' &&\n        process.env.REACT_APP_SC_DISABLE_SPEEDY !== ''\n      ? process.env.REACT_APP_SC_DISABLE_SPEEDY === 'false'\n        ? false\n        : process.env.REACT_APP_SC_DISABLE_SPEEDY\n      : typeof process !== 'undefined' &&\n          typeof process.env !== 'undefined' &&\n          typeof process.env.SC_DISABLE_SPEEDY !== 'undefined' &&\n          process.env.SC_DISABLE_SPEEDY !== ''\n        ? process.env.SC_DISABLE_SPEEDY === 'false'\n          ? false\n          : process.env.SC_DISABLE_SPEEDY\n        : process.env.NODE_ENV !== 'production'\n);\n\n// Shared empty execution context when generating static styles\nexport const STATIC_EXECUTION_CONTEXT = {};\n","import { Dict } from '../types';\n\nexport const EMPTY_ARRAY = Object.freeze([]) as Readonly<any[]>;\nexport const EMPTY_OBJECT = Object.freeze({}) as Readonly<Dict<any>>;\n","import { useRef } from 'react';\n\nconst invalidHookCallRe = /invalid hook call/i;\nconst seen = new Set();\n\nexport const checkDynamicCreation = (displayName: string, componentId?: string | undefined) => {\n  if (process.env.NODE_ENV !== 'production') {\n    const parsedIdString = componentId ? ` with the id of \"${componentId}\"` : '';\n    const message =\n      `The component ${displayName}${parsedIdString} has been created dynamically.\\n` +\n      \"You may see this warning because you've called styled inside another component.\\n\" +\n      'To resolve this only create new StyledComponents outside of any render method and function component.';\n\n    // If a hook is called outside of a component:\n    // React 17 and earlier throw an error\n    // React 18 and above use console.error\n\n    const originalConsoleError = console.error;\n    try {\n      let didNotCallInvalidHook = true;\n      console.error = (consoleErrorMessage, ...consoleErrorArgs) => {\n        // The error here is expected, since we're expecting anything that uses `checkDynamicCreation` to\n        // be called outside of a React component.\n        if (invalidHookCallRe.test(consoleErrorMessage)) {\n          didNotCallInvalidHook = false;\n          // This shouldn't happen, but resets `warningSeen` if we had this error happen intermittently\n          seen.delete(message);\n        } else {\n          originalConsoleError(consoleErrorMessage, ...consoleErrorArgs);\n        }\n      };\n      // We purposefully call `useRef` outside of a component and expect it to throw\n      // If it doesn't, then we're inside another component.\n      useRef();\n\n      if (didNotCallInvalidHook && !seen.has(message)) {\n        console.warn(message);\n        seen.add(message);\n      }\n    } catch (error) {\n      // The error here is expected, since we're expecting anything that uses `checkDynamicCreation` to\n      // be called outside of a React component.\n      if (invalidHookCallRe.test((error as Error).message)) {\n        // This shouldn't happen, but resets `warningSeen` if we had this error happen intermittently\n        seen.delete(message);\n      }\n    } finally {\n      console.error = originalConsoleError;\n    }\n  }\n};\n","import { DefaultTheme, ExecutionProps } from '../types';\nimport { EMPTY_OBJECT } from './empties';\n\nexport default function determineTheme(\n  props: ExecutionProps,\n  providedTheme?: DefaultTheme | undefined,\n  defaultProps: { theme?: DefaultTheme | undefined } = EMPTY_OBJECT\n): DefaultTheme | undefined {\n  return (props.theme !== defaultProps.theme && props.theme) || providedTheme || defaultProps.theme;\n}\n","// Thanks to ReactDOMFactories for this handy list!\n\nconst elements = [\n  'a',\n  'abbr',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'base',\n  'bdi',\n  'bdo',\n  'big',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'data',\n  'datalist',\n  'dd',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'div',\n  'dl',\n  'dt',\n  'em',\n  'embed',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'iframe',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'keygen',\n  'label',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'map',\n  'mark',\n  'menu',\n  'menuitem',\n  'meta',\n  'meter',\n  'nav',\n  'noscript',\n  'object',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'param',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'script',\n  'section',\n  'select',\n  'small',\n  'source',\n  'span',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'track',\n  'u',\n  'ul',\n  'use',\n  'var',\n  'video',\n  'wbr', // SVG\n  'circle',\n  'clipPath',\n  'defs',\n  'ellipse',\n  'foreignObject',\n  'g',\n  'image',\n  'line',\n  'linearGradient',\n  'marker',\n  'mask',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialGradient',\n  'rect',\n  'stop',\n  'svg',\n  'text',\n  'tspan',\n] as const;\n\nexport default new Set(elements);\nexport type SupportedHTMLElements = (typeof elements)[number];\n","// Source: https://www.w3.org/TR/cssom-1/#serialize-an-identifier\n// Control characters and non-letter first symbols are not supported\nconst escapeRegex = /[!\"#$%&'()*+,./:;<=>?@[\\\\\\]^`{|}~-]+/g;\n\nconst dashesAtEnds = /(^-|-$)/g;\n\n/**\n * TODO: Explore using CSS.escape when it becomes more available\n * in evergreen browsers.\n */\nexport default function escape(str: string) {\n  return str // Replace all possible CSS selectors\n    .replace(escapeRegex, '-') // Remove extraneous hyphens at the start and end\n    .replace(dashesAtEnds, '');\n}\n","const AD_REPLACER_R = /(a)(d)/gi;\n\n/* This is the \"capacity\" of our alphabet i.e. 2x26 for all letters plus their capitalised\n * counterparts */\nconst charsLength = 52;\n\n/* start at 75 for 'a' until 'z' (25) and then start at 65 for capitalised letters */\nconst getAlphabeticChar = (code: number) => String.fromCharCode(code + (code > 25 ? 39 : 97));\n\n/* input a number, usually a hash and convert it to base-52 */\nexport default function generateAlphabeticName(code: number) {\n  let name = '';\n  let x;\n\n  /* get a char and divide by alphabet-length */\n  for (x = Math.abs(code); x > charsLength; x = (x / charsLength) | 0) {\n    name = getAlphabeticChar(x % charsLength) + name;\n  }\n\n  return (getAlphabeticChar(x % charsLength) + name).replace(AD_REPLACER_R, '$1-$2');\n}\n","export const SEED = 5381;\n\n// When we have separate strings it's useful to run a progressive\n// version of djb2 where we pretend that we're still looping over\n// the same string\nexport const phash = (h: number, x: string) => {\n  let i = x.length;\n\n  while (i) {\n    h = (h * 33) ^ x.charCodeAt(--i);\n  }\n\n  return h;\n};\n\n// This is a djb2 hashing function\nexport const hash = (x: string) => {\n  return phash(SEED, x);\n};\n","import generateAlphabeticName from './generateAlphabeticName';\nimport { hash } from './hash';\n\nexport default function generateComponentId(str: string) {\n  return generateAlphabeticName(hash(str) >>> 0);\n}\n","import { StyledTarget } from '../types';\n\nexport default function getComponentName(target: StyledTarget<any>) {\n  return (\n    (process.env.NODE_ENV !== 'production' ? typeof target === 'string' && target : false) ||\n    (target as Exclude<StyledTarget<any>, string>).displayName ||\n    (target as Function).name ||\n    'Component'\n  );\n}\n","import { StyledTarget } from '../types';\n\nexport default function isTag(target: StyledTarget<'web'>): target is string {\n  return (\n    typeof target === 'string' &&\n    (process.env.NODE_ENV !== 'production'\n      ? target.charAt(0) === target.charAt(0).toLowerCase()\n      : true)\n  );\n}\n","import React from 'react';\nimport { AnyComponent } from '../types';\n\nconst hasSymbol = typeof Symbol === 'function' && Symbol.for;\n\n// copied from react-is\nconst REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nconst REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\n\n/**\n * Adapted from hoist-non-react-statics to avoid the react-is dependency.\n */\nconst REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true,\n};\n\nconst KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true,\n};\n\nconst FORWARD_REF_STATICS = {\n  $$typeof: true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n};\n\nconst MEMO_STATICS = {\n  $$typeof: true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true,\n};\n\nconst TYPE_STATICS = {\n  [REACT_FORWARD_REF_TYPE]: FORWARD_REF_STATICS,\n  [REACT_MEMO_TYPE]: MEMO_STATICS,\n};\n\ntype OmniComponent = AnyComponent;\n\n// adapted from react-is\nfunction isMemo(\n  object: OmniComponent | React.MemoExoticComponent<any>\n): object is React.MemoExoticComponent<any> {\n  const $$typeofType = 'type' in object && object.type.$$typeof;\n\n  return $$typeofType === REACT_MEMO_TYPE;\n}\n\nfunction getStatics(component: OmniComponent) {\n  // React v16.11 and below\n  if (isMemo(component)) {\n    return MEMO_STATICS;\n  }\n\n  // React v16.12 and above\n  return '$$typeof' in component\n    ? TYPE_STATICS[component['$$typeof'] as unknown as string]\n    : REACT_STATICS;\n}\n\nconst defineProperty = Object.defineProperty;\nconst getOwnPropertyNames = Object.getOwnPropertyNames;\nconst getOwnPropertySymbols = Object.getOwnPropertySymbols;\nconst getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nconst getPrototypeOf = Object.getPrototypeOf;\nconst objectPrototype = Object.prototype;\n\ntype ExcludeList = {\n  [key: string]: true;\n};\n\ntype NonReactStatics<S extends OmniComponent, C extends ExcludeList = {}> = {\n  [key in Exclude<\n    keyof S,\n    S extends React.MemoExoticComponent<any>\n      ? keyof typeof MEMO_STATICS | keyof C\n      : S extends React.ForwardRefExoticComponent<any>\n        ? keyof typeof FORWARD_REF_STATICS | keyof C\n        : keyof typeof REACT_STATICS | keyof typeof KNOWN_STATICS | keyof C\n  >]: S[key];\n};\n\nexport default function hoistNonReactStatics<\n  T extends OmniComponent,\n  S extends OmniComponent,\n  C extends ExcludeList = {},\n>(targetComponent: T, sourceComponent: S, excludelist?: C | undefined) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n\n    if (objectPrototype) {\n      const inheritedComponent = getPrototypeOf(sourceComponent);\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, excludelist);\n      }\n    }\n\n    let keys: (String | Symbol)[] = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    const targetStatics = getStatics(targetComponent);\n    const sourceStatics = getStatics(sourceComponent);\n\n    for (let i = 0; i < keys.length; ++i) {\n      const key = keys[i] as unknown as string;\n      if (\n        !(key in KNOWN_STATICS) &&\n        !(excludelist && excludelist[key]) &&\n        !(sourceStatics && key in sourceStatics) &&\n        !(targetStatics && key in targetStatics)\n      ) {\n        const descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor!);\n        } catch (e) {\n          /* ignore */\n        }\n      }\n    }\n  }\n\n  return targetComponent as T & NonReactStatics<S, C>;\n}\n","export default function isFunction(test: any): test is Function {\n  return typeof test === 'function';\n}\n","import { StyledComponentBrand } from '../types';\n\nexport default function isStyledComponent(target: any): target is StyledComponentBrand {\n  return typeof target === 'object' && 'styledComponentId' in target;\n}\n","/**\n * Convenience function for joining strings to form className chains\n */\nexport function joinStrings(a?: string | undefined, b?: string | undefined): string {\n  return a && b ? `${a} ${b}` : a || b || '';\n}\n\nexport function joinStringArray(arr: string[], sep?: string | undefined): string {\n  if (arr.length === 0) {\n    return '';\n  }\n\n  let result = arr[0];\n  for (let i = 1; i < arr.length; i++) {\n    result += sep ? sep + arr[i] : arr[i];\n  }\n  return result;\n}\n","export default function isPlainObject(x: any): x is Record<any, any> {\n  return (\n    x !== null &&\n    typeof x === 'object' &&\n    x.constructor.name === Object.name &&\n    /* check for reasonable markers that the object isn't an element for react & preact/compat */\n    !('props' in x && x.$$typeof)\n  );\n}\n","import isPlainObject from './isPlainObject';\n\nfunction mixinRecursively(target: any, source: any, forceMerge = false) {\n  /* only merge into POJOs, Arrays, but for top level objects only\n   * allow to merge into anything by passing forceMerge = true */\n  if (!forceMerge && !isPlainObject(target) && !Array.isArray(target)) {\n    return source;\n  }\n\n  if (Array.isArray(source)) {\n    for (let key = 0; key < source.length; key++) {\n      target[key] = mixinRecursively(target[key], source[key]);\n    }\n  } else if (isPlainObject(source)) {\n    for (const key in source) {\n      target[key] = mixinRecursively(target[key], source[key]);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Arrays & POJOs merged recursively, other objects and value types are overridden\n * If target is not a POJO or an Array, it will get source properties injected via shallow merge\n * Source objects applied left to right.  Mutates & returns target.  Similar to lodash merge.\n */\nexport default function mixinDeep(target: any, ...sources: any[]) {\n  for (const source of sources) {\n    mixinRecursively(target, source, true);\n  }\n\n  return target;\n}\n","/**\n * If the Object prototype is frozen, the \"toString\" property is non-writable. This means that any objects which inherit this property\n * cannot have the property changed using a \"=\" assignment operator. If using strict mode, attempting that will cause an error. If not using\n * strict mode, attempting that will be silently ignored.\n *\n * If the Object prototype is frozen, inherited non-writable properties can still be shadowed using one of two mechanisms:\n *\n *  1. ES6 class methods: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes#methods\n *  2. Using the `Object.defineProperty()` static method:\n *     https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\n *\n * However, this project uses Babel to transpile ES6 classes, and transforms ES6 class methods to use the assignment operator instead:\n * https://babeljs.io/docs/babel-plugin-transform-class-properties#options\n *\n * Therefore, the most compatible way to shadow the prototype's \"toString\" property is to define a new \"toString\" property on this object.\n */\nexport function setToString(object: object, toStringFn: () => string) {\n  Object.defineProperty(object, 'toString', { value: toStringFn });\n}\n","import { Dict } from '../types';\nimport errorMap from './errors';\n\nconst ERRORS: Dict<any> = process.env.NODE_ENV !== 'production' ? errorMap : {};\n\n/**\n * super basic version of sprintf\n */\nfunction format(...args: [string, ...any]) {\n  let a = args[0];\n  const b = [];\n\n  for (let c = 1, len = args.length; c < len; c += 1) {\n    b.push(args[c]);\n  }\n\n  b.forEach(d => {\n    a = a.replace(/%[a-z]/, d);\n  });\n\n  return a;\n}\n\n/**\n * Create an error file out of errors.md for development and a simple web link to the full errors\n * in production mode.\n */\nexport default function throwStyledComponentsError(\n  code: string | number,\n  ...interpolations: any[]\n) {\n  if (process.env.NODE_ENV === 'production') {\n    return new Error(\n      `An error occurred. See https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#${code} for more information.${\n        interpolations.length > 0 ? ` Args: ${interpolations.join(', ')}` : ''\n      }`\n    );\n  } else {\n    return new Error(format(ERRORS[code], ...interpolations).trim());\n  }\n}\n","import { SPLITTER } from '../constants';\nimport styledError from '../utils/error';\nimport { GroupedTag, Tag } from './types';\n\n/** Create a GroupedTag with an underlying Tag implementation */\nexport const makeGroupedTag = (tag: Tag) => {\n  return new DefaultGroupedTag(tag);\n};\n\nconst BASE_SIZE = 1 << 9;\n\nconst DefaultGroupedTag = class DefaultGroupedTag implements GroupedTag {\n  groupSizes: Uint32Array;\n  length: number;\n  tag: Tag;\n\n  constructor(tag: Tag) {\n    this.groupSizes = new Uint32Array(BASE_SIZE);\n    this.length = BASE_SIZE;\n    this.tag = tag;\n  }\n\n  indexOfGroup(group: number) {\n    let index = 0;\n    for (let i = 0; i < group; i++) {\n      index += this.groupSizes[i];\n    }\n\n    return index;\n  }\n\n  insertRules(group: number, rules: string[]) {\n    if (group >= this.groupSizes.length) {\n      const oldBuffer = this.groupSizes;\n      const oldSize = oldBuffer.length;\n\n      let newSize = oldSize;\n      while (group >= newSize) {\n        newSize <<= 1;\n        if (newSize < 0) {\n          throw styledError(16, `${group}`);\n        }\n      }\n\n      this.groupSizes = new Uint32Array(newSize);\n      this.groupSizes.set(oldBuffer);\n      this.length = newSize;\n\n      for (let i = oldSize; i < newSize; i++) {\n        this.groupSizes[i] = 0;\n      }\n    }\n\n    let ruleIndex = this.indexOfGroup(group + 1);\n\n    for (let i = 0, l = rules.length; i < l; i++) {\n      if (this.tag.insertRule(ruleIndex, rules[i])) {\n        this.groupSizes[group]++;\n        ruleIndex++;\n      }\n    }\n  }\n\n  clearGroup(group: number) {\n    if (group < this.length) {\n      const length = this.groupSizes[group];\n      const startIndex = this.indexOfGroup(group);\n      const endIndex = startIndex + length;\n\n      this.groupSizes[group] = 0;\n\n      for (let i = startIndex; i < endIndex; i++) {\n        this.tag.deleteRule(startIndex);\n      }\n    }\n  }\n\n  getGroup(group: number) {\n    let css = '';\n    if (group >= this.length || this.groupSizes[group] === 0) {\n      return css;\n    }\n\n    const length = this.groupSizes[group];\n    const startIndex = this.indexOfGroup(group);\n    const endIndex = startIndex + length;\n\n    for (let i = startIndex; i < endIndex; i++) {\n      css += `${this.tag.getRule(i)}${SPLITTER}`;\n    }\n\n    return css;\n  }\n};\n","import styledError from '../utils/error';\n\nconst MAX_SMI = 1 << (31 - 1);\n\nlet groupIDRegister: Map<string, number> = new Map();\nlet reverseRegister: Map<number, string> = new Map();\nlet nextFreeGroup = 1;\n\nexport const resetGroupIds = () => {\n  groupIDRegister = new Map();\n  reverseRegister = new Map();\n  nextFreeGroup = 1;\n};\n\nexport const getGroupForId = (id: string): number => {\n  if (groupIDRegister.has(id)) {\n    return groupIDRegister.get(id) as any;\n  }\n\n  while (reverseRegister.has(nextFreeGroup)) {\n    nextFreeGroup++;\n  }\n\n  const group = nextFreeGroup++;\n\n  if (process.env.NODE_ENV !== 'production' && ((group | 0) < 0 || group > MAX_SMI)) {\n    throw styledError(16, `${group}`);\n  }\n\n  groupIDRegister.set(id, group);\n  reverseRegister.set(group, id);\n  return group;\n};\n\nexport const getIdForGroup = (group: number): void | string => {\n  return reverseRegister.get(group);\n};\n\nexport const setGroupForId = (id: string, group: number) => {\n  // move pointer\n  nextFreeGroup = group + 1;\n\n  groupIDRegister.set(id, group);\n  reverseRegister.set(group, id);\n};\n","import { SC_ATTR, SC_ATTR_ACTIVE, SC_ATTR_VERSION, SC_VERSION, SPLITTER } from '../constants';\nimport { getIdForGroup, setGroupForId } from './GroupIDAllocator';\nimport { Sheet } from './types';\n\nconst SELECTOR = `style[${SC_ATTR}][${SC_ATTR_VERSION}=\"${SC_VERSION}\"]`;\nconst MARKER_RE = new RegExp(`^${SC_ATTR}\\\\.g(\\\\d+)\\\\[id=\"([\\\\w\\\\d-]+)\"\\\\].*?\"([^\"]*)`);\n\nexport const outputSheet = (sheet: Sheet) => {\n  const tag = sheet.getTag();\n  const { length } = tag;\n\n  let css = '';\n  for (let group = 0; group < length; group++) {\n    const id = getIdForGroup(group);\n    if (id === undefined) continue;\n\n    const names = sheet.names.get(id);\n    const rules = tag.getGroup(group);\n    if (names === undefined || !names.size || rules.length === 0) continue;\n\n    const selector = `${SC_ATTR}.g${group}[id=\"${id}\"]`;\n\n    let content = '';\n    if (names !== undefined) {\n      names.forEach(name => {\n        if (name.length > 0) {\n          content += `${name},`;\n        }\n      });\n    }\n\n    // NOTE: It's easier to collect rules and have the marker\n    // after the actual rules to simplify the rehydration\n    css += `${rules}${selector}{content:\"${content}\"}${SPLITTER}`;\n  }\n\n  return css;\n};\n\nconst rehydrateNamesFromContent = (sheet: Sheet, id: string, content: string) => {\n  const names = content.split(',');\n  let name;\n\n  for (let i = 0, l = names.length; i < l; i++) {\n    if ((name = names[i])) {\n      sheet.registerName(id, name);\n    }\n  }\n};\n\nconst rehydrateSheetFromTag = (sheet: Sheet, style: HTMLStyleElement) => {\n  const parts = (style.textContent ?? '').split(SPLITTER);\n  const rules: string[] = [];\n\n  for (let i = 0, l = parts.length; i < l; i++) {\n    const part = parts[i].trim();\n    if (!part) continue;\n\n    const marker = part.match(MARKER_RE);\n\n    if (marker) {\n      const group = parseInt(marker[1], 10) | 0;\n      const id = marker[2];\n\n      if (group !== 0) {\n        // Rehydrate componentId to group index mapping\n        setGroupForId(id, group);\n        // Rehydrate names and rules\n        // looks like: data-styled.g11[id=\"idA\"]{content:\"nameA,\"}\n        rehydrateNamesFromContent(sheet, id, marker[3]);\n        sheet.getTag().insertRules(group, rules);\n      }\n\n      rules.length = 0;\n    } else {\n      rules.push(part);\n    }\n  }\n};\n\nexport const rehydrateSheet = (sheet: Sheet) => {\n  const nodes = document.querySelectorAll(SELECTOR);\n\n  for (let i = 0, l = nodes.length; i < l; i++) {\n    const node = nodes[i] as any as HTMLStyleElement;\n    if (node && node.getAttribute(SC_ATTR) !== SC_ATTR_ACTIVE) {\n      rehydrateSheetFromTag(sheet, node);\n\n      if (node.parentNode) {\n        node.parentNode.removeChild(node);\n      }\n    }\n  }\n};\n","declare let __webpack_nonce__: string;\n\nexport default function getNonce() {\n  return typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n}\n","import { SC_ATTR, SC_ATTR_ACTIVE, SC_ATTR_VERSION, SC_VERSION } from '../constants';\nimport { InsertionTarget } from '../types';\nimport styledError from '../utils/error';\nimport getNonce from '../utils/nonce';\n\n/** Find last style element if any inside target */\nconst findLastStyleTag = (target: InsertionTarget): void | HTMLStyleElement => {\n  const arr = Array.from(target.querySelectorAll<HTMLStyleElement>(`style[${SC_ATTR}]`));\n\n  return arr[arr.length - 1];\n};\n\n/** Create a style element inside `target` or <head> after the last */\nexport const makeStyleTag = (target?: InsertionTarget | undefined): HTMLStyleElement => {\n  const head = document.head;\n  const parent = target || head;\n  const style = document.createElement('style');\n  const prevStyle = findLastStyleTag(parent);\n  const nextSibling = prevStyle !== undefined ? prevStyle.nextSibling : null;\n\n  style.setAttribute(SC_ATTR, SC_ATTR_ACTIVE);\n  style.setAttribute(SC_ATTR_VERSION, SC_VERSION);\n\n  const nonce = getNonce();\n\n  if (nonce) style.setAttribute('nonce', nonce);\n\n  parent.insertBefore(style, nextSibling);\n\n  return style;\n};\n\n/** Get the CSSStyleSheet instance for a given style element */\nexport const getSheet = (tag: HTMLStyleElement): CSSStyleSheet => {\n  if (tag.sheet) {\n    return tag.sheet as any as CSSStyleSheet;\n  }\n\n  // Avoid Firefox quirk where the style element might not have a sheet property\n  const { styleSheets } = document;\n  for (let i = 0, l = styleSheets.length; i < l; i++) {\n    const sheet = styleSheets[i];\n    if (sheet.ownerNode === tag) {\n      return sheet as any as CSSStyleSheet;\n    }\n  }\n\n  throw styledError(17);\n};\n","import { InsertionTarget } from '../types';\nimport { getSheet, makeStyleTag } from './dom';\nimport { SheetOptions, Tag } from './types';\n\n/** Create a CSSStyleSheet-like tag depending on the environment */\nexport const makeTag = ({ isServer, useCSSOMInjection, target }: SheetOptions) => {\n  if (isServer) {\n    return new VirtualTag(target);\n  } else if (useCSSOMInjection) {\n    return new CSSOMTag(target);\n  } else {\n    return new TextTag(target);\n  }\n};\n\nexport const CSSOMTag = class CSSOMTag implements Tag {\n  element: HTMLStyleElement;\n\n  sheet: CSSStyleSheet;\n\n  length: number;\n\n  constructor(target?: InsertionTarget | undefined) {\n    this.element = makeStyleTag(target);\n\n    // Avoid Edge bug where empty style elements don't create sheets\n    this.element.appendChild(document.createTextNode(''));\n\n    this.sheet = getSheet(this.element);\n    this.length = 0;\n  }\n\n  insertRule(index: number, rule: string): boolean {\n    try {\n      this.sheet.insertRule(rule, index);\n      this.length++;\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  deleteRule(index: number): void {\n    this.sheet.deleteRule(index);\n    this.length--;\n  }\n\n  getRule(index: number): string {\n    const rule = this.sheet.cssRules[index];\n\n    // Avoid IE11 quirk where cssText is inaccessible on some invalid rules\n    if (rule && rule.cssText) {\n      return rule.cssText;\n    } else {\n      return '';\n    }\n  }\n};\n\n/** A Tag that emulates the CSSStyleSheet API but uses text nodes */\nexport const TextTag = class TextTag implements Tag {\n  element: HTMLStyleElement;\n  nodes: NodeListOf<Node>;\n  length: number;\n\n  constructor(target?: InsertionTarget | undefined) {\n    this.element = makeStyleTag(target);\n    this.nodes = this.element.childNodes;\n    this.length = 0;\n  }\n\n  insertRule(index: number, rule: string) {\n    if (index <= this.length && index >= 0) {\n      const node = document.createTextNode(rule);\n      const refNode = this.nodes[index];\n      this.element.insertBefore(node, refNode || null);\n      this.length++;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  deleteRule(index: number) {\n    this.element.removeChild(this.nodes[index]);\n    this.length--;\n  }\n\n  getRule(index: number) {\n    if (index < this.length) {\n      return this.nodes[index].textContent as string;\n    } else {\n      return '';\n    }\n  }\n};\n\n/** A completely virtual (server-side) Tag that doesn't manipulate the DOM */\nexport const VirtualTag = class VirtualTag implements Tag {\n  rules: string[];\n\n  length: number;\n\n  constructor(_target?: InsertionTarget | undefined) {\n    this.rules = [];\n    this.length = 0;\n  }\n\n  insertRule(index: number, rule: string) {\n    if (index <= this.length) {\n      this.rules.splice(index, 0, rule);\n      this.length++;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  deleteRule(index: number) {\n    this.rules.splice(index, 1);\n    this.length--;\n  }\n\n  getRule(index: number) {\n    if (index < this.length) {\n      return this.rules[index];\n    } else {\n      return '';\n    }\n  }\n};\n","import { DISABLE_SPEEDY, IS_BROWSER } from '../constants';\nimport { InsertionTarget } from '../types';\nimport { EMPTY_OBJECT } from '../utils/empties';\nimport { setToString } from '../utils/setToString';\nimport { makeGroupedTag } from './GroupedTag';\nimport { getGroupForId } from './GroupIDAllocator';\nimport { outputSheet, rehydrateSheet } from './Rehydration';\nimport { makeTag } from './Tag';\nimport { GroupedTag, Sheet, SheetOptions } from './types';\n\nlet SHOULD_REHYDRATE = IS_BROWSER;\n\ntype SheetConstructorArgs = {\n  isServer?: boolean;\n  useCSSOMInjection?: boolean;\n  target?: InsertionTarget | undefined;\n};\n\ntype GlobalStylesAllocationMap = {\n  [key: string]: number;\n};\ntype NamesAllocationMap = Map<string, Set<string>>;\n\nconst defaultOptions: SheetOptions = {\n  isServer: !IS_BROWSER,\n  useCSSOMInjection: !DISABLE_SPEEDY,\n};\n\n/** Contains the main stylesheet logic for stringification and caching */\nexport default class StyleSheet implements Sheet {\n  gs: GlobalStylesAllocationMap;\n  names: NamesAllocationMap;\n  options: SheetOptions;\n  server: boolean;\n  tag?: GroupedTag | undefined;\n\n  /** Register a group ID to give it an index */\n  static registerId(id: string): number {\n    return getGroupForId(id);\n  }\n\n  constructor(\n    options: SheetConstructorArgs = EMPTY_OBJECT as Object,\n    globalStyles: GlobalStylesAllocationMap = {},\n    names?: NamesAllocationMap | undefined\n  ) {\n    this.options = {\n      ...defaultOptions,\n      ...options,\n    };\n\n    this.gs = globalStyles;\n    this.names = new Map(names as NamesAllocationMap);\n    this.server = !!options.isServer;\n\n    // We rehydrate only once and use the sheet that is created first\n    if (!this.server && IS_BROWSER && SHOULD_REHYDRATE) {\n      SHOULD_REHYDRATE = false;\n      rehydrateSheet(this);\n    }\n\n    setToString(this, () => outputSheet(this));\n  }\n\n  rehydrate(): void {\n    if (!this.server && IS_BROWSER) {\n      rehydrateSheet(this);\n    }\n  }\n\n  reconstructWithOptions(options: SheetConstructorArgs, withNames = true) {\n    return new StyleSheet(\n      { ...this.options, ...options },\n      this.gs,\n      (withNames && this.names) || undefined\n    );\n  }\n\n  allocateGSInstance(id: string) {\n    return (this.gs[id] = (this.gs[id] || 0) + 1);\n  }\n\n  /** Lazily initialises a GroupedTag for when it's actually needed */\n  getTag() {\n    return this.tag || (this.tag = makeGroupedTag(makeTag(this.options)));\n  }\n\n  /** Check whether a name is known for caching */\n  hasNameForId(id: string, name: string): boolean {\n    return this.names.has(id) && (this.names.get(id) as any).has(name);\n  }\n\n  /** Mark a group's name as known for caching */\n  registerName(id: string, name: string) {\n    getGroupForId(id);\n\n    if (!this.names.has(id)) {\n      const groupNames = new Set<string>();\n      groupNames.add(name);\n      this.names.set(id, groupNames);\n    } else {\n      (this.names.get(id) as any).add(name);\n    }\n  }\n\n  /** Insert new rules which also marks the name as known */\n  insertRules(id: string, name: string, rules: string | string[]) {\n    this.registerName(id, name);\n    this.getTag().insertRules(getGroupForId(id), rules);\n  }\n\n  /** Clears all cached names for a given group ID */\n  clearNames(id: string) {\n    if (this.names.has(id)) {\n      (this.names.get(id) as any).clear();\n    }\n  }\n\n  /** Clears all rules for a given group ID */\n  clearRules(id: string) {\n    this.getTag().clearGroup(getGroupForId(id));\n    this.clearNames(id);\n  }\n\n  /** Clears the entire tag which deletes all rules but not its names */\n  clearTag() {\n    // NOTE: This does not clear the names, since it's only used during SSR\n    // so that we can continuously output only new rules\n    this.tag = undefined;\n  }\n}\n","import * as stylis from 'stylis';\nimport { Stringifier } from '../types';\nimport { EMPTY_ARRAY, EMPTY_OBJECT } from './empties';\nimport throwStyledError from './error';\nimport { SEED, phash } from './hash';\n\nconst AMP_REGEX = /&/g;\nconst COMMENT_REGEX = /^\\s*\\/\\/.*$/gm;\n\nexport type ICreateStylisInstance = {\n  options?: { namespace?: string | undefined; prefix?: boolean | undefined } | undefined;\n  plugins?: stylis.Middleware[] | undefined;\n};\n\n/**\n * Takes an element and recurses through it's rules added the namespace to the start of each selector.\n * Takes into account media queries by recursing through child rules if they are present.\n */\nfunction recursivelySetNamepace(compiled: stylis.Element[], namespace: String): stylis.Element[] {\n  return compiled.map(rule => {\n    if (rule.type === 'rule') {\n      // add the namespace to the start\n      rule.value = `${namespace} ${rule.value}`;\n      // add the namespace after each comma for subsequent selectors.\n      rule.value = rule.value.replaceAll(',', `,${namespace} `);\n      rule.props = (rule.props as string[]).map(prop => {\n        return `${namespace} ${prop}`;\n      });\n    }\n\n    if (Array.isArray(rule.children) && rule.type !== '@keyframes') {\n      rule.children = recursivelySetNamepace(rule.children, namespace);\n    }\n    return rule;\n  });\n}\n\nexport default function createStylisInstance(\n  {\n    options = EMPTY_OBJECT as object,\n    plugins = EMPTY_ARRAY as unknown as stylis.Middleware[],\n  }: ICreateStylisInstance = EMPTY_OBJECT as object\n) {\n  let _componentId: string;\n  let _selector: string;\n  let _selectorRegexp: RegExp;\n\n  const selfReferenceReplacer = (match: string, offset: number, string: string) => {\n    if (\n      /**\n       * We only want to refer to the static class directly if the selector is part of a\n       * self-reference selector `& + & { color: red; }`\n       */\n      string.startsWith(_selector) &&\n      string.endsWith(_selector) &&\n      string.replaceAll(_selector, '').length > 0\n    ) {\n      return `.${_componentId}`;\n    }\n\n    return match;\n  };\n\n  /**\n   * When writing a style like\n   *\n   * & + & {\n   *   color: red;\n   * }\n   *\n   * The second ampersand should be a reference to the static component class. stylis\n   * has no knowledge of static class so we have to intelligently replace the base selector.\n   *\n   * https://github.com/thysultan/stylis.js/tree/v4.0.2#abstract-syntax-structure\n   */\n  const selfReferenceReplacementPlugin: stylis.Middleware = element => {\n    if (element.type === stylis.RULESET && element.value.includes('&')) {\n      (element.props as string[])[0] = element.props[0]\n        // catch any hanging references that stylis missed\n        .replace(AMP_REGEX, _selector)\n        .replace(_selectorRegexp, selfReferenceReplacer);\n    }\n  };\n\n  const middlewares = plugins.slice();\n\n  middlewares.push(selfReferenceReplacementPlugin);\n\n  /**\n   * Enables automatic vendor-prefixing for styles.\n   */\n  if (options.prefix) {\n    middlewares.push(stylis.prefixer);\n  }\n\n  middlewares.push(stylis.stringify);\n\n  const stringifyRules: Stringifier = (\n    css: string,\n    selector = '',\n    /**\n     * This \"prefix\" referes to a _selector_ prefix.\n     */\n    prefix = '',\n    componentId = '&'\n  ) => {\n    // stylis has no concept of state to be passed to plugins\n    // but since JS is single-threaded, we can rely on that to ensure\n    // these properties stay in sync with the current stylis run\n    _componentId = componentId;\n    _selector = selector;\n    _selectorRegexp = new RegExp(`\\\\${_selector}\\\\b`, 'g');\n\n    const flatCSS = css.replace(COMMENT_REGEX, '');\n    let compiled = stylis.compile(\n      prefix || selector ? `${prefix} ${selector} { ${flatCSS} }` : flatCSS\n    );\n\n    if (options.namespace) {\n      compiled = recursivelySetNamepace(compiled, options.namespace);\n    }\n\n    const stack: string[] = [];\n\n    stylis.serialize(\n      compiled,\n      stylis.middleware(middlewares.concat(stylis.rulesheet(value => stack.push(value))))\n    );\n\n    return stack;\n  };\n\n  stringifyRules.hash = plugins.length\n    ? plugins\n        .reduce((acc, plugin) => {\n          if (!plugin.name) {\n            throwStyledError(15);\n          }\n\n          return phash(acc, plugin.name);\n        }, SEED)\n        .toString()\n    : '';\n\n  return stringifyRules;\n}\n","import React, { useContext, useEffect, useMemo, useState } from 'react';\nimport shallowequal from 'shallowequal';\nimport type stylis from 'stylis';\nimport StyleSheet from '../sheet';\nimport { InsertionTarget, ShouldForwardProp, Stringifier } from '../types';\nimport createStylisInstance from '../utils/stylis';\n\nexport const mainSheet: StyleSheet = new StyleSheet();\nexport const mainStylis: Stringifier = createStylisInstance();\n\nexport type IStyleSheetContext = {\n  shouldForwardProp?: ShouldForwardProp<'web'> | undefined;\n  styleSheet: StyleSheet;\n  stylis: Stringifier;\n};\n\nexport const StyleSheetContext = React.createContext<IStyleSheetContext>({\n  shouldForwardProp: undefined,\n  styleSheet: mainSheet,\n  stylis: mainStylis,\n});\n\nexport const StyleSheetConsumer = StyleSheetContext.Consumer;\n\nexport type IStylisContext = Stringifier | void;\nexport const StylisContext = React.createContext<IStylisContext>(undefined);\nexport const StylisConsumer = StylisContext.Consumer;\n\nexport function useStyleSheetContext() {\n  return useContext(StyleSheetContext);\n}\n\nexport type IStyleSheetManager = React.PropsWithChildren<{\n  /**\n   * If desired, you can pass this prop to disable \"speedy\" insertion mode, which\n   * uses the browser [CSSOM APIs](https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleSheet).\n   * When disabled, rules are inserted as simple text into style blocks.\n   */\n  disableCSSOMInjection?: undefined | boolean;\n  /**\n   * If you are working exclusively with modern browsers, vendor prefixes can often be omitted\n   * to reduce the weight of CSS on the page.\n   */\n  enableVendorPrefixes?: undefined | boolean;\n  /**\n   * Provide an optional selector to be prepended to all generated style rules.\n   */\n  namespace?: undefined | string;\n  /**\n   * Create and provide your own `StyleSheet` if necessary for advanced SSR scenarios.\n   */\n  sheet?: undefined | StyleSheet;\n  /**\n   * Starting in v6, styled-components no longer does its own prop validation\n   * and recommends use of transient props \"$prop\" to pass style-only props to\n   * components. If for some reason you are not able to use transient props, a\n   * prop validation function can be provided via `StyleSheetManager`, such as\n   * `@emotion/is-prop-valid`.\n   *\n   * When the return value is `true`, props will be forwarded to the DOM/underlying\n   * component. If return value is `false`, the prop will be discarded after styles\n   * are calculated.\n   *\n   * Manually composing `styled.{element}.withConfig({shouldForwardProp})` will\n   * override this default.\n   */\n  shouldForwardProp?: undefined | IStyleSheetContext['shouldForwardProp'];\n  /**\n   * An array of plugins to be run by stylis (style processor) during compilation.\n   * Check out [what's available on npm*](https://www.npmjs.com/search?q=keywords%3Astylis).\n   *\n   * \\* The plugin(s) must be compatible with stylis v4 or above.\n   */\n  stylisPlugins?: undefined | stylis.Middleware[];\n  /**\n   * Provide an alternate DOM node to host generated styles; useful for iframes.\n   */\n  target?: undefined | InsertionTarget;\n}>;\n\nexport function StyleSheetManager(props: IStyleSheetManager): React.JSX.Element {\n  const [plugins, setPlugins] = useState(props.stylisPlugins);\n  const { styleSheet } = useStyleSheetContext();\n\n  const resolvedStyleSheet = useMemo(() => {\n    let sheet = styleSheet;\n\n    if (props.sheet) {\n      sheet = props.sheet;\n    } else if (props.target) {\n      sheet = sheet.reconstructWithOptions({ target: props.target }, false);\n    }\n\n    if (props.disableCSSOMInjection) {\n      sheet = sheet.reconstructWithOptions({ useCSSOMInjection: false });\n    }\n\n    return sheet;\n  }, [props.disableCSSOMInjection, props.sheet, props.target, styleSheet]);\n\n  const stylis = useMemo(\n    () =>\n      createStylisInstance({\n        options: { namespace: props.namespace, prefix: props.enableVendorPrefixes },\n        plugins,\n      }),\n    [props.enableVendorPrefixes, props.namespace, plugins]\n  );\n\n  useEffect(() => {\n    if (!shallowequal(plugins, props.stylisPlugins)) setPlugins(props.stylisPlugins);\n  }, [props.stylisPlugins]);\n\n  const styleSheetContextValue = useMemo(\n    () => ({\n      shouldForwardProp: props.shouldForwardProp,\n      styleSheet: resolvedStyleSheet,\n      stylis,\n    }),\n    [props.shouldForwardProp, resolvedStyleSheet, stylis]\n  );\n\n  return (\n    <StyleSheetContext.Provider value={styleSheetContextValue}>\n      <StylisContext.Provider value={stylis}>{props.children}</StylisContext.Provider>\n    </StyleSheetContext.Provider>\n  );\n}\n","import StyleSheet from '../sheet';\nimport { Keyframes as KeyframesType, Stringifier } from '../types';\nimport styledError from '../utils/error';\nimport { setToString } from '../utils/setToString';\nimport { mainStylis } from './StyleSheetManager';\n\nexport default class Keyframes implements KeyframesType {\n  id: string;\n  name: string;\n  rules: string;\n\n  constructor(name: string, rules: string) {\n    this.name = name;\n    this.id = `sc-keyframes-${name}`;\n    this.rules = rules;\n\n    setToString(this, () => {\n      throw styledError(12, String(this.name));\n    });\n  }\n\n  inject = (styleSheet: StyleSheet, stylisInstance: Stringifier = mainStylis): void => {\n    const resolvedName = this.name + stylisInstance.hash;\n\n    if (!styleSheet.hasNameForId(this.id, resolvedName)) {\n      styleSheet.insertRules(\n        this.id,\n        resolvedName,\n        stylisInstance(this.rules, resolvedName, '@keyframes')\n      );\n    }\n  };\n\n  getName(stylisInstance: Stringifier = mainStylis): string {\n    return this.name + stylisInstance.hash;\n  }\n}\n","const isUpper = (c: string) => c >= 'A' && c <= 'Z';\n\n/**\n * Hyphenates a camelcased CSS property name, for example:\n *\n *   > hyphenateStyleName('backgroundColor')\n *   < \"background-color\"\n *   > hyphenateStyleName('MozTransition')\n *   < \"-moz-transition\"\n *   > hyphenateStyleName('msTransition')\n *   < \"-ms-transition\"\n *\n * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n * is converted to `-ms-`.\n */\nexport default function hyphenateStyleName(string: string): string {\n  let output = '';\n\n  for (let i = 0; i < string.length; i++) {\n    const c = string[i];\n    // Check for CSS variable prefix\n    if (i === 1 && c === '-' && string[0] === '-') {\n      return string;\n    }\n\n    if (isUpper(c)) {\n      output += '-' + c.toLowerCase();\n    } else {\n      output += c;\n    }\n  }\n\n  return output.startsWith('ms-') ? '-' + output : output;\n}\n","import Keyframes from '../models/Keyframes';\nimport StyleSheet from '../sheet';\nimport {\n  AnyComponent,\n  Dict,\n  ExecutionContext,\n  Interpolation,\n  IStyledComponent,\n  RuleSet,\n  Stringifier,\n  StyledObject,\n} from '../types';\nimport addUnitIfNeeded from './addUnitIfNeeded';\nimport { EMPTY_ARRAY } from './empties';\nimport getComponentName from './getComponentName';\nimport hyphenate from './hyphenateStyleName';\nimport isFunction from './isFunction';\nimport isPlainObject from './isPlainObject';\nimport isStatelessFunction from './isStatelessFunction';\nimport isStyledComponent from './isStyledComponent';\n\n/**\n * It's falsish not falsy because 0 is allowed.\n */\nconst isFalsish = (chunk: any): chunk is undefined | null | false | '' =>\n  chunk === undefined || chunk === null || chunk === false || chunk === '';\n\nexport const objToCssArray = (obj: Dict<any>): string[] => {\n  const rules = [];\n\n  for (const key in obj) {\n    const val = obj[key];\n    if (!obj.hasOwnProperty(key) || isFalsish(val)) continue;\n\n    // @ts-expect-error Property 'isCss' does not exist on type 'any[]'\n    if ((Array.isArray(val) && val.isCss) || isFunction(val)) {\n      rules.push(`${hyphenate(key)}:`, val, ';');\n    } else if (isPlainObject(val)) {\n      rules.push(`${key} {`, ...objToCssArray(val), '}');\n    } else {\n      rules.push(`${hyphenate(key)}: ${addUnitIfNeeded(key, val)};`);\n    }\n  }\n\n  return rules;\n};\n\nexport default function flatten<Props extends object>(\n  chunk: Interpolation<object>,\n  executionContext?: (ExecutionContext & Props) | undefined,\n  styleSheet?: StyleSheet | undefined,\n  stylisInstance?: Stringifier | undefined\n): RuleSet<Props> {\n  if (isFalsish(chunk)) {\n    return [];\n  }\n\n  /* Handle other components */\n  if (isStyledComponent(chunk)) {\n    return [`.${(chunk as unknown as IStyledComponent<'web', any>).styledComponentId}`];\n  }\n\n  /* Either execute or defer the function */\n  if (isFunction(chunk)) {\n    if (isStatelessFunction(chunk) && executionContext) {\n      const result = chunk(executionContext);\n\n      if (\n        process.env.NODE_ENV !== 'production' &&\n        typeof result === 'object' &&\n        !Array.isArray(result) &&\n        !(result instanceof Keyframes) &&\n        !isPlainObject(result) &&\n        result !== null\n      ) {\n        console.error(\n          `${getComponentName(\n            chunk as AnyComponent\n          )} is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details.`\n        );\n      }\n\n      return flatten<Props>(result, executionContext, styleSheet, stylisInstance);\n    } else {\n      return [chunk as unknown as IStyledComponent<'web'>];\n    }\n  }\n\n  if (chunk instanceof Keyframes) {\n    if (styleSheet) {\n      chunk.inject(styleSheet, stylisInstance);\n      return [chunk.getName(stylisInstance)];\n    } else {\n      return [chunk];\n    }\n  }\n\n  /* Handle objects */\n  if (isPlainObject(chunk)) {\n    return objToCssArray(chunk as StyledObject<Props>);\n  }\n\n  if (!Array.isArray(chunk)) {\n    return [chunk.toString()];\n  }\n\n  return flatMap(chunk, chunklet =>\n    flatten<Props>(chunklet, executionContext, styleSheet, stylisInstance)\n  );\n}\n\nfunction flatMap<T, U>(array: T[], transform: (value: T, index: number, array: T[]) => U[]): U[] {\n  return Array.prototype.concat.apply(EMPTY_ARRAY, array.map(transform));\n}\n","import unitless from '@emotion/unitless';\n\n// Taken from https://github.com/facebook/react/blob/b87aabdfe1b7461e7331abb3601d9e6bb27544bc/packages/react-dom/src/shared/dangerousStyleValue.js\nexport default function addUnitIfNeeded(name: string, value: any) {\n  // https://github.com/amilajack/eslint-plugin-flowtype-errors/issues/133\n  if (value == null || typeof value === 'boolean' || value === '') {\n    return '';\n  }\n\n  if (typeof value === 'number' && value !== 0 && !(name in unitless) && !name.startsWith('--')) {\n    return `${value}px`; // Presumes implicit 'px' suffix for unitless numbers except for CSS variables\n  }\n\n  return String(value).trim();\n}\n","import isFunction from './isFunction';\n\nexport default function isStatelessFunction(test: any): test is Function {\n  return isFunction(test) && !(test.prototype && test.prototype.isReactComponent);\n}\n","import { RuleSet } from '../types';\nimport isFunction from './isFunction';\nimport isStyledComponent from './isStyledComponent';\n\nexport default function isStaticRules<Props extends object>(rules: RuleSet<Props>) {\n  for (let i = 0; i < rules.length; i += 1) {\n    const rule = rules[i];\n\n    if (isFunction(rule) && !isStyledComponent(rule)) {\n      // functions are allowed to be static if they're just being\n      // used to get the classname of a nested styled component\n      return false;\n    }\n  }\n\n  return true;\n}\n","import { SC_VERSION } from '../constants';\nimport StyleSheet from '../sheet';\nimport { ExecutionContext, RuleSet, Stringifier } from '../types';\nimport flatten from '../utils/flatten';\nimport generateName from '../utils/generateAlphabeticName';\nimport { hash, phash } from '../utils/hash';\nimport isStaticRules from '../utils/isStaticRules';\nimport { joinStringArray, joinStrings } from '../utils/joinStrings';\n\nconst SEED = hash(SC_VERSION);\n\n/**\n * ComponentStyle is all the CSS-specific stuff, not the React-specific stuff.\n */\nexport default class ComponentStyle {\n  baseHash: number;\n  baseStyle: ComponentStyle | null | undefined;\n  componentId: string;\n  isStatic: boolean;\n  rules: RuleSet<any>;\n  staticRulesId: string;\n\n  constructor(rules: RuleSet<any>, componentId: string, baseStyle?: ComponentStyle | undefined) {\n    this.rules = rules;\n    this.staticRulesId = '';\n    this.isStatic =\n      process.env.NODE_ENV === 'production' &&\n      (baseStyle === undefined || baseStyle.isStatic) &&\n      isStaticRules(rules);\n    this.componentId = componentId;\n    this.baseHash = phash(SEED, componentId);\n    this.baseStyle = baseStyle;\n\n    // NOTE: This registers the componentId, which ensures a consistent order\n    // for this component's styles compared to others\n    StyleSheet.registerId(componentId);\n  }\n\n  generateAndInjectStyles(\n    executionContext: ExecutionContext,\n    styleSheet: StyleSheet,\n    stylis: Stringifier\n  ): string {\n    let names = this.baseStyle\n      ? this.baseStyle.generateAndInjectStyles(executionContext, styleSheet, stylis)\n      : '';\n\n    // force dynamic classnames if user-supplied stylis plugins are in use\n    if (this.isStatic && !stylis.hash) {\n      if (this.staticRulesId && styleSheet.hasNameForId(this.componentId, this.staticRulesId)) {\n        names = joinStrings(names, this.staticRulesId);\n      } else {\n        const cssStatic = joinStringArray(\n          flatten(this.rules, executionContext, styleSheet, stylis) as string[]\n        );\n        const name = generateName(phash(this.baseHash, cssStatic) >>> 0);\n\n        if (!styleSheet.hasNameForId(this.componentId, name)) {\n          const cssStaticFormatted = stylis(cssStatic, `.${name}`, undefined, this.componentId);\n          styleSheet.insertRules(this.componentId, name, cssStaticFormatted);\n        }\n\n        names = joinStrings(names, name);\n        this.staticRulesId = name;\n      }\n    } else {\n      let dynamicHash = phash(this.baseHash, stylis.hash);\n      let css = '';\n\n      for (let i = 0; i < this.rules.length; i++) {\n        const partRule = this.rules[i];\n\n        if (typeof partRule === 'string') {\n          css += partRule;\n\n          if (process.env.NODE_ENV !== 'production') dynamicHash = phash(dynamicHash, partRule);\n        } else if (partRule) {\n          const partString = joinStringArray(\n            flatten(partRule, executionContext, styleSheet, stylis) as string[]\n          );\n          // The same value can switch positions in the array, so we include \"i\" in the hash.\n          dynamicHash = phash(dynamicHash, partString + i);\n          css += partString;\n        }\n      }\n\n      if (css) {\n        const name = generateName(dynamicHash >>> 0);\n\n        if (!styleSheet.hasNameForId(this.componentId, name)) {\n          styleSheet.insertRules(\n            this.componentId,\n            name,\n            stylis(css, `.${name}`, undefined, this.componentId)\n          );\n        }\n\n        names = joinStrings(names, name);\n      }\n    }\n\n    return names;\n  }\n}\n","import React, { useContext, useMemo } from 'react';\nimport styledError from '../utils/error';\nimport isFunction from '../utils/isFunction';\n\n/**\n * Override DefaultTheme to get accurate typings for your project.\n *\n * ```\n * // create styled-components.d.ts in your project source\n * // if it isn't being picked up, check tsconfig compilerOptions.types\n * import type { CSSProp } from \"styled-components\";\n * import Theme from './theme';\n *\n * type ThemeType = typeof Theme;\n *\n * declare module \"styled-components\" {\n *  export interface DefaultTheme extends ThemeType {}\n * }\n *\n * declare module \"react\" {\n *  interface DOMAttributes<T> {\n *    css?: CSSProp;\n *  }\n * }\n * ```\n */\nexport interface DefaultTheme {\n  [key: string]: any;\n}\n\ntype ThemeFn = (outerTheme?: DefaultTheme | undefined) => DefaultTheme;\ntype ThemeArgument = DefaultTheme | ThemeFn;\n\ntype Props = {\n  children?: React.ReactNode;\n  theme: ThemeArgument;\n};\n\nexport const ThemeContext = React.createContext<DefaultTheme | undefined>(undefined);\n\nexport const ThemeConsumer = ThemeContext.Consumer;\n\nfunction mergeTheme(theme: ThemeArgument, outerTheme?: DefaultTheme | undefined): DefaultTheme {\n  if (!theme) {\n    throw styledError(14);\n  }\n\n  if (isFunction(theme)) {\n    const themeFn = theme as ThemeFn;\n    const mergedTheme = themeFn(outerTheme);\n\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      (mergedTheme === null || Array.isArray(mergedTheme) || typeof mergedTheme !== 'object')\n    ) {\n      throw styledError(7);\n    }\n\n    return mergedTheme;\n  }\n\n  if (Array.isArray(theme) || typeof theme !== 'object') {\n    throw styledError(8);\n  }\n\n  return outerTheme ? { ...outerTheme, ...theme } : theme;\n}\n\n/**\n * Returns the current theme (as provided by the closest ancestor `ThemeProvider`.)\n *\n * If no `ThemeProvider` is found, the function will error. If you need access to the theme in an\n * uncertain composition scenario, `React.useContext(ThemeContext)` will not emit an error if there\n * is no `ThemeProvider` ancestor.\n */\nexport function useTheme(): DefaultTheme {\n  const theme = useContext(ThemeContext);\n\n  if (!theme) {\n    throw styledError(18);\n  }\n\n  return theme;\n}\n\n/**\n * Provide a theme to an entire react component tree via context\n */\nexport default function ThemeProvider(props: Props): React.JSX.Element | null {\n  const outerTheme = React.useContext(ThemeContext);\n  const themeContext = useMemo(\n    () => mergeTheme(props.theme, outerTheme),\n    [props.theme, outerTheme]\n  );\n\n  if (!props.children) {\n    return null;\n  }\n\n  return <ThemeContext.Provider value={themeContext}>{props.children}</ThemeContext.Provider>;\n}\n","import isPropValid from '@emotion/is-prop-valid';\nimport React, { createElement, Ref, useDebugValue } from 'react';\nimport { SC_VERSION } from '../constants';\nimport type {\n  AnyComponent,\n  Attrs,\n  BaseObject,\n  Dict,\n  ExecutionContext,\n  ExecutionProps,\n  IStyledComponent,\n  IStyledComponentFactory,\n  IStyledStatics,\n  OmitNever,\n  RuleSet,\n  StyledOptions,\n  WebTarget,\n} from '../types';\nimport { checkDynamicCreation } from '../utils/checkDynamicCreation';\nimport createWarnTooManyClasses from '../utils/createWarnTooManyClasses';\nimport determineTheme from '../utils/determineTheme';\nimport domElements from '../utils/domElements';\nimport { EMPTY_ARRAY, EMPTY_OBJECT } from '../utils/empties';\nimport escape from '../utils/escape';\nimport generateComponentId from '../utils/generateComponentId';\nimport generateDisplayName from '../utils/generateDisplayName';\nimport hoist from '../utils/hoist';\nimport isFunction from '../utils/isFunction';\nimport isStyledComponent from '../utils/isStyledComponent';\nimport isTag from '../utils/isTag';\nimport { joinStrings } from '../utils/joinStrings';\nimport merge from '../utils/mixinDeep';\nimport { setToString } from '../utils/setToString';\nimport ComponentStyle from './ComponentStyle';\nimport { useStyleSheetContext } from './StyleSheetManager';\nimport { DefaultTheme, ThemeContext } from './ThemeProvider';\n\nconst identifiers: { [key: string]: number } = {};\n\n/* We depend on components having unique IDs */\nfunction generateId(\n  displayName?: string | undefined,\n  parentComponentId?: string | undefined\n): string {\n  const name = typeof displayName !== 'string' ? 'sc' : escape(displayName);\n  // Ensure that no displayName can lead to duplicate componentIds\n  identifiers[name] = (identifiers[name] || 0) + 1;\n\n  const componentId = `${name}-${generateComponentId(\n    // SC_VERSION gives us isolation between multiple runtimes on the page at once\n    // this is improved further with use of the babel plugin \"namespace\" feature\n    SC_VERSION + name + identifiers[name]\n  )}`;\n\n  return parentComponentId ? `${parentComponentId}-${componentId}` : componentId;\n}\n\nfunction useInjectedStyle<T extends ExecutionContext>(\n  componentStyle: ComponentStyle,\n  resolvedAttrs: T\n) {\n  const ssc = useStyleSheetContext();\n\n  const className = componentStyle.generateAndInjectStyles(\n    resolvedAttrs,\n    ssc.styleSheet,\n    ssc.stylis\n  );\n\n  if (process.env.NODE_ENV !== 'production') useDebugValue(className);\n\n  return className;\n}\n\nfunction resolveContext<Props extends object>(\n  attrs: Attrs<React.HTMLAttributes<Element> & Props>[],\n  props: React.HTMLAttributes<Element> & ExecutionProps & Props,\n  theme: DefaultTheme\n) {\n  const context: React.HTMLAttributes<Element> &\n    ExecutionContext &\n    Props & { [key: string]: any; class?: string; ref?: React.Ref<any> } = {\n    ...props,\n    // unset, add `props.className` back at the end so props always \"wins\"\n    className: undefined,\n    theme,\n  };\n  let attrDef;\n\n  for (let i = 0; i < attrs.length; i += 1) {\n    attrDef = attrs[i];\n    const resolvedAttrDef = isFunction(attrDef) ? attrDef(context) : attrDef;\n\n    for (const key in resolvedAttrDef) {\n      context[key as keyof typeof context] =\n        key === 'className'\n          ? joinStrings(context[key] as string | undefined, resolvedAttrDef[key] as string)\n          : key === 'style'\n            ? { ...context[key], ...resolvedAttrDef[key] }\n            : resolvedAttrDef[key as keyof typeof resolvedAttrDef];\n    }\n  }\n\n  if (props.className) {\n    context.className = joinStrings(context.className, props.className);\n  }\n\n  return context;\n}\n\nlet seenUnknownProps = new Set();\n\nfunction useStyledComponentImpl<Props extends object>(\n  forwardedComponent: IStyledComponent<'web', Props>,\n  props: ExecutionProps & Props,\n  forwardedRef: Ref<Element>\n) {\n  const {\n    attrs: componentAttrs,\n    componentStyle,\n    defaultProps,\n    foldedComponentIds,\n    styledComponentId,\n    target,\n  } = forwardedComponent;\n\n  const contextTheme = React.useContext(ThemeContext);\n  const ssc = useStyleSheetContext();\n  const shouldForwardProp = forwardedComponent.shouldForwardProp || ssc.shouldForwardProp;\n\n  if (process.env.NODE_ENV !== 'production') useDebugValue(styledComponentId);\n\n  // NOTE: the non-hooks version only subscribes to this when !componentStyle.isStatic,\n  // but that'd be against the rules-of-hooks. We could be naughty and do it anyway as it\n  // should be an immutable value, but behave for now.\n  const theme = determineTheme(props, contextTheme, defaultProps) || EMPTY_OBJECT;\n\n  const context = resolveContext<Props>(componentAttrs, props, theme);\n  const elementToBeCreated: WebTarget = context.as || target;\n  const propsForElement: Dict<any> = {};\n\n  for (const key in context) {\n    if (context[key] === undefined) {\n      // Omit undefined values from props passed to wrapped element.\n      // This enables using .attrs() to remove props, for example.\n    } else if (key[0] === '$' || key === 'as' || (key === 'theme' && context.theme === theme)) {\n      // Omit transient props and execution props.\n    } else if (key === 'forwardedAs') {\n      propsForElement.as = context.forwardedAs;\n    } else if (!shouldForwardProp || shouldForwardProp(key, elementToBeCreated)) {\n      propsForElement[key] = context[key];\n\n      if (\n        !shouldForwardProp &&\n        process.env.NODE_ENV === 'development' &&\n        !isPropValid(key) &&\n        !seenUnknownProps.has(key) &&\n        // Only warn on DOM Element.\n        domElements.has(elementToBeCreated as any)\n      ) {\n        seenUnknownProps.add(key);\n        console.warn(\n          `styled-components: it looks like an unknown prop \"${key}\" is being sent through to the DOM, which will likely trigger a React console error. If you would like automatic filtering of unknown props, you can opt-into that behavior via \\`<StyleSheetManager shouldForwardProp={...}>\\` (connect an API like \\`@emotion/is-prop-valid\\`) or consider using transient props (\\`$\\` prefix for automatic filtering.)`\n        );\n      }\n    }\n  }\n\n  const generatedClassName = useInjectedStyle(componentStyle, context);\n\n  if (process.env.NODE_ENV !== 'production' && forwardedComponent.warnTooManyClasses) {\n    forwardedComponent.warnTooManyClasses(generatedClassName);\n  }\n\n  let classString = joinStrings(foldedComponentIds, styledComponentId);\n  if (generatedClassName) {\n    classString += ' ' + generatedClassName;\n  }\n  if (context.className) {\n    classString += ' ' + context.className;\n  }\n\n  propsForElement[\n    // handle custom elements which React doesn't properly alias\n    isTag(elementToBeCreated) &&\n    !domElements.has(elementToBeCreated as Extract<typeof domElements, string>)\n      ? 'class'\n      : 'className'\n  ] = classString;\n\n  propsForElement.ref = forwardedRef;\n\n  return createElement(elementToBeCreated, propsForElement);\n}\n\nfunction createStyledComponent<\n  Target extends WebTarget,\n  OuterProps extends object,\n  Statics extends object = BaseObject,\n>(\n  target: Target,\n  options: StyledOptions<'web', OuterProps>,\n  rules: RuleSet<OuterProps>\n): ReturnType<IStyledComponentFactory<'web', Target, OuterProps, Statics>> {\n  const isTargetStyledComp = isStyledComponent(target);\n  const styledComponentTarget = target as IStyledComponent<'web', OuterProps>;\n  const isCompositeComponent = !isTag(target);\n\n  const {\n    attrs = EMPTY_ARRAY,\n    componentId = generateId(options.displayName, options.parentComponentId),\n    displayName = generateDisplayName(target),\n  } = options;\n\n  const styledComponentId =\n    options.displayName && options.componentId\n      ? `${escape(options.displayName)}-${options.componentId}`\n      : options.componentId || componentId;\n\n  // fold the underlying StyledComponent attrs up (implicit extend)\n  const finalAttrs =\n    isTargetStyledComp && styledComponentTarget.attrs\n      ? styledComponentTarget.attrs.concat(attrs as unknown as Attrs<OuterProps>[]).filter(Boolean)\n      : (attrs as Attrs<OuterProps>[]);\n\n  let { shouldForwardProp } = options;\n\n  if (isTargetStyledComp && styledComponentTarget.shouldForwardProp) {\n    const shouldForwardPropFn = styledComponentTarget.shouldForwardProp;\n\n    if (options.shouldForwardProp) {\n      const passedShouldForwardPropFn = options.shouldForwardProp;\n\n      // compose nested shouldForwardProp calls\n      shouldForwardProp = (prop, elementToBeCreated) =>\n        shouldForwardPropFn(prop, elementToBeCreated) &&\n        passedShouldForwardPropFn(prop, elementToBeCreated);\n    } else {\n      shouldForwardProp = shouldForwardPropFn;\n    }\n  }\n\n  const componentStyle = new ComponentStyle(\n    rules,\n    styledComponentId,\n    isTargetStyledComp ? (styledComponentTarget.componentStyle as ComponentStyle) : undefined\n  );\n\n  function forwardRefRender(props: ExecutionProps & OuterProps, ref: Ref<Element>) {\n    return useStyledComponentImpl<OuterProps>(WrappedStyledComponent, props, ref);\n  }\n\n  forwardRefRender.displayName = displayName;\n\n  /**\n   * forwardRef creates a new interim component, which we'll take advantage of\n   * instead of extending ParentComponent to create _another_ interim class\n   */\n  let WrappedStyledComponent = React.forwardRef(forwardRefRender) as unknown as IStyledComponent<\n    'web',\n    any\n  > &\n    Statics;\n  WrappedStyledComponent.attrs = finalAttrs;\n  WrappedStyledComponent.componentStyle = componentStyle;\n  WrappedStyledComponent.displayName = displayName;\n  WrappedStyledComponent.shouldForwardProp = shouldForwardProp;\n\n  // this static is used to preserve the cascade of static classes for component selector\n  // purposes; this is especially important with usage of the css prop\n  WrappedStyledComponent.foldedComponentIds = isTargetStyledComp\n    ? joinStrings(styledComponentTarget.foldedComponentIds, styledComponentTarget.styledComponentId)\n    : '';\n\n  WrappedStyledComponent.styledComponentId = styledComponentId;\n\n  // fold the underlying StyledComponent target up since we folded the styles\n  WrappedStyledComponent.target = isTargetStyledComp ? styledComponentTarget.target : target;\n\n  Object.defineProperty(WrappedStyledComponent, 'defaultProps', {\n    get() {\n      return this._foldedDefaultProps;\n    },\n\n    set(obj) {\n      this._foldedDefaultProps = isTargetStyledComp\n        ? merge({}, styledComponentTarget.defaultProps, obj)\n        : obj;\n    },\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    checkDynamicCreation(displayName, styledComponentId);\n\n    WrappedStyledComponent.warnTooManyClasses = createWarnTooManyClasses(\n      displayName,\n      styledComponentId\n    );\n  }\n\n  setToString(WrappedStyledComponent, () => `.${WrappedStyledComponent.styledComponentId}`);\n\n  if (isCompositeComponent) {\n    const compositeComponentTarget = target as AnyComponent;\n\n    hoist<typeof WrappedStyledComponent, typeof compositeComponentTarget>(\n      WrappedStyledComponent,\n      compositeComponentTarget,\n      {\n        // all SC-specific things should not be hoisted\n        attrs: true,\n        componentStyle: true,\n        displayName: true,\n        foldedComponentIds: true,\n        shouldForwardProp: true,\n        styledComponentId: true,\n        target: true,\n      } as { [key in keyof OmitNever<IStyledStatics<'web', OuterProps>>]: true }\n    );\n  }\n\n  return WrappedStyledComponent;\n}\n\nexport default createStyledComponent;\n","import { StyledTarget } from '../types';\nimport getComponentName from './getComponentName';\nimport isTag from './isTag';\n\nexport default function generateDisplayName(target: StyledTarget<any>) {\n  return isTag(target) ? `styled.${target}` : `Styled(${getComponentName(target)})`;\n}\n","import { Interpolation } from '../types';\n\nexport default function interleave<Props extends object>(\n  strings: readonly string[],\n  interpolations: Interpolation<Props>[]\n): Interpolation<Props>[] {\n  const result: Interpolation<Props>[] = [strings[0]];\n\n  for (let i = 0, len = interpolations.length; i < len; i += 1) {\n    result.push(interpolations[i], strings[i + 1]);\n  }\n\n  return result;\n}\n","import {\n  BaseObject,\n  Interpolation,\n  NoInfer,\n  RuleSet,\n  StyledObject,\n  StyleFunction,\n  Styles,\n} from '../types';\nimport { EMPTY_ARRAY } from '../utils/empties';\nimport flatten from '../utils/flatten';\nimport interleave from '../utils/interleave';\nimport isFunction from '../utils/isFunction';\nimport isPlainObject from '../utils/isPlainObject';\n\n/**\n * Used when flattening object styles to determine if we should\n * expand an array of styles.\n */\nconst addTag = <T extends RuleSet<any>>(arg: T): T & { isCss: true } =>\n  Object.assign(arg, { isCss: true } as const);\n\nfunction css(styles: Styles<object>, ...interpolations: Interpolation<object>[]): RuleSet<object>;\nfunction css<Props extends object>(\n  styles: Styles<NoInfer<Props>>,\n  ...interpolations: Interpolation<NoInfer<Props>>[]\n): RuleSet<NoInfer<Props>>;\nfunction css<Props extends object = BaseObject>(\n  styles: Styles<NoInfer<Props>>,\n  ...interpolations: Interpolation<NoInfer<Props>>[]\n): RuleSet<NoInfer<Props>> {\n  if (isFunction(styles) || isPlainObject(styles)) {\n    const styleFunctionOrObject = styles as StyleFunction<Props> | StyledObject<Props>;\n\n    return addTag(\n      flatten<Props>(\n        interleave<Props>(EMPTY_ARRAY, [\n          styleFunctionOrObject,\n          ...interpolations,\n        ]) as Interpolation<object>\n      )\n    );\n  }\n\n  const styleStringArray = styles as TemplateStringsArray;\n\n  if (\n    interpolations.length === 0 &&\n    styleStringArray.length === 1 &&\n    typeof styleStringArray[0] === 'string'\n  ) {\n    return flatten<Props>(styleStringArray);\n  }\n\n  return addTag(\n    flatten<Props>(interleave<Props>(styleStringArray, interpolations) as Interpolation<object>)\n  );\n}\n\nexport default css;\n","import {\n  Attrs,\n  BaseObject,\n  ExecutionProps,\n  Interpolation,\n  IStyledComponent,\n  IStyledComponentFactory,\n  KnownTarget,\n  NoInfer,\n  Runtime,\n  StyledOptions,\n  StyledTarget,\n  Styles,\n  Substitute,\n} from '../types';\nimport { EMPTY_OBJECT } from '../utils/empties';\nimport styledError from '../utils/error';\nimport css from './css';\n\ntype AttrsResult<T extends Attrs<any>> = T extends (...args: any) => infer P\n  ? P extends object\n    ? P\n    : never\n  : T extends object\n    ? T\n    : never;\n\n/**\n * Based on Attrs being a simple object or function that returns\n * a prop object, inspect the attrs result and attempt to extract\n * any \"as\" prop usage to modify the runtime target.\n */\ntype AttrsTarget<\n  R extends Runtime,\n  T extends Attrs<any>,\n  FallbackTarget extends StyledTarget<R>,\n  Result extends ExecutionProps = AttrsResult<T>,\n> = Result extends { as: infer RuntimeTarget }\n  ? RuntimeTarget extends KnownTarget\n    ? RuntimeTarget\n    : FallbackTarget\n  : FallbackTarget;\n\nexport interface Styled<\n  R extends Runtime,\n  Target extends StyledTarget<R>,\n  OuterProps extends object,\n  OuterStatics extends object = BaseObject,\n> {\n  <Props extends object = BaseObject, Statics extends object = BaseObject>(\n    initialStyles: Styles<Substitute<OuterProps, NoInfer<Props>>>,\n    ...interpolations: Interpolation<Substitute<OuterProps, NoInfer<Props>>>[]\n  ): IStyledComponent<R, Substitute<OuterProps, Props>> &\n    OuterStatics &\n    Statics &\n    (R extends 'web'\n      ? Target extends string\n        ? {}\n        : Omit<Target, keyof React.Component<any>>\n      : {});\n\n  attrs: <\n    Props extends object = BaseObject,\n    PrivateMergedProps extends object = Substitute<OuterProps, Props>,\n    PrivateAttrsArg extends Attrs<PrivateMergedProps> = Attrs<PrivateMergedProps>,\n    PrivateResolvedTarget extends StyledTarget<R> = AttrsTarget<R, PrivateAttrsArg, Target>,\n  >(\n    attrs: PrivateAttrsArg\n  ) => Styled<\n    R,\n    PrivateResolvedTarget,\n    PrivateResolvedTarget extends KnownTarget\n      ? Substitute<\n          Substitute<OuterProps, React.ComponentPropsWithRef<PrivateResolvedTarget>>,\n          Props\n        >\n      : PrivateMergedProps,\n    OuterStatics\n  >;\n\n  withConfig: (config: StyledOptions<R, OuterProps>) => Styled<R, Target, OuterProps, OuterStatics>;\n}\n\nexport default function constructWithOptions<\n  R extends Runtime,\n  Target extends StyledTarget<R>,\n  OuterProps extends object = Target extends KnownTarget\n    ? React.ComponentPropsWithRef<Target>\n    : BaseObject,\n  OuterStatics extends object = BaseObject,\n>(\n  componentConstructor: IStyledComponentFactory<R, StyledTarget<R>, object, any>,\n  tag: StyledTarget<R>,\n  options: StyledOptions<R, OuterProps> = EMPTY_OBJECT\n): Styled<R, Target, OuterProps, OuterStatics> {\n  /**\n   * We trust that the tag is a valid component as long as it isn't\n   * falsish. Typically the tag here is a string or function (i.e.\n   * class or pure function component), however a component may also be\n   * an object if it uses another utility, e.g. React.memo. React will\n   * output an appropriate warning however if the `tag` isn't valid.\n   */\n  if (!tag) {\n    throw styledError(1, tag);\n  }\n\n  /* This is callable directly as a template function */\n  const templateFunction = <Props extends object = BaseObject, Statics extends object = BaseObject>(\n    initialStyles: Styles<Substitute<OuterProps, Props>>,\n    ...interpolations: Interpolation<Substitute<OuterProps, Props>>[]\n  ) =>\n    componentConstructor<Substitute<OuterProps, Props>, Statics>(\n      tag,\n      options as StyledOptions<R, Substitute<OuterProps, Props>>,\n      css<Substitute<OuterProps, Props>>(initialStyles, ...interpolations)\n    );\n\n  /**\n   * Attrs allows for accomplishing two goals:\n   *\n   * 1. Backfilling props at runtime more expressively than defaultProps\n   * 2. Amending the prop interface of a wrapped styled component\n   */\n  templateFunction.attrs = <\n    Props extends object = BaseObject,\n    PrivateMergedProps extends object = Substitute<OuterProps, Props>,\n    PrivateAttrsArg extends Attrs<PrivateMergedProps> = Attrs<PrivateMergedProps>,\n    PrivateResolvedTarget extends StyledTarget<R> = AttrsTarget<R, PrivateAttrsArg, Target>,\n  >(\n    attrs: PrivateAttrsArg\n  ) =>\n    constructWithOptions<\n      R,\n      PrivateResolvedTarget,\n      PrivateResolvedTarget extends KnownTarget\n        ? Substitute<\n            Substitute<OuterProps, React.ComponentPropsWithRef<PrivateResolvedTarget>>,\n            Props\n          >\n        : PrivateMergedProps,\n      OuterStatics\n    >(componentConstructor, tag, {\n      ...options,\n      attrs: Array.prototype.concat(options.attrs, attrs).filter(Boolean),\n    });\n\n  /**\n   * If config methods are called, wrap up a new template function\n   * and merge options.\n   */\n  templateFunction.withConfig = (config: StyledOptions<R, OuterProps>) =>\n    constructWithOptions<R, Target, OuterProps, OuterStatics>(componentConstructor, tag, {\n      ...options,\n      ...config,\n    });\n\n  return templateFunction;\n}\n","import * as React from 'react';\nimport createStyledComponent from '../models/StyledComponent';\nimport { BaseObject, KnownTarget, WebTarget } from '../types';\nimport domElements, { SupportedHTMLElements } from '../utils/domElements';\nimport constructWithOptions, { Styled as StyledInstance } from './constructWithOptions';\n\nconst baseStyled = <Target extends WebTarget, InjectedProps extends object = BaseObject>(\n  tag: Target\n) =>\n  constructWithOptions<\n    'web',\n    Target,\n    Target extends KnownTarget ? React.ComponentPropsWithRef<Target> & InjectedProps : InjectedProps\n  >(createStyledComponent, tag);\n\nconst styled = baseStyled as typeof baseStyled & {\n  [E in SupportedHTMLElements]: StyledInstance<'web', E, React.JSX.IntrinsicElements[E]>;\n};\n\n// Shorthands for all valid HTML Elements\ndomElements.forEach(domElement => {\n  // @ts-expect-error some react typing bs\n  styled[domElement] = baseStyled<typeof domElement>(domElement);\n});\n\nexport default styled;\nexport { StyledInstance };\n\n/**\n * This is the type of the `styled` HOC.\n */\nexport type Styled = typeof styled;\n\n/**\n * Use this higher-order type for scenarios where you are wrapping `styled`\n * and providing extra props as a third-party library.\n */\nexport type LibraryStyled<LibraryProps extends object = BaseObject> = <Target extends WebTarget>(\n  tag: Target\n) => typeof baseStyled<Target, LibraryProps>;\n","import StyleSheet from '../sheet';\nimport { ExecutionContext, RuleSet, Stringifier } from '../types';\nimport flatten from '../utils/flatten';\nimport isStaticRules from '../utils/isStaticRules';\nimport { joinStringArray } from '../utils/joinStrings';\n\nexport default class GlobalStyle<Props extends object> {\n  componentId: string;\n  isStatic: boolean;\n  rules: RuleSet<Props>;\n\n  constructor(rules: RuleSet<Props>, componentId: string) {\n    this.rules = rules;\n    this.componentId = componentId;\n    this.isStatic = isStaticRules(rules);\n\n    // pre-register the first instance to ensure global styles\n    // load before component ones\n    StyleSheet.registerId(this.componentId + 1);\n  }\n\n  createStyles(\n    instance: number,\n    executionContext: ExecutionContext & Props,\n    styleSheet: StyleSheet,\n    stylis: Stringifier\n  ): void {\n    const flatCSS = joinStringArray(\n      flatten(this.rules as RuleSet<object>, executionContext, styleSheet, stylis) as string[]\n    );\n    const css = stylis(flatCSS, '');\n    const id = this.componentId + instance;\n\n    // NOTE: We use the id as a name as well, since these rules never change\n    styleSheet.insertRules(id, id, css);\n  }\n\n  removeStyles(instance: number, styleSheet: StyleSheet): void {\n    styleSheet.clearRules(this.componentId + instance);\n  }\n\n  renderStyles(\n    instance: number,\n    executionContext: ExecutionContext & Props,\n    styleSheet: StyleSheet,\n    stylis: Stringifier\n  ): void {\n    if (instance > 2) StyleSheet.registerId(this.componentId + instance);\n\n    // NOTE: Remove old styles, then inject the new ones\n    this.removeStyles(instance, styleSheet);\n    this.createStyles(instance, executionContext, styleSheet, stylis);\n  }\n}\n","import React from 'react';\nimport type * as streamInternal from 'stream';\nimport { Readable } from 'stream';\nimport { IS_BROWSER, SC_ATTR, SC_ATTR_VERSION, SC_VERSION } from '../constants';\nimport StyleSheet from '../sheet';\nimport styledError from '../utils/error';\nimport { joinStringArray } from '../utils/joinStrings';\nimport getNonce from '../utils/nonce';\nimport { StyleSheetManager } from './StyleSheetManager';\n\ndeclare const __SERVER__: boolean;\n\nconst CLOSING_TAG_R = /^\\s*<\\/[a-z]/i;\n\nexport default class ServerStyleSheet {\n  instance: StyleSheet;\n  sealed: boolean;\n\n  constructor() {\n    this.instance = new StyleSheet({ isServer: true });\n    this.sealed = false;\n  }\n\n  _emitSheetCSS = (): string => {\n    const css = this.instance.toString();\n    if (!css) return '';\n    const nonce = getNonce();\n    const attrs = [\n      nonce && `nonce=\"${nonce}\"`,\n      `${SC_ATTR}=\"true\"`,\n      `${SC_ATTR_VERSION}=\"${SC_VERSION}\"`,\n    ];\n    const htmlAttr = joinStringArray(attrs.filter(Boolean) as string[], ' ');\n\n    return `<style ${htmlAttr}>${css}</style>`;\n  };\n\n  collectStyles(children: any): React.JSX.Element {\n    if (this.sealed) {\n      throw styledError(2);\n    }\n\n    return <StyleSheetManager sheet={this.instance}>{children}</StyleSheetManager>;\n  }\n\n  getStyleTags = (): string => {\n    if (this.sealed) {\n      throw styledError(2);\n    }\n\n    return this._emitSheetCSS();\n  };\n\n  getStyleElement = () => {\n    if (this.sealed) {\n      throw styledError(2);\n    }\n\n    const css = this.instance.toString();\n    if (!css) return [];\n\n    const props = {\n      [SC_ATTR]: '',\n      [SC_ATTR_VERSION]: SC_VERSION,\n      dangerouslySetInnerHTML: {\n        __html: css,\n      },\n    };\n\n    const nonce = getNonce();\n    if (nonce) {\n      (props as any).nonce = nonce;\n    }\n\n    // v4 returned an array for this fn, so we'll do the same for v5 for backward compat\n    return [<style {...props} key=\"sc-0-0\" />];\n  };\n\n  // @ts-expect-error alternate return types are not possible due to code transformation\n  interleaveWithNodeStream(input: Readable): streamInternal.Transform {\n    if (!__SERVER__ || IS_BROWSER) {\n      throw styledError(3);\n    } else if (this.sealed) {\n      throw styledError(2);\n    }\n\n    if (__SERVER__) {\n      this.seal();\n\n      const { Transform } = require('stream');\n\n      const readableStream: Readable = input;\n      const { instance: sheet, _emitSheetCSS } = this;\n\n      const transformer: streamInternal.Transform = new Transform({\n        transform: function appendStyleChunks(\n          chunk: string,\n          /* encoding */\n          _: string,\n          callback: Function\n        ) {\n          // Get the chunk and retrieve the sheet's CSS as an HTML chunk,\n          // then reset its rules so we get only new ones for the next chunk\n          const renderedHtml = chunk.toString();\n          const html = _emitSheetCSS();\n\n          sheet.clearTag();\n\n          // prepend style html to chunk, unless the start of the chunk is a\n          // closing tag in which case append right after that\n          if (CLOSING_TAG_R.test(renderedHtml)) {\n            const endOfClosingTag = renderedHtml.indexOf('>') + 1;\n            const before = renderedHtml.slice(0, endOfClosingTag);\n            const after = renderedHtml.slice(endOfClosingTag);\n\n            this.push(before + html + after);\n          } else {\n            this.push(html + renderedHtml);\n          }\n\n          callback();\n        },\n      });\n\n      readableStream.on('error', err => {\n        // forward the error to the transform stream\n        transformer.emit('error', err);\n      });\n\n      return readableStream.pipe(transformer);\n    }\n  }\n\n  seal = (): void => {\n    this.sealed = true;\n  };\n}\n","/* Import singletons */\nimport { SC_ATTR, SC_VERSION } from './constants';\nimport createGlobalStyle from './constructors/createGlobalStyle';\nimport css from './constructors/css';\nimport keyframes from './constructors/keyframes';\n/* Import Higher Order Components */\nimport withTheme from './hoc/withTheme';\n/* Import hooks */\nimport ServerStyleSheet from './models/ServerStyleSheet';\nimport {\n  IStyleSheetContext,\n  IStyleSheetManager,\n  IStylisContext,\n  StyleSheetConsumer,\n  StyleSheetContext,\n  StyleSheetManager,\n} from './models/StyleSheetManager';\n/* Import components */\nimport ThemeProvider, { ThemeConsumer, ThemeContext, useTheme } from './models/ThemeProvider';\nimport isStyledComponent from './utils/isStyledComponent';\n\n/* Warning if you've imported this file on React Native */\nif (\n  process.env.NODE_ENV !== 'production' &&\n  typeof navigator !== 'undefined' &&\n  navigator.product === 'ReactNative'\n) {\n  console.warn(\n    `It looks like you've imported 'styled-components' on React Native.\\nPerhaps you're looking to import 'styled-components/native'?\\nRead more about this at https://www.styled-components.com/docs/basics#react-native`\n  );\n}\n\nconst windowGlobalKey = `__sc-${SC_ATTR}__`;\n\n/* Warning if there are several instances of styled-components */\nif (\n  process.env.NODE_ENV !== 'production' &&\n  process.env.NODE_ENV !== 'test' &&\n  typeof window !== 'undefined'\n) {\n  // @ts-expect-error dynamic key not in window object\n  window[windowGlobalKey] ||= 0;\n\n  // @ts-expect-error dynamic key not in window object\n  if (window[windowGlobalKey] === 1) {\n    console.warn(\n      `It looks like there are several instances of 'styled-components' initialized in this application. This may cause dynamic styles to not render properly, errors during the rehydration process, a missing theme prop, and makes your application bigger without good reason.\\n\\nSee https://s-c.sh/2BAXzed for more info.`\n    );\n  }\n\n  // @ts-expect-error dynamic key not in window object\n  window[windowGlobalKey] += 1;\n}\n\n/* Export everything */\nexport * from './secretInternals';\nexport { Attrs, DefaultTheme, ShouldForwardProp } from './types';\nexport {\n  IStyleSheetContext,\n  IStyleSheetManager,\n  IStylisContext,\n  ServerStyleSheet,\n  StyleSheetConsumer,\n  StyleSheetContext,\n  StyleSheetManager,\n  ThemeConsumer,\n  ThemeContext,\n  ThemeProvider,\n  createGlobalStyle,\n  css,\n  isStyledComponent,\n  keyframes,\n  useTheme,\n  SC_VERSION as version,\n  withTheme,\n};\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ScrollableContainer = styled.div`\r\n  height: 600px;\r\n  margin: 0 auto;\r\n  overflow-y: auto;\r\n  background-color: #222437;\r\n`;\r\n\r\nconst TableHeader = styled.div`\r\n  height: 78px;\r\n  display: flex;\r\n  position: sticky;\r\n  top: 0;\r\n  background-color: #222437;\r\n  z-index: 1;\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst BetItem = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 8px;\r\n  margin-top: 10px; /* Зовнішній відступ зверху */\r\n  margin-bottom: 10px; /* Зовнішній відступ знизу */\r\n  background-color: #1c1e2f; /* Колір фону рядка */\r\n  border-radius: 4px; /* Додаткове округлення країв, якщо потрібно */\r\n\r\n  &:hover {\r\n    background-color: #f1f1f1;\r\n  }\r\n`;\r\n\r\nconst PlayerAddress = styled.span`\r\n  font-weight: bold;\r\n  color: #333;\r\n`;\r\n\r\nconst ScrollList = (props) => {\r\n  const { list } = props;\r\n\r\n  const shortenAddress = (address) => {\r\n    return address.slice(0, 6) + \"...\" + address.slice(-4);\r\n  };\r\n\r\n  const timeAgo = (time) => {\r\n    const seconds = Math.floor((new Date() - new Date(time)) / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const hours = Math.floor(minutes / 60);\r\n\r\n    if (hours > 0) {\r\n      return `${hours} hour${hours > 1 ? \"s\" : \"\"} ago`;\r\n    }\r\n    if (minutes > 0) {\r\n      return `${minutes} minute${minutes > 1 ? \"s\" : \"\"} ago`;\r\n    }\r\n    return `${seconds} second${seconds > 1 ? \"s\" : \"\"} ago`;\r\n  };\r\n\r\n  const getUpdatedTime = (time) => {\r\n    return timeAgo(time);\r\n  };\r\n\r\n  // Set up a state for current time\r\n  const [currentTime, setCurrentTime] = useState(Date.now());\r\n\r\n  // Use useEffect to update the time every second\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setCurrentTime(Date.now()); // Update the current time every second\r\n    }, 1000);\r\n\r\n    // Clean up the interval when the component unmounts\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"font-silkscreen text-white bg-newBlue-500 p-2 w-full\">\r\n      <ScrollableContainer>\r\n        <TableHeader>\r\n          <div>\r\n            <p className=\"text-lg text-white font-silkscreen\">Cowboy</p>\r\n          </div>\r\n        </TableHeader>\r\n        {list.map((bet, index) => (\r\n          <BetItem key={index} className=\"flex flex-col space-y-2\">\r\n            <div className=\"flex sm:flex-row flex-col justify-between\">\r\n              <div className=\"flex sm:flex-row flex-col sm:space-x-4\">\r\n                <div>\r\n                  <p className=\"text-sm text-white font-silkscreen font-bold\">\r\n                    {shortenAddress(bet.wallet)}\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  {index === 0 && (\r\n                    <p className=\"text-sm text-secondary font-silkscreen\">\r\n                      👑 CURRENT LEADER\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"flex flex-row space-x-2\">\r\n                <div>\r\n                  <p className=\"text-sm text-white font-silkscreen\">\r\n                    {bet.amount} Quai\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <p className=\"text-sm text-gray-500 font-silkscreen\">\r\n                    {getUpdatedTime(bet.time)}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </BetItem>\r\n        ))}\r\n      </ScrollableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScrollList;\r\n","/**\n * The **FixedNumber** class permits using values with decimal places, using fixed-pont math.\n *\n * Fixed-point math is still based on integers under-the-hood, but uses an internal offset to store fractional\n * components below, and each operation corrects for this after each operation.\n */\nimport { getBytes } from './data.js';\nimport { assert, assertArgument, assertPrivate } from './errors.js';\nimport { getBigInt, getNumber, fromTwos, mask, toBigInt } from './maths.js';\nimport { defineProperties } from './properties.js';\n\nimport type { BigNumberish, BytesLike, Numeric } from './index.js';\n\nconst BN_N1 = BigInt(-1);\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_5 = BigInt(5);\n\nconst _guard = {};\n\n// Constant to pull zeros from for multipliers\nlet Zeros = '0000';\nwhile (Zeros.length < 80) {\n    Zeros += Zeros;\n}\n\n// Returns a string \"1\" followed by decimal \"0\"s\nfunction getTens(decimals: number): bigint {\n    let result = Zeros;\n    while (result.length < decimals) {\n        result += result;\n    }\n    return BigInt('1' + result.substring(0, decimals));\n}\n\n/**\n * Returns a new FixedFormat for `value`.\n *\n * If `value` is specified as a `number`, the bit-width is 128 bits and `value` is used for the `decimals`.\n *\n * A string `value` may begin with `fixed` or `ufixed` for signed and unsigned respectfully. If no other properties are\n * specified, the bit-width is 128-bits with 18 decimals.\n *\n * To specify the bit-width and demicals, append them separated by an `\"x\"` to the `value`.\n *\n * For example, `ufixed128x18` describes an unsigned, 128-bit wide format with 18 decimals.\n *\n * If `value` is an other object, its properties for `signed`, `width` and `decimals` are checked.\n *\n * @category Utils\n */\nexport type FixedFormat =\n    | number\n    | string\n    | {\n          signed?: boolean;\n          width?: number;\n          decimals?: number;\n      };\n\nfunction checkValue(val: bigint, format: _FixedFormat, safeOp?: string): bigint {\n    const width = BigInt(format.width);\n    if (format.signed) {\n        const limit = BN_1 << (width - BN_1);\n        assert(safeOp == null || (val >= -limit && val < limit), 'overflow', 'NUMERIC_FAULT', {\n            operation: <string>safeOp,\n            fault: 'overflow',\n            value: val,\n        });\n\n        if (val > BN_0) {\n            val = fromTwos(mask(val, width), width);\n        } else {\n            val = -fromTwos(mask(-val, width), width);\n        }\n    } else {\n        const limit = BN_1 << width;\n        assert(safeOp == null || (val >= 0 && val < limit), 'overflow', 'NUMERIC_FAULT', {\n            operation: <string>safeOp,\n            fault: 'overflow',\n            value: val,\n        });\n        val = ((val % limit) + limit) % limit & (limit - BN_1);\n    }\n\n    return val;\n}\n\ntype _FixedFormat = { signed: boolean; width: number; decimals: number; name: string };\n\nfunction getFormat(value?: FixedFormat): _FixedFormat {\n    if (typeof value === 'number') {\n        value = `fixed128x${value}`;\n    }\n\n    let signed = true;\n    let width = 128;\n    let decimals = 18;\n\n    if (typeof value === 'string') {\n        // Parse the format string\n        if (value === 'fixed') {\n            // defaults...\n        } else if (value === 'ufixed') {\n            signed = false;\n        } else {\n            const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n            assertArgument(match, 'invalid fixed format', 'format', value);\n            signed = match[1] !== 'u';\n            width = parseInt(match[2]);\n            decimals = parseInt(match[3]);\n        }\n    } else if (value) {\n        // Extract the values from the object\n        const v: any = value;\n        const check = (key: string, type: string, defaultValue: any): any => {\n            if (v[key] == null) {\n                return defaultValue;\n            }\n            assertArgument(\n                typeof v[key] === type,\n                'invalid fixed format (' + key + ' not ' + type + ')',\n                'format.' + key,\n                v[key],\n            );\n            return v[key];\n        };\n        signed = check('signed', 'boolean', signed);\n        width = check('width', 'number', width);\n        decimals = check('decimals', 'number', decimals);\n    }\n\n    assertArgument(width % 8 === 0, 'invalid FixedNumber width (not byte aligned)', 'format.width', width);\n    assertArgument(decimals <= 80, 'invalid FixedNumber decimals (too large)', 'format.decimals', decimals);\n\n    const name = (signed ? '' : 'u') + 'fixed' + String(width) + 'x' + String(decimals);\n\n    return { signed, width, decimals, name };\n}\n\nfunction toString(val: bigint, decimals: number) {\n    let negative = '';\n    if (val < BN_0) {\n        negative = '-';\n        val *= BN_N1;\n    }\n\n    let str = val.toString();\n\n    // No decimal point for whole values\n    if (decimals === 0) {\n        return negative + str;\n    }\n\n    // Pad out to the whole component (including a whole digit)\n    while (str.length <= decimals) {\n        str = Zeros + str;\n    }\n\n    // Insert the decimal point\n    const index = str.length - decimals;\n    str = str.substring(0, index) + '.' + str.substring(index);\n\n    // Trim the whole component (leaving at least one 0)\n    while (str[0] === '0' && str[1] !== '.') {\n        str = str.substring(1);\n    }\n\n    // Trim the decimal component (leaving at least one 0)\n    while (str[str.length - 1] === '0' && str[str.length - 2] !== '.') {\n        str = str.substring(0, str.length - 1);\n    }\n\n    return negative + str;\n}\n\n/**\n * A FixedNumber represents a value over its {@link FixedFormat | **FixedFormat**} arithmetic field.\n *\n * A FixedNumber can be used to perform math, losslessly, on values which have decmial places.\n *\n * A FixedNumber has a fixed bit-width to store values in, and stores all values internally by multiplying the value by\n * 10 raised to the power of `decimals`.\n *\n * If operations are performed that cause a value to grow too high (close to positive infinity) or too low (close to\n * negative infinity), the value is said to overflow.\n *\n * For example, an 8-bit signed value, with 0 decimals may only be within the range `-128` to `127`; so `-128 - 1` will\n * overflow and become `127`. Likewise, `127 + 1` will overflow and become `-127`.\n *\n * Many operation have a normal and unsafe variant. The normal variant will throw a\n * [NumericFaultError](../interfaces/NumericFaultError) on any overflow, while the unsafe variant will silently allow\n * overflow, corrupting its value value.\n *\n * If operations are performed that cause a value to become too small (close to zero), the value loses precison and is\n * said to underflow.\n *\n * For example, an value with 1 decimal place may store a number as small as `0.1`, but the value of `0.1 / 2` is\n * `0.05`, which cannot fit into 1 decimal place, so underflow occurs which means precision is lost and the value\n * becomes `0`.\n *\n * Some operations have a normal and signalling variant. The normal variant will silently ignore underflow, while the\n * signalling variant will thow a [NumericFaultError](../interfaces/NumericFaultError) on underflow.\n *\n * @category Utils\n */\nexport class FixedNumber {\n    /**\n     * The specific fixed-point arithmetic field for this value.\n     */\n    readonly format!: string;\n\n    readonly #format: _FixedFormat;\n\n    // The actual value (accounting for decimals)\n    #val: bigint;\n\n    // A base-10 value to multiple values by to maintain the magnitude\n    readonly #tens: bigint;\n\n    /**\n     * This is a property so console.log shows a human-meaningful value.\n     *\n     * @ignore\n     */\n    readonly _value!: string;\n\n    // Use this when changing this file to get some typing info,\n    // but then switch to any to mask the internal type\n    // constructor(guard: any, value: bigint, format: _FixedFormat) {\n\n    /**\n     * @ignore\n     */\n    constructor(guard: any, value: bigint, format: any) {\n        assertPrivate(guard, _guard, 'FixedNumber');\n\n        this.#val = value;\n\n        this.#format = format;\n\n        const _value = toString(value, format.decimals);\n\n        defineProperties<FixedNumber>(this, { format: format.name, _value });\n\n        this.#tens = getTens(format.decimals);\n    }\n\n    /**\n     * If true, negative values are permitted, otherwise only positive values and zero are allowed.\n     */\n    get signed(): boolean {\n        return this.#format.signed;\n    }\n\n    /**\n     * The number of bits available to store the value.\n     */\n    get width(): number {\n        return this.#format.width;\n    }\n\n    /**\n     * The number of decimal places in the fixed-point arithment field.\n     */\n    get decimals(): number {\n        return this.#format.decimals;\n    }\n\n    /**\n     * The value as an integer, based on the smallest unit the {@link FixedNumber.decimals | **decimals**} allow.\n     */\n    get value(): bigint {\n        return this.#val;\n    }\n\n    #checkFormat(other: FixedNumber): void {\n        assertArgument(this.format === other.format, 'incompatible format; use fixedNumber.toFormat', 'other', other);\n    }\n\n    #checkValue(val: bigint, safeOp?: string): FixedNumber {\n        val = checkValue(val, this.#format, safeOp);\n        return new FixedNumber(_guard, val, this.#format);\n    }\n\n    #add(o: FixedNumber, safeOp?: string): FixedNumber {\n        this.#checkFormat(o);\n        return this.#checkValue(this.#val + o.#val, safeOp);\n    }\n\n    /**\n     * Returns a new {@link FixedNumber | **FixedNumber**} with the result of `this` added to `other`, ignoring overflow.\n     *\n     * @param {FixedNumber} other - The value to add to `this`.\n     * @returns {FixedNumber} The result of the addition.\n     */\n    addUnsafe(other: FixedNumber): FixedNumber {\n        return this.#add(other);\n    }\n\n    /**\n     * Returns a new {@link FixedNumber | **FixedNumber**} with the result of `this` added to `other`. A\n     * [NumericFaultError](../interfaces/NumericFaultError) is thrown if overflow occurs.\n     *\n     * @param {FixedNumber} other - The value to add to `this`.\n     * @returns {FixedNumber} The result of the addition.\n     */\n    add(other: FixedNumber): FixedNumber {\n        return this.#add(other, 'add');\n    }\n\n    #sub(o: FixedNumber, safeOp?: string): FixedNumber {\n        this.#checkFormat(o);\n        return this.#checkValue(this.#val - o.#val, safeOp);\n    }\n\n    /**\n     * Returns a new {@link FixedNumber | **FixedNumber**} with the result of `other` subtracted from `this`, ignoring\n     * overflow.\n     *\n     * @param {FixedNumber} other - The value to subtract from `this`.\n     * @returns {FixedNumber} The result of the subtraction.\n     */\n    subUnsafe(other: FixedNumber): FixedNumber {\n        return this.#sub(other);\n    }\n\n    /**\n     * Returns a new {@link FixedNumber | **FixedNumber**} with the result of `other` subtracted from `this`. A\n     * [NumericFaultError](../interfaces/NumericFaultError) is thrown if overflow occurs.\n     *\n     * @param {FixedNumber} other - The value to subtract from `this`.\n     * @returns {FixedNumber} The result of the subtraction.\n     */\n    sub(other: FixedNumber): FixedNumber {\n        return this.#sub(other, 'sub');\n    }\n\n    #mul(o: FixedNumber, safeOp?: string): FixedNumber {\n        this.#checkFormat(o);\n        return this.#checkValue((this.#val * o.#val) / this.#tens, safeOp);\n    }\n\n    /**\n     * Returns a new {@link FixedNumber | **FixedNumber**} with the result of `this` multiplied by `other`, ignoring\n     * overflow and underflow (precision loss).\n     *\n     * @param {FixedNumber} other - The value to multiply `this` by.\n     * @returns {FixedNumber} The result of the multiplication.\n     */\n    mulUnsafe(other: FixedNumber): FixedNumber {\n        return this.#mul(other);\n    }\n\n    /**\n     * Returns a new {@link FixedNumber | **FixedNumber**} with the result of `this` multiplied by `other`. A\n     * [NumericFaultError](../interfaces/NumericFaultError) is thrown if overflow occurs.\n     *\n     * @param {FixedNumber} other - The value to multiply `this` by.\n     * @returns {FixedNumber} The result of the multiplication.\n     */\n    mul(other: FixedNumber): FixedNumber {\n        return this.#mul(other, 'mul');\n    }\n\n    /**\n     * Returns a new {@link FixedNumber | **FixedNumber**} with the result of `this` multiplied by `other`. A\n     * [NumericFaultError](../interfaces/NumericFaultError) is thrown if overflow occurs or if underflow (precision\n     * loss) occurs.\n     *\n     * @param {FixedNumber} other - The value to multiply `this` by.\n     * @returns {FixedNumber} The result of the multiplication.\n     * @throws {NumericFaultError} Thrown if overflow or underflow occurs.\n     * @throws {NumericFaultError} Thrown if division by 0 occurs.\n     */\n    mulSignal(other: FixedNumber): FixedNumber {\n        this.#checkFormat(other);\n        const value = this.#val * other.#val;\n        assert(value % this.#tens === BN_0, 'precision lost during signalling mul', 'NUMERIC_FAULT', {\n            operation: 'mulSignal',\n            fault: 'underflow',\n            value: this,\n        });\n        return this.#checkValue(value / this.#tens, 'mulSignal');\n    }\n\n    #div(o: FixedNumber, safeOp?: string): FixedNumber {\n        assert(o.#val !== BN_0, 'division by zero', 'NUMERIC_FAULT', {\n            operation: 'div',\n            fault: 'divide-by-zero',\n            value: this,\n        });\n        this.#checkFormat(o);\n        return this.#checkValue((this.#val * this.#tens) / o.#val, safeOp);\n    }\n\n    /**\n     * Returns a new {@link FixedNumber | **FixedNumber**} with the result of `this` divided by `other`, ignoring\n     * underflow (precision loss). A [NumericFaultError](../interfaces/NumericFaultError) is thrown if overflow occurs.\n     *\n     * @param {FixedNumber} other - The value to divide `this` by.\n     * @returns {FixedNumber} The result of the division.\n     */\n    divUnsafe(other: FixedNumber): FixedNumber {\n        return this.#div(other);\n    }\n\n    /**\n     * Returns a new {@link FixedNumber | **FixedNumber**} with the result of `this` divided by `other`, ignoring\n     * underflow (precision loss). A [NumericFaultError](../interfaces/NumericFaultError) is thrown if overflow occurs.\n     *\n     * @param {FixedNumber} other - The value to divide `this` by.\n     * @returns {FixedNumber} The result of the division.\n     */\n    div(other: FixedNumber): FixedNumber {\n        return this.#div(other, 'div');\n    }\n\n    /**\n     * Returns a new {@link FixedNumber | **FixedNumber**} with the result of `this` divided by `other`. A\n     * [NumericFaultError](../interfaces/NumericFaultError) is thrown if underflow (precision loss) occurs.\n     *\n     * @param {FixedNumber} other - The value to divide `this` by.\n     * @returns {FixedNumber} The result of the division.\n     * @throws {NumericFaultError} Thrown if underflow occurs.\n     */\n    divSignal(other: FixedNumber): FixedNumber {\n        assert(other.#val !== BN_0, 'division by zero', 'NUMERIC_FAULT', {\n            operation: 'div',\n            fault: 'divide-by-zero',\n            value: this,\n        });\n        this.#checkFormat(other);\n        const value = this.#val * this.#tens;\n        assert(value % other.#val === BN_0, 'precision lost during signalling div', 'NUMERIC_FAULT', {\n            operation: 'divSignal',\n            fault: 'underflow',\n            value: this,\n        });\n        return this.#checkValue(value / other.#val, 'divSignal');\n    }\n\n    /**\n     * Returns a comparison result between `this` and `other`.\n     *\n     * This is suitable for use in sorting, where `-1` implies `this` is smaller, `1` implies `this` is larger and `0`\n     * implies both are equal.\n     *\n     * @param {FixedNumber} other - The value to compare to `this`.\n     * @returns {number} The comparison result.\n     */\n    cmp(other: FixedNumber): number {\n        let a = this.value,\n            b = other.value;\n\n        // Coerce a and b to the same magnitude\n        const delta = this.decimals - other.decimals;\n        if (delta > 0) {\n            b *= getTens(delta);\n        } else if (delta < 0) {\n            a *= getTens(-delta);\n        }\n\n        // Comnpare\n        if (a < b) {\n            return -1;\n        }\n        if (a > b) {\n            return 1;\n        }\n        return 0;\n    }\n\n    /**\n     * Returns true if `other` is equal to `this`.\n     *\n     * @param {FixedNumber} other - The value to compare to `this`.\n     * @returns {boolean} True if `other` is equal to `this`.\n     */\n    eq(other: FixedNumber): boolean {\n        return this.cmp(other) === 0;\n    }\n\n    /**\n     * Returns true if `other` is less than to `this`.\n     *\n     * @param {FixedNumber} other - The value to compare to `this`.\n     * @returns {boolean} True if `other` is less than to `this`.\n     */\n    lt(other: FixedNumber): boolean {\n        return this.cmp(other) < 0;\n    }\n\n    /**\n     * Returns true if `other` is less than or equal to `this`.\n     *\n     * @param {FixedNumber} other - The value to compare to `this`.\n     * @returns {boolean} True if `other` is less than or equal to `this`.\n     */\n    lte(other: FixedNumber): boolean {\n        return this.cmp(other) <= 0;\n    }\n\n    /**\n     * Returns true if `other` is greater than to `this`.\n     *\n     * @param {FixedNumber} other - The value to compare to `this`.\n     * @returns {boolean} True if `other` is greater than to `this`.\n     */\n    gt(other: FixedNumber): boolean {\n        return this.cmp(other) > 0;\n    }\n\n    /**\n     * Returns true if `other` is greater than or equal to `this`.\n     *\n     * @param {FixedNumber} other - The value to compare to `this`.\n     * @returns {boolean} True if `other` is greater than or equal to `this`.\n     */\n    gte(other: FixedNumber): boolean {\n        return this.cmp(other) >= 0;\n    }\n\n    /**\n     * Returns a new {@link FixedNumber | **FixedNumber**} which is the largest **integer** that is less than or equal to\n     * `this`.\n     *\n     * The decimal component of the result will always be `0`.\n     *\n     * @returns {FixedNumber} The floored value.\n     */\n    floor(): FixedNumber {\n        let val = this.#val;\n        if (this.#val < BN_0) {\n            val -= this.#tens - BN_1;\n        }\n        val = (this.#val / this.#tens) * this.#tens;\n        return this.#checkValue(val, 'floor');\n    }\n\n    /**\n     * Returns a new {@link FixedNumber | **FixedNumber**} which is the smallest **integer** that is greater than or\n     * equal to `this`.\n     *\n     * The decimal component of the result will always be `0`.\n     *\n     * @returns {FixedNumber} The ceiling value.\n     */\n    ceiling(): FixedNumber {\n        let val = this.#val;\n        if (this.#val > BN_0) {\n            val += this.#tens - BN_1;\n        }\n        val = (this.#val / this.#tens) * this.#tens;\n        return this.#checkValue(val, 'ceiling');\n    }\n\n    /**\n     * Returns a new {@link FixedNumber | **FixedNumber**} with the decimal component rounded up on ties at `decimals`\n     * places.\n     *\n     * @param {number} [decimals] - The number of decimal places to round to.\n     * @returns {FixedNumber} The rounded value.\n     */\n    round(decimals?: number): FixedNumber {\n        if (decimals == null) {\n            decimals = 0;\n        }\n\n        // Not enough precision to not already be rounded\n        if (decimals >= this.decimals) {\n            return this;\n        }\n\n        const delta = this.decimals - decimals;\n        const bump = BN_5 * getTens(delta - 1);\n\n        let value = this.value + bump;\n        const tens = getTens(delta);\n        value = (value / tens) * tens;\n\n        checkValue(value, this.#format, 'round');\n\n        return new FixedNumber(_guard, value, this.#format);\n    }\n\n    /**\n     * Returns true if `this` is equal to `0`.\n     *\n     * @returns {boolean} True if `this` is equal to `0`.\n     */\n    isZero(): boolean {\n        return this.#val === BN_0;\n    }\n\n    /**\n     * Returns true if `this` is less than `0`.\n     *\n     * @returns {boolean} True if `this` is less than `0`.\n     */\n    isNegative(): boolean {\n        return this.#val < BN_0;\n    }\n\n    /**\n     * Returns the string representation of `this`.\n     *\n     * @returns {string} The string representation.\n     */\n    toString(): string {\n        return this._value;\n    }\n\n    /**\n     * Returns a float approximation.\n     *\n     * Due to IEEE 754 precission (or lack thereof), this function can only return an approximation and most values will\n     * contain rounding errors.\n     *\n     * @returns {number} The float approximation.\n     */\n    toUnsafeFloat(): number {\n        return parseFloat(this.toString());\n    }\n\n    /**\n     * Return a new {@link FixedNumber | **FixedNumber**} with the same value but has had its field set to `format`.\n     *\n     * This will throw if the value cannot fit into `format`.\n     *\n     * @param {FixedFormat} format - The new format for the value.\n     */\n    toFormat(format: FixedFormat): FixedNumber {\n        return FixedNumber.fromString(this.toString(), format);\n    }\n\n    /**\n     * Creates a new {@link FixedNumber | **FixedNumber**} for `value` divided by `decimal` places with `format`.\n     *\n     * This will throw a [NumericFaultError](../interfaces/NumericFaultError) if `value` (once adjusted for `decimals`)\n     * cannot fit in `format`, either due to overflow or underflow (precision loss).\n     *\n     * @param {BigNumberish} _value - The value to create a FixedNumber for.\n     * @param {Numeric} [_decimals] - The number of decimal places in `value`.\n     * @param {FixedFormat} [_format] - The format for the FixedNumber.\n     * @returns {FixedNumber} The FixedNumber for `value`.\n     */\n    static fromValue(_value: BigNumberish, _decimals?: Numeric, _format?: FixedFormat): FixedNumber {\n        const decimals = _decimals == null ? 0 : getNumber(_decimals);\n        const format = getFormat(_format);\n\n        let value = getBigInt(_value, 'value');\n        const delta = decimals - format.decimals;\n        if (delta > 0) {\n            const tens = getTens(delta);\n            assert(value % tens === BN_0, 'value loses precision for format', 'NUMERIC_FAULT', {\n                operation: 'fromValue',\n                fault: 'underflow',\n                value: _value,\n            });\n            value /= tens;\n        } else if (delta < 0) {\n            value *= getTens(-delta);\n        }\n\n        checkValue(value, format, 'fromValue');\n\n        return new FixedNumber(_guard, value, format);\n    }\n\n    /**\n     * Creates a new {@link FixedNumber | **FixedNumber**} for `value` with `format`.\n     *\n     * This will throw a [NumericFaultError](../interfaces/NumericFaultError) if `value` cannot fit in `format`, either\n     * due to overflow or underflow (precision loss).\n     *\n     * @param {BigNumberish} _value - The value to create a FixedNumber for.\n     * @param {FixedFormat} [_format] - The format for the FixedNumber.\n     * @returns {FixedNumber} The FixedNumber for `value`.\n     */\n    static fromString(_value: string, _format?: FixedFormat): FixedNumber {\n        const match = _value.match(/^(-?)([0-9]*)\\.?([0-9]*)$/);\n        assertArgument(\n            match && match[2].length + match[3].length > 0,\n            'invalid FixedNumber string value',\n            'value',\n            _value,\n        );\n\n        const format = getFormat(_format);\n\n        const whole = match[2] || '0';\n        let decimal = match[3] || '';\n\n        // Pad out the decimals\n        while (decimal.length < format.decimals) {\n            decimal += Zeros;\n        }\n\n        // Check precision is safe\n        assert(decimal.substring(format.decimals).match(/^0*$/), 'too many decimals for format', 'NUMERIC_FAULT', {\n            operation: 'fromString',\n            fault: 'underflow',\n            value: _value,\n        });\n\n        // Remove extra padding\n        decimal = decimal.substring(0, format.decimals);\n\n        const value = BigInt(match[1] + whole + decimal);\n\n        checkValue(value, format, 'fromString');\n\n        return new FixedNumber(_guard, value, format);\n    }\n\n    /**\n     * Creates a new {@link FixedNumber | **FixedNumber**} with the big-endian representation `value` with `format`.\n     *\n     * This will throw a [NumericFaultError](../interfaces/NumericFaultError) if `value` cannot fit in `format` due to\n     * overflow.\n     *\n     * @param {BytesLike} _value - The big-endian representation of the value.\n     * @param {FixedFormat} [_format] - The format for the FixedNumber.\n     * @returns {FixedNumber} The FixedNumber for `value`.\n     */\n    static fromBytes(_value: BytesLike, _format?: FixedFormat): FixedNumber {\n        let value = toBigInt(getBytes(_value, 'value'));\n        const format = getFormat(_format);\n\n        if (format.signed) {\n            value = fromTwos(value, format.width);\n        }\n\n        checkValue(value, format, 'fromBytes');\n\n        return new FixedNumber(_guard, value, format);\n    }\n}\n","/**\n * Most interactions with Ethereum requires integer values, which use the smallest magnitude unit.\n *\n * For example, imagine dealing with dollars and cents. Since dollars are divisible, non-integer values are possible,\n * such as `$10.77`. By using the smallest indivisible unit (i.e. cents), the value can be kept as the integer `1077`.\n *\n * When receiving decimal input from the user (as a decimal string), the value should be converted to an integer and\n * when showing a user a value, the integer value should be converted to a decimal string.\n *\n * This creates a clear distinction, between values to be used by code (integers) and values used for display logic to\n * users (decimals).\n *\n * The native unit in Ethereum, ether is divisible to 18 decimal places, where each individual unit is called a wei.\n */\nimport { assertArgument } from './errors.js';\nimport { FixedNumber } from './fixednumber.js';\nimport { getNumber } from './maths.js';\n\nimport type { BigNumberish, Numeric } from './index.js';\n\nconst names = ['wei', 'kwei', 'mwei', 'gwei', 'szabo', 'finney', 'ether'];\n\n/**\n * Converts `value` into a decimal string, assuming `unit` decimal places. The `unit` may be the number of decimal\n * places or the name of a unit (e.g. `\"gwei\"` for 9 decimal places).\n *\n * @category Utils\n * @param {BigNumberish} value - The value to convert.\n * @param {string | Numeric} [unit=18] - The unit to convert to. Default is `18`\n * @returns {string} The converted value.\n * @throws {Error} If the unit is invalid.\n */\nexport function formatUnits(value: BigNumberish, unit?: string | Numeric): string {\n    let decimals = 18;\n    if (typeof unit === 'string') {\n        const index = names.indexOf(unit);\n        assertArgument(index >= 0, 'invalid unit', 'unit', unit);\n        decimals = 3 * index;\n    } else if (unit != null) {\n        decimals = getNumber(unit, 'unit');\n    }\n\n    return FixedNumber.fromValue(value, decimals, { decimals, width: 512 }).toString();\n}\n\n/**\n * Converts the decimal string `value` to a BigInt, assuming `unit` decimal places. The `unit` may the number of decimal\n * places or the name of a unit (e.g. `\"gwei\"` for 9 decimal places).\n *\n * @category Utils\n * @param {string} value - The value to convert.\n * @param {string | Numeric} [unit=18] - The unit to convert from. Default is `18`\n * @returns {bigint} The converted value.\n * @throws {Error} If the unit is invalid.\n * @throws {Error} If the value is not a string.\n */\nexport function parseUnits(value: string, unit?: string | Numeric): bigint {\n    assertArgument(typeof value === 'string', 'value must be a string', 'value', value);\n\n    let decimals = 18;\n    if (typeof unit === 'string') {\n        const index = names.indexOf(unit);\n        assertArgument(index >= 0, 'invalid unit', 'unit', unit);\n        decimals = 3 * index;\n    } else if (unit != null) {\n        decimals = getNumber(unit, 'unit');\n    }\n\n    return FixedNumber.fromString(value, { decimals, width: 512 }).value;\n}\n\n/**\n * Converts `value` into a decimal string sing 18 decimal places.\n *\n * @category Utils\n * @param {BigNumberish} wei - The value to convert.\n * @returns {string} The converted value.\n */\nexport function formatQuai(wei: BigNumberish): string {\n    return formatUnits(wei, 18);\n}\n\n/**\n * Converts `value` into a decimal string using 3 decimal places.\n *\n * @category Utils\n * @param {BigNumberish} value - The value to convert.\n * @returns {string} The converted value.\n */\nexport function formatQi(value: BigNumberish): string {\n    return formatUnits(value, 3);\n}\n\n/**\n * Converts the decimal string `quai` to a BigInt, using 18 decimal places.\n *\n * @category Utils\n * @param {string} ether - The value to convert.\n * @returns {bigint} The converted value.\n */\nexport function parseQuai(ether: string): bigint {\n    return parseUnits(ether, 18);\n}\n\n/**\n * Converts `value` into a decimal string using 3 decimal places.\n *\n * @category Utils\n * @param {string} value - The value to convert.\n * @returns {bigint} The converted value.\n */\nexport function parseQi(value: string): bigint {\n    return parseUnits(value, 3);\n}\n","import { quais } from \"quais\";\r\n\r\nconst getBets = async (contractInstance) => {\r\n  const betCount = await contractInstance.getBetCount();\r\n  const bets = [];\r\n  for (let i = 0; i < betCount; i++) {\r\n    const bet = await contractInstance.bets(i);\r\n    const player = bet.player;\r\n    const amount = quais.formatUnits(bet.amount, 18);\r\n\r\n    bets.unshift({\r\n      wallet: player,\r\n      amount: amount,\r\n      time: new Date(Number(bet.timestamp) * 1000),\r\n    });\r\n  }\r\n\r\n  return bets;\r\n};\r\n\r\nexport default getBets;\r\n","const getBetAmount = async (contractInstance) => {\r\n  const betAmount = await contractInstance.currentBetAmount();\r\n  return betAmount;\r\n};\r\n\r\nexport default getBetAmount;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { quais } from \"quais\";\r\nimport \"./App.css\";\r\nimport ScrollList from \"./components/ScrollList\";\r\nimport logo from \"./images/logo.png\";\r\nimport getBets from \"./helpers/getBets\";\r\nimport getBetAmount from \"./helpers/getBetAmount\";\r\n\r\nconst contractAddress = process.env.REACT_APP_CONTRACT_ADDRESS;\r\nimport contractABI from \"./contractAbi.json\";\r\n\r\nfunction App() {\r\n  const [wallet, setWallet] = useState(null);\r\n  const [balance, setBalance] = useState(null);\r\n  const [bets, setBets] = useState([]);\r\n  const [timeLeft, setTimeLeft] = useState(0);\r\n  const [contract, setContract] = useState(null);\r\n  const timerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const initContract = async () => {\r\n      if (window.pelagus && window.pelagus.request) {\r\n        try {\r\n          const accounts = await window.pelagus.request({\r\n            method: \"quai_requestAccounts\",\r\n          });\r\n\r\n          const accountBalance = await getBalance(accounts[0]);\r\n\r\n          const provider = new quais.BrowserProvider(window.pelagus);\r\n\r\n          const signer = await provider.getSigner();\r\n\r\n          const contractInstance = new quais.Contract(\r\n            contractAddress,\r\n            contractABI,\r\n            signer\r\n          );\r\n\r\n          const lastBetTime = await contractInstance.lastBetTime();\r\n\r\n          const bets = await getBets(contractInstance);\r\n\r\n          const timeDifference =\r\n            new Date(Number(lastBetTime) * 1000).getTime() +\r\n            3600000 -\r\n            new Date();\r\n\r\n          startOrResetTimer(timeDifference);\r\n          setWallet(accounts[0]);\r\n          setBalance(accountBalance);\r\n          setContract(contractInstance);\r\n          setBets(bets);\r\n        } catch (error) {\r\n          console.log(\"Помилка підключення:\", error);\r\n        }\r\n      } else {\r\n        console.log(\"Pelagus Wallet не знайдено.\");\r\n      }\r\n    };\r\n\r\n    initContract();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchBetData = async () => {\r\n      try {\r\n        if (contract) {\r\n          const lastBetTime = await contract.lastBetTime();\r\n\r\n          const bets = await getBets(contract);\r\n\r\n          const timeDifference =\r\n            new Date(Number(lastBetTime) * 1000).getTime() +\r\n            3600000 -\r\n            new Date();\r\n\r\n          startOrResetTimer(timeDifference);\r\n          setBets(bets);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching bet data:\", error);\r\n      }\r\n    };\r\n    fetchBetData();\r\n    const intervalId = setInterval(fetchBetData, 10000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, [contract]);\r\n\r\n  const requestAccounts = async () => {\r\n    if (window.pelagus && window.pelagus.request) {\r\n      try {\r\n        const accounts = await window.pelagus.request({\r\n          method: \"quai_requestAccounts\", // Використовуємо правильний метод\r\n        });\r\n        const accountBalance = await getBalance(accounts[0]); // Оновлюємо баланс\r\n        setWallet(accounts[0]); // Зберігаємо адресу гаманця\r\n        setBalance(accountBalance); // Оновлюємо баланс\r\n        console.log(accounts);\r\n      } catch (error) {\r\n        console.error(\"Error connecting to Pelagus Wallet:\", error);\r\n      }\r\n    } else {\r\n      alert(\"Pelagus Wallet не  знайдено\");\r\n    }\r\n  };\r\n\r\n  const placeBet = async () => {\r\n    if (!contract) {\r\n      console.error(\"Контракт не підключено\");\r\n      alert(\"Контракт не підключено\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const betAmountInUnits = await getBetAmount(contract);\r\n\r\n      const tx = await contract.placeBet({\r\n        value: betAmountInUnits,\r\n        gasLimit: 300000,\r\n      });\r\n\r\n      await tx.wait();\r\n      console.log(\"Ставка успішно розміщена\");\r\n\r\n      const updatedBalance = await getBalance(wallet);\r\n      setBalance(updatedBalance);\r\n      console.log(\"Оновлений баланс:\", updatedBalance);\r\n\r\n      const bets = await getBets(contract);\r\n      setBets(bets);\r\n\r\n      startOrResetTimer(3600 * 1000);\r\n    } catch (error) {\r\n      console.log(\"Помилка під час розміщення ставки:\", error);\r\n      if (error.code === \"ACTION_REJECTED\") {\r\n        console.log(\"Користувач скасував транзакцію.\");\r\n      } else {\r\n        console.log(\"Сталася помилка:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const startOrResetTimer = (dynamicTime) => {\r\n    clearInterval(timerRef.current);\r\n\r\n    setTimeLeft(dynamicTime);\r\n\r\n    timerRef.current = setInterval(() => {\r\n      setTimeLeft((prev) => {\r\n        if (prev > 0) {\r\n          return prev - 1000;\r\n        } else {\r\n          clearInterval(timerRef.current);\r\n          endGame();\r\n\r\n          return 0;\r\n        }\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  const endGame = async () => {\r\n    if (!contract) {\r\n      console.error(\"Контракт не підключено\");\r\n      alert(\"Контракт не підключено\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const tx = await contract.endGame({ gasLimit: 300000 });\r\n      await tx.wait();\r\n      console.log(\"Гра завершена успішно. Виплати здійснено.\");\r\n      alert(\"Гра завершена успішно!\");\r\n    } catch (error) {\r\n      console.error(\"Помилка під час завершення гри:\", error);\r\n      if (error.code === \"ACTION_REJECTED\") {\r\n        alert(\"Користувач відхилив транзакцію\");\r\n      } else {\r\n        alert(\"Помилка під час завершення гри. Спробуйте ще раз.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // Функція для отримання балансу\r\n  const getBalance = async (address) => {\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        jsonrpc: \"2.0\",\r\n        method: \"quai_getBalance\",\r\n        params: [address, \"latest\"],\r\n        id: 1,\r\n      }),\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\r\n        \"https://rpc.quai.network/cyprus1/\",\r\n        options\r\n      );\r\n      const result = await response.json();\r\n\r\n      if (result && result.result) {\r\n        return parseInt(result.result) / 1e18;\r\n      } else {\r\n        console.error(\"Не вдалося отримати баланс\");\r\n        return 0;\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Помилка при отриманні балансу:\", err);\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  const shortenAddress = (address) => {\r\n    return `${address.slice(0, 6)}...${address.slice(-4)}`;\r\n  };\r\n\r\n  // Слухаємо подію зміни акаунта\r\n  useEffect(() => {\r\n    if (window.pelagus) {\r\n      window.pelagus.on(\"accountsChanged\", (accounts) => {\r\n        if (accounts && accounts[0] !== wallet) {\r\n          setWallet(accounts[0]); // Оновлюємо адресу гаманця при зміні акаунта\r\n          getBalance(accounts[0]).then((balance) => setBalance(balance)); // Оновлюємо баланс\r\n        }\r\n      });\r\n    }\r\n  }, [wallet]); // Залежність на wallet\r\n\r\n  // Форматування часу для відображення\r\n  const formatTime = (milliseconds) => {\r\n    const minutes = Math.floor(milliseconds / 60000);\r\n    const seconds = ((milliseconds % 60000) / 1000).toFixed(0);\r\n    return `${minutes}:${(seconds < 10 ? \"0\" : \"\") + seconds}`;\r\n  };\r\n\r\n  const calculateTotalBets = () => {\r\n    return bets.reduce((total, bet) => total + parseFloat(bet.amount), 0);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col bg-blue-600 overflow-x-clip\">\r\n      <div className=\"App\">\r\n        <header className=\"w-full z-20 backdrop-blur-3xl header-container\">\r\n          <img src={logo} alt=\"logo\" className=\"logo-img\" />\r\n          <div className=\"wallet-info\">\r\n            {balance !== null ? (\r\n              <div className=\"balance-display\">\r\n                <span\r\n                  className=\"\r\n      text-sm\r\n      text-white\r\n       font-silkscreen \"\r\n                >\r\n                  {balance !== null\r\n                    ? `${Number(balance).toFixed(2)} Quai`\r\n                    : \"N/A Quai\"}{\" \"}\r\n                </span>\r\n              </div>\r\n            ) : null}\r\n            <button className=\"connect-wallet-btn\" onClick={requestAccounts}>\r\n              {wallet ? shortenAddress(wallet) : \"Connect Wallet\"}\r\n            </button>\r\n          </div>\r\n        </header>\r\n\r\n        <main className=\"flex-grow lg:container lg:pt-28\">\r\n          <div className=\"yeeti-container\">\r\n            <div className=\"yeeti\"></div>\r\n\r\n            <div className=\"yeeti-4\"></div>\r\n          </div>\r\n\r\n          <div className=\"backdrop-div\">\r\n            <div className=\"flex flex-col md:flex-row justify-center items-start md:space-y-0 space-y-4 md:h-48 xl:h-auto\">\r\n              <div className=\"w-full md:pr-2 h-full\">\r\n                <div className=\"bg-newBlue-400 p-6 w-full h-full\">\r\n                  <div className=\"flex flex-row justify-start\">\r\n                    <div className=\"flex flex-row justify-between w-full\">\r\n                      <div className=\"flex flex-row items-center\">\r\n                        <div className=\"flex\">\r\n                          <div className=\"blob green w-[18px] h-[18px] mr-[9px] bg-secondary\"></div>\r\n                        </div>\r\n                        <div>\r\n                          <p className=\"text-sm text-secondary font-silkscreen\">\r\n                            LIVE PRIZE POOL\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex flex-row items-center\">\r\n                        <div className=\"flex space-x-2\">\r\n                          <div className=\"w-12 h-1 bg-gray-500 relative overflow-hidden\">\r\n                            <div className=\"absolute top-0 left-0 h-full bg-white animate-progress-fade\"></div>\r\n                          </div>\r\n                          <div className=\"w-12 h-1 bg-gray-500 relative overflow-hidden\">\r\n                            <div className=\"absolute top-0 left-0 h-full bg-white\"></div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex flex-row justify-start pt-2 pb-2\">\r\n                    <div>\r\n                      <h3 className=\"text-lg text-primary font-silkscreen\">\r\n                        {calculateTotalBets()} Quai\r\n                      </h3>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex flex-row justify-start\">\r\n                    <div>\r\n                      <p className=\"text-sm text-white font-silkscreen\">\r\n                        TO BE RECEIVED BY THE WINNER\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"w-full md:pl-2 h-full\">\r\n                <div className=\"bg-newBlue-400 p-6 w-full h-full\">\r\n                  <div className=\"flex flex-row justify-start\">\r\n                    <div>\r\n                      <p className=\"text-sm text-white font-silkscreen\">\r\n                        TIME REMAINING\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex flex-row justify-start pt-2 pb-2\">\r\n                    <div>\r\n                      <p className=\"text-lg text-primary font-silkscreen\">\r\n                        {formatTime(timeLeft)}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex flex-row justify-start\">\r\n                    <div>\r\n                      <p className=\"text-sm text-white font-silkscreen\">\r\n                        UNTIL THE GAME ENDS AND THE LAST Cowboy WINS\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <button\r\n              className=\"pushable w-full h-16 bg-primary text-black text-[36px] font-silkscreen leading-[36px]\"\r\n              onClick={placeBet}\r\n            >\r\n              Cowboy\r\n            </button>\r\n            <ScrollList list={bets} />\r\n          </div>\r\n        </main>\r\n\r\n        <footer className=\"p-12 w-full\">\r\n          <ul className=\"flex flex-wrap items-center mt-3 text-sm font-medium text-gray-500 dark:text-gray-400 sm:mt-0\">\r\n            <li>\r\n              <a\r\n                href=\"https://faucet.quai.network/\"\r\n                target=\"_blank\"\r\n                className=\"font-silkscreen mr-4 hover:underline md:mr-6\"\r\n              >\r\n                Faucet\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a\r\n                href=\"https://discord.com/invite/vk2EFMfB5n\"\r\n                target=\"_blank\"\r\n                className=\"font-silkscreen mr-4 hover:underline md:mr-6\"\r\n              >\r\n                Discord\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a\r\n                href=\"https://x.com/QuaiNetwork\"\r\n                target=\"_blank\"\r\n                className=\"font-silkscreen mr-4 hover:underline md:mr-6\"\r\n              >\r\n                Twitter\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a\r\n                href=\"https://marginex.app/\"\r\n                target=\"_blank\"\r\n                className=\"font-silkscreen mr-4 hover:underline md:mr-6\"\r\n              >\r\n                Marginex\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"names":["aa","Object","defineProperties","defineProperty","a","b","c","Array","prototype","value","e","window","this","global","da","Symbol","ea","fa","configurable","writable","toString","TypeError","ha","iterator","next","ia","length","done","ca","split","d","f","ba","String","ja","ka","self","g","execScript","shift","k","call","splice","propertyIsEnumerable","la","oa","qa","forEach","l","map","h","ra","arguments","slice","sa","Error","n","p","q","va","Function","displayName","name","constructor","r","arrClean","wa","w","v","u","hasOwnProperty","push","key","xa","fromCharCode","apply","sort","toArray","Mc","m","toObject","fromObject","set","Jb","getLength","clear","Cb","del","Eb","getEntryList","entries","keys","values","get","has","Jc","t","Va","Ya","serializeBinary","deserializeBinary","bb","ya","za","Aa","x","Ba","Ca","B","M","join","Da","Math","floor","indexOf","Uint8Array","charAt","La","test","Ea","subarray","concat","yb","ee","FLOAT","ke","te","je","xb","wb","BOOL","re","ie","le","ce","se","ge","me","ne","oe","pe","he","ve","ue","de","qe","fe","y","z","Fa","A","abs","Ga","Ha","isNaN","round","pow","log","LN2","Ia","C","charCodeAt","D","E","Ja","Ka","Ma","Na","NaN","Infinity","Oa","Pa","F","G","Qa","H","Ra","Sa","Ta","Ua","ArrayBuffer","buffer","byteOffset","byteLength","I","toLowerCase","toUpperCase","Wa","pop","J","O","getInstanceCacheLength","alloc","free","clone","Y","getBuffer","setBlock","Db","getEnd","setEnd","reset","getCursor","setCursor","advance","atEnd","Qb","pastEnd","getError","readSplitVarint64","readSplitZigzagVarint64","ta","readSplitFixed64","kb","skipVarint","mb","unskipVarint","o","readUnsignedVarint32","readSignedVarint32","readSignedVarint32String","readZigzagVarint32","readUnsignedVarint64","readUnsignedVarint64String","readSignedVarint64","readSignedVarint64String","readZigzagVarint64","fb","readZigzagVarintHash64","readZigzagVarint64String","Gc","readUint8","Ec","readUint16","readUint32","ga","readUint64","readUint64String","Xb","readInt8","Vb","readInt16","P","readInt32","readInt64","readInt64String","readFloat","Z","readDouble","pa","readBool","readEnum","readString","Dc","readStringWithLength","readBytes","readVarintHash64","$","readFixedHash64","K","Xa","L","ma","na","Za","Ab","Nb","N","clearInstanceCache","zb","Fb","getFieldCursor","Hb","getFieldNumber","Lb","getWireType","Mb","isDelimited","isEndGroup","nextField","unskipHeader","Lc","skipMatchingFields","lb","skipVarintField","gb","skipDelimitedField","hb","skipFixed32Field","ib","skipFixed64Field","jb","skipGroup","skipField","Hc","registerReadCallback","Ic","runReadCallback","Yb","readMessage","Ub","readGroup","Gb","getFieldDecoder","Wb","readInt32String","Fc","readUint32String","zc","readSint32","Ac","readSint64","Bc","readSint64String","Rb","readFixed32","Sb","readFixed64","Tb","readFixed64String","vc","readSfixed32","wc","readSfixed32String","xc","readSfixed64","yc","readSfixed64String","Cc","readSintHash64","gc","readPackedInt32","hc","readPackedInt32String","ic","readPackedInt64","jc","readPackedInt64String","qc","readPackedUint32","rc","readPackedUint32String","sc","readPackedUint64","tc","readPackedUint64String","nc","readPackedSint32","oc","readPackedSint64","pc","readPackedSint64String","bc","readPackedFixed32","cc","readPackedFixed64","dc","readPackedFixed64String","kc","readPackedSfixed32","lc","readPackedSfixed64","mc","readPackedSfixed64String","fc","readPackedFloat","$b","readPackedDouble","Zb","readPackedBool","ac","readPackedEnum","uc","readPackedVarintHash64","ec","readPackedFixedHash64","isMessageType","GENERATE_TO_OBJECT","GENERATE_FROM_OBJECT","$a","Ib","getJsPbMessageId","initialize","isArray","max","i","Number","MAX_VALUE","ab","cb","freeze","db","eb","Q","ob","nb","pb","qb","toObjectList","toObjectExtension","serializeBinaryExtensions","readBinaryExtension","getField","getRepeatedField","getOptionalFloatingPointField","getBooleanField","getRepeatedFloatingPointField","getRepeatedBooleanField","bytesAsB64","bytesAsU8","bytesListAsB64","bytesListAsU8","getFieldWithDefault","getBooleanFieldWithDefault","getFloatingPointFieldWithDefault","getFieldProto3","getMapField","setField","setProto3IntField","setProto3FloatField","setProto3BooleanField","setProto3StringField","setProto3BytesField","setProto3EnumField","setProto3StringIntField","addToRepeatedField","setOneofField","computeOneofCase","getWrapperField","getRepeatedWrapperField","setWrapperField","setOneofWrapperField","setRepeatedWrapperField","addToRepeatedWrapperField","toMap","getExtension","Kc","setExtension","difference","equals","compareExtensions","compareFields","Bb","cloneMessage","copyInto","registerMessageType","we","R","dump","X","S","T","lo","hi","rb","U","parseInt","add","V","sb","substring","sub","W","tb","end","j","ub","vb","ua","$name","exec","extensionObject_","$extensions","extensions","replace","writeSplitVarint64","s","writeSplitFixed64","writeUnsignedVarint32","writeSignedVarint32","writeUnsignedVarint64","writeSignedVarint64","writeZigzagVarint32","writeZigzagVarint64","writeZigzagVarint64String","writeZigzagVarintHash64","be","writeUint8","ae","writeUint16","writeUint32","writeUint64","Qc","writeInt8","Pc","writeInt16","writeInt32","writeInt64","writeInt64String","writeFloat","writeDouble","writeBool","writeEnum","writeBytes","writeVarintHash64","writeFixedHash64","writeString","cmp","rightShift","leftShift","msb","Ob","lsb","zero","mul32x32","mul","div","fromString","writeSerializedMessage","Pb","maybeWriteSerializedMessage","getResultBuffer","Kb","getResultBase64String","beginSubMessage","endSubMessage","Nc","writeAny","writeInt32String","writeUint32String","writeUint64String","writeSint32","writeSint64","$d","writeSintHash64","Zd","writeSint64String","writeFixed32","writeFixed64","writeFixed64String","writeSfixed32","writeSfixed64","writeSfixed64String","Rc","writeMessage","Sc","writeMessageSet","Oc","writeGroup","writeSplitZigzagVarint64","Ed","writeRepeatedInt32","Fd","writeRepeatedInt32String","Gd","writeRepeatedInt64","Qd","writeRepeatedSplitFixed64","Rd","writeRepeatedSplitVarint64","Sd","writeRepeatedSplitZigzagVarint64","Hd","writeRepeatedInt64String","Ud","writeRepeatedUint32","Vd","writeRepeatedUint32String","Wd","writeRepeatedUint64","Xd","writeRepeatedUint64String","Md","writeRepeatedSint32","Nd","writeRepeatedSint64","Od","writeRepeatedSint64String","Pd","writeRepeatedSintHash64","yd","writeRepeatedFixed32","zd","writeRepeatedFixed64","Ad","writeRepeatedFixed64String","Jd","writeRepeatedSfixed32","Kd","writeRepeatedSfixed64","Ld","writeRepeatedSfixed64String","Cd","writeRepeatedFloat","wd","writeRepeatedDouble","ud","writeRepeatedBool","xd","writeRepeatedEnum","Td","writeRepeatedString","vd","writeRepeatedBytes","Id","writeRepeatedMessage","Dd","writeRepeatedGroup","Bd","writeRepeatedFixedHash64","Yd","writeRepeatedVarintHash64","ad","writePackedInt32","bd","writePackedInt32String","cd","writePackedInt64","md","writePackedSplitFixed64","nd","writePackedSplitVarint64","od","writePackedSplitZigzagVarint64","dd","writePackedInt64String","pd","writePackedUint32","qd","writePackedUint32String","rd","writePackedUint64","sd","writePackedUint64String","hd","writePackedSint32","jd","writePackedSint64","kd","writePackedSint64String","ld","writePackedSintHash64","Wc","writePackedFixed32","Xc","writePackedFixed64","Yc","writePackedFixed64String","ed","writePackedSfixed32","fd","writePackedSfixed64","gd","writePackedSfixed64String","$c","writePackedFloat","Uc","writePackedDouble","Tc","writePackedBool","Vc","writePackedEnum","Zc","writePackedFixedHash64","td","writePackedVarintHash64","exports","debug","Map","Message","BinaryReader","BinaryWriter","ExtensionFieldInfo","ExtensionFieldBinaryInfo","exportSymbol","inherits","object","extend","typeOf","getOwnPropertySymbols","propIsEnumerable","module","assign","test1","getOwnPropertyNames","test2","test3","letter","err","shouldUseNative","target","source","from","symbols","to","val","undefined","require","encodeURIComponent","Set","document","createElement","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","type","sanitizeURL","removeEmptyString","removeAttribute","setAttribute","setAttributeNS","xlinkHref","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","for","stack","trim","match","prepareStackTrace","Reflect","construct","tag","render","_render","$$typeof","_context","_payload","_init","nodeName","_valueTracker","getOwnPropertyDescriptor","enumerable","getValue","setValue","stopTracking","checked","activeElement","body","defaultChecked","defaultValue","_wrapperState","initialChecked","initialValue","controlled","ownerDocument","children","Children","options","selected","defaultSelected","disabled","dangerouslySetInnerHTML","textContent","namespaceURI","innerHTML","valueOf","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","lastChild","nodeType","nodeValue","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","style","setProperty","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","track","wbr","is","srcElement","correspondingUseElement","parentNode","stateNode","addEventListener","removeEventListener","onError","alternate","return","flags","memoizedState","dehydrated","child","sibling","current","blockedOn","domEventName","eventSystemFlags","nativeEvent","targetContainers","delete","pointerId","lanePriority","unstable_runWithPriority","priority","hydrate","containerInfo","unstable_scheduleCallback","unstable_NormalPriority","animationend","animationiteration","animationstart","transitionend","animation","transition","unstable_now","pendingLanes","expiredLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","eventTimes","clz32","unstable_UserBlockingPriority","id","bind","keyCode","charCode","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","stopPropagation","cancelBubble","persist","isPersistent","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","view","detail","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","dataTransfer","animationName","elapsedTime","pseudoElement","clipboardData","data","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Alt","Control","Meta","Shift","code","location","repeat","locale","which","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","touches","targetTouches","changedTouches","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","documentMode","color","date","datetime","email","month","number","password","range","search","tel","text","time","url","week","event","listeners","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","Le","node","offset","nextSibling","Me","contains","compareDocumentPosition","Ne","HTMLIFrameElement","contentWindow","href","Oe","contentEditable","Pe","Qe","Re","Se","Te","Ue","start","selectionStart","selectionEnd","anchorNode","defaultView","getSelection","anchorOffset","focusNode","focusOffset","Ve","We","Xe","Ye","Ze","instance","listener","$e","af","bf","random","cf","df","capture","passive","ef","ff","parentWindow","gf","hf","char","unshift","jf","kf","lf","mf","autoFocus","nf","__html","of","setTimeout","pf","clearTimeout","qf","rf","sf","previousSibling","tf","vf","wf","xf","yf","zf","Af","Bf","Cf","Df","Ef","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Ff","childContextTypes","Gf","Hf","If","getChildContext","Jf","__reactInternalMemoizedMergedChildContext","Kf","Lf","Mf","Nf","Of","Pf","unstable_cancelCallback","Qf","unstable_shouldYield","Rf","unstable_requestPaint","Sf","Tf","unstable_getCurrentPriorityLevel","Uf","unstable_ImmediatePriority","Vf","Wf","Xf","unstable_LowPriority","Yf","unstable_IdlePriority","Zf","$f","ag","bg","cg","dg","eg","fg","gg","hg","ig","jg","kg","ReactCurrentBatchConfig","lg","defaultProps","mg","ng","og","pg","qg","rg","_currentValue","sg","childLanes","tg","dependencies","firstContext","lanes","ug","vg","context","observedBits","responders","wg","xg","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","yg","zg","eventTime","lane","payload","callback","Ag","Bg","Cg","Dg","Eg","Fg","Component","refs","Gg","Kg","isMounted","_reactInternals","enqueueSetState","Hg","Ig","Jg","enqueueReplaceState","enqueueForceUpdate","Lg","shouldComponentUpdate","isPureReactComponent","Mg","contextType","state","updater","Ng","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Og","props","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Pg","Qg","ref","_owner","_stringRef","Rg","Sg","lastEffect","nextEffect","firstEffect","index","Tg","Ug","mode","elementType","Vg","implementation","Wg","Xg","Yg","Zg","$g","ah","bh","ch","dh","eh","documentElement","tagName","fh","gh","hh","ih","memoizedProps","revealOrder","jh","kh","lh","mh","nh","oh","pendingProps","ph","qh","rh","sh","th","uh","_workInProgressVersionPrimary","vh","ReactCurrentDispatcher","wh","xh","yh","zh","Ah","Bh","Ch","Dh","Eh","Fh","Gh","Hh","baseQueue","queue","Ih","Jh","Kh","lastRenderedReducer","action","eagerReducer","eagerState","lastRenderedState","dispatch","Lh","Mh","_getVersion","_source","mutableReadLanes","Nh","useState","getSnapshot","subscribe","useEffect","setSnapshot","Oh","Ph","Qh","Rh","create","destroy","deps","Sh","Th","Uh","Vh","Wh","Xh","Yh","Zh","$h","ai","bi","ci","di","readContext","useCallback","useContext","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useDebugValue","useDeferredValue","useTransition","useMutableSource","useOpaqueIdentifier","unstable_isNewReconciler","uf","ei","ReactCurrentOwner","fi","gi","ii","ji","compare","ki","li","mi","baseLanes","ni","oi","pi","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","qi","getDerivedStateFromError","ri","pendingContext","Bi","Ci","Di","Ei","si","retryLane","ti","fallback","unstable_avoidThisFallback","ui","unstable_expectedLoadTime","vi","wi","xi","yi","zi","isBackwards","rendering","renderingStartTime","last","tail","tailMode","Ai","Fi","Gi","wasMultiple","multiple","onClick","onclick","size","createElementNS","createTextNode","Hi","Ii","Ji","Ki","Li","Mi","message","Ni","console","error","Oi","WeakMap","Pi","element","Qi","Ri","Si","componentDidCatch","Ti","componentStack","Ui","WeakSet","Vi","Wi","Xi","__reactInternalSnapshotBeforeUpdate","Yi","Zi","$i","focus","aj","display","bj","onCommitFiberUnmount","componentWillUnmount","cj","dj","ej","fj","gj","hj","insertBefore","_reactRootContainer","ij","jj","kj","lj","then","mj","nj","ceil","oj","pj","qj","rj","sj","tj","uj","vj","wj","ck","xj","yj","zj","Aj","Bj","Cj","Dj","Ej","Fj","Gj","Hj","Ij","Jj","Kj","Lj","Mj","callbackNode","expirationTimes","callbackPriority","Nj","Oj","Pj","Qj","Rj","Sj","Tj","finishedWork","finishedLanes","Uj","timeoutHandle","Wj","Xj","pingCache","Yj","Zj","ak","bk","dk","rangeCount","focusedElem","selectionRange","ek","min","createRange","setStart","removeAllRanges","addRange","left","scrollLeft","top","scrollTop","onCommitFiberRoot","fk","gk","ik","isReactComponent","pendingChildren","jk","mutableSourceEagerHydrationData","lk","mk","nk","ok","qk","hydrationOptions","mutableSources","_internalRoot","rk","tk","hasAttribute","sk","uk","kk","hk","_calculateChangedBits","unstable_observedBits","unmount","querySelectorAll","JSON","stringify","form","Vj","vk","Events","wk","findFiberByHostInstance","bundleType","version","rendererPackageName","xk","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","__REACT_DEVTOOLS_GLOBAL_HOOK__","yk","isDisabled","supportsFiber","inject","createPortal","findDOMNode","flushSync","unmountComponentAtNode","unstable_batchedUpdates","unstable_createPortal","unstable_renderSubtreeIntoContainer","checkDCE","__self","__source","jsx","jsxs","Fragment","StrictMode","Profiler","Suspense","setState","forceUpdate","escape","_status","_result","default","IsSomeRendererActing","count","only","PureComponent","cloneElement","createContext","_currentValue2","_threadCount","Provider","Consumer","createFactory","createRef","forwardRef","isValidElement","lazy","memo","performance","MessageChannel","unstable_forceFrameRate","cancelAnimationFrame","requestAnimationFrame","port2","port1","onmessage","postMessage","sortIndex","startTime","expirationTime","priorityLevel","unstable_Profiling","unstable_continueExecution","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","delay","unstable_wrapCallback","objA","objB","compareContext","ret","keysA","keysB","bHasOwnProperty","idx","valueA","valueB","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","definition","globalThis","obj","prop","toStringTag","checkType","types","argument","async","resolveProperties","results","Promise","all","resolve","reduce","accum","HEX","result","toJSON","BigInt","isError","isCallException","makeError","info","shortMessage","details","RangeError","assert","check","assertArgument","assertArgumentCount","expectedCount","_normalizeForms","normalize","assertPrivate","givenGuard","guard","className","method","operation","_getBytes","copy","getBytes","getBytesCopy","isHexString","HexCharacters","hexlify","bytes","datas","dataLength","dataSlice","zeroPad","fill","zeroPadValue","BN_0","BN_1","maxValue","fromTwos","_value","_width","getUint","getNumber","fault","toTwos","getBigInt","limit","mask","_bits","bits","isInteger","Nibbles","toBigInt","toBeHex","toBeArray","hex","toQuantity","isBytesLike","startsWith","WordSize","Padding","passProperties","_guard","throwError","wrapped","Result","_len","args","_key","items","names","wrap","super","item","nameCounts","Proxy","receiver","_len2","_key2","filter","thisArg","fromItems","Coder","localName","dynamic","_throwError","Writer","appendWriter","writer","paddingOffset","writeValue","writeUpdatableValue","Reader","allowLoose","maxInflation","consumed","bytesRead","loose","alignedLength","subReader","reader","readValue","readIndex","isSafeInteger","lengths","includes","hash","outputLen","blockLen","exists","checkFinished","destroyed","finished","output","out","U32_MASK64","_32n","fromBig","lst","Uint32Array","Al","rotlSH","rotlSL","rotlBH","rotlBL","crypto","u8a","createView","arr","DataView","rotr","word","toBytes","str","TextEncoder","encode","utf8ToBytes","Hash","_cloneInto","wrapConstructor","hashCons","hashC","msg","update","digest","tmp","randomBytes","bytesLength","getRandomValues","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_0n","_1n","_2n","_7n","_256n","_0x71n","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","Keccak","suffix","enableXOF","rounds","pos","posOut","state32","keccak","idx1","idx0","B0","B1","Tl","curH","curL","PI","keccakP","len","take","finish","writeInto","bufferOut","xofInto","xof","digestInto","gen","keccak_256","locked","_keccak256","__keccak256","keccak256","_data","_","lock","register","func","SHA2","padOffset","isLE","process","dataView","roundClean","setBigUint64","_u32_max","wl","setUint32","oview","outLen","res","Chi","Maj","SHA256_K","IV","SHA256_W","SHA256","getUint32","W15","W2","s0","s1","T1","T2","sha256","hexes","padStart","bytesToHex","hexToNumber","hexToBytes","array","hexByte","byte","bytesToNumberBE","bytesToNumberLE","reverse","numberToBytesBE","numberToBytesLE","ensureBytes","title","expectedLength","concatBytes","arrays","sum","pad","bitMask","u8n","u8fr","createHmacDrbg","hashLen","qByteLen","hmacFn","reseed","seed","sl","genUntil","pred","validatorFns","bigint","function","boolean","string","stringOrUint8Array","field","Fp","isValid","validateObject","validators","optValidators","checkField","fieldName","isOptional","checkVal","_3n","_4n","_5n","_8n","mod","num","power","modulo","pow2","invert","FpSqrt","p1div4","root","eql","sqr","c1","n2","nv","ONE","legendreC","Q1div2","neg","ZERO","t2","tonelliShanks","FIELD_FIELDS","nLength","nBitLength","_nBitLength","nByteLength","getFieldBytesLength","fieldOrder","bitLength","getMinHashLength","HMAC","assertHash","iHash","oHash","buf","assertExists","assertBytes","getPrototypeOf","hmac","validateBasic","curve","ORDER","MASK","BYTES","BITS","Gx","Gy","b2n","h2b","ut","DER","Err","_parseInt","toSig","sBytes","rBytesLeft","hexFromSig","sig","shl","rhl","rl","weierstrassPoints","opts","CURVE","allowedPrivateKeyLengths","wrapPrivateKey","isTorsionFree","clearCofactor","allowInfinityPoint","fromBytes","endo","beta","splitScalar","validatePointOpts","_c","point","_isCompressed","toAffine","weierstrassEquation","x2","x3","isWithinCurveOrder","assertGE","normPrivateKeyToScalar","pointPrecomputes","assertPrjPoint","other","Point","px","py","pz","fromAffine","is0","normalizeZ","points","toInv","invertBatch","fromHex","assertValidity","fromPrivateKey","privateKey","BASE","multiply","_setWindowSize","windowSize","_WINDOW_SIZE","right","hasEvenY","isOdd","X1","Y1","Z1","X2","Y2","Z2","U1","U2","negate","double","b3","X3","Y3","Z3","t0","t1","t3","t4","t5","subtract","wNAF","wnaf","wNAFCached","comp","multiplyUnsafe","unsafeLadder","k1neg","k1","k2neg","k2","k1p","k2p","scalar","fake","f1p","f2p","constTimeNegate","multiplyAndAddUnsafe","iz","inv","ax","ay","zz","cofactor","toRawBytes","isCompressed","toHex","condition","windows","elm","precomputeWindow","precomputes","maxNumber","shiftBy","wbits","offset1","offset2","cond1","cond2","precomputesMap","transform","ProjectivePoint","weierstrass","curveDef","bits2int","bits2int_modN","lowS","validateOpts","CURVE_ORDER","compressedLen","uncompressedLen","modN","invN","cat","head","y2","sqrt","numToNByteStr","isBiggerThanHalfOrder","slcNum","Signature","recovery","fromCompact","fromDER","addRecoveryBit","recoverPublicKey","msgHash","rec","radj","prefix","ir","u1","u2","hasHighS","normalizeS","toDERRawBytes","toDERHex","toCompactRawBytes","toCompactHex","utils","isValidPrivateKey","randomPrivateKey","fieldLen","minLen","reduced","precompute","isProbPub","delta","ORDER_MASK","int2octets","prepSig","defaultSigOpts","some","prehash","extraEntropy","ent","h1int","seedArgs","k2sig","kBytes","normS","defaultVerOpts","getPublicKey","getSharedSecret","privateA","publicB","sign","privKey","drbg","verify","signature","publicKey","_sig","derError","getHash","msgs","secp256k1P","secp256k1N","divNearest","sqrtMod","_6n","_11n","_22n","_23n","_44n","_88n","b2","b6","b9","b11","b22","b44","b88","b176","b220","b223","bitLen","redef","sqrtP","lhs","rhs","FpPow","sqrN","addN","subN","mulN","nums","lastMultiplied","acc","inverted","reduceRight","FpInvertBatch","cmov","Field","secp256k1","defHash","createCurve","a1","b1","a2","POW_2_128","c2","ZeroHash","BN_2","BN_27","BN_28","BN_35","toUint256","networkV","legacyChainId","getChainId","yParity","yParityAndS","compactSerialized","serialized","_type","bv","getChainIdV","chainId","getNormalizedV","assertError","_r","_v","SigningKey","computePublicKey","compressedPublicKey","computeSharedSecret","pubKey","compressed","pub","secpSig","addPoints","p0","p1","pub0","pub1","formatMixedCaseChecksumAddress","address","chars","expanded","hashed","getAddress","computeAddress","pubkey","signed","Typed","_typedSymbol","format","minValue","isBigInt","isData","isString","tupleName","arrayLength","uint8","uint16","uint24","uint32","uint40","uint48","uint56","uint64","uint72","uint80","uint88","uint96","uint104","uint112","uint120","uint128","uint136","uint144","uint152","uint160","uint168","uint176","uint184","uint192","uint200","uint208","uint216","uint224","uint232","uint240","uint248","uint256","uint","int8","int16","int24","int32","int40","int48","int56","int64","int72","int80","int88","int96","int104","int112","int120","int128","int136","int144","int152","int160","int168","int176","int184","int192","int200","int208","int216","int224","int232","int240","int248","int256","int","bytes1","bytes2","bytes3","bytes4","bytes5","bytes6","bytes7","bytes8","bytes9","bytes10","bytes11","bytes12","bytes13","bytes14","bytes15","bytes16","bytes17","bytes18","bytes19","bytes20","bytes21","bytes22","bytes23","bytes24","bytes25","bytes26","bytes27","bytes28","bytes29","bytes30","bytes31","bytes32","bool","tuple","overrides","isTyped","dereference","AddressCoder","decode","AnonymousCoder","coder","pack","coders","arrayValues","unique","staticWriter","dynamicWriter","updateFuncs","dynamicOffset","updateFunc","baseOffset","unpack","baseReader","offsetReader","baseType","ArrayCoder","defaultChild","BooleanCoder","DynamicBytesCoder","BytesCoder","FixedBytesCoder","Empty","NullCoder","BN_MAX_UINT256","NumberCoder","maxUintValue","bounds","ignoreFunc","reason","badCodepoint","Utf8ErrorFuncs","ignore","getUtf8CodePoints","_bytes","extraLength","overlongMask","nextChar","toUtf8Bytes","assertNormalize","pair","toUtf8String","codePoint","StringCoder","TupleCoder","uniqueNames","setify","KwVisibDeploy","_kwVisib","KwVisib","_kwTypes","KwTypes","_kwModifiers","KwModifiers","Keywords","SimpleTokens","regexWhitespacePrefix","RegExp","regexNumberPrefix","regexIdPrefix","regexId","regexType","TokenString","tokens","linkBack","linkNext","popKeyword","allowed","peek","popType","popParen","popParams","peekKeyword","peekType","token","lex","brackets","commas","cur","depth","allowSingle","included","consumeName","keyword","consumeKeywords","keywords","consumeMutability","modifiers","consumeParams","allowIndexed","ParamType","consumeGas","consumeEoi","regexArrayType","verifyBasicType","internal","ParamTypeInternal","ErrorFragmentInternal","EventFragmentInternal","ConstructorFragmentInternal","FallbackFragmentInternal","FunctionFragmentInternal","StructFragmentInternal","indexed","components","arrayChildren","parse","isTuple","isIndexable","walk","_this","promises","childType","walkAsync","isParamType","comps","bracket","arrayMatch","inputs","ConstructorFragment","ErrorFragment","EventFragment","FallbackFragment","FunctionFragment","StructFragment","isConstructor","isFragment","isEvent","isFunction","isStruct","NamedFragment","joinParams","params","selector","anonymous","topicHash","getTopicHash","payable","gas","stateMutability","errorObj","mutability","outputs","constant","getSelector","PanicReasons","paramTypeBytes","paramTypeNumber","defaultCoder","defaultMaxInflation","AbiCoder","getDefaultValue","_setDefaultMaxInflation","defaultAbiCoder","getBuiltinCallException","tx","abiCoder","revert","transaction","invocation","isAddressable","checkAddress","promise","resolveAddress","validateAddress","Boolean","isQiAddress","secondByte","isQuaiAddress","accessSetify","addr","storageKeys","storageKey","accessListify","localeCompare","createGetUrl","req","_signal","protocol","signal","credentials","allowInsecureAuthentication","controller","AbortController","addListener","abort","init","headers","Headers","resp","fetch","respBody","arrayBuffer","statusCode","status","statusMessage","statusText","defaultGetUrlFunc","reData","reIpfs","dataGatewayFunc","FetchResponse","textData","atob","decodeBase64","FetchRequest","getIpfsGatewayFunc","baseUrl","Gateways","ipfs","fetchSignals","FetchCancelSignal","request","cancelled","checkSignal","hasBody","btoa","encodeBase64","allowGzip","getHeader","setHeader","clearHeaders","setCredentials","username","timeout","preflightFunc","preflight","processFunc","retryFunc","retry","getUrlFunc","slotInterval","maxAttempts","setThrottleParams","attempt","expires","_request","_response","makeServerError","getTime","wait","scheme","response","throttle","stall","assertOk","redirect","retryAfter","trunc","send","cancel","lockConfig","getGateway","registerGateway","registerGetUrl","getUrl","createGetUrlFunc","createDataGateway","createIpfsGatewayFunc","bodyText","bodyJson","throwThrottleError","Zone","Ledger","ZoneData","nickname","shard","toZone","zone","Cyprus1","Cyprus2","Cyprus3","Paxos1","Paxos2","Paxos3","Hydra1","Hydra2","Hydra3","zoneFromBytes","find","it","Shard","ShardData","toShard","Prime","Cyprus","Paxos","Hydra","shardFromBytes","fromShard","EventPayload","emitter","removeListener","off","common","block","decodeProtoTransaction","Proto","ProtoTransaction","deserialize","ProtoLocation","pb_1","serialize","ProtoHash","ProtoHashes","hashes","ProtoAddress","ProtoNumber","ProtoLocations","locations","ProtoHeader","parent_hash","uncle_hash","evm_root","tx_hash","outbound_etx_hash","etx_rollup_hash","manifest_hash","receipt_hash","difficulty","parent_entropy","parent_delta_entropy","parent_uncled_delta_entropy","uncled_entropy","gas_limit","gas_used","base_fee","extra","mix_hash","nonce","utxo_root","etx_set_root","efficiency_score","threshold_count","expansion_number","etx_eligible_slices","prime_terminus_hash","interlink_root_hash","state_limit","state_used","quai_state_size","secondary_coinbase","exchange_rate","quai_to_qi","qi_to_quai","dependency_1","has_uncle_hash","has_evm_root","has_tx_hash","has_outbound_etx_hash","has_etx_rollup_hash","has_receipt_hash","has_difficulty","has_uncled_entropy","has_gas_limit","has_gas_used","has_base_fee","has_location","has_extra","has_mix_hash","has_nonce","has_utxo_root","has_etx_set_root","has_efficiency_score","has_threshold_count","has_expansion_number","has_etx_eligible_slices","has_prime_terminus_hash","has_interlink_root_hash","has_state_limit","has_state_used","has_quai_state_size","has_secondary_coinbase","has_exchange_rate","has_quai_to_qi","has_qi_to_quai","_uncle_hash","_evm_root","_tx_hash","_outbound_etx_hash","_etx_rollup_hash","_receipt_hash","_difficulty","_uncled_entropy","_gas_limit","_gas_used","_base_fee","_location","_extra","_mix_hash","_nonce","_utxo_root","_etx_set_root","_efficiency_score","_threshold_count","_expansion_number","_etx_eligible_slices","_prime_terminus_hash","_interlink_root_hash","_state_limit","_state_used","_quai_state_size","_secondary_coinbase","_exchange_rate","_quai_to_qi","_qi_to_quai","chain_id","miner_tip","gas_price","access_list","originating_tx_hash","etx_index","tx_ins","tx_outs","etx_sender","work_nonce","etx_type","has_type","has_to","has_value","has_gas","has_data","has_chain_id","has_miner_tip","has_gas_price","ProtoAccessList","has_access_list","has_v","has_r","has_s","has_originating_tx_hash","has_etx_index","ProtoTxIns","has_tx_ins","ProtoTxOuts","has_tx_outs","has_signature","has_etx_sender","has_parent_hash","has_work_nonce","has_etx_type","_to","_gas","_chain_id","_miner_tip","_gas_price","_access_list","_s","_originating_tx_hash","_etx_index","_tx_ins","_tx_outs","_signature","_etx_sender","_parent_hash","_work_nonce","_etx_type","ProtoTransactions","transactions","ProtoHeaders","ProtoManifest","manifest","access_tuples","ProtoAccessTuple","ProtoWorkObjectHeader","header_hash","prime_terminus_number","primary_coinbase","has_header_hash","has_number","has_time","has_prime_terminus_number","has_lock","has_primary_coinbase","_header_hash","_number","_time","_prime_terminus_number","_lock","_primary_coinbase","ProtoWorkObjectHeaders","wo_headers","ProtoWorkObjectBody","header","uncles","outbound_etxs","interlink_hashes","has_header","has_transactions","has_uncles","has_outbound_etxs","has_manifest","has_interlink_hashes","_header","_transactions","_uncles","_outbound_etxs","_manifest","_interlink_hashes","ProtoWorkObject","wo_header","wo_body","has_wo_header","has_wo_body","has_tx","_wo_header","_wo_body","_tx","ProtoWorkObjects","work_objects","ProtoWorkObjectBlockView","work_object","has_work_object","_work_object","ProtoWorkObjectBlocksView","ProtoWorkObjectHeaderView","ProtoWorkObjectShareView","storage_key","ProtoReceiptForStorage","post_state_or_status","cumulative_gas_used","logs","contract_address","ProtoLogsForStorage","has_logs","has_contract_address","ProtoReceiptsForStorage","receipts","ProtoLogForStorage","topics","has_address","ProtoPendingHeader","wo","termini","has_wo","ProtoTermini","has_termini","_wo","_termini","dom_termini","sub_termini","ProtoEtxSet","etx_hashes","has_etx_hashes","_etx_hashes","ProtoPendingEtxs","ProtoPendingEtxsRollup","etxs_rollup","has_etxs_rollup","_etxs_rollup","ProtoTxIn","ProtoTxOut","previous_out_point","pub_key","ProtoOutPoint","has_previous_out_point","has_pub_key","_previous_out_point","_pub_key","has_hash","has_index","_hash","_index","denomination","has_denomination","_denomination","_address","ProtoOutPointAndDenomination","ProtoAddressOutPoints","out_points","_ref","fromEntries","_ref2","ProtoOutPointsMap","_ref3","_ref4","ProtoSpentUTXO","outpoint","sutxo","has_outpoint","has_sutxo","_outpoint","_sutxo","ProtoSpentUTXOs","sutxos","ProtoKeys","allowNull","nullValue","arrayOf","altNames","srcKey","formatData","formatHash","formatNumber","_formatLog","blockHash","blockNumber","removed","transactionHash","transactionIndex","_formatHeader","baseFeePerGas","efficiencyScore","etxEligibleSlices","etxSetRoot","evmRoot","expansionNumber","etxRollupRoot","outboundEtxsRoot","extraData","gasLimit","gasUsed","interlinkRootHash","manifestHash","parentDeltaEntropy","parentEntropy","parentHash","parentUncledDeltaEntropy","primeTerminusHash","quaiStateSize","receiptsRoot","uncleHash","stateLimit","stateUsed","thresholdCount","transactionsRoot","uncledEntropy","utxoRoot","secondaryCoinbase","exchangeRate","quaiToQi","qiToQuai","_formatUncle","primaryCoinbase","headerHash","mixHash","primeTerminusNumber","timestamp","txHash","_formatBlock","outboundEtxs","formatExternalTransactionResponse","interlinkHashes","subManifest","totalEntropy","formatTransactionResponse","woHeader","workShares","_formatReceiptLog","_formatEtx","gasPrice","minerTip","accessList","originatingTxHash","etxIndex","etxType","formatEtx","_formatTransactionReceipt","contractAddress","logsBloom","cumulativeGasUsed","effectiveGasPrice","creates","formatQuaiTransactionResponse","txInputs","formatTxInputs","txOutputs","formatTxOutputs","formatQiTransactionResponse","_formatTxInput","txhash","previousOutPoint","_formatTxOutput","_formatOutpoint","formatOutpoints","outpoints","formatOutpointDeltas","deltas","created","deleted","Networks","Network","matches","network","networkFunc","nameOrChainId","existing","getZoneForAddress","getNodeLocationFromZone","zoneId","getZoneFromNodeLocation","toJson","FeeData","addressFromTransactionRequest","txIn","copyRequest","bigIntKeys","numberKeys","blockTag","customData","entry","BlockHeader","Uncle","Block","provider","ExternalTransactionResponse","QuaiTransactionResponse","QiTransactionResponse","uncle","workShare","prefetchedTransactions","txs","prefetchedExtTransactions","timestampHex","getTransaction","indexOrHash","getExtTransaction","getPrefetchedTransaction","isMined","orphanedEvent","orphan","createOrphanedBlockFilter","Log","getBlock","getTransactionReceipt","receipt","removedEvent","zoneFromHash","TransactionReceipt","etx","safeConvert","fee","getResult","getTransactionResult","confirmations","getBlockNumber","createRemovedTransactionFilter","reorderedEvent","createReorderedTransactionFilter","sender","startBlock","replaceableTransaction","_confirms","_timeout","confirms","nextScan","stopScanning","checkReplacement","getTransactionCount","mined","replacement","checkReceipt","waiter","reject","cancellers","timer","txListener","on","replaceListener","once","getZoneFromEventFilter","nodeLocation","addressZone","encodeProtoTransaction","protoTx","AbstractTransaction","_chainId","typeName","unsignedSerialized","isSigned","toProtobuf","inferType","inferTypes","isExternal","destZone","originZone","QiTransaction","senderAddr","isSameLedger","hexString","hashHex","Buffer","hashBuffer","origin","includeSignature","decodedProtoTx","fromProto","_parseSignature","fields","QuaiTransaction","protoTxCopy","structuredClone","recoverAddress","toAddr","PollingBlockSubscriber","pollingInterval","emit","_setTimeout","stop","_clearTimeout","pause","dropWhilePaused","resume","OnBlockSubscriber","_poll","PollingOrphanSubscriber","PollingTransactionSubscriber","PollingQiTransactionSubscriber","PollingEventSubscriber","fromBlock","toBlock","getLogs","isPromise","getTag","UnmanagedSubscriber","concisify","getSubscription","_event","ninthBit","addresses","addAddress","defaultOptions","cacheTimeout","usePathing","AbstractProvider","_urlMap","_initFailed","initResolvePromise","initRejectPromise","initPromise","attemptConnect","_network","urls","primeSuffix","_waitGetRunningLocations","port","shardEnum","shardSuffix","primeUrl","primeConnect","connect","zoneFromAddress","_getAddress","shardFromHash","getLatestQuaiRate","amt","getQuaiRateAtBlock","resolvedBlockTag","_getBlockTag","getProtocolExpansionNumber","getActiveRegions","protocolExpansionNumber","shards","getActiveZones","zones","getLatestQiRate","getQiRateAtBlock","_perform","perform","_wrapBlock","formatBlock","_wrapLog","formatLog","_wrapTransactionReceipt","formattedReceipt","formatTransactionReceipt","_wrapTransactionResponse","formattedTx","_detectNetwork","_getFilter","_getTransactionRequest","getNetwork","detectNetwork","networkPromise","expected","actual","retries","_getRunningLocations","getRunningLocations","getProtocolTrieExpansionCount","getFeeData","txType","baseMinerTip","getFeeDataFunc","estimateGas","estimateFeeForQi","createAccessList","_blockTag","getBalance","getLockedBalance","getOutpointsByAddress","getCode","getStorage","_position","position","getPendingHeader","getTxPoolContent","txPoolInspect","broadcastTransaction","signedTx","signedTransaction","txObj","computedHash","nodehash","validateUrl","errorMessage","endsWith","includeTransactions","prefetchTxs","getOutpointDeltas","startHash","endHash","endBlock","startBlockNumber","endBlockNumber","ranges","endBlockNumbers","currentStartBlockNumber","currentStartHash","currentEndBlockNumber","endBlocksPromises","endBlocks","currentEndBlock","currentEndHash","deltasArray","_filter","_getProvider","waitForTransaction","waitForBlock","timerId","_func","paused","_forEachSubscriber","subscriber","_getSubscriber","_recoverSubscriber","oldSub","newSub","started","emitArgs","subscription","addressableMap","nameMap","startZoneSubscriptions","listenerCount","total","removeAllListeners","FilterIdSubscriber","_subscribe","_emitResults","_recover","filterId","filterIdPromise","FilterIdEventSubscriber","FilterIdPendingSubscriber","padding","BN__1","hexTrue","hexFalse","domainFieldTypes","verifyingContract","salt","domainFieldNames","checkString","domainChecks","getBaseEncoder","boundsUpper","boundsLower","hexPadRight","encodeType","TypedDataEncoder","primaryType","links","parents","subtypes","primaryTypes","checkCircular","found","subtype","st","getEncoder","encoder","subEncoder","encodedType","encodeData","hashStruct","_visit","visit","getPrimaryType","hashDomain","domain","domainFields","EIP712Domain","getPayload","domainValues","domainTypes","typesWithDomain","checkProvider","signer","populate","AbstractSigner","getNonce","populateCall","populateQuaiTransaction","senderAddressIsQi","recipientAddressIsQi","getTxType","baseTx","feeData","sendTransaction","signTransaction","Primitive","deepCopy","duration","staticNetwork","batchStallTime","batchMaxSize","batchMaxCount","JsonRpcSigner","sendUncheckedTransaction","_from","hexTx","getRpcTransaction","timeouts","invalids","checkTx","sendTransactionHash","signMessage","_message","signTypedData","unlock","_legacySignMessage","JsonRpcApiProvider","stallTime","_getOption","payloads","batch","payloadMap","nowPayloadMap","rawResult","processPayloads","_send","flat","lastZone","getRpcError","_resolve","getRpcRequest","ready","jsonrpc","_start","_waitUntilReady","keepAttempting","setAttemptConnect","dstKey","_error","spelunkData","_spelunkMessage","spelunkMessage","quai_sign","personal_sign","quai_signTypedData_v4","quai_signTransaction","quai_sendTransaction","quai_requestAccounts","wallet_requestAccounts","unsupported","continueSend","getSigner","accountsPromise","accounts","account","listAccounts","BrowserProvider","ethereum","hasSigner","LogDescription","fragment","topic","TransactionDescription","ErrorDescription","Indexed","_isIndexed","isIndexed","BuiltinErrors","Interface","fragments","deploy","receive","abi","frags","getAbiCoder","bucket","minimal","formatJson","forceUnique","matching","lastValue","valueLength","allowOptions","lastArg","matchStr","getFunctionName","hasFunction","getFunction","forEachFunction","eventTopic","getEventName","hasEvent","getEvent","forEachEvent","forEachError","_decodeParams","_encodeParams","encodeDeploy","decodeErrorResult","encodeErrorResult","decodeFunctionData","encodeFunctionData","decodeFunctionResult","parsed","parseTransaction","encodeFunctionResult","encodeFilterTopics","encodeTopic","encodeEventLog","dataTypes","dataValues","decodeEventLog","nonIndexed","resultIndexed","resultNonIndexed","nonIndexedIndex","indexedIndex","parseCallResult","parseLog","parseError","hexData","EventLog","interface","iface","eventName","eventSignature","UndecodedEventLog","ContractTransactionReceipt","ContractTransactionResponse","ContractUnknownEventPayload","contract","ContractEventPayload","_log","canCall","canEstimate","canSend","PreparedTopicFilter","resolvedArgs","getTopicFilter","getRunner","feature","getProvider","copyOverrides","arg","_overrides","resolveArgs","_runner","buildWrappedFallback","populateTransaction","noValue","noData","runner","_contract","staticCall","internalValues","getInternal","getSubInfo","topicHashify","hasSub","subs","getSub","foundFragment","_foundFragment","starting","lastEmit","payloadFunc","resultPromise","passArgs","_emit","BaseContract","filters","_deployTx","addrPromise","deployTx","attach","getDeployedCode","waitForDeployment","deploymentTransaction","checkCode","getFragment","staticCallResult","buildWrappedMethod","_len3","_key3","_len4","_key4","buildWrappedEvent","queryTransaction","queryFilter","_len5","_key5","buildClass","Contract","_ContractBase","__assign","__spreadArray","ar","SuppressedError","MS","MOZ","WEBKIT","COMMENT","RULESET","DECLARATION","KEYFRAMES","pattern","indexof","charat","substr","begin","strlen","sizeof","append","line","column","character","characters","parent","siblings","lift","prev","caret","dealloc","delimit","delimiter","whitespace","escaping","commenter","identifier","prefixer","combine","compile","rule","rules","rulesets","pseudo","declarations","atrule","property","previous","variable","scanning","ampersand","reference","comment","declaration","ruleset","post","unitlessKeys","aspectRatio","msGridRow","msGridRowSpan","msGridColumn","msGridColumnSpan","WebkitLineClamp","REACT_APP_SC_ATTR","SC_ATTR","SC_DISABLE_SPEEDY","REACT_APP_SC_DISABLE_SPEEDY","theme","getDefaultProps","mixins","propTypes","caller","callee","arity","groupSizes","indexOfGroup","insertRules","insertRule","clearGroup","deleteRule","getGroup","getRule","registerName","_e","getAttribute","__webpack_nonce__","sheet","styleSheets","ownerNode","cssRules","cssText","nodes","childNodes","isServer","useCSSOMInjection","gs","server","registerId","rehydrate","reconstructWithOptions","allocateGSInstance","hasNameForId","clearNames","clearRules","clearTag","replaceAll","plugins","namespace","collection","shouldForwardProp","styleSheet","stylis","Ge","stylisPlugins","disableCSSOMInjection","enableVendorPrefixes","getName","isCss","styledComponentId","staticRulesId","isStatic","componentId","baseHash","baseStyle","generateAndInjectStyles","et","rt","attrs","parentComponentId","componentStyle","foldedComponentIds","as","forwardedAs","_foldedDefaultProps","at","ct","lt","withConfig","pt","dt","createStyles","removeStyles","renderStyles","_emitSheetCSS","getStyleTags","sealed","getStyleElement","seal","collectStyles","interleaveWithNodeStream","ScrollableContainer","styled","TableHeader","BetItem","span","list","getUpdatedTime","seconds","minutes","hours","timeAgo","currentTime","setCurrentTime","intervalId","setInterval","clearInterval","_jsx","_jsxs","bet","wallet","amount","BN_N1","BN_5","Zeros","getTens","decimals","checkValue","safeOp","getFormat","FixedNumber","negative","addUnsafe","subUnsafe","mulUnsafe","mulSignal","divUnsafe","divSignal","eq","lte","gt","gte","ceiling","bump","tens","isZero","isNegative","toUnsafeFloat","parseFloat","toFormat","fromValue","_decimals","_format","whole","decimal","formatUnits","unit","betCount","contractInstance","getBetCount","bets","player","quais","currentBetAmount","setWallet","balance","setBalance","setBets","timeLeft","setTimeLeft","setContract","timerRef","pelagus","accountBalance","contractABI","lastBetTime","getBets","timeDifference","startOrResetTimer","initContract","fetchBetData","dynamicTime","endGame","alert","json","src","logo","alt","toFixed","milliseconds","formatTime","betAmountInUnits","getBetAmount","placeBet","updatedBalance","ScrollList","ReactDOM","App","getElementById"],"sourceRoot":""}