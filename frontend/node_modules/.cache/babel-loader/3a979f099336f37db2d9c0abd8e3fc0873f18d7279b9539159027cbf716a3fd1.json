{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nelan\\\\OneDrive\\\\\\u0420\\u043E\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u0456\\u043B\\\\project-root\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [wallet, setWallet] = useState(null); // Триматимемо адресу гаманця\n  const [balance, setBalance] = useState(null); // Триматимемо баланс\n  const [betAmount, setBetAmount] = useState(1); // Ставка гравця\n  const [bets, setBets] = useState([]); // Список ставок\n  const [timerEnd, setTimerEnd] = useState(null); // Кінець таймера\n  const [remainingTime, setRemainingTime] = useState(null); // Залишковий час\n\n  // Підключення до гаманця та отримання балансу\n  const requestAccounts = async () => {\n    if (window.pelagus && window.pelagus.request) {\n      try {\n        const accounts = await window.pelagus.request({\n          method: 'quai_requestAccounts'\n        });\n        const balance = await getBalance(accounts[0]); // Оновлюємо баланс\n        setWallet(accounts[0]); // Зберігаємо адресу гаманця\n        setBalance(balance); // Оновлюємо баланс\n        document.getElementById('connect-wallet').textContent = `${shortenAddress(accounts[0])}`; // Відображаємо скорочену адресу гаманця\n      } catch (error) {\n        console.error('Error connecting to Pelagus Wallet:', error);\n      }\n    } else {\n      alert('Pelagus Wallet не знайдено');\n    }\n  };\n\n  // Слухаємо подію зміни акаунта\n  useEffect(() => {\n    if (window.pelagus) {\n      window.pelagus.on('accountsChanged', accounts => {\n        if (accounts && accounts[0] !== wallet) {\n          setWallet(accounts[0]); // Оновлюємо адресу гаманця при зміні акаунта\n          getBalance(accounts[0]).then(balance => setBalance(balance)); // Оновлюємо баланс\n        }\n      });\n    }\n  }, [wallet]); // Залежність на wallet\n\n  // Функція для отримання балансу\n  const getBalance = async address => {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        jsonrpc: \"2.0\",\n        method: \"quai_getBalance\",\n        params: [address, \"latest\"],\n        id: 1\n      })\n    };\n    try {\n      const response = await fetch('https://rpc.quai.network/cyprus1/', options);\n      const result = await response.json();\n      if (result && result.result) {\n        // Перетворення балансу з Wei в Quai\n        return parseFloat(result.result) / 1e18;\n      } else {\n        console.error(\"Не вдалося отримати баланс\");\n        return 0; // Якщо немає результату\n      }\n    } catch (err) {\n      console.error(\"Помилка при отриманні балансу:\", err);\n      return 0; // Повертає 0 у разі помилки\n    }\n  };\n\n  // Допоміжна функція для скорочення адреси\n  const shortenAddress = address => {\n    return `${address.slice(0, 6)}...${address.slice(-4)}`;\n  };\n\n  // Функція для запуску таймера\n  const startTimer = () => {\n    const newTimerEnd = Date.now() + 60 * 60 * 1000; // Поточний час + 1 година\n    setTimerEnd(newTimerEnd);\n    updateRemainingTime(newTimerEnd);\n  };\n\n  // Функція для оновлення залишкового часу\n  const updateRemainingTime = endTime => {\n    const interval = setInterval(() => {\n      const timeLeft = endTime - Date.now();\n      if (timeLeft <= 0) {\n        clearInterval(interval);\n        setRemainingTime('Таймер завершився');\n      } else {\n        setRemainingTime(formatTime(timeLeft));\n      }\n    }, 1000);\n  };\n\n  // Форматуємо час для відображення (залишковий час у форматі \"XX хвилин тому\")\n  const formatTime = milliseconds => {\n    const seconds = Math.floor(milliseconds / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    if (hours > 0) return `${hours} годин тому`;\n    if (minutes > 0) return `${minutes} хвилин тому`;\n    return `${seconds} секунд тому`;\n  };\n\n  // Функція для відправки транзакції\n  const sendTransaction = async () => {\n    const recipientAddress = '0x000c3877DE5ae7B74b2dd8afD54B306D9c43fD80';\n    const amountToSend = betAmount; // Ставка гравця\n    const weiAmount = (parseFloat(amountToSend) * 1e18).toString(16); // Конвертуємо в wei та перетворюємо в шістнадцятковий формат\n\n    if (window.pelagus && window.pelagus.request) {\n      try {\n        const accounts = await window.pelagus.request({\n          method: 'quai_requestAccounts'\n        });\n        const transactionParameters = {\n          from: accounts[0],\n          // Адреса користувача\n          to: recipientAddress,\n          // Кінцева адреса\n          value: '0x' + weiAmount,\n          // Кількість токенів у wei\n          gasLimit: '0x5208',\n          // Ліміт газу (21000 в hex)\n          gasPrice: '0x3b9aca00' // Ціна газу в wei (1000000000)\n        };\n        const txHash = await window.pelagus.request({\n          method: 'quai_sendTransaction',\n          params: [transactionParameters]\n        });\n        console.log('Транзакція надіслана:', txHash);\n        alert('Транзакція успішно надіслана. Хеш транзакції: ' + txHash);\n        addBet(); // Додаємо ставку в таблицю лише після успішної транзакції\n        startTimer(); // Запускаємо таймер після успішної транзакції\n      } catch (error) {\n        console.error('Помилка надсилання транзакції:', error);\n        alert('Транзакція не вдалася. Перевірте консоль для деталей.');\n      }\n    } else {\n      alert('Гаманець Pelagus не знайдено.');\n    }\n  };\n\n  // Додавання ставки до таблиці\n  const addBet = () => {\n    const newBet = {\n      wallet: wallet,\n      amount: `${betAmount} Quai`,\n      time: new Date().toLocaleTimeString()\n    };\n\n    // Обмеження кількості ставок до 10\n    setBets(prevBets => {\n      const updatedBets = [newBet, ...prevBets];\n      return updatedBets.slice(0, 10); // Залишаємо лише перші 10 ставок\n    });\n    setBetAmount(prevBetAmount => prevBetAmount + 1); // Збільшуємо ставку на 1 Quai\n  };\n\n  // Перезапуск таймера при новій ставці\n  useEffect(() => {\n    if (bets.length > 0) {\n      startTimer(); // Перезапускаємо таймер, якщо є нові ставки\n    }\n  }, [bets]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Game DApp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wallet-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"wallet-balance-btn\",\n        disabled: true,\n        children: balance !== null ? `Баланс: ${balance} Quai` : 'Завантаження балансу...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"connect-wallet-btn\",\n        onClick: requestAccounts,\n        children: wallet ? shortenAddress(wallet) : 'Connect Wallet'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\u0421\\u0442\\u0430\\u0432\\u043A\\u0430: \", betAmount, \" Quai\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendTransaction,\n        children: \"\\u0417\\u0440\\u043E\\u0431\\u0438\\u0442\\u0438 \\u0441\\u0442\\u0430\\u0432\\u043A\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0413\\u0440\\u0430\\u0432\\u0435\\u0446\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0421\\u0442\\u0430\\u0432\\u043A\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0427\\u0430\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: bets.map((bet, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: shortenAddress(bet.wallet)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: bet.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatTime(new Date(bet.time))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 7\n          }, this), \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 5\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: remainingTime ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0422\\u0430\\u0439\\u043C\\u0435\\u0440: \", remainingTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0422\\u0430\\u0439\\u043C\\u0435\\u0440 \\u043D\\u0435 \\u0437\\u0430\\u043F\\u0443\\u0449\\u0435\\u043D\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xbvxTgoiKQtLRxP2R4Qy1P92n4E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","wallet","setWallet","balance","setBalance","betAmount","setBetAmount","bets","setBets","timerEnd","setTimerEnd","remainingTime","setRemainingTime","requestAccounts","window","pelagus","request","accounts","method","getBalance","document","getElementById","textContent","shortenAddress","error","console","alert","on","then","address","options","headers","body","JSON","stringify","jsonrpc","params","id","response","fetch","result","json","parseFloat","err","slice","startTimer","newTimerEnd","Date","now","updateRemainingTime","endTime","interval","setInterval","timeLeft","clearInterval","formatTime","milliseconds","seconds","Math","floor","minutes","hours","sendTransaction","recipientAddress","amountToSend","weiAmount","toString","transactionParameters","from","to","value","gasLimit","gasPrice","txHash","log","addBet","newBet","amount","time","toLocaleTimeString","prevBets","updatedBets","prevBetAmount","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","disabled","onClick","map","bet","index","_c","$RefreshReg$"],"sources":["C:/Users/nelan/OneDrive/Робочий стіл/project-root/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [wallet, setWallet] = useState(null); // Триматимемо адресу гаманця\r\n  const [balance, setBalance] = useState(null); // Триматимемо баланс\r\n  const [betAmount, setBetAmount] = useState(1); // Ставка гравця\r\n  const [bets, setBets] = useState([]); // Список ставок\r\n  const [timerEnd, setTimerEnd] = useState(null); // Кінець таймера\r\n  const [remainingTime, setRemainingTime] = useState(null); // Залишковий час\r\n\r\n  // Підключення до гаманця та отримання балансу\r\n  const requestAccounts = async () => {\r\n    if (window.pelagus && window.pelagus.request) {\r\n      try {\r\n        const accounts = await window.pelagus.request({ method: 'quai_requestAccounts' });\r\n        const balance = await getBalance(accounts[0]); // Оновлюємо баланс\r\n        setWallet(accounts[0]); // Зберігаємо адресу гаманця\r\n        setBalance(balance); // Оновлюємо баланс\r\n        document.getElementById('connect-wallet').textContent = `${shortenAddress(accounts[0])}`; // Відображаємо скорочену адресу гаманця\r\n      } catch (error) {\r\n        console.error('Error connecting to Pelagus Wallet:', error);\r\n      }\r\n    } else {\r\n      alert('Pelagus Wallet не знайдено');\r\n    }\r\n  };\r\n\r\n  // Слухаємо подію зміни акаунта\r\n  useEffect(() => {\r\n    if (window.pelagus) {\r\n      window.pelagus.on('accountsChanged', (accounts) => {\r\n        if (accounts && accounts[0] !== wallet) {\r\n          setWallet(accounts[0]); // Оновлюємо адресу гаманця при зміні акаунта\r\n          getBalance(accounts[0]).then(balance => setBalance(balance)); // Оновлюємо баланс\r\n        }\r\n      });\r\n    }\r\n  }, [wallet]); // Залежність на wallet\r\n\r\n  // Функція для отримання балансу\r\n  const getBalance = async (address) => {\r\n    const options = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        jsonrpc: \"2.0\",\r\n        method: \"quai_getBalance\",\r\n        params: [address, \"latest\"],\r\n        id: 1\r\n      })\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('https://rpc.quai.network/cyprus1/', options);\r\n      const result = await response.json();\r\n\r\n      if (result && result.result) {\r\n        // Перетворення балансу з Wei в Quai\r\n        return parseFloat(result.result) / 1e18;\r\n      } else {\r\n        console.error(\"Не вдалося отримати баланс\");\r\n        return 0; // Якщо немає результату\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Помилка при отриманні балансу:\", err);\r\n      return 0; // Повертає 0 у разі помилки\r\n    }\r\n  };\r\n\r\n  // Допоміжна функція для скорочення адреси\r\n  const shortenAddress = (address) => {\r\n    return `${address.slice(0, 6)}...${address.slice(-4)}`;\r\n  };\r\n\r\n  // Функція для запуску таймера\r\n  const startTimer = () => {\r\n    const newTimerEnd = Date.now() + 60 * 60 * 1000; // Поточний час + 1 година\r\n    setTimerEnd(newTimerEnd);\r\n    updateRemainingTime(newTimerEnd);\r\n  };\r\n\r\n  // Функція для оновлення залишкового часу\r\n  const updateRemainingTime = (endTime) => {\r\n    const interval = setInterval(() => {\r\n      const timeLeft = endTime - Date.now();\r\n      if (timeLeft <= 0) {\r\n        clearInterval(interval);\r\n        setRemainingTime('Таймер завершився');\r\n      } else {\r\n        setRemainingTime(formatTime(timeLeft));\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  // Форматуємо час для відображення (залишковий час у форматі \"XX хвилин тому\")\r\n  const formatTime = (milliseconds) => {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const hours = Math.floor(minutes / 60);\r\n    if (hours > 0) return `${hours} годин тому`;\r\n    if (minutes > 0) return `${minutes} хвилин тому`;\r\n    return `${seconds} секунд тому`;\r\n  };\r\n\r\n  // Функція для відправки транзакції\r\n  const sendTransaction = async () => {\r\n    const recipientAddress = '0x000c3877DE5ae7B74b2dd8afD54B306D9c43fD80';\r\n    const amountToSend = betAmount; // Ставка гравця\r\n    const weiAmount = (parseFloat(amountToSend) * 1e18).toString(16); // Конвертуємо в wei та перетворюємо в шістнадцятковий формат\r\n\r\n    if (window.pelagus && window.pelagus.request) {\r\n      try {\r\n        const accounts = await window.pelagus.request({ method: 'quai_requestAccounts' });\r\n        const transactionParameters = {\r\n          from: accounts[0],            // Адреса користувача\r\n          to: recipientAddress,         // Кінцева адреса\r\n          value: '0x' + weiAmount,      // Кількість токенів у wei\r\n          gasLimit: '0x5208',           // Ліміт газу (21000 в hex)\r\n          gasPrice: '0x3b9aca00',       // Ціна газу в wei (1000000000)\r\n        };\r\n\r\n        const txHash = await window.pelagus.request({\r\n          method: 'quai_sendTransaction',\r\n          params: [transactionParameters],\r\n        });\r\n\r\n        console.log('Транзакція надіслана:', txHash);\r\n        alert('Транзакція успішно надіслана. Хеш транзакції: ' + txHash);\r\n        addBet(); // Додаємо ставку в таблицю лише після успішної транзакції\r\n        startTimer(); // Запускаємо таймер після успішної транзакції\r\n      } catch (error) {\r\n        console.error('Помилка надсилання транзакції:', error);\r\n        alert('Транзакція не вдалася. Перевірте консоль для деталей.');\r\n      }\r\n    } else {\r\n      alert('Гаманець Pelagus не знайдено.');\r\n    }\r\n  };\r\n\r\n  // Додавання ставки до таблиці\r\n  const addBet = () => {\r\n    const newBet = {\r\n      wallet: wallet,\r\n      amount: `${betAmount} Quai`,\r\n      time: new Date().toLocaleTimeString(),\r\n    };\r\n\r\n    // Обмеження кількості ставок до 10\r\n    setBets(prevBets => {\r\n      const updatedBets = [newBet, ...prevBets];\r\n      return updatedBets.slice(0, 10); // Залишаємо лише перші 10 ставок\r\n    });\r\n\r\n    setBetAmount(prevBetAmount => prevBetAmount + 1); // Збільшуємо ставку на 1 Quai\r\n  };\r\n\r\n  // Перезапуск таймера при новій ставці\r\n  useEffect(() => {\r\n    if (bets.length > 0) {\r\n      startTimer(); // Перезапускаємо таймер, якщо є нові ставки\r\n    }\r\n  }, [bets]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Game DApp</h1>\r\n      <div className=\"wallet-info\">\r\n        {/* Кнопка для відображення балансу */}\r\n        <button className=\"wallet-balance-btn\" disabled>\r\n          {balance !== null ? `Баланс: ${balance} Quai` : 'Завантаження балансу...'}\r\n        </button>\r\n        {/* Кнопка для підключення гаманця */}\r\n        <button className=\"connect-wallet-btn\" onClick={requestAccounts}>\r\n          {wallet ? shortenAddress(wallet) : 'Connect Wallet'}\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <h3>Ставка: {betAmount} Quai</h3>\r\n        <button onClick={sendTransaction}>Зробити ставку</button>\r\n      </div>\r\n\r\n      {/* Таблиця ставок */}\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Гравець</th>\r\n            <th>Ставка</th>\r\n            <th>Час</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n  {bets.map((bet, index) => (\r\n    <tr key={index}>\r\n      <td>{shortenAddress(bet.wallet)}</td>\r\n      <td>{bet.amount}</td>\r\n      <td>{formatTime(new Date(bet.time))}</td> {/* Використовуємо formatTime */}\r\n    </tr>\r\n  ))}\r\n</tbody>\r\n\r\n      </table>\r\n\r\n      {/* Таймер */}\r\n      <div className=\"timer\">\r\n        {remainingTime ? (\r\n          <p>Таймер: {remainingTime}</p>\r\n        ) : (\r\n          <p>Таймер не запущено</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}